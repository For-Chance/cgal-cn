<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classHyperbolicTriangulationFaceBase__2" kind="class" language="C++" prot="public">
    <compoundname>HyperbolicTriangulationFaceBase_2</compoundname>
    <includes local="no">Concepts/HyperbolicTriangulationFaceBase_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Internal Access Functions</header>
      <description><para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>These functions are used internally by the hyperbolic Delaunay triangulation.</para>
<para>The user is not encouraged to use them directly as they may change in the future. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</description>
      <memberdef kind="function" id="classHyperbolicTriangulationFaceBase__2_1a51aff34f23c46cfaaed1abbc8b32b1ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHyperbolicFaceData" kindref="compound">HyperbolicFaceData</ref> &amp;</type>
        <definition>HyperbolicFaceData &amp; HyperbolicTriangulationFaceBase_2::hyperbolic_data</definition>
        <argsstring>()</argsstring>
        <name>hyperbolic_data</name>
        <qualifiedname>HyperbolicTriangulationFaceBase_2::hyperbolic_data</qualifiedname>
        <briefdescription>
<para>This function gives non-<computeroutput>const</computeroutput> access to a variable that is a model of <computeroutput><ref refid="classHyperbolicFaceData" kindref="compound">HyperbolicFaceData</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an advanced function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/HyperbolicTriangulationFaceBase_2.h" line="65" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHyperbolicTriangulationFaceBase__2_1a888048a8529771b9405e6cf54309b76d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classHyperbolicFaceData" kindref="compound">HyperbolicFaceData</ref> &amp;</type>
        <definition>const HyperbolicFaceData &amp; HyperbolicTriangulationFaceBase_2::hyperbolic_data</definition>
        <argsstring>() const</argsstring>
        <name>hyperbolic_data</name>
        <qualifiedname>HyperbolicTriangulationFaceBase_2::hyperbolic_data</qualifiedname>
        <briefdescription>
<para>This function gives <computeroutput>const</computeroutput> access to a variable of that is a model of <computeroutput><ref refid="classHyperbolicFaceData" kindref="compound">HyperbolicFaceData</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an advanced function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/HyperbolicTriangulationFaceBase_2.h" line="71" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_2.tag">TriangulationFaceBase_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para>The concept <computeroutput><ref refid="classHyperbolicTriangulationFaceBase__2" kindref="compound">HyperbolicTriangulationFaceBase_2</ref></computeroutput> describes the requirements for the base face class of a hyperbolic triangulation data structure.</para>
<para>This concept provides an interface for the functionality needed in faces to compute Delaunay triangulations in the hyperbolic plane. The function <computeroutput>tds_data()</computeroutput> is used internally by the triangulation class during the insertion of points in the triangulation.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Hyperbolic__triangulation__face__base__2" kindref="compound">CGAL::Hyperbolic_triangulation_face_base_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDataStructure_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classHyperbolicFaceData" kindref="compound">HyperbolicFaceData</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/HyperbolicTriangulationFaceBase_2.h" line="51" column="1" bodyfile="Concepts/HyperbolicTriangulationFaceBase_2.h" bodystart="51" bodyend="74"/>
    <listofallmembers>
      <member refid="classHyperbolicTriangulationFaceBase__2_1a51aff34f23c46cfaaed1abbc8b32b1ae" prot="public" virt="non-virtual"><scope>HyperbolicTriangulationFaceBase_2</scope><name>hyperbolic_data</name></member>
      <member refid="classHyperbolicTriangulationFaceBase__2_1a888048a8529771b9405e6cf54309b76d" prot="public" virt="non-virtual"><scope>HyperbolicTriangulationFaceBase_2</scope><name>hyperbolic_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
