<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction" prot="public">CGAL::Advancing_front_surface_reconstruction</innerclass>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction__boundary__iterator" prot="public">CGAL::Advancing_front_surface_reconstruction_boundary_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction__cell__base__3" prot="public">CGAL::Advancing_front_surface_reconstruction_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction__vertex__base__3" prot="public">CGAL::Advancing_front_surface_reconstruction_vertex_base_3</innerclass>
    <innernamespace refid="namespaceCGAL_1_1AFSR">CGAL::AFSR</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1cpp98">CGAL::cpp98</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgAdvancingFrontSurfaceReconstructionRef_1gaa2b1f41291920247fd5c6ef7c09f70a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointInputIterator</type>
          </param>
          <param>
            <type>typename IndicesOutputIterator</type>
          </param>
        </templateparamlist>
        <type>IndicesOutputIterator</type>
        <definition>IndicesOutputIterator CGAL::advancing_front_surface_reconstruction</definition>
        <argsstring>(PointInputIterator b, PointInputIterator e, IndicesOutputIterator out, double radius_ratio_bound=5, double beta=0.52)</argsstring>
        <name>advancing_front_surface_reconstruction</name>
        <qualifiedname>CGAL::advancing_front_surface_reconstruction</qualifiedname>
        <param>
          <type>PointInputIterator</type>
          <declname>b</declname>
        </param>
        <param>
          <type>PointInputIterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>IndicesOutputIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius_ratio_bound</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.52</defval>
        </param>
        <briefdescription>
<para>For a sequence of points computes a sequence of index triples describing the faces of the reconstructed surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointInputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with 3D points as value type. This point type must be convertible to <computeroutput>Exact_predicates_inexact_constructions_kernel::Point_3</computeroutput> with the <computeroutput>Cartesian_converter</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndicesOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an output iterator to which <computeroutput>std::array&lt;std::size_t, 3&gt;</computeroutput> can be assigned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator on the first point of the sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>past the end iterator of the point sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius_ratio_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>candidates incident to surface triangles which are not in the beta-wedge are discarded, if the ratio of their radius and the radius of the surface triangle is larger than <computeroutput>radius_ratio_bound</computeroutput>. Described in Section <ref refid="index_1AFSR_Boundaries" kindref="member">Dealing with Multiple Components, Boundaries and Sharp Edges</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>half the angle of the wedge in which only the radius of triangles counts for the plausibility of candidates. Described in Section <ref refid="index_1AFSR_Selection" kindref="member">Plausibility of a Candidate Triangle</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Advancing_front_surface_reconstruction.h" line="2531" column="3" bodyfile="CGAL/Advancing_front_surface_reconstruction.h" bodystart="2531" bodyend="2558"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAdvancingFrontSurfaceReconstructionRef_1gabd089da9b1d8dedb05f6d292a9d9b874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointInputIterator</type>
          </param>
          <param>
            <type>typename IndicesOutputIterator</type>
          </param>
          <param>
            <type>typename Priority</type>
          </param>
        </templateparamlist>
        <type>IndicesOutputIterator</type>
        <definition>IndicesOutputIterator CGAL::advancing_front_surface_reconstruction</definition>
        <argsstring>(PointInputIterator b, PointInputIterator e, IndicesOutputIterator out, Priority priority, double radius_ratio_bound=5, double beta=0.52)</argsstring>
        <name>advancing_front_surface_reconstruction</name>
        <qualifiedname>CGAL::advancing_front_surface_reconstruction</qualifiedname>
        <param>
          <type>PointInputIterator</type>
          <declname>b</declname>
        </param>
        <param>
          <type>PointInputIterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>IndicesOutputIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Priority</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius_ratio_bound</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.52</defval>
        </param>
        <briefdescription>
<para>For a sequence of points computes a sequence of index triples describing the faces of the reconstructed surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointInputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with 3D points as value type. This point type must be convertible to <computeroutput>Exact_predicates_inexact_constructions_kernel::Point_3</computeroutput> with the <computeroutput>Cartesian_converter</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndicesOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an output iterator to which <computeroutput>std::array&lt;std::size_t, 3&gt;</computeroutput> can be assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Priority</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a functor with <computeroutput>double operator()(Advancing_front_surface_reconstruction::Cell_handle,int)</computeroutput> returning the priority of the facet <computeroutput>(Cell_handle,int)</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator on the first point of the sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>past the end iterator of the point sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>enables the user to choose how candidate triangles are prioritized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius_ratio_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>candidates incident to surface triangles which are not in the beta-wedge are discarded, if the ratio of their radius and the radius of the surface triangle is larger than <computeroutput>radius_ratio_bound</computeroutput>. Described in Section <ref refid="index_1AFSR_Boundaries" kindref="member">Dealing with Multiple Components, Boundaries and Sharp Edges</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>half the angle of the wedge in which only the radius of triangles counts for the plausibility of candidates. Described in Section <ref refid="index_1AFSR_Selection" kindref="member">Plausibility of a Candidate Triangle</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Advancing_front_surface_reconstruction.h" line="2586" column="3" bodyfile="CGAL/Advancing_front_surface_reconstruction.h" bodystart="2586" bodyend="2614"/>
      </memberdef>
      <memberdef kind="function" id="Advancing__front__surface__reconstruction_8h_1adb29df9fad842f17b826ba6d98218107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointInputIterator</type>
          </param>
          <param>
            <type>typename Kernel</type>
          </param>
          <param>
            <type>typename Items</type>
          </param>
          <param>
            <type>template&lt; class T, class I, class A &gt; class</type>
            <declname>HDS</declname>
            <defname>HDS</defname>
          </param>
          <param>
            <type>typename Alloc</type>
          </param>
          <param>
            <type>typename Priority</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::advancing_front_surface_reconstruction</definition>
        <argsstring>(PointInputIterator b, PointInputIterator e, Polyhedron_3&lt; Kernel, Items, HDS, Alloc &gt; &amp;polyhedron, Priority priority, double radius_ratio_bound=5, double beta=0.52)</argsstring>
        <name>advancing_front_surface_reconstruction</name>
        <qualifiedname>CGAL::advancing_front_surface_reconstruction</qualifiedname>
        <param>
          <type>PointInputIterator</type>
          <declname>b</declname>
        </param>
        <param>
          <type>PointInputIterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>Polyhedron_3&lt; Kernel, Items, HDS, Alloc &gt; &amp;</type>
          <declname>polyhedron</declname>
        </param>
        <param>
          <type>Priority</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius_ratio_bound</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.52</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Advancing_front_surface_reconstruction.h" line="2619" column="3" bodyfile="CGAL/Advancing_front_surface_reconstruction.h" bodystart="2619" bodyend="2645"/>
      </memberdef>
      <memberdef kind="function" id="Advancing__front__surface__reconstruction_8h_1a60bfe2eca29ce1cb29a6bc207df5b98b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointInputIterator</type>
          </param>
          <param>
            <type>typename Kernel</type>
          </param>
          <param>
            <type>typename Items</type>
          </param>
          <param>
            <type>template&lt; class T, class I, class A &gt; class</type>
            <declname>HDS</declname>
            <defname>HDS</defname>
          </param>
          <param>
            <type>typename Alloc</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::advancing_front_surface_reconstruction</definition>
        <argsstring>(PointInputIterator b, PointInputIterator e, Polyhedron_3&lt; Kernel, Items, HDS, Alloc &gt; &amp;polyhedron, double radius_ratio_bound=5, double beta=0.52)</argsstring>
        <name>advancing_front_surface_reconstruction</name>
        <qualifiedname>CGAL::advancing_front_surface_reconstruction</qualifiedname>
        <param>
          <type>PointInputIterator</type>
          <declname>b</declname>
        </param>
        <param>
          <type>PointInputIterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>Polyhedron_3&lt; Kernel, Items, HDS, Alloc &gt; &amp;</type>
          <declname>polyhedron</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius_ratio_bound</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.52</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Advancing_front_surface_reconstruction.h" line="2650" column="3" bodyfile="CGAL/Advancing_front_surface_reconstruction.h" bodystart="2650" bodyend="2674"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Advancing_front_surface_reconstruction.txt" line="2" column="1"/>
  </compounddef>
</doxygen>
