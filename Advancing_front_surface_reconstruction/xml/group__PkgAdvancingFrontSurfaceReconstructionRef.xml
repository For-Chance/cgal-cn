<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgAdvancingFrontSurfaceReconstructionRef" kind="group">
    <compoundname>PkgAdvancingFrontSurfaceReconstructionRef</compoundname>
    <title>Advancing Front Surface Reconstruction Reference</title>
    <innerclass refid="classAdvancingFrontSurfaceReconstructionTraits__3" prot="public">AdvancingFrontSurfaceReconstructionTraits_3</innerclass>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction" prot="public">CGAL::Advancing_front_surface_reconstruction</innerclass>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction__cell__base__3" prot="public">CGAL::Advancing_front_surface_reconstruction_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Advancing__front__surface__reconstruction__vertex__base__3" prot="public">CGAL::Advancing_front_surface_reconstruction_vertex_base_3</innerclass>
    <innergroup refid="group__PkgAdvancingFrontSurfaceReconstructionRefConcepts">Concepts</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgAdvancingFrontSurfaceReconstructionRef_1gaa2b1f41291920247fd5c6ef7c09f70a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointInputIterator</type>
          </param>
          <param>
            <type>typename IndicesOutputIterator</type>
          </param>
        </templateparamlist>
        <type>IndicesOutputIterator</type>
        <definition>IndicesOutputIterator CGAL::advancing_front_surface_reconstruction</definition>
        <argsstring>(PointInputIterator b, PointInputIterator e, IndicesOutputIterator out, double radius_ratio_bound=5, double beta=0.52)</argsstring>
        <name>advancing_front_surface_reconstruction</name>
        <qualifiedname>CGAL::advancing_front_surface_reconstruction</qualifiedname>
        <param>
          <type>PointInputIterator</type>
          <declname>b</declname>
        </param>
        <param>
          <type>PointInputIterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>IndicesOutputIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius_ratio_bound</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.52</defval>
        </param>
        <briefdescription>
<para>For a sequence of points computes a sequence of index triples describing the faces of the reconstructed surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointInputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with 3D points as value type. This point type must be convertible to <computeroutput>Exact_predicates_inexact_constructions_kernel::Point_3</computeroutput> with the <computeroutput><ref refid="classCGAL_1_1Cartesian__converter" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian_converter</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndicesOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an output iterator to which <computeroutput>std::array&lt;std::size_t, 3&gt;</computeroutput> can be assigned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator on the first point of the sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>past the end iterator of the point sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius_ratio_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>candidates incident to surface triangles which are not in the beta-wedge are discarded, if the ratio of their radius and the radius of the surface triangle is larger than <computeroutput>radius_ratio_bound</computeroutput>. Described in Section <ref refid="index_1AFSR_Boundaries" kindref="member">Dealing with Multiple Components, Boundaries and Sharp Edges</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>half the angle of the wedge in which only the radius of triangles counts for the plausibility of candidates. Described in Section <ref refid="index_1AFSR_Selection" kindref="member">Plausibility of a Candidate Triangle</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Advancing_front_surface_reconstruction.h" line="2531" column="3" bodyfile="CGAL/Advancing_front_surface_reconstruction.h" bodystart="2531" bodyend="2558"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAdvancingFrontSurfaceReconstructionRef_1gabd089da9b1d8dedb05f6d292a9d9b874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointInputIterator</type>
          </param>
          <param>
            <type>typename IndicesOutputIterator</type>
          </param>
          <param>
            <type>typename Priority</type>
          </param>
        </templateparamlist>
        <type>IndicesOutputIterator</type>
        <definition>IndicesOutputIterator CGAL::advancing_front_surface_reconstruction</definition>
        <argsstring>(PointInputIterator b, PointInputIterator e, IndicesOutputIterator out, Priority priority, double radius_ratio_bound=5, double beta=0.52)</argsstring>
        <name>advancing_front_surface_reconstruction</name>
        <qualifiedname>CGAL::advancing_front_surface_reconstruction</qualifiedname>
        <param>
          <type>PointInputIterator</type>
          <declname>b</declname>
        </param>
        <param>
          <type>PointInputIterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>IndicesOutputIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Priority</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>double</type>
          <declname>radius_ratio_bound</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>beta</declname>
          <defval>0.52</defval>
        </param>
        <briefdescription>
<para>For a sequence of points computes a sequence of index triples describing the faces of the reconstructed surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointInputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with 3D points as value type. This point type must be convertible to <computeroutput>Exact_predicates_inexact_constructions_kernel::Point_3</computeroutput> with the <computeroutput><ref refid="classCGAL_1_1Cartesian__converter" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian_converter</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndicesOutputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an output iterator to which <computeroutput>std::array&lt;std::size_t, 3&gt;</computeroutput> can be assigned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Priority</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a functor with <computeroutput>double operator()(Advancing_front_surface_reconstruction::Cell_handle,int)</computeroutput> returning the priority of the facet <computeroutput>(Cell_handle,int)</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator on the first point of the sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>past the end iterator of the point sequence </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output iterator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>priority</parametername>
</parameternamelist>
<parameterdescription>
<para>enables the user to choose how candidate triangles are prioritized. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius_ratio_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>candidates incident to surface triangles which are not in the beta-wedge are discarded, if the ratio of their radius and the radius of the surface triangle is larger than <computeroutput>radius_ratio_bound</computeroutput>. Described in Section <ref refid="index_1AFSR_Boundaries" kindref="member">Dealing with Multiple Components, Boundaries and Sharp Edges</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>half the angle of the wedge in which only the radius of triangles counts for the plausibility of candidates. Described in Section <ref refid="index_1AFSR_Selection" kindref="member">Plausibility of a Candidate Triangle</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Advancing_front_surface_reconstruction.h" line="2586" column="3" bodyfile="CGAL/Advancing_front_surface_reconstruction.h" bodystart="2586" bodyend="2614"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="afsr-detail.png"></image>
   Tran Kai Frank Da and David Cohen-Steiner This package provides a greedy algorithm for surface reconstruction from an unorganized point set. Starting from a seed facet, a piecewise linear surface is grown by adding Delaunay triangles one by one. The most plausible triangles are added first, in a way that avoids the appearance of topological singularities.     <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dc-afsr-24b">cgal:dc-afsr-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Concepts</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classAdvancingFrontSurfaceReconstructionTraits__3" kindref="compound">AdvancingFrontSurfaceReconstructionTraits_3</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Classes</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Advancing__front__surface__reconstruction" kindref="compound">CGAL::Advancing_front_surface_reconstruction</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Advancing__front__surface__reconstruction__vertex__base__3" kindref="compound">CGAL::Advancing_front_surface_reconstruction_vertex_base_3</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Advancing__front__surface__reconstruction__cell__base__3" kindref="compound">CGAL::Advancing_front_surface_reconstruction_cell_base_3</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgAdvancingFrontSurfaceReconstructionRef_1gaa2b1f41291920247fd5c6ef7c09f70a4" kindref="member">CGAL::advancing_front_surface_reconstruction()</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
