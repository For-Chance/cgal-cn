<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classGetCost" kind="class" language="C++" prot="public">
    <compoundname>GetCost</compoundname>
    <includes local="no">Concepts/GetCost.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classGetCost_1a251aafbdecc9bec92ff27b7f0e648110" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; typename <ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile_1ad0c5db091a74548d651ac32abc2abcbc" kindref="member">Edge_profile::FT</ref> &gt;</type>
        <definition>std::optional&lt; typename Edge_profile::FT &gt; GetCost::operator()</definition>
        <argsstring>(const Edge_profile &amp;edge_profile, const std::optional&lt; typename Edge_profile::Point &gt; &amp;placement) const</argsstring>
        <name>operator()</name>
        <qualifiedname>GetCost::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classGetCost_1abbab523b8c37cd9463544a431d7e0897" kindref="member">Edge_profile</ref> &amp;</type>
          <declname>edge_profile</declname>
        </param>
        <param>
          <type>const std::optional&lt; typename <ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile_1a1428e94a5c6d4906b6d24d987ddf2e19" kindref="member">Edge_profile::Point</ref> &gt; &amp;</type>
          <declname>placement</declname>
        </param>
        <briefdescription>
<para>Computes and returns the cost of collapsing the edge (represented by its profile), using the calculated placement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GetCost.h" line="36" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGetCost_1abbab523b8c37cd9463544a431d7e0897" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile" kindref="compound">CGAL::Surface_mesh_simplification::Edge_profile</ref></type>
        <definition>typedef CGAL::Surface_mesh_simplification::Edge_profile GetCost::Edge_profile</definition>
        <argsstring></argsstring>
        <name>Edge_profile</name>
        <qualifiedname>GetCost::Edge_profile</qualifiedname>
        <briefdescription>
<para>The class <computeroutput>Edge_profile</computeroutput> regroups useful information about an edge, such as its incident vertices and faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GetCost.h" line="27" column="59" bodyfile="Concepts/GetCost.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classGetCost" kindref="compound">GetCost</ref></computeroutput> describes the requirements for the <emphasis>policy function object</emphasis> which gets the <emphasis>collapse cost</emphasis> of an edge. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>The cost returned is a <computeroutput>std::optional</computeroutput> value (i.e. it can be absent). An <emphasis>absent</emphasis> cost indicates that the edge should not be collapsed. This could be the result of a computational limitation (such as an overflow), or can be intentionally returned to prevent the edge from being collapsed.</para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__length__cost" kindref="compound">CGAL::Surface_mesh_simplification::Edge_length_cost</ref>&lt;TriangleMesh&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__cost" kindref="compound">CGAL::Surface_mesh_simplification::LindstromTurk_cost</ref>&lt;TriangleMesh&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__policies" kindref="compound">CGAL::Surface_mesh_simplification::GarlandHeckbert_policies</ref>&lt;TriangleMesh, GeomTraits&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/GetCost.h" line="22" column="1" bodyfile="Concepts/GetCost.h" bodystart="23" bodyend="41"/>
    <listofallmembers>
      <member refid="classGetCost_1abbab523b8c37cd9463544a431d7e0897" prot="public" virt="non-virtual"><scope>GetCost</scope><name>Edge_profile</name></member>
      <member refid="classGetCost_1a251aafbdecc9bec92ff27b7f0e648110" prot="public" virt="non-virtual"><scope>GetCost</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
