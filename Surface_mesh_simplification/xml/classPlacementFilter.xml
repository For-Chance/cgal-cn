<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classPlacementFilter" kind="class" language="C++" prot="public">
    <compoundname>PlacementFilter</compoundname>
    <includes local="no">Concepts/PlacementFilter.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPlacementFilter_1a7c51508aed71a21fc7dfa8e296ff443f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile_1a1428e94a5c6d4906b6d24d987ddf2e19" kindref="member">Edge_profile::Point</ref> &gt;</type>
        <definition>std::optional&lt; Edge_profile::Point &gt; PlacementFilter::operator()</definition>
        <argsstring>(const Edge_profile &amp;profile, std::optional&lt; Edge_profile::Point &gt; placement) const</argsstring>
        <name>operator()</name>
        <qualifiedname>PlacementFilter::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classPlacementFilter_1a4335b5d9314a019bce521e80b114cfe8" kindref="member">Edge_profile</ref> &amp;</type>
          <declname>profile</declname>
        </param>
        <param>
          <type>std::optional&lt; <ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile_1a1428e94a5c6d4906b6d24d987ddf2e19" kindref="member">Edge_profile::Point</ref> &gt;</type>
          <declname>placement</declname>
        </param>
        <briefdescription>
<para>filters the placement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PlacementFilter.h" line="38" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classPlacementFilter_1a4335b5d9314a019bce521e80b114cfe8" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile" kindref="compound">CGAL::Surface_mesh_simplification::Edge_profile</ref></type>
        <definition>typedef CGAL::Surface_mesh_simplification::Edge_profile PlacementFilter::Edge_profile</definition>
        <argsstring></argsstring>
        <name>Edge_profile</name>
        <qualifiedname>PlacementFilter::Edge_profile</qualifiedname>
        <briefdescription>
<para>The class <computeroutput>Edge_profile</computeroutput> regroups useful information about an edge, such as its incident vertices and faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PlacementFilter.h" line="29" column="59" bodyfile="Concepts/PlacementFilter.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classPlacementFilter" kindref="compound">PlacementFilter</ref></computeroutput> describes the requirements for the <emphasis>policy function object</emphasis> which gets the profile and placement of an edge and which can filter the placement. The filtering is only done when an edge is taken from the priority queue in order to get collapsed, and neither when the edge is inserted nor when it is updated in the priority queue. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>The placement returned is a <computeroutput>std::optional</computeroutput> value (i.e., it can be absent). The value <computeroutput>std::nullopt</computeroutput> indicates that the edge should not be collapsed.</para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Bounded__normal__change__filter" kindref="compound">CGAL::Surface_mesh_simplification::Bounded_normal_change_filter</ref>&lt;BasePlacementFilter&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Polyhedral__envelope__filter" kindref="compound">CGAL::Surface_mesh_simplification::Polyhedral_envelope_filter</ref>&lt;GeomTraits, BasePlacementFilter&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/PlacementFilter.h" line="24" column="1" bodyfile="Concepts/PlacementFilter.h" bodystart="25" bodyend="42"/>
    <listofallmembers>
      <member refid="classPlacementFilter_1a4335b5d9314a019bce521e80b114cfe8" prot="public" virt="non-virtual"><scope>PlacementFilter</scope><name>Edge_profile</name></member>
      <member refid="classPlacementFilter_1a7c51508aed71a21fc7dfa8e296ff443f" prot="public" virt="non-virtual"><scope>PlacementFilter</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
