<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgSurfaceMeshSimplificationRef" kind="group">
    <compoundname>PkgSurfaceMeshSimplificationRef</compoundname>
    <title>Triangulated Surface Mesh Simplification Reference</title>
    <innerclass refid="structCGAL_1_1Surface__mesh__simplification_1_1Edge__collapse__visitor__base" prot="public">CGAL::Surface_mesh_simplification::Edge_collapse_visitor_base</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Bounded__normal__change__filter" prot="public">CGAL::Surface_mesh_simplification::Bounded_normal_change_filter</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Bounded__normal__change__placement" prot="public">CGAL::Surface_mesh_simplification::Bounded_normal_change_placement</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Constrained__placement" prot="public">CGAL::Surface_mesh_simplification::Constrained_placement</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Count__ratio__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Count_ratio_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Count__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Count_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__count__ratio__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Edge_count_ratio_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__count__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Edge_count_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__length__cost" prot="public">CGAL::Surface_mesh_simplification::Edge_length_cost</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__length__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Edge_length_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile" prot="public">CGAL::Surface_mesh_simplification::Edge_profile</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Face__count__ratio__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Face_count_ratio_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Face__count__stop__predicate" prot="public">CGAL::Surface_mesh_simplification::Face_count_stop_predicate</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__plane__policies" prot="public">CGAL::Surface_mesh_simplification::GarlandHeckbert_plane_policies</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__policies" prot="public">CGAL::Surface_mesh_simplification::GarlandHeckbert_policies</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__probabilistic__plane__policies" prot="public">CGAL::Surface_mesh_simplification::GarlandHeckbert_probabilistic_plane_policies</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__probabilistic__triangle__policies" prot="public">CGAL::Surface_mesh_simplification::GarlandHeckbert_probabilistic_triangle_policies</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__triangle__policies" prot="public">CGAL::Surface_mesh_simplification::GarlandHeckbert_triangle_policies</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__cost" prot="public">CGAL::Surface_mesh_simplification::LindstromTurk_cost</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__placement" prot="public">CGAL::Surface_mesh_simplification::LindstromTurk_placement</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Midpoint__placement" prot="public">CGAL::Surface_mesh_simplification::Midpoint_placement</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__simplification_1_1Polyhedral__envelope__filter" prot="public">CGAL::Surface_mesh_simplification::Polyhedral_envelope_filter</innerclass>
    <innergroup refid="group__PkgSurfaceMeshSimplificationConcepts">Concepts</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurfaceMeshSimplificationRef_1ga9efb9a78f5138d74ed6e456e6190a99a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class StopPolicy</type>
          </param>
          <param>
            <type>class NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int CGAL::Surface_mesh_simplification::edge_collapse</definition>
        <argsstring>(TriangleMesh &amp;tmesh, const StopPolicy &amp;should_stop, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>edge_collapse</name>
        <qualifiedname>CGAL::Surface_mesh_simplification::edge_collapse</qualifiedname>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tmesh</declname>
        </param>
        <param>
          <type>const StopPolicy &amp;</type>
          <declname>should_stop</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>Simplifies <computeroutput>tmesh</computeroutput> in-place by collapsing edges, and returns the number of edges effectively removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> concepts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StopPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classStopPredicate" kindref="compound">StopPredicate</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a triangle mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>should_stop</parametername>
</parameternamelist>
<parameterdescription>
<para>the stop-condition policy </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="10" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>tmesh</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, pmesh)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref></computeroutput> should be available for the vertices of <computeroutput>tmesh</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of a geometric traits class </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a CGAL <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> deduced from the point type, using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>The geometric traits class must be compatible with the vertex point type. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>halfedge_index_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating to each halfedge of <computeroutput>tmesh</computeroutput> a unique index between <computeroutput>0</computeroutput> and <computeroutput>num_halfedges(tmesh) - 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::halfedge_descriptor</computeroutput> as key type and <computeroutput>std::size_t</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>an automatically indexed internal map </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is not passed, internal machinery will create and initialize a face index property map, either using the internal property map if it exists or using an external map. The latter might result in - slightly - worsened performance in case of non-constant complexity for index access. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>get_cost</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a policy which returns the collapse cost for an edge </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of the concept <computeroutput><ref refid="classGetCost" kindref="compound">GetCost</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__cost" kindref="compound">CGAL::Surface_mesh_simplification::LindstromTurk_cost</ref>&lt;TriangleMesh&gt;</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>get_placement</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a policy which returns the placement (position of the replacement vertex) for an edge </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of the concept <computeroutput><ref refid="classGetPlacement" kindref="compound">GetPlacement</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__placement" kindref="compound">CGAL::Surface_mesh_simplification::LindstromTurk_placement</ref>&lt;TriangleMesh&gt;</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>filter</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a policy which returns the filter for a placement </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of the concept <computeroutput>Filter</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>no placement gets filtered </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>edge_is_constrained_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map containing the constrained-or-not status of each edge of <computeroutput>tmesh</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::edge_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a constant property map returning <computeroutput>false</computeroutput> for any edge key </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>A constrained edge cannot be collapsed. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>visitor</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a visitor that is called by the <computeroutput>edge_collapse</computeroutput> function at certain points to allow the user to track the simplification process </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of the concept <computeroutput><ref refid="classEdgeCollapseSimplificationVisitor" kindref="compound">EdgeCollapseSimplificationVisitor</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>unused </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_index_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating to each vertex of <computeroutput>tmesh</computeroutput> a unique index between <computeroutput>0</computeroutput> and <computeroutput>num_vertices(tmesh) - 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>std::size_t</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>an automatically indexed internal map </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is not passed, internal machinery will create and initialize a face index property map, either using the internal property map if it exists or using an external map. The latter might result in - slightly - worsened performance in case of non-constant complexity for index access. </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only used by debug functions and is usually not needed for users. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_relaxed_order</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a Boolean tag indicating if the ordering of elements to be collapsed in the priority queue can be relaxed </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Either <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput> or <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false()</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>Using a relaxed order will allow the algorithm to use a faster priority queue. However, the ordering of the priority queue is no longer strict and there is a possibility that some elements that ought to have been collapsed are not actually collapsed. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><bold>Semantics</bold><linebreak/>
</para>
<para>The simplification process continues until the <computeroutput>should_stop</computeroutput> policy returns <computeroutput>true</computeroutput> or until the surface mesh cannot be simplified any further due to topological constraints.</para>
<para><computeroutput>get_cost</computeroutput> and <computeroutput>get_placement</computeroutput> are the policies which control the <emphasis>cost-strategy</emphasis>, that is, the order in which edges are collapsed and the remaining vertex is re-positioned.</para>
<para><computeroutput>visitor</computeroutput> is used to keep track of the simplification process. It has several member functions which are called at certain points in the simplification code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_simplification/edge_collapse.h" line="114" column="5" declfile="CGAL/Surface_mesh_simplification/edge_collapse.h" declline="114" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="SMS-detail.png"></image>
   Fernando Cacciola, Mael Rouxel-Labbé, Baskın Şenbaşlar, and Julian Komaromy This package provides an algorithm to simplify a triangulated surface mesh by edge collapsing. Users can define cost, constraints, and placement strategies to decide when and how should edges be collapsed. A few strategies are offered by default, such as the Turk/Lindstrom and Garland-Heckbert <emphasis>memoryless</emphasis> approaches.    <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:c-tsms-12-24b">cgal:c-tsms-12-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Concepts</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classStopPredicate" kindref="compound">StopPredicate</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classGetCost" kindref="compound">GetCost</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classGetPlacement" kindref="compound">GetPlacement</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classPlacementFilter" kindref="compound">PlacementFilter</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classEdgeCollapseSimplificationVisitor" kindref="compound">EdgeCollapseSimplificationVisitor</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgSurfaceMeshSimplificationRef_1ga9efb9a78f5138d74ed6e456e6190a99a" kindref="member">CGAL::Surface_mesh_simplification::edge_collapse()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Policies</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Count__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Count_stop_predicate</ref>&lt;TriangleMesh&gt;</computeroutput> (deprecated)</para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Count__ratio__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Count_ratio_stop_predicate</ref>&lt;TriangleMesh&gt;</computeroutput> (deprecated)</para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__count__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Edge_count_stop_predicate</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Face__count__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Face_count_stop_predicate</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__count__ratio__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Edge_count_ratio_stop_predicate</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Face__count__ratio__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Face_count_ratio_stop_predicate</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__length__stop__predicate" kindref="compound">CGAL::Surface_mesh_simplification::Edge_length_stop_predicate</ref>&lt;FT&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__length__cost" kindref="compound">CGAL::Surface_mesh_simplification::Edge_length_cost</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Midpoint__placement" kindref="compound">CGAL::Surface_mesh_simplification::Midpoint_placement</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__cost" kindref="compound">CGAL::Surface_mesh_simplification::LindstromTurk_cost</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1LindstromTurk__placement" kindref="compound">CGAL::Surface_mesh_simplification::LindstromTurk_placement</ref>&lt;TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__plane__policies" kindref="compound">CGAL::Surface_mesh_simplification::GarlandHeckbert_plane_policies</ref>&lt;TriangleMesh, GeomTraits&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__probabilistic__plane__policies" kindref="compound">CGAL::Surface_mesh_simplification::GarlandHeckbert_probabilistic_plane_policies</ref>&lt;TriangleMesh, GeomTraits&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__triangle__policies" kindref="compound">CGAL::Surface_mesh_simplification::GarlandHeckbert_triangle_policies</ref>&lt;TriangleMesh, GeomTraits&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__probabilistic__triangle__policies" kindref="compound">CGAL::Surface_mesh_simplification::GarlandHeckbert_probabilistic_triangle_policies</ref>&lt;TriangleMesh, GeomTraits&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1GarlandHeckbert__policies" kindref="compound">CGAL::Surface_mesh_simplification::GarlandHeckbert_policies</ref>&lt;TriangleMesh, GeomTraits&gt;</computeroutput> (deprecated)</para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Policy Enhancements</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Constrained__placement" kindref="compound">CGAL::Surface_mesh_simplification::Constrained_placement</ref>&lt;Placement, TriangleMesh&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Bounded__normal__change__placement" kindref="compound">CGAL::Surface_mesh_simplification::Bounded_normal_change_placement</ref>&lt;Placement&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Bounded__normal__change__filter" kindref="compound">CGAL::Surface_mesh_simplification::Bounded_normal_change_filter</ref>&lt;Filter&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Polyhedral__envelope__filter" kindref="compound">CGAL::Surface_mesh_simplification::Polyhedral_envelope_filter</ref>&lt;Filter&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Classes</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh__simplification_1_1Edge__profile" kindref="compound">CGAL::Surface_mesh_simplification::Edge_profile</ref>&lt;TriangleMesh, VertexPointMap, GeomTraits&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Surface__mesh__simplification_1_1Edge__collapse__visitor__base" kindref="compound">CGAL::Surface_mesh_simplification::Edge_collapse_visitor_base</ref>&lt;TriangleMesh&gt;</computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
