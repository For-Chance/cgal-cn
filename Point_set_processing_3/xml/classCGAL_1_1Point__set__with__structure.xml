<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Point__set__with__structure" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Point_set_with_structure</compoundname>
    <includes local="no">CGAL/structure_point_set.h</includes>
    <innerclass refid="structCGAL_1_1Point__set__with__structure_1_1Corner" prot="private">CGAL::Point_set_with_structure::Corner</innerclass>
    <innerclass refid="structCGAL_1_1Point__set__with__structure_1_1Edge" prot="private">CGAL::Point_set_with_structure::Edge</innerclass>
    <innerclass refid="classCGAL_1_1Point__set__with__structure_1_1My__point__property__map" prot="private">CGAL::Point_set_with_structure::My_point_property_map</innerclass>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20" prot="private" static="no" strong="no">
        <type></type>
        <name>Point_status</name>
        <qualifiedname>CGAL::Point_set_with_structure::Point_status</qualifiedname>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20aeab284674c4a640fcc4ea7907de86401" prot="private">
          <name>POINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20a83f061762a2ef57282de42049abfd7f5" prot="private">
          <name>RESIDUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20aaf97002eda8917f6540f4dd8687a41e4" prot="private">
          <name>PLANE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20ae28249180f35fdc3b28460e00d197166" prot="private">
          <name>EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20a742129e6b618351992a1406a2e7cbaa7" prot="private">
          <name>CORNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20a1d1ebdadb5cb0e965c97160e16aafb0f" prot="private">
          <name>SKIPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="75" column="3" bodyfile="CGAL/structure_point_set.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1af05a08e7b2cb27db8f463101ebb1d0b0" prot="private" static="no">
        <type><ref refid="classCGAL_1_1Point__set__with__structure" kindref="compound">Point_set_with_structure</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>typedef Point_set_with_structure&lt;Kernel&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::Self</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <qualifiedname>CGAL::Point_set_with_structure::Self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="68" column="36" bodyfile="CGAL/structure_point_set.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1ae826c7dc991d9f0f8b29fc83ad2326cd" prot="private" static="no">
        <type>Kernel::FT</type>
        <definition>typedef Kernel::FT CGAL::Point_set_with_structure&lt; Kernel &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>CGAL::Point_set_with_structure::FT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="70" column="31" bodyfile="CGAL/structure_point_set.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1a9b620ebcc93d09e79299f07a801b70a1" prot="private" static="no">
        <type><ref refid="classKernel_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Segment_3</ref></type>
        <definition>typedef Kernel::Segment_3 CGAL::Point_set_with_structure&lt; Kernel &gt;::Segment</definition>
        <argsstring></argsstring>
        <name>Segment</name>
        <qualifiedname>CGAL::Point_set_with_structure::Segment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="71" column="38" bodyfile="CGAL/structure_point_set.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1aac4917562abe34e4013694032cf7e758" prot="private" static="no">
        <type><ref refid="classKernel_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Line_3</ref></type>
        <definition>typedef Kernel::Line_3 CGAL::Point_set_with_structure&lt; Kernel &gt;::Line</definition>
        <argsstring></argsstring>
        <name>Line</name>
        <qualifiedname>CGAL::Point_set_with_structure::Line</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="72" column="35" bodyfile="CGAL/structure_point_set.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1a902232e4248687a09275eb68a4708020" prot="private" static="no">
        <type><ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref></type>
        <definition>typedef Kernel::Point_2 CGAL::Point_set_with_structure&lt; Kernel &gt;::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <qualifiedname>CGAL::Point_set_with_structure::Point_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="73" column="36" bodyfile="CGAL/structure_point_set.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaa" prot="public" static="no" strong="no">
        <type></type>
        <name>Coherence_type</name>
        <qualifiedname>CGAL::Point_set_with_structure::Coherence_type</qualifiedname>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaa88f9a1f5e8dd10f37db7ebd4d99fe28d" prot="public">
          <name>INCOHERENT</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Incoherent (facet violates the underlying structure) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaaee5b7d59600dec0ebfd54993b9f26381" prot="public">
          <name>FREEFORM</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Free-form coherent (facet is between 3 free-form points) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaad5c5bd81e6597d40bb9d8fe7e5c76ffc" prot="public">
          <name>VERTEX</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Structure coherent, facet adjacent to a vertex. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaa6651bbaf37b21104a6e65bf180f8dfff" prot="public">
          <name>CREASE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Structure coherent, facet adjacent to an edge. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaaf67df8f4858ebfde72e1c5d77a41395d" prot="public">
          <name>PLANAR</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Structure coherent, facet inside a planar section. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Tag classifying the coherence of a triplet of points with respect to an inferred surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="86" column="3" bodyfile="CGAL/structure_point_set.h" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1a5fce6a2330dba7606f964c09d915c9c3" prot="public" static="no">
        <type><ref refid="classKernel_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_3</ref></type>
        <definition>typedef Kernel::Point_3 CGAL::Point_set_with_structure&lt; Kernel &gt;::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <qualifiedname>CGAL::Point_set_with_structure::Point</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="80" column="36" bodyfile="CGAL/structure_point_set.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1a002ef0fb6a37d8c5146b928ad02fa020" prot="public" static="no">
        <type><ref refid="classKernel_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Vector_3</ref></type>
        <definition>typedef Kernel::Vector_3 CGAL::Point_set_with_structure&lt; Kernel &gt;::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <qualifiedname>CGAL::Point_set_with_structure::Vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="81" column="37" bodyfile="CGAL/structure_point_set.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Point__set__with__structure_1ab5a120ef52f43b2af08580d7c67dd473" prot="public" static="no">
        <type><ref refid="classKernel_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Plane_3</ref></type>
        <definition>typedef Kernel::Plane_3 CGAL::Point_set_with_structure&lt; Kernel &gt;::Plane</definition>
        <argsstring></argsstring>
        <name>Plane</name>
        <qualifiedname>CGAL::Point_set_with_structure::Plane</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="82" column="36" bodyfile="CGAL/structure_point_set.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1ae352b87f229671d71d802b7cfd49203d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Point__set__with__structure_1a5fce6a2330dba7606f964c09d915c9c3" kindref="member">Point</ref> &gt;</type>
        <definition>std::vector&lt;Point&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_points</definition>
        <argsstring></argsstring>
        <name>m_points</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_points</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="142" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1a68dabfecaa84ae7bef10c2305ba5a306" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Point__set__with__structure_1a002ef0fb6a37d8c5146b928ad02fa020" kindref="member">Vector</ref> &gt;</type>
        <definition>std::vector&lt;Vector&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_normals</definition>
        <argsstring></argsstring>
        <name>m_normals</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_normals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="143" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1a0254509a08187ad30a723ffb2c057104" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt;std::size_t&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_indices</definition>
        <argsstring></argsstring>
        <name>m_indices</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_indices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="144" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1a0dd30dc1d89a9e7454f408fa1f5fe771" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Point_status &gt;</type>
        <definition>std::vector&lt;Point_status&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_status</definition>
        <argsstring></argsstring>
        <name>m_status</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_status</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="145" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1ae69cc3e7d573553839c279a02216c51b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classCGAL_1_1Point__set__with__structure_1ab5a120ef52f43b2af08580d7c67dd473" kindref="member">Plane</ref> &gt;</type>
        <definition>std::vector&lt;Plane&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_planes</definition>
        <argsstring></argsstring>
        <name>m_planes</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_planes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="147" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1a0484efd199d88d5ad31e635c7581481e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::size_t &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;std::size_t&gt; &gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_indices_of_assigned_points</definition>
        <argsstring></argsstring>
        <name>m_indices_of_assigned_points</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_indices_of_assigned_points</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="148" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1acfc9e236892f96c53f51aa9fb4af672e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Edge &gt;</type>
        <definition>std::vector&lt;Edge&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_edges</definition>
        <argsstring></argsstring>
        <name>m_edges</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_edges</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="149" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Point__set__with__structure_1a75f3ad4be58475bba30ac463c2c29916" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Corner &gt;</type>
        <definition>std::vector&lt;Corner&gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::m_corners</definition>
        <argsstring></argsstring>
        <name>m_corners</name>
        <qualifiedname>CGAL::Point_set_with_structure::m_corners</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="150" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1ac8c3156f0e2ffdc7d45ba376a3bc90d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PlaneRange</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Point_set_with_structure&lt; Kernel &gt;::Point_set_with_structure</definition>
        <argsstring>(const PointRange &amp;points, const PlaneRange &amp;planes, double epsilon, const NamedParameters &amp;np)</argsstring>
        <name>Point_set_with_structure</name>
        <qualifiedname>CGAL::Point_set_with_structure::Point_set_with_structure</qualifiedname>
        <param>
          <type>const PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const PlaneRange &amp;</type>
          <declname>planes</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>Constructs a structured point set based on the input points and the associated shape detection object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. The value type of its iterator is the key type of the named parameter <computeroutput>point_map</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PlaneRange</parametername>
</parameternamelist>
<parameterdescription>
<para>is a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. The value type of its iterator is the key type of the named parameter <computeroutput>plane_map</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>input point range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>planes</parametername>
</parameternamelist>
<parameterdescription>
<para>input plane range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>size parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the elements of the point set <computeroutput>points</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and whose value type is <computeroutput>geom_traits::Point_3</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref>&lt;geom_traits::Point_3&gt;</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>normal_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating normals to the elements of the point set <computeroutput>points</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and whose value type is <computeroutput>geom_traits::Vector_3</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>plane_index_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating the index of a point in the input range to the index of plane (<computeroutput>-1</computeroutput> if the point is not assigned to a plane) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>std::size_t</computeroutput> as key type and <computeroutput>int</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>There is no default, this parameters is mandatory. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>plane_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map containing the planes associated to the elements of the plane range <computeroutput>planes</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>PlaneRange::iterator::value_type</computeroutput> as key type and <computeroutput>geom_traits::Plane_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref>&lt;<ref refid="classKernel_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Plane_3</ref>&gt;</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>attraction_factor</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>multiple of a tolerance <computeroutput>epsilon</computeroutput> used to connect simplices </para>
</listitem>
<listitem>
<para><bold>Type: </bold>floating scalar value </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>3</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="207" column="3" bodyfile="CGAL/structure_point_set.h" bodystart="207" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1adefa2624e55ad8398784aa97f1362040" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Point_set_with_structure&lt; Kernel &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>CGAL::Point_set_with_structure::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="280" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1a7a963f81f59db7dfeba4ca94f69d22c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classCGAL_1_1Point__set__with__structure_1a5fce6a2330dba7606f964c09d915c9c3" kindref="member">Point</ref>, <ref refid="classCGAL_1_1Point__set__with__structure_1a002ef0fb6a37d8c5146b928ad02fa020" kindref="member">Vector</ref> &gt;</type>
        <definition>std::pair&lt; Point, Vector &gt; CGAL::Point_set_with_structure&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>CGAL::Point_set_with_structure::operator[]</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="281" column="13" bodyfile="CGAL/structure_point_set.h" bodystart="281" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1ae3cfc8660cb6151865d8d6c02e3982f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Point__set__with__structure_1a5fce6a2330dba7606f964c09d915c9c3" kindref="member">Point</ref> &amp;</type>
        <definition>const Point &amp; CGAL::Point_set_with_structure&lt; Kernel &gt;::point</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>point</name>
        <qualifiedname>CGAL::Point_set_with_structure::point</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="283" column="15" bodyfile="CGAL/structure_point_set.h" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1a4974a2fd2a8bfeb1aee2c0ae8a8b899b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Point__set__with__structure_1a002ef0fb6a37d8c5146b928ad02fa020" kindref="member">Vector</ref> &amp;</type>
        <definition>const Vector &amp; CGAL::Point_set_with_structure&lt; Kernel &gt;::normal</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>normal</name>
        <qualifiedname>CGAL::Point_set_with_structure::normal</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="284" column="16" bodyfile="CGAL/structure_point_set.h" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1a61960490d2331f54aad4892486be67c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Point_set_with_structure&lt; Kernel &gt;::adjacency</definition>
        <argsstring>(std::size_t i, OutputIterator output) const</argsstring>
        <name>adjacency</name>
        <qualifiedname>CGAL::Point_set_with_structure::adjacency</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Returns all <computeroutput>Plane_shape</computeroutput> objects that are adjacent to the point with index <computeroutput>i</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Points not adjacent to any plane are free-form points, points adjacent to 1 plane are planar points, points adjacent to 2 planes are edge points and points adjacent to 3 or more planes are vertices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="298" column="8" bodyfile="CGAL/structure_point_set.h" bodystart="298" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Point__set__with__structure_1ae8890334744d8d7efd17917c62fc1513" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaa" kindref="member">Coherence_type</ref></type>
        <definition>Coherence_type CGAL::Point_set_with_structure&lt; Kernel &gt;::facet_coherence</definition>
        <argsstring>(const std::array&lt; std::size_t, 3 &gt; &amp;f) const</argsstring>
        <name>facet_coherence</name>
        <qualifiedname>CGAL::Point_set_with_structure::facet_coherence</qualifiedname>
        <param>
          <type>const std::array&lt; std::size_t, 3 &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Computes the coherence of a facet between the 3 points indexed by <computeroutput>f</computeroutput> with respect to the underlying structure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/structure_point_set.h" line="320" column="18" bodyfile="CGAL/structure_point_set.h" bodystart="320" bodyend="470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A 3D point set with structure information based on a set of detected planes. </para>
    </briefdescription>
    <detaileddescription>
<para>Given a point set in 3D space along with a set of fitted planes, this class stores a simplified and structured version of the point set. Each output point is assigned to one, two or more primitives (depending whether it belongs to a planar section, an edge or a if it is a vertex). The implementation follow <ref refid="citelist_1CITEREF_cgal:la-srpss-13" kindref="member">[6]</ref>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classEfficientRANSACTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Shape_detection.tag">EfficientRANSACTraits</ref></computeroutput> that must provide in addition a function <computeroutput>Intersect_3 intersection_3_object() const</computeroutput> and a functor <computeroutput>Intersect_3</computeroutput> with:<itemizedlist>
<listitem><para><computeroutput>std::optional&lt; std::variant&lt; Traits::Plane_3, Traits::Line_3 &gt; &gt; operator()(typename Traits::Plane_3, typename Traits::Plane_3)</computeroutput></para>
</listitem><listitem><para><computeroutput>std::optional&lt; std::variant&lt; Traits::Line_3, Traits::Point_3 &gt; &gt; operator()(typename Traits::Line_3, typename Traits::Plane_3)</computeroutput> </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="CGAL/structure_point_set.h" line="66" column="1" bodyfile="CGAL/structure_point_set.h" bodystart="67" bodyend="1469"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Point__set__with__structure_1a61960490d2331f54aad4892486be67c4" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>adjacency</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaa" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Coherence_type</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20a742129e6b618351992a1406a2e7cbaa7" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>CORNER</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaa6651bbaf37b21104a6e65bf180f8dfff" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>CREASE</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20ae28249180f35fdc3b28460e00d197166" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>EDGE</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ae8890334744d8d7efd17917c62fc1513" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>facet_coherence</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaaee5b7d59600dec0ebfd54993b9f26381" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>FREEFORM</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ae826c7dc991d9f0f8b29fc83ad2326cd" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaa88f9a1f5e8dd10f37db7ebd4d99fe28d" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>INCOHERENT</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aac4917562abe34e4013694032cf7e758" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Line</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a75f3ad4be58475bba30ac463c2c29916" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_corners</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1acfc9e236892f96c53f51aa9fb4af672e" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_edges</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a0254509a08187ad30a723ffb2c057104" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_indices</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a0484efd199d88d5ad31e635c7581481e" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_indices_of_assigned_points</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a68dabfecaa84ae7bef10c2305ba5a306" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_normals</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ae69cc3e7d573553839c279a02216c51b" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_planes</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ae352b87f229671d71d802b7cfd49203d" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_points</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a0dd30dc1d89a9e7454f408fa1f5fe771" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>m_status</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a4974a2fd2a8bfeb1aee2c0ae8a8b899b" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>normal</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a7a963f81f59db7dfeba4ca94f69d22c1" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaaf67df8f4858ebfde72e1c5d77a41395d" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>PLANAR</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20aaf97002eda8917f6540f4dd8687a41e4" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>PLANE</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ab5a120ef52f43b2af08580d7c67dd473" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Plane</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a5fce6a2330dba7606f964c09d915c9c3" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Point</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ae3cfc8660cb6151865d8d6c02e3982f5" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>point</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20aeab284674c4a640fcc4ea7907de86401" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>POINT</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a902232e4248687a09275eb68a4708020" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1ac8c3156f0e2ffdc7d45ba376a3bc90d8" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Point_set_with_structure</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Point_status</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20a83f061762a2ef57282de42049abfd7f5" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>RESIDUS</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a9b620ebcc93d09e79299f07a801b70a1" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Segment</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1af05a08e7b2cb27db8f463101ebb1d0b0" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Self</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1adefa2624e55ad8398784aa97f1362040" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>size</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a02ab99d1306f65606deb97cfcf3d3e20a1d1ebdadb5cb0e965c97160e16aafb0f" prot="private" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>SKIPPED</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1a002ef0fb6a37d8c5146b928ad02fa020" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>Vector</name></member>
      <member refid="classCGAL_1_1Point__set__with__structure_1aaada4e3848c92698219ee8899b996aaaad5c5bd81e6597d40bb9d8fe7e5c76ffc" prot="public" virt="non-virtual"><scope>CGAL::Point_set_with_structure</scope><name>VERTEX</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
