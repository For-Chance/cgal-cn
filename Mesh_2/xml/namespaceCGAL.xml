<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Delaunay__mesh__criteria__2" prot="public">CGAL::Delaunay_mesh_criteria_2</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__mesh__face__base__2" prot="public">CGAL::Delaunay_mesh_face_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__mesh__size__criteria__2" prot="public">CGAL::Delaunay_mesh_size_criteria_2</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__mesh__vertex__base__2" prot="public">CGAL::Delaunay_mesh_vertex_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__mesher__2" prot="public">CGAL::Delaunay_mesher_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__conformer__2" prot="public">CGAL::Triangulation_conformer_2</innerclass>
    <innernamespace refid="namespaceCGAL_1_1IO">CGAL::IO</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Mesh__2">CGAL::Mesh_2</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__PkgMesh2Enum_1gab9fe60482a45120b3c061a8a4ec9018d" prot="public" static="no" strong="no">
        <type></type>
        <name>Mesh_optimization_return_code</name>
        <qualifiedname>CGAL::Mesh_optimization_return_code</qualifiedname>
        <enumvalue id="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da700b34635bba84023202ffb43ea072d6" prot="public">
          <name>BOUND_REACHED</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>The given lower bound on mesh quality is reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018dae51c3b06e2ee9b31f5b812cc86cbd229" prot="public">
          <name>TIME_LIMIT_REACHED</name>
          <briefdescription>
<para>The given time limit is reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da9c7c2f09314491da054f3f5d7d7ab3b9" prot="public">
          <name>CANT_IMPROVE_ANYMORE</name>
          <briefdescription>
<para>Mesh could not be improved anymore. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da19d4b9484d2ed90e8fec7e1194d25df2" prot="public">
          <name>CONVERGENCE_REACHED</name>
          <briefdescription>
<para>The given convergence bound is reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018da058b57a483e13d1ed274217b75ca0afc" prot="public">
          <name>MAX_ITERATION_NUMBER_REACHED</name>
          <briefdescription>
<para>The given maximum iteration number is reached. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgMesh2Enum_1ggab9fe60482a45120b3c061a8a4ec9018dab191e538b64f19bb21b00eadae3934b7" prot="public">
          <name>ALL_VERTICES_FROZEN</name>
          <briefdescription>
<para>All vertices have been frozen. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enum <computeroutput>Mesh_optimization_return_code</computeroutput> is the output of the global mesh optimization functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This output corresponds to mesh optimization process termination reasons. Note that depending on what parameters have been set to the optimizer, each return value may represent a failure or a success.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh2Functions_1gafeaf59d3fa014da287f8514913b38d05" kindref="member">CGAL::lloyd_optimize_mesh_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_optimization_return_code.h" line="14" column="1" bodyfile="CGAL/Mesh_optimization_return_code.h" bodystart="14" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgMesh2Functions_1gad0e4753d46c0203cb3d45d102840e483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CDT</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::refine_Delaunay_mesh_2</definition>
        <argsstring>(CDT &amp;t, const NamedParameters &amp;np)</argsstring>
        <name>refine_Delaunay_mesh_2</name>
        <qualifiedname>CGAL::refine_Delaunay_mesh_2</qualifiedname>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>refines the domain defined by a constrained Delaunay triangulation into a mesh satisfying the criteria defined by the traits <computeroutput>criteria</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the unbounded component of the plane is never meshed.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classDelaunayMeshTraits__2" kindref="compound">DelaunayMeshTraits_2</ref></computeroutput>. The face of the constrained Delaunay triangulation must be a model of the concept <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the constrained Delaunay triangulation that will be refined </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>seeds</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>2D points used to define the domain to mesh. If <computeroutput>seeds_are_in_domain==true</computeroutput>, the mesh domain is the union of the bounded connected components including at least one seed. If <computeroutput>seeds_are_in_domain==false</computeroutput>, the domain is the union of the bounded components including no seed. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput>ConstRange</computeroutput> with iterator being a model of <computeroutput>InputIterator</computeroutput> with <computeroutput>CDT::Point</computeroutput> as value type. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>No seed. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>criteria</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>The meshing criteria </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of a model of the concept <computeroutput><ref refid="classMeshingCriteria__2" kindref="compound">MeshingCriteria_2</ref></computeroutput> with <computeroutput>Criteria::Face_handle</computeroutput> being the same as <computeroutput>CDT::Face_handle</computeroutput>. </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="classCGAL_1_1Delaunay__mesh__size__criteria__2" kindref="compound">CGAL::Delaunay_mesh_size_criteria_2</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>domain_is_initialized</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput> the domain is considered as already initialized (see <computeroutput><ref refid="classDelaunayMeshFaceBase__2_1a42249ae38c23bf5b6aaf64db9975316c" kindref="member">DelaunayMeshFaceBase_2::is_in_domain()</ref></computeroutput>). If <computeroutput>false</computeroutput> and no seeds are provided, the domain of the mesh covers all the connected components of the plane defined by the constrained edges of <computeroutput>t</computeroutput>, except for the unbounded component. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>bool</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>false </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>seeds_are_in_domain</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>specified if seeds indicates bounded connected components inside or outside of the domain. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>bool</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>false </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_mesher_2.h" line="311" column="1" declfile="CGAL/Delaunay_mesher_2.h" declline="311" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1gafd0e61cd3bf931e55298ad9b1523f9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
          <param>
            <type>class Criteria</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::refine_Delaunay_mesh_2</definition>
        <argsstring>(CDT &amp;t, const Criteria &amp;criteria=Criteria())</argsstring>
        <name>refine_Delaunay_mesh_2</name>
        <qualifiedname>CGAL::refine_Delaunay_mesh_2</qualifiedname>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const Criteria &amp;</type>
          <declname>criteria</declname>
          <defval>Criteria()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.6</para>
</xrefdescription></xrefsect></para>
<para>refines the default domain defined by a constrained Delaunay triangulation without seeds into a mesh satisfying the criteria defined by the traits <computeroutput>criteria</computeroutput>. The domain of the mesh covers all the connected components of the plane defined by the constrained edges of <computeroutput>t</computeroutput>, except for the unbounded component.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classDelaunayMeshTraits__2" kindref="compound">DelaunayMeshTraits_2</ref></computeroutput>. The face of the constrained Delaunay triangulation must be a model of the concept <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Criteria</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classMeshingCriteria__2" kindref="compound">MeshingCriteria_2</ref></computeroutput>. <computeroutput>Criteria::Face_handle</computeroutput> must be the same as <computeroutput>CDT::Face_handle</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_mesher_2.h" line="332" column="6" declfile="CGAL/Delaunay_mesher_2.h" declline="332" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1ga55c3e585b93a0fd91c6094d4763f9c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
          <param>
            <type>class Criteria</type>
          </param>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::refine_Delaunay_mesh_2</definition>
        <argsstring>(CDT &amp;t, InputIterator begin, InputIterator end, const Criteria &amp;criteria=Criteria(), bool mark=false)</argsstring>
        <name>refine_Delaunay_mesh_2</name>
        <qualifiedname>CGAL::refine_Delaunay_mesh_2</qualifiedname>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Criteria &amp;</type>
          <declname>criteria</declname>
          <defval>Criteria()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mark</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.6</para>
</xrefdescription></xrefsect></para>
<para>refines the default domain defined by a constrained Delaunay triangulation into a mesh satisfying the criteria defined by the traits <computeroutput>criteria</computeroutput>.The sequence <computeroutput>[begin, end)</computeroutput> gives a set of seeds points, that defines the domain to be meshed as follows. The constrained edges of <computeroutput>t</computeroutput> partition the plane into connected components. If <computeroutput>mark==true</computeroutput>, the mesh domain is the union of the bounded connected components including at least one seed. If <computeroutput>mark==false</computeroutput>, the domain is the union of the bounded components including no seed. Note that the unbounded component of the plane is never meshed.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classDelaunayMeshTraits__2" kindref="compound">DelaunayMeshTraits_2</ref></computeroutput>. The face of the constrained Delaunay triangulation must be a model of the concept <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Criteria</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classMeshingCriteria__2" kindref="compound">MeshingCriteria_2</ref></computeroutput>. <computeroutput>Criteria::Face_handle</computeroutput> must be the same as <computeroutput>CDT::Face_handle</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with value type <computeroutput>CDT::Geom_traits::Point_2</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Delaunay_mesher_2.h" line="366" column="6" declfile="CGAL/Delaunay_mesher_2.h" declline="366" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1gafbe2b6b96e7c8ce9a2816d50cd9bfacf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_conforming_Delaunay_2</definition>
        <argsstring>(CDT &amp;t)</argsstring>
        <name>make_conforming_Delaunay_2</name>
        <qualifiedname>CGAL::make_conforming_Delaunay_2</qualifiedname>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Refines the constrained Delaunay triangulation <computeroutput>t</computeroutput> into a conforming Delaunay triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>After a call to this function, all edges of <computeroutput>t</computeroutput> are Delaunay edges.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classConformingDelaunayTriangulationTraits__2" kindref="compound">ConformingDelaunayTriangulationTraits_2</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_conformer_2.h" line="15" column="17" declfile="CGAL/Triangulation_conformer_2.h" declline="15" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1ga05bf108ffbea1545b99a8b899ec5e2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CDT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_conforming_Gabriel_2</definition>
        <argsstring>(CDT &amp;t)</argsstring>
        <name>make_conforming_Gabriel_2</name>
        <qualifiedname>CGAL::make_conforming_Gabriel_2</qualifiedname>
        <param>
          <type>CDT &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Refines the constrained Delaunay triangulation <computeroutput>t</computeroutput> into a conforming Gabriel triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>After a call to this function, all constrained edges of <computeroutput>t</computeroutput> have the <emphasis>Gabriel property</emphasis>: the circle that has <formula id="13">$ e$</formula> as diameter does not contain any vertex from the triangulation.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a 2D constrained Delaunay triangulation and its geometric traits class must be a model of <computeroutput><ref refid="classConformingDelaunayTriangulationTraits__2" kindref="compound">ConformingDelaunayTriangulationTraits_2</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_conformer_2.h" line="35" column="17" declfile="CGAL/Triangulation_conformer_2.h" declline="35" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh2Functions_1gafeaf59d3fa014da287f8514913b38d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CDT</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type><ref refid="group__PkgMesh2Enum_1gab9fe60482a45120b3c061a8a4ec9018d" kindref="member">Mesh_optimization_return_code</ref></type>
        <definition>Mesh_optimization_return_code CGAL::lloyd_optimize_mesh_2</definition>
        <argsstring>(CDT &amp;cdt, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>lloyd_optimize_mesh_2</name>
        <qualifiedname>CGAL::lloyd_optimize_mesh_2</qualifiedname>
        <param>
          <type>CDT &amp;</type>
          <declname>cdt</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh2Functions_1gafeaf59d3fa014da287f8514913b38d05" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> is a mesh optimization process based on the minimization of a global energy function. </para>
        </briefdescription>
        <detaileddescription>
<para>In <computeroutput><ref refid="group__PkgMesh2Functions_1gafeaf59d3fa014da287f8514913b38d05" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput>, the minimized global energy may be interpreted as the <formula id="27">$ L^1$</formula>-norm of the error achieved when the function <formula id="28">$ x^2$</formula> is interpolated on the mesh domain using a piecewise linear function which is linear in each cell of the Voronoi diagram of the mesh vertices.</para>
<para>The optimizer <computeroutput><ref refid="group__PkgMesh2Functions_1gafeaf59d3fa014da287f8514913b38d05" kindref="member">lloyd_optimize_mesh_2()</ref></computeroutput> works in iterative steps. At each iteration, mesh vertices are moved into positions that bring to zero the energy gradient and the Delaunay triangulation is updated. Vertices on the mesh boundaries are not moved.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CDT</parametername>
</parameternamelist>
<parameterdescription>
<para>is required to be or derive from <computeroutput>CGAL::Constrained_Delaunay_triangulation_2</computeroutput>, with vertex base and face base of its underlying <computeroutput>TriangulationDataStructure_2</computeroutput> being models of <computeroutput><ref refid="classDelaunayMeshVertexBase__2" kindref="compound">DelaunayMeshVertexBase_2</ref></computeroutput> and <computeroutput><ref refid="classDelaunayMeshFaceBase__2" kindref="compound">DelaunayMeshFaceBase_2</ref></computeroutput>, respectively. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cdt</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial mesh that will be modified by the algorithm to represent the final optimized mesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="6" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>seeds</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>2D points used to define the domain to mesh. If <computeroutput>seeds_are_in_domain==true</computeroutput>, the mesh domain is the union of the bounded connected components including at least one seed. If <computeroutput>seeds_are_in_domain==false</computeroutput>, the domain is the union of the bounded components including no seed. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput>ConstRange</computeroutput> whose iterator is a model of <computeroutput>InputIterator</computeroutput> with <computeroutput>CDT::Point_2</computeroutput> as value type. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>No seed. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>seeds_are_in_domain</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>specified if seeds indicate bounded connected components inside or outside of the domain. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>bool</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>false </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>max_iteration_number</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>limit on the number of performed iterations. 0 means that there is no limit on the number of performed iterations. </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>max_iteration_number &gt;=0</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>int</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>time_limit</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>CPU time limit (in seconds) after which the optimization process is stopped. This time is measured using <computeroutput>CGAL::Real_timer</computeroutput>. 0 means that there is no time limit. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>time_limit</computeroutput> <formula id="29">$ \geq$</formula> 0 </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>freeze_bound</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>designed to reduce running time of each optimization iteration. Any vertex that has a displacement less than a given fraction of the length of its shortest incident edge, is frozen (i.e. is not relocated). The parameter <computeroutput>freeze_bound</computeroutput> gives the threshold ratio. If it is set to 0, freezing of vertices is disabled. </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0&lt;= freeze_bound &lt;=1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.001 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>convergence</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>threshold ratio of stopping criterion based on convergence: the optimization process is stopped when at the last iteration the displacement of any vertex is less than a given fraction of the length of the shortest edge incident to that vertex. </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0 &lt;=convergence &lt;= 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.001 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para>an enum value providing some information about the outcome of the algorithm.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh2Enum_1gab9fe60482a45120b3c061a8a4ec9018d" kindref="member">CGAL::Mesh_optimization_return_code</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh2Functions_1gad0e4753d46c0203cb3d45d102840e483" kindref="member">CGAL::refine_Delaunay_mesh_2()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/lloyd_optimize_mesh_2.h" line="119" column="1" bodyfile="CGAL/lloyd_optimize_mesh_2.h" bodystart="119" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Delaunay_mesh_criteria_2.h" line="2" column="1"/>
  </compounddef>
</doxygen>
