<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classLinearProgramTraits" kind="class" language="C++" prot="public">
    <compoundname>LinearProgramTraits</compoundname>
    <includes local="no">Concepts/LinearProgramTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Memory</header>
      <memberdef kind="function" id="classLinearProgramTraits_1accef729ae72f8da10886029b7cd1697a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LinearProgramTraits::resize</definition>
        <argsstring>(const std::size_t n, const std::size_t m)</argsstring>
        <name>resize</name>
        <qualifiedname>LinearProgramTraits::resize</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Allocates memory for <computeroutput>n</computeroutput> variables and <computeroutput>m</computeroutput> constraints in <computeroutput>lp</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="36" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="36" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="classLinearProgramTraits_1a620b499fe65942d7af2fc146728bc81a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LinearProgramTraits::set_q</definition>
        <argsstring>(const std::size_t i, const FT value)</argsstring>
        <name>set_q</name>
        <qualifiedname>LinearProgramTraits::set_q</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>qi</computeroutput> of <computeroutput>lp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="46" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classLinearProgramTraits_1a010dca85dc0d546fb438c20085361f42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LinearProgramTraits::set_r</definition>
        <argsstring>(const FT value)</argsstring>
        <name>set_r</name>
        <qualifiedname>LinearProgramTraits::set_r</qualifiedname>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>r</computeroutput> of <computeroutput>lp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="51" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classLinearProgramTraits_1a129a7b1e39b59a685d64bbc55577b5c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LinearProgramTraits::set_A</definition>
        <argsstring>(const std::size_t i, const std::size_t j, const FT value)</argsstring>
        <name>set_A</name>
        <qualifiedname>LinearProgramTraits::set_A</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>Aij</computeroutput> in the row <computeroutput>i</computeroutput> and column <computeroutput>j</computeroutput> of the constraint matrix <computeroutput>A</computeroutput> of <computeroutput>lp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="57" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classLinearProgramTraits_1af46ba51f69792bbbb31557e0627ab653" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LinearProgramTraits::set_l</definition>
        <argsstring>(const std::size_t i, const FT value)</argsstring>
        <name>set_l</name>
        <qualifiedname>LinearProgramTraits::set_l</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>li</computeroutput> of <computeroutput>lp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="62" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classLinearProgramTraits_1ac2320dbe320a60415c50c47dab1101e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LinearProgramTraits::set_u</definition>
        <argsstring>(const std::size_t i, const FT value)</argsstring>
        <name>set_u</name>
        <qualifiedname>LinearProgramTraits::set_u</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>ui</computeroutput> of <computeroutput>lp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="67" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Solution</header>
      <memberdef kind="function" id="classLinearProgramTraits_1aeffdc52a0c512bf0120a9e4be8be9304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIterator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool LinearProgramTraits::solve</definition>
        <argsstring>(OutIterator solution)</argsstring>
        <name>solve</name>
        <qualifiedname>LinearProgramTraits::solve</qualifiedname>
        <param>
          <type>OutIterator</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
<para>solves the linear program. </para>
        </briefdescription>
        <detaileddescription>
<para>Number of values in <computeroutput>solution</computeroutput> equals to the number <computeroutput>n</computeroutput> of values in the vector <computeroutput>x</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts values of type <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator with the solution</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a status of the computation <computeroutput>success == true</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/LinearProgramTraits.h" line="88" column="8" bodyfile="Concepts/LinearProgramTraits.h" bodystart="88" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A concept that describes the set of methods used to define and solve a linear programming (<computeroutput>lp</computeroutput>) problem of the general form: </para>
    </briefdescription>
    <detaileddescription>
<para><center>  <formula id="1">\begin{eqnarray*}
&amp; \mbox{minimize} &amp; \mathbf{q}^{T}\mathbf{x} + r \\
&amp; \mbox{subject to} &amp; \mathbf{l} \leq A\mathbf{x} \leq \mathbf{u}
\end{eqnarray*}</formula> </center> in <formula id="2">$ n $</formula> real variables <formula id="3">$ \mathbf{x} = (x_0, \ldots, x_{n-1}) $</formula> and <formula id="4">$ m $</formula> constraints.</para>
<para>Here, <itemizedlist>
<listitem>
<para><formula id="5">$ \mathbf{q} $</formula> is an <formula id="2">$ n $</formula>-dimensional vector (the linear objective function), </para>
</listitem>
<listitem>
<para><formula id="6">$ r $</formula> is a constant, </para>
</listitem>
<listitem>
<para><formula id="7">$ A $</formula> is an <formula id="8">$ m\times n$</formula> matrix (the constraint matrix), </para>
</listitem>
<listitem>
<para><formula id="9">$ \mathbf{l} $</formula> is an <formula id="4">$ m $</formula>-dimensional vector of lower constraint bounds, where <formula id="10">$ l_i \in \mathbb{R} \cup \{-\infty\} $</formula> for all <formula id="11">$ i $</formula>, </para>
</listitem>
<listitem>
<para><formula id="12">$ \mathbf{u} $</formula> is an <formula id="4">$ m $</formula>-dimensional vector of upper constraint bounds, where <formula id="13">$ u_i \in \mathbb{R} \cup \{+\infty\} $</formula> for all <formula id="11">$ i $</formula>. </para>
</listitem>
</itemizedlist>
</para>
    </detaileddescription>
    <location file="Concepts/LinearProgramTraits.h" line="26" column="1" bodyfile="Concepts/LinearProgramTraits.h" bodystart="26" bodyend="91"/>
    <listofallmembers>
      <member refid="classLinearProgramTraits_1accef729ae72f8da10886029b7cd1697a" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>resize</name></member>
      <member refid="classLinearProgramTraits_1a129a7b1e39b59a685d64bbc55577b5c4" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>set_A</name></member>
      <member refid="classLinearProgramTraits_1af46ba51f69792bbbb31557e0627ab653" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>set_l</name></member>
      <member refid="classLinearProgramTraits_1a620b499fe65942d7af2fc146728bc81a" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>set_q</name></member>
      <member refid="classLinearProgramTraits_1a010dca85dc0d546fb438c20085361f42" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>set_r</name></member>
      <member refid="classLinearProgramTraits_1ac2320dbe320a60415c50c47dab1101e5" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>set_u</name></member>
      <member refid="classLinearProgramTraits_1aeffdc52a0c512bf0120a9e4be8be9304" prot="public" virt="non-virtual"><scope>LinearProgramTraits</scope><name>solve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
