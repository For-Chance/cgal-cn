<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classMixedIntegerProgramVariable" kind="class" language="C++" prot="public">
    <compoundname>MixedIntegerProgramVariable</compoundname>
    <includes local="no">Concepts/MixedIntegerProgramTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="enum" id="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3e" prot="public" static="no" strong="no">
        <type></type>
        <name>Variable_type</name>
        <qualifiedname>MixedIntegerProgramVariable::Variable_type</qualifiedname>
        <enumvalue id="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3ea3533375dfc370864cbd6f785ca7a32c8" prot="public">
          <name>CONTINUOUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3eaaee8f28a9c80f8ee02ca24b94ede97cb" prot="public">
          <name>INTEGER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3ea56c1287231cc79cad9fa1e665c088c54" prot="public">
          <name>BINARY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A variable can be continuous, integer, or binary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="29" column="9" bodyfile="Concepts/MixedIntegerProgramTraits.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="typedef" id="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MixedIntegerProgramVariable::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>MixedIntegerProgramVariable::FT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="24" column="34" bodyfile="Concepts/MixedIntegerProgramTraits.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a8127bdbc447a27b950a00cb60c754ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MixedIntegerProgramVariable::MixedIntegerProgramVariable</definition>
        <argsstring>(MixedIntegerProgramTraits *solver, Variable_type type, FT lb=, FT ub, const std::string &amp;name, int idx)</argsstring>
        <name>MixedIntegerProgramVariable</name>
        <qualifiedname>MixedIntegerProgramVariable::MixedIntegerProgramVariable</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramTraits" kindref="compound">MixedIntegerProgramTraits</ref> *</type>
          <declname>solver</declname>
        </param>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3e" kindref="member">Variable_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>lb</declname>
        </param>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>ub</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Constructs a variable initialized with the pointer of the solver it belongs to, the variable type, lower bound, upper bound, name, and index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="40" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a8e49992a5e78a32bab6390fa137a2063" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3e" kindref="member">Variable_type</ref></type>
        <definition>Variable_type MixedIntegerProgramVariable::variable_type</definition>
        <argsstring>() const</argsstring>
        <name>variable_type</name>
        <qualifiedname>MixedIntegerProgramVariable::variable_type</qualifiedname>
        <briefdescription>
<para>Returns the variable type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="46" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a32995e7e21b19da0959b30c3b065d648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_variable_type</definition>
        <argsstring>(Variable_type t)</argsstring>
        <name>set_variable_type</name>
        <qualifiedname>MixedIntegerProgramVariable::set_variable_type</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3e" kindref="member">Variable_type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Sets/Changes the variable type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="49" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1aef2a35709c277bd64eae828bfb30c311" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; MixedIntegerProgramVariable::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>MixedIntegerProgramVariable::name</qualifiedname>
        <briefdescription>
<para>Returns the name of the variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="54" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a3029b003dfb0ad633fc45e35c64bde17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_name</definition>
        <argsstring>(const std::string &amp;n)</argsstring>
        <name>set_name</name>
        <qualifiedname>MixedIntegerProgramVariable::set_name</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Sets the name of the variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="59" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a53ffa8bf259ea8811cf9cad3b10bbe5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MixedIntegerProgramVariable::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>MixedIntegerProgramVariable::index</qualifiedname>
        <briefdescription>
<para>Returns the index of the variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="64" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1ac46649ae6bf65170d0d3359c1d4c0f9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_index</definition>
        <argsstring>(int idx)</argsstring>
        <name>set_index</name>
        <qualifiedname>MixedIntegerProgramVariable::set_index</qualifiedname>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Sets the index of the variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="69" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1acda8d70506d2ff248aaa635a2d462233" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMixedIntegerProgramTraits" kindref="compound">MixedIntegerProgramTraits</ref> *</type>
        <definition>const MixedIntegerProgramTraits * MixedIntegerProgramVariable::solver</definition>
        <argsstring>() const</argsstring>
        <name>solver</name>
        <qualifiedname>MixedIntegerProgramVariable::solver</qualifiedname>
        <briefdescription>
<para>Returns the solver that owns this variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="72" column="41"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a53f087f1de8fc96ee541c0a4373ab8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMixedIntegerProgramTraits" kindref="compound">MixedIntegerProgramTraits</ref> *</type>
        <definition>MixedIntegerProgramTraits * MixedIntegerProgramVariable::solver</definition>
        <argsstring>()</argsstring>
        <name>solver</name>
        <qualifiedname>MixedIntegerProgramVariable::solver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="73" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1ac103153f950be4466f9c6419a0c9c576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_lower_bound</definition>
        <argsstring>(FT lb)</argsstring>
        <name>set_lower_bound</name>
        <qualifiedname>MixedIntegerProgramVariable::set_lower_bound</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>lb</declname>
        </param>
        <briefdescription>
<para>Sets the lower bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="76" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a28b560e8578ee9a77a33b8f77bf10e8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_upper_bound</definition>
        <argsstring>(FT ub)</argsstring>
        <name>set_upper_bound</name>
        <qualifiedname>MixedIntegerProgramVariable::set_upper_bound</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>ub</declname>
        </param>
        <briefdescription>
<para>Sets the upper bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="79" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1abb0053ebdacf6edfcbc79d986c45177e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_bounds</definition>
        <argsstring>(FT lb, FT ub)</argsstring>
        <name>set_bounds</name>
        <qualifiedname>MixedIntegerProgramVariable::set_bounds</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>lb</declname>
        </param>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>ub</declname>
        </param>
        <briefdescription>
<para>Sets both lower and upper bounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="82" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a4d6ff5fe8a2d7cf5996650d8aeaea0e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
        <definition>FT MixedIntegerProgramVariable::lower_bound</definition>
        <argsstring>() const</argsstring>
        <name>lower_bound</name>
        <qualifiedname>MixedIntegerProgramVariable::lower_bound</qualifiedname>
        <briefdescription>
<para>Gets the lower bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="85" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a2c355eae27fade5d7c8c4d4a3da358b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
        <definition>FT MixedIntegerProgramVariable::upper_bound</definition>
        <argsstring>() const</argsstring>
        <name>upper_bound</name>
        <qualifiedname>MixedIntegerProgramVariable::upper_bound</qualifiedname>
        <briefdescription>
<para>Gets the upper bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="88" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a7b32297a543cae76b7738c7787020154" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::get_bounds</definition>
        <argsstring>(FT &amp;lb, FT &amp;ub) const</argsstring>
        <name>get_bounds</name>
        <qualifiedname>MixedIntegerProgramVariable::get_bounds</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref> &amp;</type>
          <declname>lb</declname>
        </param>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref> &amp;</type>
          <declname>ub</declname>
        </param>
        <briefdescription>
<para>Gets both lower and upper bounds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="91" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1a008fa3a51a098669a98717c03a895fcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
        <definition>FT MixedIntegerProgramVariable::solution_value</definition>
        <argsstring>(bool rounded=false) const</argsstring>
        <name>solution_value</name>
        <qualifiedname>MixedIntegerProgramVariable::solution_value</qualifiedname>
        <param>
          <type>bool</type>
          <declname>rounded</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the value of the variable in the current solution. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>(1) Valid only if the program was successfully solved. (2) If the variable is integer and rounded == true, then the value will be rounded to the nearest integer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="101" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1acc86fbbaebea6f67dd827512940116e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MixedIntegerProgramVariable::set_solution_value</definition>
        <argsstring>(FT value)</argsstring>
        <name>set_solution_value</name>
        <qualifiedname>MixedIntegerProgramVariable::set_solution_value</qualifiedname>
        <param>
          <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the solution value (should be called internally by the solver). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="104" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMixedIntegerProgramVariable_1aff6c1f8ed6948eb65bf106c483d45619" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" kindref="member">FT</ref></type>
        <definition>static FT MixedIntegerProgramVariable::infinity</definition>
        <argsstring>()</argsstring>
        <name>infinity</name>
        <qualifiedname>MixedIntegerProgramVariable::infinity</qualifiedname>
        <briefdescription>
<para>Gets the infinity threshold (e.g., 1e20). </para>
        </briefdescription>
        <detaileddescription>
<para>Values greater than this value are considered as infinity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MixedIntegerProgramTraits.h" line="95" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classMixedIntegerProgramVariable" kindref="compound">MixedIntegerProgramVariable</ref></computeroutput> is a concept of a variable in a Mixed Integer Programming (MIP) problem. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Variable" kindref="compound">CGAL::Variable</ref>&lt;FT&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/MixedIntegerProgramTraits.h" line="1" column="1" bodyfile="Concepts/MixedIntegerProgramTraits.h" bodystart="16" bodyend="108"/>
    <listofallmembers>
      <member refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3ea56c1287231cc79cad9fa1e665c088c54" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>BINARY</name></member>
      <member refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3ea3533375dfc370864cbd6f785ca7a32c8" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>CONTINUOUS</name></member>
      <member refid="classMixedIntegerProgramVariable_1a187104f0800bb14f4495ce0a3c204f47" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>FT</name></member>
      <member refid="classMixedIntegerProgramVariable_1a7b32297a543cae76b7738c7787020154" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>get_bounds</name></member>
      <member refid="classMixedIntegerProgramVariable_1a53ffa8bf259ea8811cf9cad3b10bbe5d" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>index</name></member>
      <member refid="classMixedIntegerProgramVariable_1aff6c1f8ed6948eb65bf106c483d45619" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>infinity</name></member>
      <member refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3eaaee8f28a9c80f8ee02ca24b94ede97cb" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>INTEGER</name></member>
      <member refid="classMixedIntegerProgramVariable_1a4d6ff5fe8a2d7cf5996650d8aeaea0e2" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>lower_bound</name></member>
      <member refid="classMixedIntegerProgramVariable_1a8127bdbc447a27b950a00cb60c754ddb" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>MixedIntegerProgramVariable</name></member>
      <member refid="classMixedIntegerProgramVariable_1aef2a35709c277bd64eae828bfb30c311" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>name</name></member>
      <member refid="classMixedIntegerProgramVariable_1abb0053ebdacf6edfcbc79d986c45177e" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_bounds</name></member>
      <member refid="classMixedIntegerProgramVariable_1ac46649ae6bf65170d0d3359c1d4c0f9b" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_index</name></member>
      <member refid="classMixedIntegerProgramVariable_1ac103153f950be4466f9c6419a0c9c576" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_lower_bound</name></member>
      <member refid="classMixedIntegerProgramVariable_1a3029b003dfb0ad633fc45e35c64bde17" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_name</name></member>
      <member refid="classMixedIntegerProgramVariable_1acc86fbbaebea6f67dd827512940116e1" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_solution_value</name></member>
      <member refid="classMixedIntegerProgramVariable_1a28b560e8578ee9a77a33b8f77bf10e8c" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_upper_bound</name></member>
      <member refid="classMixedIntegerProgramVariable_1a32995e7e21b19da0959b30c3b065d648" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>set_variable_type</name></member>
      <member refid="classMixedIntegerProgramVariable_1a008fa3a51a098669a98717c03a895fcf" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>solution_value</name></member>
      <member refid="classMixedIntegerProgramVariable_1acda8d70506d2ff248aaa635a2d462233" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>solver</name></member>
      <member refid="classMixedIntegerProgramVariable_1a53f087f1de8fc96ee541c0a4373ab8b9" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>solver</name></member>
      <member refid="classMixedIntegerProgramVariable_1a2c355eae27fade5d7c8c4d4a3da358b3" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>upper_bound</name></member>
      <member refid="classMixedIntegerProgramVariable_1a55793de034d31f7fee92c355f0498b3e" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>Variable_type</name></member>
      <member refid="classMixedIntegerProgramVariable_1a8e49992a5e78a32bab6390fa137a2063" prot="public" virt="non-virtual"><scope>MixedIntegerProgramVariable</scope><name>variable_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
