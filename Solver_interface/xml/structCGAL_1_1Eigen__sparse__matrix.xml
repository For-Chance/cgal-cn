<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCGAL_1_1Eigen__sparse__matrix" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Eigen_sparse_matrix</compoundname>
    <derivedcompoundref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" prot="public" virt="non-virtual">CGAL::Eigen_sparse_symmetric_matrix&lt; T &gt;</derivedcompoundref>
    <includes local="no">CGAL/Eigen_sparse_matrix.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" prot="public" static="no">
        <type>Eigen::SparseMatrix&lt; T &gt;</type>
        <definition>typedef Eigen::SparseMatrix&lt;T&gt; CGAL::Eigen_sparse_matrix&lt; T &gt;::EigenType</definition>
        <argsstring></argsstring>
        <name>EigenType</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::EigenType</qualifiedname>
        <briefdescription>
<para>The internal matrix type from <ref refid="thirdparty_1thirdpartyEigen" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Eigen</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="44" column="36" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Eigen__sparse__matrix_1aad483d93831f3264f35cbac7060f9ee1" prot="public" static="no">
        <type>T</type>
        <definition>typedef T CGAL::Eigen_sparse_matrix&lt; T &gt;::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::NT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="46" column="39" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structCGAL_1_1Eigen__sparse__matrix_1a2956294a513fc9d9fcf2c22163b9de70" prot="private" static="no">
        <type>Eigen::Triplet&lt; T, int &gt;</type>
        <definition>typedef Eigen::Triplet&lt;T,int&gt; CGAL::Eigen_sparse_matrix&lt; T &gt;::Triplet</definition>
        <argsstring></argsstring>
        <name>Triplet</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Triplet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="290" column="26" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structCGAL_1_1Eigen__sparse__matrix_1afa47c03c93d78a9367a3613a0fede49a" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool CGAL::Eigen_sparse_matrix&lt; T &gt;::m_is_already_built</definition>
        <argsstring></argsstring>
        <name>m_is_already_built</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::m_is_already_built</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="288" column="16" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Eigen__sparse__matrix_1a4676a0fa47a04d24a8e9febd2e2f04de" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; Triplet &gt;</type>
        <definition>std::vector&lt;Triplet&gt; CGAL::Eigen_sparse_matrix&lt; T &gt;::m_triplets</definition>
        <argsstring></argsstring>
        <name>m_triplets</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::m_triplets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="291" column="23" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Eigen__sparse__matrix_1afa588969f95cb03eb558b0d5904ef7e3" prot="private" static="no" mutable="yes">
        <type><ref refid="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" kindref="member">EigenType</ref></type>
        <definition>EigenType CGAL::Eigen_sparse_matrix&lt; T &gt;::m_matrix</definition>
        <argsstring></argsstring>
        <name>m_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::m_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="293" column="21" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structCGAL_1_1Eigen__sparse__matrix_1a04b8ed4a9079b8193d7860be0978f149" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Eigen_sparse_matrix&lt; T &gt;::m_is_symmetric</definition>
        <argsstring></argsstring>
        <name>m_is_symmetric</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::m_is_symmetric</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="296" column="8" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a8982fc4dc669b844b31caf8c730a6133" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::Eigen_sparse_matrix</definition>
        <argsstring>(const EigenType &amp;et)</argsstring>
        <name>Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Eigen_sparse_matrix</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" kindref="member">EigenType</ref> &amp;</type>
          <declname>et</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="49" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a25c5d2bf7a141c990f28a76ef602d2cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::Eigen_sparse_matrix</definition>
        <argsstring>()</argsstring>
        <name>Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Eigen_sparse_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="55" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a15b3221e84d9e274bbe35b351bef12e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::Eigen_sparse_matrix</definition>
        <argsstring>(std::size_t dim, bool is_symmetric=false)</argsstring>
        <name>Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Eigen_sparse_matrix</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>dim</declname>
          <briefdescription><para>Matrix dimension. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>is_symmetric</declname>
          <defval>false</defval>
          <briefdescription><para>Symmetric/hermitian? </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Create a square matrix initialized with zeros. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="58" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="58" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a0c73de7a258776456e21e9143d9edef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::Eigen_sparse_matrix</definition>
        <argsstring>(int dim, bool is_symmetric=false)</argsstring>
        <name>Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Eigen_sparse_matrix</qualifiedname>
        <param>
          <type>int</type>
          <declname>dim</declname>
          <briefdescription><para>Matrix dimension. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>is_symmetric</declname>
          <defval>false</defval>
          <briefdescription><para>Symmetric/hermitian? </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Create a square matrix initialized with zeros. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="71" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="71" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a8aa0bc1ea9c343882d9510846441d079" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::Eigen_sparse_matrix</definition>
        <argsstring>(std::size_t rows, std::size_t columns, bool is_symmetric=false)</argsstring>
        <name>Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Eigen_sparse_matrix</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>rows</declname>
          <briefdescription><para>Number of rows. </para>
</briefdescription>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>columns</declname>
          <briefdescription><para>Number of columns. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>is_symmetric</declname>
          <defval>false</defval>
          <briefdescription><para>Symmetric/hermitian? </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Create a rectangular matrix initialized with zeros. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>rows == columns if <computeroutput>is_symmetric</computeroutput> is true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="86" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="86" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a0a3e74a4cf69af6a09f0eedfba342c8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_sparse_matrix&lt; T &gt;::swap</definition>
        <argsstring>(Eigen_sparse_matrix &amp;other)</argsstring>
        <name>swap</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::swap</qualifiedname>
        <param>
          <type><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">Eigen_sparse_matrix</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="104" column="8" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a93b103ff13bf42662b4596004f5b48d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::~Eigen_sparse_matrix</definition>
        <argsstring>()</argsstring>
        <name>~Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::~Eigen_sparse_matrix</qualifiedname>
        <briefdescription>
<para>Delete this object and the wrapped matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="113" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a6f816a2efe27466009e6c3b6c2324e13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_sparse_matrix&lt; T &gt;::Eigen_sparse_matrix</definition>
        <argsstring>(int rows, int columns, bool is_symmetric=false)</argsstring>
        <name>Eigen_sparse_matrix</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::Eigen_sparse_matrix</qualifiedname>
        <param>
          <type>int</type>
          <declname>rows</declname>
          <briefdescription><para>Number of rows. </para>
</briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>columns</declname>
          <briefdescription><para>Number of columns. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>is_symmetric</declname>
          <defval>false</defval>
          <briefdescription><para>Symmetric/hermitian? </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Create a rectangular matrix initialized with zeros. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>rows == columns if <computeroutput>is_symmetric</computeroutput> is true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="118" column="3" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="118" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a0096cb91fa8267d24817cf4844ee68cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Eigen_sparse_matrix&lt; T &gt;::row_dimension</definition>
        <argsstring>() const</argsstring>
        <name>row_dimension</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::row_dimension</qualifiedname>
        <briefdescription>
<para>Return the matrix number of rows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="137" column="7" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1aa31e888e9994bffdf1c5b02171fd348c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Eigen_sparse_matrix&lt; T &gt;::column_dimension</definition>
        <argsstring>() const</argsstring>
        <name>column_dimension</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::column_dimension</qualifiedname>
        <briefdescription>
<para>Return the matrix number of columns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="139" column="7" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a478709fe6a311a1da98a014c999ac68b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_sparse_matrix&lt; T &gt;::set_coef</definition>
        <argsstring>(std::size_t i_, std::size_t j_, T val, bool new_coef=false)</argsstring>
        <name>set_coef</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::set_coef</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i_</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>new_coef</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Write access to a matrix coefficient: a_ij &lt;- val. </para>
        </briefdescription>
        <detaileddescription>
<para>Users can optimize calls to this function by setting &apos;new_coef&apos; to <computeroutput>true</computeroutput> if the coefficient does not already exist in the matrix.</para>
<para><simplesect kind="warning"><para>For symmetric matrices, <computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">Eigen_sparse_matrix</ref></computeroutput> only stores the lower triangle and <computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix_1a478709fe6a311a1da98a014c999ac68b" kindref="member">set_coef()</ref></computeroutput> does nothing if (i, j) belongs to the upper triangle.</para>
</simplesect>
<simplesect kind="pre"><para>0 &lt;= i &lt; <ref refid="structCGAL_1_1Eigen__sparse__matrix_1a0096cb91fa8267d24817cf4844ee68cd" kindref="member">row_dimension()</ref>. </para>
</simplesect>
<simplesect kind="pre"><para>0 &lt;= j &lt; <ref refid="structCGAL_1_1Eigen__sparse__matrix_1aa31e888e9994bffdf1c5b02171fd348c" kindref="member">column_dimension()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="151" column="8" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="151" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1afecf3de492b7740edab0c78a62075f2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_sparse_matrix&lt; T &gt;::add_coef</definition>
        <argsstring>(std::size_t i_, std::size_t j_, T val)</argsstring>
        <name>add_coef</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::add_coef</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i_</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j_</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Write access to a matrix coefficient: a_ij &lt;- a_ij + val. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>For symmetric matrices, <ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">Eigen_sparse_matrix</ref> only stores the lower triangle <computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix_1afecf3de492b7740edab0c78a62075f2f" kindref="member">add_coef()</ref></computeroutput> does nothing if (i, j) belongs to the upper triangle.</para>
</simplesect>
<simplesect kind="pre"><para>0 &lt;= i &lt; <ref refid="structCGAL_1_1Eigen__sparse__matrix_1a0096cb91fa8267d24817cf4844ee68cd" kindref="member">row_dimension()</ref>. </para>
</simplesect>
<simplesect kind="pre"><para>0 &lt;= j &lt; <ref refid="structCGAL_1_1Eigen__sparse__matrix_1aa31e888e9994bffdf1c5b02171fd348c" kindref="member">column_dimension()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="186" column="8" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="186" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1a19535391153a349efc06a4dbd2b3b5d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Eigen__sparse__matrix_1aad483d93831f3264f35cbac7060f9ee1" kindref="member">NT</ref></type>
        <definition>NT CGAL::Eigen_sparse_matrix&lt; T &gt;::get_coef</definition>
        <argsstring>(std::size_t i_, std::size_t j_) const</argsstring>
        <name>get_coef</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::get_coef</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i_</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j_</declname>
        </param>
        <briefdescription>
<para>Read access to a matrix coefficient. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Complexity:<itemizedlist>
<listitem><para><formula id="34">$O(log(n))$</formula> if the matrix is already built.</para>
</listitem><listitem><para><formula id="35">$O(n)$</formula> if the matrix is not built. <computeroutput>n</computeroutput> being the number of entries in the matrix.</para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="pre"><para>0 &lt;= i &lt; <ref refid="structCGAL_1_1Eigen__sparse__matrix_1a0096cb91fa8267d24817cf4844ee68cd" kindref="member">row_dimension()</ref>. </para>
</simplesect>
<simplesect kind="pre"><para>0 &lt;= j &lt; <ref refid="structCGAL_1_1Eigen__sparse__matrix_1aa31e888e9994bffdf1c5b02171fd348c" kindref="member">column_dimension()</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="211" column="6" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="211" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1ab723e53b22d2a5c075a7b71ebeb48de9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" kindref="member">EigenType</ref> &amp;</type>
        <definition>const EigenType &amp; CGAL::Eigen_sparse_matrix&lt; T &gt;::eigen_object</definition>
        <argsstring>() const</argsstring>
        <name>eigen_object</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::eigen_object</qualifiedname>
        <briefdescription>
<para>Return the internal matrix, with type <computeroutput>EigenType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="246" column="19" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="246" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__sparse__matrix_1ae4246112d6aa88e1b0e587fbf0fde7e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" kindref="member">EigenType</ref> &amp;</type>
        <definition>EigenType &amp; CGAL::Eigen_sparse_matrix&lt; T &gt;::eigen_object</definition>
        <argsstring>()</argsstring>
        <name>eigen_object</name>
        <qualifiedname>CGAL::Eigen_sparse_matrix::eigen_object</qualifiedname>
        <briefdescription>
<para>Return the internal matrix, with type <computeroutput>EigenType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_sparse_matrix.h" line="259" column="13" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="259" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">Eigen_sparse_matrix</ref></computeroutput> is a wrapper around <computeroutput>Eigen</computeroutput> matrix type <ulink url="https://eigen.tuxfamily.org/dox/classEigen_1_1SparseMatrix.html"><computeroutput>Eigen::SparseMatrix</computeroutput></ulink> that represents general matrices, be they symmetric or not. </para>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classSparseLinearAlgebraTraits__d_1_1Matrix" kindref="compound">SparseLinearAlgebraTraits_d::Matrix</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">CGAL::Eigen_vector</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__matrix" kindref="compound">CGAL::Eigen_matrix</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::Eigen_sparse_matrix&lt; T &gt;</label>
        <link refid="structCGAL_1_1Eigen__sparse__matrix"/>
      </node>
      <node id="2">
        <label>CGAL::Eigen_sparse_symmetric_matrix&lt; T &gt;</label>
        <link refid="structCGAL_1_1Eigen__sparse__symmetric__matrix"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="CGAL/Eigen_sparse_matrix.h" line="36" column="1" bodyfile="CGAL/Eigen_sparse_matrix.h" bodystart="37" bodyend="297"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1afecf3de492b7740edab0c78a62075f2f" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>add_coef</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1aa31e888e9994bffdf1c5b02171fd348c" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>column_dimension</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1ab723e53b22d2a5c075a7b71ebeb48de9" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>eigen_object</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1ae4246112d6aa88e1b0e587fbf0fde7e8" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>eigen_object</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a8982fc4dc669b844b31caf8c730a6133" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Eigen_sparse_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a25c5d2bf7a141c990f28a76ef602d2cb" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Eigen_sparse_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a15b3221e84d9e274bbe35b351bef12e4" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Eigen_sparse_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a0c73de7a258776456e21e9143d9edef9" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Eigen_sparse_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a8aa0bc1ea9c343882d9510846441d079" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Eigen_sparse_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a6f816a2efe27466009e6c3b6c2324e13" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Eigen_sparse_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a4b43cacc467d285c11a39f4eef7a55ae" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>EigenType</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a19535391153a349efc06a4dbd2b3b5d4" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>get_coef</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1afa47c03c93d78a9367a3613a0fede49a" prot="private" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>m_is_already_built</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a04b8ed4a9079b8193d7860be0978f149" prot="private" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>m_is_symmetric</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1afa588969f95cb03eb558b0d5904ef7e3" prot="private" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>m_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a4676a0fa47a04d24a8e9febd2e2f04de" prot="private" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>m_triplets</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1aad483d93831f3264f35cbac7060f9ee1" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>NT</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a0096cb91fa8267d24817cf4844ee68cd" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>row_dimension</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a478709fe6a311a1da98a014c999ac68b" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>set_coef</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a0a3e74a4cf69af6a09f0eedfba342c8b" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>swap</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a2956294a513fc9d9fcf2c22163b9de70" prot="private" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>Triplet</name></member>
      <member refid="structCGAL_1_1Eigen__sparse__matrix_1a93b103ff13bf42662b4596004f5b48d8" prot="public" virt="non-virtual"><scope>CGAL::Eigen_sparse_matrix</scope><name>~Eigen_sparse_matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
