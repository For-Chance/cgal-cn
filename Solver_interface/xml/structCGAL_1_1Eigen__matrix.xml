<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCGAL_1_1Eigen__matrix" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Eigen_matrix</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Eigen::Matrix&lt; FT, ::Eigen::Dynamic, ::Eigen::Dynamic &gt;</basecompoundref>
    <includes local="no">CGAL/Eigen_matrix.h</includes>
    <templateparamlist>
      <param>
        <type>class FT</type>
      </param>
      <param>
        <type>int</type>
        <declname>D1</declname>
        <defname>D1</defname>
        <defval>::Eigen::Dynamic</defval>
      </param>
      <param>
        <type>int</type>
        <declname>D2</declname>
        <defname>D2</defname>
        <defval>::Eigen::Dynamic</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structCGAL_1_1Eigen__matrix_1adc5ea09a9482459491933365fc7021cd" prot="public" static="no">
        <type>::Eigen::Matrix&lt; FT, D1, D2 &gt;</type>
        <definition>typedef ::Eigen::Matrix&lt;FT, D1, D2&gt; CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::EigenType</definition>
        <argsstring></argsstring>
        <name>EigenType</name>
        <qualifiedname>CGAL::Eigen_matrix::EigenType</qualifiedname>
        <briefdescription>
<para>The internal matrix type from <ref refid="thirdparty_1thirdpartyEigen" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Eigen</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="43" column="27" bodyfile="CGAL/Eigen_matrix.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a244e8ce36c8a5f1faa855167cde87242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::Eigen_matrix</definition>
        <argsstring>()</argsstring>
        <name>Eigen_matrix</name>
        <qualifiedname>CGAL::Eigen_matrix::Eigen_matrix</qualifiedname>
        <briefdescription>
<para>Constructs a null matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="46" column="3" bodyfile="CGAL/Eigen_matrix.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a6783fdfa1d897687f6d2055d3866eddf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::Eigen_matrix</definition>
        <argsstring>(std::size_t nr, std::size_t nc)</argsstring>
        <name>Eigen_matrix</name>
        <qualifiedname>CGAL::Eigen_matrix::Eigen_matrix</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>nr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nc</declname>
        </param>
        <briefdescription>
<para>Constructs an uninitialized matrix with <computeroutput>nr</computeroutput> rows and <computeroutput>nc</computeroutput> columns. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful for dynamic-size matrices. For fixed-size matrices, it is redundant to pass these parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="51" column="3" bodyfile="CGAL/Eigen_matrix.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a806399961580d5f1960c6dff893d2350" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::Eigen_matrix</definition>
        <argsstring>(const EigenType &amp;b)</argsstring>
        <name>Eigen_matrix</name>
        <qualifiedname>CGAL::Eigen_matrix::Eigen_matrix</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Eigen__matrix_1adc5ea09a9482459491933365fc7021cd" kindref="member">EigenType</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Constructs a matrix from an Eigen matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="54" column="3" bodyfile="CGAL/Eigen_matrix.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1ae30f58283cee99aa5f8991dc462e5c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::number_of_rows</definition>
        <argsstring>() const</argsstring>
        <name>number_of_rows</name>
        <qualifiedname>CGAL::Eigen_matrix::number_of_rows</qualifiedname>
        <briefdescription>
<para>Returns the matrix number of rows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="57" column="15" bodyfile="CGAL/Eigen_matrix.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a8606d952c1151efec62f098787e7016b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::number_of_columns</definition>
        <argsstring>() const</argsstring>
        <name>number_of_columns</name>
        <qualifiedname>CGAL::Eigen_matrix::number_of_columns</qualifiedname>
        <briefdescription>
<para>Returns the matrix number of columns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="59" column="15" bodyfile="CGAL/Eigen_matrix.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1abc82d6cb3fd1afa7e55950c9b84aa712" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::operator()</definition>
        <argsstring>(std::size_t i, std::size_t j) const</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Eigen_matrix::operator()</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Returns the value of the matrix at position (i,j). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="62" column="6" bodyfile="CGAL/Eigen_matrix.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a3a230bbf53369326f2da09f442575f66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::set</definition>
        <argsstring>(std::size_t i, std::size_t j, FT value)</argsstring>
        <name>set</name>
        <qualifiedname>CGAL::Eigen_matrix::set</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes access to a matrix coefficient: <computeroutput>a_ij</computeroutput> &lt;- <computeroutput>val</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="65" column="8" bodyfile="CGAL/Eigen_matrix.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Eigen__matrix_1a2300644c5d0c40890a1348dbfa8b2e3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structCGAL_1_1Eigen__matrix_1adc5ea09a9482459491933365fc7021cd" kindref="member">EigenType</ref> &amp;</type>
        <definition>const EigenType &amp; CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;::eigen_object</definition>
        <argsstring>() const</argsstring>
        <name>eigen_object</name>
        <qualifiedname>CGAL::Eigen_matrix::eigen_object</qualifiedname>
        <briefdescription>
<para>Returns the internal matrix, with type <computeroutput>EigenType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_matrix.h" line="68" column="19" bodyfile="CGAL/Eigen_matrix.h" bodystart="68" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="structCGAL_1_1Eigen__matrix" kindref="compound">Eigen_matrix</ref></computeroutput> is a wrapper around <computeroutput>Eigen</computeroutput> matrix type <ulink url="https://eigen.tuxfamily.org/dox/classEigen_1_1Matrix.html"><computeroutput>Eigen::Matrix</computeroutput></ulink>. </para>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classSvdTraits_1_1Matrix" kindref="compound">SvdTraits::Matrix</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>D1</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows, or Dynamic </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>D2</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns, or Dynamic</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">CGAL::Eigen_vector</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">CGAL::Eigen_sparse_matrix</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;</label>
        <link refid="structCGAL_1_1Eigen__matrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen::Matrix&lt; FT, ::Eigen::Dynamic , ::Eigen::Dynamic  &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CGAL::Eigen_matrix&lt; FT, D1, D2 &gt;</label>
        <link refid="structCGAL_1_1Eigen__matrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen::Matrix&lt; FT, ::Eigen::Dynamic , ::Eigen::Dynamic  &gt;</label>
      </node>
    </collaborationgraph>
    <location file="CGAL/Eigen_matrix.h" line="39" column="1" bodyfile="CGAL/Eigen_matrix.h" bodystart="41" bodyend="87"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Eigen__matrix_1a244e8ce36c8a5f1faa855167cde87242" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>Eigen_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a6783fdfa1d897687f6d2055d3866eddf" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>Eigen_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a806399961580d5f1960c6dff893d2350" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>Eigen_matrix</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a2300644c5d0c40890a1348dbfa8b2e3b" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>eigen_object</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1adc5ea09a9482459491933365fc7021cd" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>EigenType</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a8606d952c1151efec62f098787e7016b" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>number_of_columns</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1ae30f58283cee99aa5f8991dc462e5c32" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>number_of_rows</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1abc82d6cb3fd1afa7e55950c9b84aa712" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>operator()</name></member>
      <member refid="structCGAL_1_1Eigen__matrix_1a3a230bbf53369326f2da09f442575f66" prot="public" virt="non-virtual"><scope>CGAL::Eigen_matrix</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
