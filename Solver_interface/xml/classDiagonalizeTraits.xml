<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classDiagonalizeTraits" kind="class" language="C++" prot="public">
    <compoundname>DiagonalizeTraits</compoundname>
    <includes local="no">Concepts/DiagonalizeTraits.h</includes>
    <templateparamlist>
      <param>
        <type>typename FT</type>
      </param>
      <param>
        <type>unsigned int</type>
        <declname>dim</declname>
        <defname>dim</defname>
        <defval>3</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classDiagonalizeTraits_1a2e3d348b4db6302e6ea5ea0f1b88adb2" prot="public" static="no">
        <type>std::array&lt; FT, dim &gt;</type>
        <definition>typedef std::array&lt;FT, dim&gt; DiagonalizeTraits&lt; FT, dim &gt;::Vector</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <qualifiedname>DiagonalizeTraits::Vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="30" column="38" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDiagonalizeTraits_1ad7812309316b1f105e0f50ade26a7095" prot="public" static="no">
        <type>std::array&lt; FT, dim *dim &gt;</type>
        <definition>typedef std::array&lt;FT, dim*dim&gt; DiagonalizeTraits&lt; FT, dim &gt;::Matrix</definition>
        <argsstring></argsstring>
        <name>Matrix</name>
        <qualifiedname>DiagonalizeTraits::Matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="31" column="34" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDiagonalizeTraits_1a14e247381f73e06fd912f2b3bca31701" prot="public" static="no">
        <type>std::array&lt; FT,(dim *(dim+1)/2)&gt;</type>
        <definition>typedef std::array&lt;FT, (dim * (dim+1) / 2)&gt; DiagonalizeTraits&lt; FT, dim &gt;::Covariance_matrix</definition>
        <argsstring></argsstring>
        <name>Covariance_matrix</name>
        <qualifiedname>DiagonalizeTraits::Covariance_matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="32" column="22" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classDiagonalizeTraits_1a653a00366d1cdaa798a4fae6f10d7df6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool DiagonalizeTraits&lt; FT, dim &gt;::diagonalize_selfadjoint_covariance_matrix</definition>
        <argsstring>(const Covariance_matrix &amp;cov, Vector &amp;eigenvalues)</argsstring>
        <name>diagonalize_selfadjoint_covariance_matrix</name>
        <qualifiedname>DiagonalizeTraits::diagonalize_selfadjoint_covariance_matrix</qualifiedname>
        <param>
          <type>const <ref refid="classDiagonalizeTraits_1a14e247381f73e06fd912f2b3bca31701" kindref="member">Covariance_matrix</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a2e3d348b4db6302e6ea5ea0f1b88adb2" kindref="member">Vector</ref> &amp;</type>
          <declname>eigenvalues</declname>
        </param>
        <briefdescription>
<para>Fill <computeroutput>eigenvalues</computeroutput> with the eigenvalues of the covariance matrix represented by <computeroutput>cov</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Eigenvalues are sorted by increasing order. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the operation was successful and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="37" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classDiagonalizeTraits_1a8a6c3e576830e6ea22583ebbf45a4bdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool DiagonalizeTraits&lt; FT, dim &gt;::diagonalize_selfadjoint_covariance_matrix</definition>
        <argsstring>(const Covariance_matrix &amp;cov, Vector &amp;eigenvalues, Matrix &amp;eigenvectors)</argsstring>
        <name>diagonalize_selfadjoint_covariance_matrix</name>
        <qualifiedname>DiagonalizeTraits::diagonalize_selfadjoint_covariance_matrix</qualifiedname>
        <param>
          <type>const <ref refid="classDiagonalizeTraits_1a14e247381f73e06fd912f2b3bca31701" kindref="member">Covariance_matrix</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a2e3d348b4db6302e6ea5ea0f1b88adb2" kindref="member">Vector</ref> &amp;</type>
          <declname>eigenvalues</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1ad7812309316b1f105e0f50ade26a7095" kindref="member">Matrix</ref> &amp;</type>
          <declname>eigenvectors</declname>
        </param>
        <briefdescription>
<para>Fill <computeroutput>eigenvalues</computeroutput> with the eigenvalues and <computeroutput>eigenvectors</computeroutput> with the eigenvectors of the covariance matrix represented by <computeroutput>cov</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Eigenvalues are sorted by increasing order. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the operation was successful and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="44" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classDiagonalizeTraits_1a8955888dea6c20dbd98aaacea525e94e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool DiagonalizeTraits&lt; FT, dim &gt;::extract_largest_eigenvector_of_covariance_matrix</definition>
        <argsstring>(const Covariance_matrix &amp;cov, Vector &amp;normal)</argsstring>
        <name>extract_largest_eigenvector_of_covariance_matrix</name>
        <qualifiedname>DiagonalizeTraits::extract_largest_eigenvector_of_covariance_matrix</qualifiedname>
        <param>
          <type>const <ref refid="classDiagonalizeTraits_1a14e247381f73e06fd912f2b3bca31701" kindref="member">Covariance_matrix</ref> &amp;</type>
          <declname>cov</declname>
        </param>
        <param>
          <type><ref refid="classDiagonalizeTraits_1a2e3d348b4db6302e6ea5ea0f1b88adb2" kindref="member">Vector</ref> &amp;</type>
          <declname>normal</declname>
        </param>
        <briefdescription>
<para>Extract the eigenvector associated to the largest eigenvalue of the covariance matrix represented by <computeroutput>cov</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the operation was successful and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiagonalizeTraits.h" line="51" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concept providing functions to extract eigenvectors and eigenvalues from covariance matrices represented by an array <computeroutput>a</computeroutput>, using symmetric diagonalization. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>For example, a matrix of dimension 3 is defined as follows: <center>  <formula id="0">$ \begin{bmatrix}
  a[0] &amp; a[1] &amp; a[2] \\
  a[1] &amp; a[3] &amp; a[4] \\
  a[2] &amp; a[4] &amp; a[5] \\
 \end{bmatrix}$</formula> </center></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FT</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of the matrices and vectors</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound">CGAL::Eigen_diagonalize_traits</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/DiagonalizeTraits.h" line="27" column="1" bodyfile="Concepts/DiagonalizeTraits.h" bodystart="28" bodyend="53"/>
    <listofallmembers>
      <member refid="classDiagonalizeTraits_1a14e247381f73e06fd912f2b3bca31701" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>Covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a653a00366d1cdaa798a4fae6f10d7df6" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>diagonalize_selfadjoint_covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a8a6c3e576830e6ea22583ebbf45a4bdc" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>diagonalize_selfadjoint_covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1a8955888dea6c20dbd98aaacea525e94e" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>extract_largest_eigenvector_of_covariance_matrix</name></member>
      <member refid="classDiagonalizeTraits_1ad7812309316b1f105e0f50ade26a7095" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>Matrix</name></member>
      <member refid="classDiagonalizeTraits_1a2e3d348b4db6302e6ea5ea0f1b88adb2" prot="public" virt="non-virtual"><scope>DiagonalizeTraits</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
