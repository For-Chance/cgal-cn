<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classQuadraticProgramTraits" kind="class" language="C++" prot="public">
    <compoundname>QuadraticProgramTraits</compoundname>
    <includes local="no">Concepts/QuadraticProgramTraits.h</includes>
      <sectiondef kind="user-defined">
      <header>Memory</header>
      <memberdef kind="function" id="classQuadraticProgramTraits_1a02483f983be05626c6cb82940ac595e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::resize</definition>
        <argsstring>(const std::size_t n, const std::size_t m)</argsstring>
        <name>resize</name>
        <qualifiedname>QuadraticProgramTraits::resize</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Allocates memory for <computeroutput>n</computeroutput> variables and <computeroutput>m</computeroutput> constraints in <computeroutput>qp</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="41" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="41" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="classQuadraticProgramTraits_1a87a970c8cc19457c3ba4ebd71baf217c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::set_P</definition>
        <argsstring>(const std::size_t i, const std::size_t j, const FT value)</argsstring>
        <name>set_P</name>
        <qualifiedname>QuadraticProgramTraits::set_P</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entries <computeroutput>Pij</computeroutput> and <computeroutput>Pji</computeroutput> of <computeroutput>qp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="51" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classQuadraticProgramTraits_1addb6b628fd4478eeb5c1738069f72034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::set_q</definition>
        <argsstring>(const std::size_t i, const FT value)</argsstring>
        <name>set_q</name>
        <qualifiedname>QuadraticProgramTraits::set_q</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>qi</computeroutput> of <computeroutput>qp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="56" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classQuadraticProgramTraits_1a2b6076c263f9d9e3a416bc3d380bb193" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::set_r</definition>
        <argsstring>(const FT value)</argsstring>
        <name>set_r</name>
        <qualifiedname>QuadraticProgramTraits::set_r</qualifiedname>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>r</computeroutput> of <computeroutput>qp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="61" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classQuadraticProgramTraits_1a6d0485c8937a2056b6919bfc9b7891c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::set_A</definition>
        <argsstring>(const std::size_t i, const std::size_t j, const FT value)</argsstring>
        <name>set_A</name>
        <qualifiedname>QuadraticProgramTraits::set_A</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>Aij</computeroutput> in the row <computeroutput>i</computeroutput> and column <computeroutput>j</computeroutput> of the constraint matrix <computeroutput>A</computeroutput> of <computeroutput>qp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="67" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classQuadraticProgramTraits_1ac8c68ffe996b08224e1e1ac5c8b70155" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::set_l</definition>
        <argsstring>(const std::size_t i, const FT value)</argsstring>
        <name>set_l</name>
        <qualifiedname>QuadraticProgramTraits::set_l</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>li</computeroutput> of <computeroutput>qp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="72" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classQuadraticProgramTraits_1a7d8bdf1c763c1fb0e975f3d353373c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuadraticProgramTraits::set_u</definition>
        <argsstring>(const std::size_t i, const FT value)</argsstring>
        <name>set_u</name>
        <qualifiedname>QuadraticProgramTraits::set_u</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const FT</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the entry <computeroutput>ui</computeroutput> of <computeroutput>qp</computeroutput> to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="77" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="77" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Solution</header>
      <memberdef kind="function" id="classQuadraticProgramTraits_1a6ead6ab1103cf9bb3a1e9044ced2ed6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIterator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool QuadraticProgramTraits::solve</definition>
        <argsstring>(OutIterator solution)</argsstring>
        <name>solve</name>
        <qualifiedname>QuadraticProgramTraits::solve</qualifiedname>
        <param>
          <type>OutIterator</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
<para>solves the quadratic program. </para>
        </briefdescription>
        <detaileddescription>
<para>Number of values in <computeroutput>solution</computeroutput> equals to the number <computeroutput>n</computeroutput> of values in the vector <computeroutput>x</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts values of type <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator with the solution</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a status of the computation <computeroutput>success == true</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/QuadraticProgramTraits.h" line="98" column="8" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A concept that describes the set of methods used to define and solve a quadratic programming (<computeroutput>qp</computeroutput>) problem of the general form: </para>
    </briefdescription>
    <detaileddescription>
<para><center>  <formula id="18">\begin{eqnarray*}
&amp; \mbox{minimize} &amp; \frac{1}{2}\mathbf{x}^{T}P\mathbf{x} + \mathbf{q}^{T}\mathbf{x} + r \\
&amp; \mbox{subject to} &amp; \mathbf{l} \leq A\mathbf{x} \leq \mathbf{u}
\end{eqnarray*}</formula> </center> in <formula id="2">$ n $</formula> real variables <formula id="3">$ \mathbf{x} = (x_0, \ldots, x_{n-1}) $</formula> and <formula id="4">$ m $</formula> constraints.</para>
<para>Here, <itemizedlist>
<listitem>
<para><formula id="19">$ P $</formula> is a symmetric positive-semidefinite <formula id="20">$ n \times n$</formula> matrix (the quadratic objective function), </para>
</listitem>
<listitem>
<para><formula id="5">$ \mathbf{q} $</formula> is an <formula id="2">$ n $</formula>-dimensional vector (the linear objective function), </para>
</listitem>
<listitem>
<para><formula id="6">$ r $</formula> is a constant, </para>
</listitem>
<listitem>
<para><formula id="7">$ A $</formula> is an <formula id="8">$ m\times n$</formula> matrix (the constraint matrix), </para>
</listitem>
<listitem>
<para><formula id="9">$ \mathbf{l} $</formula> is an <formula id="4">$ m $</formula>-dimensional vector of lower constraint bounds, where <formula id="10">$ l_i \in \mathbb{R} \cup \{-\infty\} $</formula> for all <formula id="11">$ i $</formula>, </para>
</listitem>
<listitem>
<para><formula id="12">$ \mathbf{u} $</formula> is an <formula id="4">$ m $</formula>-dimensional vector of upper constraint bounds, where <formula id="13">$ u_i \in \mathbb{R} \cup \{+\infty\} $</formula> for all <formula id="11">$ i $</formula>. </para>
</listitem>
</itemizedlist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1OSQP__quadratic__program__traits" kindref="compound">CGAL::OSQP_quadratic_program_traits</ref>&lt;T&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/QuadraticProgramTraits.h" line="31" column="1" bodyfile="Concepts/QuadraticProgramTraits.h" bodystart="31" bodyend="101"/>
    <listofallmembers>
      <member refid="classQuadraticProgramTraits_1a02483f983be05626c6cb82940ac595e5" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>resize</name></member>
      <member refid="classQuadraticProgramTraits_1a6d0485c8937a2056b6919bfc9b7891c6" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>set_A</name></member>
      <member refid="classQuadraticProgramTraits_1ac8c68ffe996b08224e1e1ac5c8b70155" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>set_l</name></member>
      <member refid="classQuadraticProgramTraits_1a87a970c8cc19457c3ba4ebd71baf217c" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>set_P</name></member>
      <member refid="classQuadraticProgramTraits_1addb6b628fd4478eeb5c1738069f72034" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>set_q</name></member>
      <member refid="classQuadraticProgramTraits_1a2b6076c263f9d9e3a416bc3d380bb193" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>set_r</name></member>
      <member refid="classQuadraticProgramTraits_1a7d8bdf1c763c1fb0e975f3d353373c12" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>set_u</name></member>
      <member refid="classQuadraticProgramTraits_1a6ead6ab1103cf9bb3a1e9044ced2ed6f" prot="public" virt="non-virtual"><scope>QuadraticProgramTraits</scope><name>solve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
