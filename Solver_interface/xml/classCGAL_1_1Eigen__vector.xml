<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Eigen__vector" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Eigen_vector</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Eigen::Matrix&lt; T, ::Eigen::Dynamic, 1 &gt;</basecompoundref>
    <includes local="no">CGAL/Eigen_vector.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>int</type>
        <declname>D</declname>
        <defname>D</defname>
        <defval>::Eigen::Dynamic</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__vector_1ae8a6c0d21dfcd1ce954d81bd91af23e4" prot="public" static="no">
        <type>T</type>
        <definition>typedef T CGAL::Eigen_vector&lt; T, D &gt;::NT</definition>
        <argsstring></argsstring>
        <name>NT</name>
        <qualifiedname>CGAL::Eigen_vector::NT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="43" column="50" bodyfile="CGAL/Eigen_vector.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Eigen__vector_1a6d2c26800b032fcc74cd8cf2db6e314a" prot="public" static="no">
        <type>::Eigen::Matrix&lt; T, D, 1 &gt;</type>
        <definition>typedef ::Eigen::Matrix&lt;T, D, 1&gt; CGAL::Eigen_vector&lt; T, D &gt;::EigenType</definition>
        <argsstring></argsstring>
        <name>EigenType</name>
        <qualifiedname>CGAL::Eigen_vector::EigenType</qualifiedname>
        <briefdescription>
<para>The internal vector type from <ref refid="thirdparty_1thirdpartyEigen" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Eigen</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="46" column="41" bodyfile="CGAL/Eigen_vector.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a0dc47cc351ec7209d0203a6f95f6dd0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref> &amp;</type>
        <definition>Eigen_vector &amp; CGAL::Eigen_vector&lt; T, D &gt;::operator=</definition>
        <argsstring>(const Eigen_vector &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>CGAL::Eigen_vector::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="51" column="16" bodyfile="CGAL/Eigen_vector.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a355302ad5e5725f980f3d66fddeac9e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref> &amp;</type>
        <definition>Eigen_vector &amp; CGAL::Eigen_vector&lt; T, D &gt;::operator=</definition>
        <argsstring>(const EigenType &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>CGAL::Eigen_vector::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__vector_1a6d2c26800b032fcc74cd8cf2db6e314a" kindref="member">EigenType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="56" column="16" bodyfile="CGAL/Eigen_vector.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1aaac72d4074b2022ce6e609ed7ebf6b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T, D &gt;::Eigen_vector</definition>
        <argsstring>()</argsstring>
        <name>Eigen_vector</name>
        <qualifiedname>CGAL::Eigen_vector::Eigen_vector</qualifiedname>
        <briefdescription>
<para>Constructs a null vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="62" column="3" bodyfile="CGAL/Eigen_vector.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a54af501a20426fcf1699f51f3df02499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T, D &gt;::Eigen_vector</definition>
        <argsstring>(std::size_t dimension)</argsstring>
        <name>Eigen_vector</name>
        <qualifiedname>CGAL::Eigen_vector::Eigen_vector</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
<para>Create a vector initialized with zeros. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="65" column="3" bodyfile="CGAL/Eigen_vector.h" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1acc6c739c79394c7aa67ee764f15c07a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T, D &gt;::Eigen_vector</definition>
        <argsstring>(const Eigen_vector &amp;toCopy)</argsstring>
        <name>Eigen_vector</name>
        <qualifiedname>CGAL::Eigen_vector::Eigen_vector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref> &amp;</type>
          <declname>toCopy</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="72" column="3" bodyfile="CGAL/Eigen_vector.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a4a64bb8b3fe812ed088a94a5c850c14a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Eigen_vector&lt; T, D &gt;::~Eigen_vector</definition>
        <argsstring>()</argsstring>
        <name>~Eigen_vector</name>
        <qualifiedname>CGAL::Eigen_vector::~Eigen_vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="74" column="3" bodyfile="CGAL/Eigen_vector.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1ac6b7343260636edeba168355a69aaf5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Eigen_vector&lt; T, D &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <qualifiedname>CGAL::Eigen_vector::dimension</qualifiedname>
        <briefdescription>
<para>Return the vector&apos;s number of coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="77" column="7" bodyfile="CGAL/Eigen_vector.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a486a038ccf3a9a8a69ceda3934a53b90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Eigen__vector_1a6d2c26800b032fcc74cd8cf2db6e314a" kindref="member">EigenType</ref> &amp;</type>
        <definition>const EigenType &amp; CGAL::Eigen_vector&lt; T, D &gt;::eigen_object</definition>
        <argsstring>() const</argsstring>
        <name>eigen_object</name>
        <qualifiedname>CGAL::Eigen_vector::eigen_object</qualifiedname>
        <briefdescription>
<para>Return the internal vector wrapped by this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="80" column="19" bodyfile="CGAL/Eigen_vector.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a98654c79fef50cfc72a33d1b66d15d31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector_1a6d2c26800b032fcc74cd8cf2db6e314a" kindref="member">EigenType</ref> &amp;</type>
        <definition>EigenType &amp; CGAL::Eigen_vector&lt; T, D &gt;::eigen_object</definition>
        <argsstring>()</argsstring>
        <name>eigen_object</name>
        <qualifiedname>CGAL::Eigen_vector::eigen_object</qualifiedname>
        <briefdescription>
<para>Return the internal vector wrapped by this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="83" column="13" bodyfile="CGAL/Eigen_vector.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1a16652cb42a7e011f6f842c7b28cfcc88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Eigen_vector&lt; T, D &gt;::set</definition>
        <argsstring>(std::size_t i, NT value)</argsstring>
        <name>set</name>
        <qualifiedname>CGAL::Eigen_vector::set</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Eigen__vector_1ae8a6c0d21dfcd1ce954d81bd91af23e4" kindref="member">NT</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write access to a vector coefficient: <computeroutput>a_i</computeroutput> &lt;- <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="86" column="8" bodyfile="CGAL/Eigen_vector.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Eigen__vector_1abc60f36552949aa707af02a8efba3bd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Eigen__vector_1ae8a6c0d21dfcd1ce954d81bd91af23e4" kindref="member">NT</ref> *</type>
        <definition>NT * CGAL::Eigen_vector&lt; T, D &gt;::vector</definition>
        <argsstring>()</argsstring>
        <name>vector</name>
        <qualifiedname>CGAL::Eigen_vector::vector</qualifiedname>
        <briefdescription>
<para>Return a pointer to the data array of this vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Eigen_vector.h" line="92" column="6" bodyfile="CGAL/Eigen_vector.h" bodystart="92" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Eigen__vector" kindref="compound">Eigen_vector</ref></computeroutput> is a wrapper around <computeroutput>Eigen</computeroutput> <ulink url="https://eigen.tuxfamily.org/dox/classEigen_1_1Matrix.html">vector type</ulink>, which is a simple array of numbers. </para>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classSvdTraits_1_1Vector" kindref="compound">SvdTraits::Vector</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classSparseLinearAlgebraTraits__d_1_1Vector" kindref="compound">SparseLinearAlgebraTraits_d::Vector</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Number type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Eigen__solver__traits" kindref="compound">CGAL::Eigen_solver_traits</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__matrix" kindref="compound">CGAL::Eigen_sparse_matrix</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Eigen__sparse__symmetric__matrix" kindref="compound">CGAL::Eigen_sparse_symmetric_matrix</ref>&lt;T&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::Eigen_vector&lt; T, D &gt;</label>
        <link refid="classCGAL_1_1Eigen__vector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen::Matrix&lt; T, ::Eigen::Dynamic, 1 &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CGAL::Eigen_vector&lt; T, D &gt;</label>
        <link refid="classCGAL_1_1Eigen__vector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Eigen::Matrix&lt; T, ::Eigen::Dynamic, 1 &gt;</label>
      </node>
    </collaborationgraph>
    <location file="CGAL/Eigen_vector.h" line="36" column="1" bodyfile="CGAL/Eigen_vector.h" bodystart="38" bodyend="93"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Eigen__vector_1ac6b7343260636edeba168355a69aaf5a" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a486a038ccf3a9a8a69ceda3934a53b90" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>eigen_object</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a98654c79fef50cfc72a33d1b66d15d31" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>eigen_object</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1aaac72d4074b2022ce6e609ed7ebf6b25" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>Eigen_vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a54af501a20426fcf1699f51f3df02499" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>Eigen_vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1acc6c739c79394c7aa67ee764f15c07a9" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>Eigen_vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a6d2c26800b032fcc74cd8cf2db6e314a" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>EigenType</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1ae8a6c0d21dfcd1ce954d81bd91af23e4" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>NT</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a0dc47cc351ec7209d0203a6f95f6dd0d" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a355302ad5e5725f980f3d66fddeac9e7" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a16652cb42a7e011f6f842c7b28cfcc88" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>set</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1abc60f36552949aa707af02a8efba3bd8" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>vector</name></member>
      <member refid="classCGAL_1_1Eigen__vector_1a4a64bb8b3fe812ed088a94a5c850c14a" prot="public" virt="non-virtual"><scope>CGAL::Eigen_vector</scope><name>~Eigen_vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
