<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Circular__arc__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Circular_arc_2</compoundname>
    <includes local="no">CGAL/Circular_arc_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a7dcd7847f28f99f6ac79dfe43b0c3a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_2&lt; CircularKernel &gt;::Circular_arc_2</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c)</argsstring>
        <name>Circular_arc_2</name>
        <qualifiedname>CGAL::Circular_arc_2::Circular_arc_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Circle_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructs an arc from a full circle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1ac46c64edf1769b9bb2ddfd89f21e3894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_2&lt; CircularKernel &gt;::Circular_arc_2</definition>
        <argsstring>(const Circle_2&lt; CircularKernel &gt; &amp;c, const Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>Circular_arc_2</name>
        <qualifiedname>CGAL::Circular_arc_2::Circular_arc_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Circle_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Constructs the circular arc supported by <computeroutput>c</computeroutput>, whose source is <computeroutput>p</computeroutput> and whose target is <computeroutput>q</computeroutput> when traversing the circle in counterclockwise direction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> lie on <computeroutput>c</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1ac59c6178ddc6c69bb917a3eb1a9887f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Circular_arc_2&lt; CircularKernel &gt;::Circular_arc_2</definition>
        <argsstring>(const Point_2&lt; CircularKernel &gt; &amp;p, const Point_2&lt; CircularKernel &gt; &amp;q, const Point_2&lt; CircularKernel &gt; &amp;r)</argsstring>
        <name>Circular_arc_2</name>
        <qualifiedname>CGAL::Circular_arc_2::Circular_arc_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Constructs an arc that is supported by the circle of type <computeroutput><ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Circle_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound">CircularKernel</ref>&gt;</computeroutput> passing through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The source and target are respectively <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>, when traversing the supporting circle in the counterclockwise direction. Note that, depending on the orientation of the point triple <computeroutput>(p,q,r)</computeroutput>, <computeroutput>q</computeroutput> may not lie on the arc. <simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a1a0ffad935f3cf8696cbeb3ffd460340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Circle_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circle_2&lt; CircularKernel &gt; CGAL::Circular_arc_2&lt; CircularKernel &gt;::supporting_circle</definition>
        <argsstring>()</argsstring>
        <name>supporting_circle</name>
        <qualifiedname>CGAL::Circular_arc_2::supporting_circle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a9f6a81696d01b9bff0cdcd96d40442d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; const &amp;</type>
        <definition>Point_2&lt; CircularKernel &gt; const  &amp; CGAL::Circular_arc_2&lt; CircularKernel &gt;::center</definition>
        <argsstring>() const</argsstring>
        <name>center</name>
        <qualifiedname>CGAL::Circular_arc_2::center</qualifiedname>
        <briefdescription>
<para>returns the center of the supporting circle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="63" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1ab11cdcdf3922afbdb08e8194887ea9e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCircularKernel_1a20afb10f6e91c1c273d29cb4c60ca8a0" kindref="member">CircularKernel::FT</ref> const &amp;</type>
        <definition>CircularKernel::FT const  &amp; CGAL::Circular_arc_2&lt; CircularKernel &gt;::squared_radius</definition>
        <argsstring>() const</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::Circular_arc_2::squared_radius</qualifiedname>
        <briefdescription>
<para>returns the squared radius of the supporting circle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="69" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>A circular arc is not oriented.</para>
<para>Still, its source and target endpoints can be defined, supposing that its supporting circle in traversed the counterclockwise direction from <computeroutput>source</computeroutput> to <computeroutput>target</computeroutput>. </para>
</description>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a03429409ceea907ba0feb1ece2c9061f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circular_arc_point_2&lt; CircularKernel &gt; CGAL::Circular_arc_2&lt; CircularKernel &gt;::source</definition>
        <argsstring>()</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::Circular_arc_2::source</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="80" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a4d3086a96d208709de37bb4f416f5e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circular_arc_point_2&lt; CircularKernel &gt; CGAL::Circular_arc_2&lt; CircularKernel &gt;::target</definition>
        <argsstring>()</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::Circular_arc_2::target</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="85" column="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <description><para>When the methods <computeroutput>source</computeroutput> and <computeroutput>target</computeroutput> return the same point, then the arc is in fact a full circle.</para>
<para>When an arc is x-monotone, its left and right points can be accessed directly: </para>
</description>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a49996f958302a23fd800e02957ed63ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circular_arc_point_2&lt; CircularKernel &gt; CGAL::Circular_arc_2&lt; CircularKernel &gt;::left</definition>
        <argsstring>()</argsstring>
        <name>left</name>
        <qualifiedname>CGAL::Circular_arc_2::left</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>ca</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Circular__arc__2_1a1825beec042ff37806fdc481bd85b075" kindref="member">is_x_monotone()</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="101" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1af19cf94fd3297e3ad7597bdf43f2da3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt;</type>
        <definition>Circular_arc_point_2&lt; CircularKernel &gt; CGAL::Circular_arc_2&lt; CircularKernel &gt;::right</definition>
        <argsstring>()</argsstring>
        <name>right</name>
        <qualifiedname>CGAL::Circular_arc_2::right</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>ca</computeroutput>.<computeroutput><ref refid="classCGAL_1_1Circular__arc__2_1a1825beec042ff37806fdc481bd85b075" kindref="member">is_x_monotone()</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="106" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a0ec067ee3f9979010637e46709318a6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref></type>
        <definition>Bbox_2 CGAL::Circular_arc_2&lt; CircularKernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>CGAL::Circular_arc_2::bbox</qualifiedname>
        <briefdescription>
<para>Returns a bounding box containing the arc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="111" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Query Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a1825beec042ff37806fdc481bd85b075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Circular_arc_2&lt; CircularKernel &gt;::is_x_monotone</definition>
        <argsstring>()</argsstring>
        <name>is_x_monotone</name>
        <qualifiedname>CGAL::Circular_arc_2::is_x_monotone</qualifiedname>
        <briefdescription>
<para>Tests whether the arc is x-monotone. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="121" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a2263fc65ccb88da1a6dc2149f40294b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Circular_arc_2&lt; CircularKernel &gt;::is_y_monotone</definition>
        <argsstring>()</argsstring>
        <name>is_y_monotone</name>
        <qualifiedname>CGAL::Circular_arc_2::is_y_monotone</qualifiedname>
        <briefdescription>
<para>Tests whether the arc is y-monotone. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="126" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1ab0ff23090fe5a2fd2f1562601205dda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Circular_arc_2&lt; CircularKernel &gt; &amp;ca1, const Circular_arc_2&lt; CircularKernel &gt; &amp;ca2)</argsstring>
        <name>operator==</name>
        <qualifiedname>CGAL::Circular_arc_2::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__2" kindref="compound">Circular_arc_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__2" kindref="compound">Circular_arc_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca2</declname>
        </param>
        <briefdescription>
<para>Test for equality. </para>
        </briefdescription>
        <detaileddescription>
<para>Two arcs are equal, iff their non-oriented supporting circles are equal (i.e. they have same center and same squared radius) and their endpoints are equal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="138" column="6" declfile="CGAL/Circular_arc_2.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a44a60317b121eddf298402dae3d4d731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Circular_arc_2&lt; CircularKernel &gt; &amp;ca1, const Circular_arc_2&lt; CircularKernel &gt; &amp;ca2)</argsstring>
        <name>operator!=</name>
        <qualifiedname>CGAL::Circular_arc_2::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__2" kindref="compound">Circular_arc_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__2" kindref="compound">Circular_arc_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound">CircularKernel</ref> &gt; &amp;</type>
          <declname>ca2</declname>
        </param>
        <briefdescription>
<para>Test for non-equality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="144" column="6" declfile="CGAL/Circular_arc_2.h" declline="144" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a6020ae8cd8a1576f3e82e846351637e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Circular_arc_2 &amp;ca)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Circular_arc_2::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Circular__arc__2" kindref="compound">Circular_arc_2</ref> &amp;</type>
          <declname>ca</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="150" column="9" declfile="CGAL/Circular_arc_2.h" declline="150" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Circular__arc__2_1a4be1ac55ff9a744241587849495cc795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Circular_arc_2 &amp;ca)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Circular_arc_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__2" kindref="compound">Circular_arc_2</ref> &amp;</type>
          <declname>ca</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Circular_arc_2.h" line="157" column="1" declfile="CGAL/Circular_arc_2.h" declline="157" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classCircularKernel_1_1CircularArc__2" kindref="compound">CircularKernel::CircularArc_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound">CGAL::Circular_arc_point_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound">CircularKernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Line__arc__2" kindref="compound">CGAL::Line_arc_2</ref>&lt;<ref refid="classCircularKernel" kindref="compound">CircularKernel</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="CGAL/Circular_arc_2.h" line="14" column="1" bodyfile="CGAL/Circular_arc_2.h" bodystart="14" bodyend="129"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Circular__arc__2_1a0ec067ee3f9979010637e46709318a6a" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a9f6a81696d01b9bff0cdcd96d40442d6" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>center</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a7dcd7847f28f99f6ac79dfe43b0c3a97" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>Circular_arc_2</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1ac46c64edf1769b9bb2ddfd89f21e3894" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>Circular_arc_2</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1ac59c6178ddc6c69bb917a3eb1a9887f7" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>Circular_arc_2</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a1825beec042ff37806fdc481bd85b075" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>is_x_monotone</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a2263fc65ccb88da1a6dc2149f40294b7" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>is_y_monotone</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a49996f958302a23fd800e02957ed63ed" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>left</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a44a60317b121eddf298402dae3d4d731" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a4be1ac55ff9a744241587849495cc795" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1ab0ff23090fe5a2fd2f1562601205dda6" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a6020ae8cd8a1576f3e82e846351637e3" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1af19cf94fd3297e3ad7597bdf43f2da3a" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>right</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a03429409ceea907ba0feb1ece2c9061f" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>source</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1ab11cdcdf3922afbdb08e8194887ea9e9" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>squared_radius</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a1a0ffad935f3cf8696cbeb3ffd460340" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>supporting_circle</name></member>
      <member refid="classCGAL_1_1Circular__arc__2_1a4d3086a96d208709de37bb4f416f5e63" prot="public" virt="non-virtual"><scope>CGAL::Circular_arc_2</scope><name>target</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
