<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgConeSpanners2Ref" kind="group">
    <compoundname>PkgConeSpanners2Ref</compoundname>
    <title>Cone-Based Spanners Reference</title>
    <innerclass refid="classCGAL_1_1Compute__cone__boundaries__2" prot="public">CGAL::Compute_cone_boundaries_2</innerclass>
    <innerclass refid="classCGAL_1_1Construct__theta__graph__2" prot="public">CGAL::Construct_theta_graph_2</innerclass>
    <innerclass refid="classCGAL_1_1Construct__yao__graph__2" prot="public">CGAL::Construct_yao_graph_2</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__PkgConeSpanners2Ref_1ga4ecf90e8006c4dee00a21e67bd716462" prot="public" static="no" strong="no">
        <type></type>
        <name>Cones_selected</name>
        <qualifiedname>CGAL::Cones_selected</qualifiedname>
        <enumvalue id="group__PkgConeSpanners2Ref_1gga4ecf90e8006c4dee00a21e67bd716462adaa1313a3edaf237069a99cf1bd121fb" prot="public">
          <name>EVEN_CONES</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>selects even cones. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgConeSpanners2Ref_1gga4ecf90e8006c4dee00a21e67bd716462aca05aa91e12ae9e65e5865f93b25eefe" prot="public">
          <name>ODD_CONES</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>selects odd cones. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgConeSpanners2Ref_1gga4ecf90e8006c4dee00a21e67bd716462aace61e8a1064a4b3bb0ec6225d78a1d0" prot="public">
          <name>ALL_CONES</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>selects all cones. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>An enum of the choice of cones in cone spanners. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Cone_spanners_enum_2.h" line="29" column="3" bodyfile="CGAL/Cone_spanners_enum_2.h" bodystart="29" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgConeSpanners2Ref_1ga54c3d6e9cf8a8f9c6330a32b496a03ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::gnuplot_output_2</definition>
        <argsstring>(const Graph &amp;g, const std::string &amp;prefix)</argsstring>
        <name>gnuplot_output_2</name>
        <qualifiedname>CGAL::gnuplot_output_2</qualifiedname>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>outputs a set of files used by Gnuplot to plot <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The files that are generated for Gnuplot are: (1) prefix.v (vertex list) (2) prefix.plt (Gnuplot script), This script will read prefix.v as input to plot the vertex list. The edge list is also included in this script.</para>
<para>Notes: (1) If these files already exists, this function will overwrite these files. (2) Parallel and self-edges cannot be plotted.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the graph to be plotted. For this function to work, the graph type must be <computeroutput>boost::adjacency_list</computeroutput> with <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> as the <computeroutput>VertexProperties</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput>boost::adjacency_list</computeroutput> graph with <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> as the VertexProperties to be plotted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix of the output files names </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/gnuplot_output_2.h" line="139" column="6" bodyfile="CGAL/gnuplot_output_2.h" bodystart="139" bodyend="192" declfile="CGAL/gnuplot_output_2.h" declline="62" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="Logo-ConeSpanners.png"></image>
 </para>
<para> Weisheng Si, Quincy Tse, and Frédérik Paradis This package provides functors for constructing two kinds of cone-based spanners: Yao graph and Theta graph, given a set of vertices on the plane and the directions of cone boundaries. Both exact and inexact constructions are supported. In exact construction, the cone boundaries are calculated using the roots of polynomials, thus avoiding the use of <formula id="0">$ \pi $</formula>, which cannot be represented exactly. In inexact construction, the cone boundaries are calculated using the approximate <formula id="0">$ \pi $</formula> value defined in CGAL, which is still accurate enough for most applications. Moreover, for visualization purpose, this package provides a global function to generate the data and script files used by Gnuplot to plot the constructed graphs. This package also provides options for the Half Yao graph and the Half Theta graph.  </para>
<para> <bold>Introduced in:</bold> CGAL 4.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:st-cbs-24b">cgal:st-cbs-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Functors</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Compute__cone__boundaries__2" kindref="compound">CGAL::Compute_cone_boundaries_2</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Construct__yao__graph__2" kindref="compound">CGAL::Construct_yao_graph_2</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Construct__theta__graph__2" kindref="compound">CGAL::Construct_theta_graph_2</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgConeSpanners2Ref_1ga54c3d6e9cf8a8f9c6330a32b496a03ce" kindref="member">CGAL::gnuplot_output_2()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Enumerations</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgConeSpanners2Ref_1ga4ecf90e8006c4dee00a21e67bd716462" kindref="member">CGAL::Cones_selected</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
