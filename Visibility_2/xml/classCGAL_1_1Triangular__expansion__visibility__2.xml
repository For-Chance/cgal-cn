<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Triangular__expansion__visibility__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangular_expansion_visibility_2</compoundname>
    <includes local="no">CGAL/Triangular_expansion_visibility_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename Arrangement_2_</type>
      </param>
      <param>
        <type>typename RegularizationCategory</type>
        <defval><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Triangular__expansion__visibility__2_1a3db65b5b82ab7f839f53efe838d39490" prot="public" static="no">
        <type>Arrangement_2_</type>
        <definition>typedef Arrangement_2_ CGAL::Triangular_expansion_visibility_2&lt; Arrangement_2_, RegularizationCategory &gt;::Arrangement_2</definition>
        <argsstring></argsstring>
        <name>Arrangement_2</name>
        <qualifiedname>CGAL::Triangular_expansion_visibility_2::Arrangement_2</qualifiedname>
        <briefdescription>
<para>The type of the input arrangement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangular_expansion_visibility_2.h" line="37" column="27" bodyfile="CGAL/Triangular_expansion_visibility_2.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tags</header>
      <memberdef kind="typedef" id="classCGAL_1_1Triangular__expansion__visibility__2_1a4a033f8db1238f1ceb9aa2b40c3ee5b6" prot="public" static="no">
        <type>RegularizationCategory</type>
        <definition>typedef RegularizationCategory CGAL::Triangular_expansion_visibility_2&lt; Arrangement_2_, RegularizationCategory &gt;::Regularization_category</definition>
        <argsstring></argsstring>
        <name>Regularization_category</name>
        <qualifiedname>CGAL::Triangular_expansion_visibility_2::Regularization_category</qualifiedname>
        <briefdescription>
<para>identifies whether the regularized visibility area is computed (either <computeroutput>#Tag_true</computeroutput> or <computeroutput>#Tag_false</computeroutput>).   </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangular_expansion_visibility_2.h" line="47" column="34" bodyfile="CGAL/Triangular_expansion_visibility_2.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangular__expansion__visibility__2_1a056db38bfca83ca18f3edeb464496586" prot="public" static="no">
        <type><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref></type>
        <definition>typedef Tag_true CGAL::Triangular_expansion_visibility_2&lt; Arrangement_2_, RegularizationCategory &gt;::Supports_general_polygon_category</definition>
        <argsstring></argsstring>
        <name>Supports_general_polygon_category</name>
        <qualifiedname>CGAL::Triangular_expansion_visibility_2::Supports_general_polygon_category</qualifiedname>
        <briefdescription>
<para>See <ref refid="classVisibility__2_1a34dadf26b6a017a67e46eb3561953b75" kindref="member">Visibility_2::Supports_general_polygon_category</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangular_expansion_visibility_2.h" line="52" column="20" bodyfile="CGAL/Triangular_expansion_visibility_2.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangular__expansion__visibility__2_1a95702b83f13cb741b5a303fbbf06eb43" prot="public" static="no">
        <type><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref></type>
        <definition>typedef Tag_true CGAL::Triangular_expansion_visibility_2&lt; Arrangement_2_, RegularizationCategory &gt;::Supports_simple_polygon_category</definition>
        <argsstring></argsstring>
        <name>Supports_simple_polygon_category</name>
        <qualifiedname>CGAL::Triangular_expansion_visibility_2::Supports_simple_polygon_category</qualifiedname>
        <briefdescription>
<para>See <ref refid="classVisibility__2_1a37464d21ac94f4cf8a7473434e6a32f5" kindref="member">Visibility_2::Supports_simple_polygon_category</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangular_expansion_visibility_2.h" line="57" column="20" bodyfile="CGAL/Triangular_expansion_visibility_2.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Triangular__expansion__visibility__2_1a04e0ecc44c92c1519cc2115458984672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Triangular_expansion_visibility_2&lt; Arrangement_2_, RegularizationCategory &gt;::attach</definition>
        <argsstring>(const Arrangement_2 &amp;arr)</argsstring>
        <name>attach</name>
        <qualifiedname>CGAL::Triangular_expansion_visibility_2::attach</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangular__expansion__visibility__2_1a3db65b5b82ab7f839f53efe838d39490" kindref="member">Arrangement_2</ref> &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>Attaches the given arrangement to the visibility object and computes the restricted triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>This takes <formula id="3">$O(n)$</formula>$ time, where <formula id="2">$ n $</formula> is the number of vertices.</para>
<para>From this moment on the class observes changes in the arrangement. If the arrangement changes a new restricted triangulation is computed. Re-attaching forces re-computation.</para>
<para>In case the object is already attached to another arrangement, the visibility object gets detached before being attached to <computeroutput>arr</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangular_expansion_visibility_2.h" line="74" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a model of the concept <computeroutput><ref refid="classVisibility__2" kindref="compound">Visibility_2</ref></computeroutput> can answer visibility queries within a polygon that may have holes. </para>
    </briefdescription>
    <detaileddescription>
<para>The algorithm obtains a constrained triangulation from the input arrangement, then computes visibility by expanding the triangle that contains the query point. Preprocessing takes <formula id="3">$O(n)$</formula> time and <formula id="3">$O(n)$</formula>$ space, where <formula id="2">$ n $</formula> is the number of vertices of input polygon. The query time is <formula id="4">$O(nh)$</formula>, where <formula id="5">$ h $</formula> is the number of holes+1 of input polygon. Thus, for simple polygons (or a polygon with a constant number of holes) the algorithm complexity is linear, but it is <formula id="6">$O(n^2)$</formula> in the worst case, as the number of holes can be linear in <formula id="2">$ n $</formula>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Arrangement_2_</parametername>
</parameternamelist>
<parameterdescription>
<para>is the type used to represent the input environment. It must be an instance of <computeroutput><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arrangement_2</ref></computeroutput>, where its <computeroutput>CGAL::Arrangement_2::Traits_2</computeroutput> must be an instance of <computeroutput><ref refid="classCGAL_1_1Arr__segment__traits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arr_segment_traits_2</ref></computeroutput>, or of <computeroutput><ref refid="classCGAL_1_1Arr__non__caching__segment__traits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">CGAL::Arr_non_caching_segment_traits_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RegularizationCategory</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates whether the output should be regularized. It can be specified by one of the following: <computeroutput>#Tag_true</computeroutput> or <computeroutput>#Tag_false</computeroutput>, where <computeroutput>#Tag_false</computeroutput> is the default value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classVisibility__2" kindref="compound">Visibility_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Simple__polygon__visibility__2" kindref="compound">CGAL::Simple_polygon_visibility_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Rotational__sweep__visibility__2" kindref="compound">CGAL::Rotational_sweep_visibility_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="CGAL/Triangular_expansion_visibility_2.h" line="28" column="1" bodyfile="CGAL/Triangular_expansion_visibility_2.h" bodystart="28" bodyend="79"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Triangular__expansion__visibility__2_1a3db65b5b82ab7f839f53efe838d39490" prot="public" virt="non-virtual"><scope>CGAL::Triangular_expansion_visibility_2</scope><name>Arrangement_2</name></member>
      <member refid="classCGAL_1_1Triangular__expansion__visibility__2_1a04e0ecc44c92c1519cc2115458984672" prot="public" virt="non-virtual"><scope>CGAL::Triangular_expansion_visibility_2</scope><name>attach</name></member>
      <member refid="classCGAL_1_1Triangular__expansion__visibility__2_1a4a033f8db1238f1ceb9aa2b40c3ee5b6" prot="public" virt="non-virtual"><scope>CGAL::Triangular_expansion_visibility_2</scope><name>Regularization_category</name></member>
      <member refid="classCGAL_1_1Triangular__expansion__visibility__2_1a056db38bfca83ca18f3edeb464496586" prot="public" virt="non-virtual"><scope>CGAL::Triangular_expansion_visibility_2</scope><name>Supports_general_polygon_category</name></member>
      <member refid="classCGAL_1_1Triangular__expansion__visibility__2_1a95702b83f13cb741b5a303fbbf06eb43" prot="public" virt="non-virtual"><scope>CGAL::Triangular_expansion_visibility_2</scope><name>Supports_simple_polygon_category</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
