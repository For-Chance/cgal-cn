<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classTriangulationDataStructure_1_1Vertex" kind="class" language="C++" prot="public">
    <compoundname>TriangulationDataStructure::Vertex</compoundname>
    <includes local="no">Concepts/TriangulationDataStructure.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classTriangulationDataStructure_1_1Vertex_1ae61145ddb8d2826e8f309063519f49b0" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDataStructure::Vertex::Full_cell_handle</definition>
        <argsstring></argsstring>
        <name>Full_cell_handle</name>
        <qualifiedname>TriangulationDataStructure::Vertex::Full_cell_handle</qualifiedname>
        <briefdescription>
<para>A handle to a cell, which must be the same as the nested type <computeroutput><ref refid="classTriangulationDataStructure_1a720367accb2a5649ae366c4f0de90acc" kindref="member">TriangulationDataStructure::Full_cell_handle</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="684" column="26" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1Vertex_1a214d59b812944790d65281326380c900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDataStructure::Vertex::set_full_cell</definition>
        <argsstring>(Full_cell_handle c)</argsstring>
        <name>set_full_cell</name>
        <qualifiedname>TriangulationDataStructure::Vertex::set_full_cell</qualifiedname>
        <param>
          <type><ref refid="classTriangulationDataStructure_1_1Vertex_1ae61145ddb8d2826e8f309063519f49b0" kindref="member">Full_cell_handle</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Set <computeroutput>c</computeroutput> as the vertex&apos;s incident full cell. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>c</computeroutput> must not be the default-constructed <computeroutput>Full_cell_handle</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="696" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1Vertex_1aed81752a09a71f22de47d67805cdba56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationDataStructure_1_1Vertex_1ae61145ddb8d2826e8f309063519f49b0" kindref="member">Full_cell_handle</ref></type>
        <definition>Full_cell_handle TriangulationDataStructure::Vertex::full_cell</definition>
        <argsstring>() const</argsstring>
        <name>full_cell</name>
        <qualifiedname>TriangulationDataStructure::Vertex::full_cell</qualifiedname>
        <briefdescription>
<para>Returns a handle to a full cell incident to the vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="702" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1Vertex_1a1356565d84ee6a8f3c7000e07fd7006f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationDataStructure::Vertex::is_valid</definition>
        <argsstring>(bool verbose=false) const</argsstring>
        <name>is_valid</name>
        <qualifiedname>TriangulationDataStructure::Vertex::is_valid</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is a function for debugging purpose. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALDebug&quot;&gt; &lt;div&gt;Debugging Support&lt;/div&gt; </htmlonly></para>
<para>Performs some validity checks on the vertex <computeroutput>v</computeroutput>.</para>
<para>It must <emphasis>at least</emphasis> check that <computeroutput>v</computeroutput> has an incident full cell, which in turn must contain <computeroutput>v</computeroutput> as one of its vertices.</para>
<para>Returns <computeroutput>true</computeroutput> if all the tests pass, <computeroutput>false</computeroutput> if any test fails. See the documentation for the models of this concept to see the additional (if any) validity checks that they implement. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="722" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Input/Output</header>
      <description><para>These operators can be used directly and are called by the I/O operator of class <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>. </para>
</description>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1Vertex_1ae3c40fd34bd03f21d9539c230f9fb107" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; TriangulationDataStructure::Vertex::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Triangulation_ds_vertex&lt; TriangulationDataStructure &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>TriangulationDataStructure::Vertex::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Triangulation_ds_vertex&lt; <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Writes (possibly) non-combinatorial information about vertex <computeroutput>v</computeroutput> to the stream <computeroutput>os</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="736" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDataStructure_1_1Vertex_1a1e3f8c14392102a1b2897d3eefbd4406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; TriangulationDataStructure::Vertex::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Triangulation_ds_vertex&lt; TriangulationDataStructure &gt; &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>TriangulationDataStructure::Vertex::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Triangulation_ds_vertex&lt; <ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Reads from stream <computeroutput>is</computeroutput> the vertex information written by <computeroutput>operator&lt;&lt;</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDataStructure.h" line="742" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classTriangulationDataStructure_1_1Vertex" kindref="compound">TriangulationDataStructure::Vertex</ref></computeroutput> describes the type used by a <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> to store the vertices. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>It sets requirements of combinatorial nature only, as geometry is not concerned here. In particular, we only require that the vertex holds a handle to a full cell incident to it in the triangulation.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex" kindref="compound">CGAL::Triangulation_ds_vertex</ref>&lt;TriangulationDataStructure_&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__vertex" kindref="compound">CGAL::Triangulation_vertex</ref>&lt;TriangulationTraits_, Data, TriangulationDSVertex_&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1abe2bd506a1ce60cf0a0962b456264b8b" kindref="member">TriangulationDataStructure::Face</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/TriangulationDataStructure.h" line="674" column="1" bodyfile="Concepts/TriangulationDataStructure.h" bodystart="674" bodyend="746"/>
    <listofallmembers>
      <member refid="classTriangulationDataStructure_1_1Vertex_1aed81752a09a71f22de47d67805cdba56" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::Vertex</scope><name>full_cell</name></member>
      <member refid="classTriangulationDataStructure_1_1Vertex_1ae61145ddb8d2826e8f309063519f49b0" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::Vertex</scope><name>Full_cell_handle</name></member>
      <member refid="classTriangulationDataStructure_1_1Vertex_1a1356565d84ee6a8f3c7000e07fd7006f" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::Vertex</scope><name>is_valid</name></member>
      <member refid="classTriangulationDataStructure_1_1Vertex_1ae3c40fd34bd03f21d9539c230f9fb107" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::Vertex</scope><name>operator&lt;&lt;</name></member>
      <member refid="classTriangulationDataStructure_1_1Vertex_1a1e3f8c14392102a1b2897d3eefbd4406" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::Vertex</scope><name>operator&gt;&gt;</name></member>
      <member refid="classTriangulationDataStructure_1_1Vertex_1a214d59b812944790d65281326380c900" prot="public" virt="non-virtual"><scope>TriangulationDataStructure::Vertex</scope><name>set_full_cell</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
