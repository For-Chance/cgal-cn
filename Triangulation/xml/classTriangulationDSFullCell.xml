<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classTriangulationDSFullCell" kind="class" language="C++" prot="public">
    <compoundname>TriangulationDSFullCell</compoundname>
    <includes local="no">Concepts/TriangulationDSFullCell.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classTriangulationDSFullCell_1aad00844df691a69f68dd19818cb44a9a" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationDSFullCell::Triangulation_data_structure</definition>
        <argsstring></argsstring>
        <name>Triangulation_data_structure</name>
        <qualifiedname>TriangulationDSFullCell::Triangulation_data_structure</qualifiedname>
        <briefdescription>
<para>The <computeroutput>Triangulation_data_structure</computeroutput> in which the <computeroutput><ref refid="classTriangulationDSFullCell" kindref="compound">TriangulationDSFullCell</ref></computeroutput> is defined/used. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be a model of the <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> concept. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSFullCell.h" line="61" column="26" bodyfile="Concepts/TriangulationDSFullCell.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationDSFullCell_1a5c811d1bd10809411eaba9189b50796a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename TDS2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using TriangulationDSFullCell::Rebind_TDS =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Rebind_TDS</name>
        <qualifiedname>TriangulationDSFullCell::Rebind_TDS</qualifiedname>
        <briefdescription>
<para>This nested template class has to define a type <computeroutput>Rebind_TDS&lt;TDS2&gt;::Other</computeroutput> which is the <emphasis>rebound</emphasis> vertex, that is, the one that will be actually used by <computeroutput>Triangulation_data_structure</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>Rebind_TDS&lt;TDS2&gt;::Other</computeroutput> type will be the real base class of <computeroutput>Triangulation_data_structure::Full_cell</computeroutput>. <simplesect kind="note"><para>It can be implemented using a nested template class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSFullCell.h" line="72" column="1" bodyfile="Concepts/TriangulationDSFullCell.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>If you want to create a full cell as part of a <computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput>, you would rather want to call the <computeroutput>new_full_cell()</computeroutput> from the latter concept, as it is not possible to incorporate an existing external full cell into a triangulation. </para>
</description>
      <memberdef kind="function" id="classTriangulationDSFullCell_1ad7f9d9497b25bd8c89ac7b33b27d9a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationDSFullCell::TriangulationDSFullCell</definition>
        <argsstring>(int dmax)</argsstring>
        <name>TriangulationDSFullCell</name>
        <qualifiedname>TriangulationDSFullCell::TriangulationDSFullCell</qualifiedname>
        <param>
          <type>int</type>
          <declname>dmax</declname>
        </param>
        <briefdescription>
<para>Sets the maximum possible dimension of the full cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSFullCell.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDSFullCell_1a2ca414cccd52f5acb731ad8277551469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationDSFullCell::TriangulationDSFullCell</definition>
        <argsstring>(const TriangulationDSFullCell &amp;fc)</argsstring>
        <name>TriangulationDSFullCell</name>
        <qualifiedname>TriangulationDSFullCell::TriangulationDSFullCell</qualifiedname>
        <param>
          <type>const <ref refid="classTriangulationDSFullCell" kindref="compound">TriangulationDSFullCell</ref> &amp;</type>
          <declname>fc</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSFullCell.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory Management</header>
      <description><para>These member functions are required by <computeroutput>Triangulation_data_structure</computeroutput> because it uses <computeroutput>Compact_container</computeroutput> to store its cells.</para>
<para>See the documentation of <computeroutput>Compact_container</computeroutput> for the exact requirements. </para>
</description>
      <memberdef kind="function" id="classTriangulationDSFullCell_1a7e313c03afaf66a4227dba7a5b22e78b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * TriangulationDSFullCell::for_compact_container</definition>
        <argsstring>() const</argsstring>
        <name>for_compact_container</name>
        <qualifiedname>TriangulationDSFullCell::for_compact_container</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSFullCell.h" line="107" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationDSFullCell_1a27a4f51a725ecf7605321080284aa7b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationDSFullCell::for_compact_container</definition>
        <argsstring>(void *p)</argsstring>
        <name>for_compact_container</name>
        <qualifiedname>TriangulationDSFullCell::for_compact_container</qualifiedname>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationDSFullCell.h" line="112" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classTriangulationDSFullCell" kindref="compound">TriangulationDSFullCell</ref></computeroutput> describes the requirements for the full cell class of a <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure</ref></computeroutput>. It refines the concept <computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>Since the <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure</ref></computeroutput> is the class which defines the handle types, the full cell base class has to be somehow parameterized by the triangulation data structure. But since the <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure</ref></computeroutput> itself is parameterized by the cell and vertex base classes, there is a cycle in the definition of these classes. In order to break the cycle, the base classes for cells and vertices which are plugged in to instantiate a <computeroutput>Triangulation_data_structure</computeroutput> use a <computeroutput>void</computeroutput> as triangulation data structure parameter. Then, the <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure</ref></computeroutput> uses a <emphasis>rebind</emphasis> mechanism (similar to the one specified in <computeroutput>std::allocator</computeroutput>) in order to plug itself as parameter in the full cell and vertex base classes. This mechanism requires that the base class provides a templated nested class <computeroutput>Rebind_TDS</computeroutput> that itself provides the subtype <computeroutput>Rebind_TDS::Other</computeroutput> which is the <emphasis>rebound</emphasis> version of the base class. This <emphasis>rebound</emphasis> base class is the class that the <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure" kindref="compound">CGAL::Triangulation_data_structure</ref></computeroutput> actually uses as a base class for the class of <computeroutput>CGAL::Triangulation_data_structure::Vertex</computeroutput>.</para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__full__cell" kindref="compound">CGAL::Triangulation_ds_full_cell</ref>&lt;TriangulationDataStructure_, DSFullCellStoragePolicy&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__full__cell" kindref="compound">CGAL::Triangulation_full_cell</ref>&lt;TriangulationTraits_, Data, TriangulationDSFullCell_&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSVertex" kindref="compound">TriangulationDSVertex</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDSFace" kindref="compound">TriangulationDSFace</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure" kindref="compound">TriangulationDataStructure</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure_1_1FullCell" kindref="compound">TriangulationDataStructure::FullCell</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/TriangulationDSFullCell.h" line="50" column="1" bodyfile="Concepts/TriangulationDSFullCell.h" bodystart="50" bodyend="116"/>
    <listofallmembers>
      <member refid="classTriangulationDSFullCell_1a7e313c03afaf66a4227dba7a5b22e78b" prot="public" virt="non-virtual"><scope>TriangulationDSFullCell</scope><name>for_compact_container</name></member>
      <member refid="classTriangulationDSFullCell_1a27a4f51a725ecf7605321080284aa7b2" prot="public" virt="non-virtual"><scope>TriangulationDSFullCell</scope><name>for_compact_container</name></member>
      <member refid="classTriangulationDSFullCell_1a5c811d1bd10809411eaba9189b50796a" prot="public" virt="non-virtual"><scope>TriangulationDSFullCell</scope><name>Rebind_TDS</name></member>
      <member refid="classTriangulationDSFullCell_1aad00844df691a69f68dd19818cb44a9a" prot="public" virt="non-virtual"><scope>TriangulationDSFullCell</scope><name>Triangulation_data_structure</name></member>
      <member refid="classTriangulationDSFullCell_1ad7f9d9497b25bd8c89ac7b33b27d9a4e" prot="public" virt="non-virtual"><scope>TriangulationDSFullCell</scope><name>TriangulationDSFullCell</name></member>
      <member refid="classTriangulationDSFullCell_1a2ca414cccd52f5acb731ad8277551469" prot="public" virt="non-virtual"><scope>TriangulationDSFullCell</scope><name>TriangulationDSFullCell</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
