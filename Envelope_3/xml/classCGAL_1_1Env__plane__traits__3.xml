<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Env__plane__traits__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Env_plane_traits_3</compoundname>
    <basecompoundref refid="classCGAL_1_1Arr__linear__traits__2" prot="public" virt="non-virtual">CGAL::Arr_linear_traits_2&lt; Kernel &gt;</basecompoundref>
    <includes local="no">CGAL/Env_plane_traits_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
      <param>
        <type>typename ArrLinearTraits</type>
        <defval><ref refid="classCGAL_1_1Arr__linear__traits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_linear_traits_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>The traits class template <computeroutput><ref refid="classCGAL_1_1Env__plane__traits__3" kindref="compound">Env_plane_traits_3</ref></computeroutput> models the <computeroutput><ref refid="classEnvelopeTraits__3" kindref="compound">EnvelopeTraits_3</ref></computeroutput> concept, and is used for the construction of lower and upper envelopes of planes and half planes in the space. </para>
    </briefdescription>
    <detaileddescription>
<para>When the template is instantiated, the template parameter <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> must be substituted by a CGAL-kernel model, the number type of which should support exact rational arithmetic, to avoid numerical errors and robustness problems. In particular, the number type should support the arithmetic operations <formula id="0">$ +$</formula>, <formula id="1">$ -$</formula>, <formula id="2">$ \times$</formula>, and <formula id="3">$ \div$</formula> without loss of precision. For optimal performance, we recommend instantiating the traits class with the predefined <computeroutput><ref refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Exact_predicates_exact_constructions_kernel</ref></computeroutput> provided by CGAL. Using this kernel guarantees exactness and robustness, while it incurs only a minor overhead (in comparison to working with a fast, inexact number type) for most inputs.</para>
<para>The second template parameter, namely <computeroutput>ArrLinearTraits</computeroutput>, should be substituted by a 2D arrangement geometry traits class that supports unbounded linear objects, i.e, lines, rays, and segments. By default it is substituted by <computeroutput><ref refid="classCGAL_1_1Arr__linear__traits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_linear_traits_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput>.</para>
<para>Note that an entire plane has no boundaries, and the projection of a half-plane is an (unbounded) line. Naturally, rays and segments may occur as a result of overlaying projections of several half planes. Indeed, <computeroutput><ref refid="classCGAL_1_1Env__plane__traits__3" kindref="compound">Env_plane_traits_3</ref></computeroutput> inherits from the traits class that substitutes <computeroutput>ArrLinearTraits</computeroutput>, and extends it by adding operations on planes and half planes. The nested <computeroutput>Xy_monotone_surface_3</computeroutput> and <computeroutput>Surface_3</computeroutput> types refer to the same type. They are constructible from a <computeroutput><ref refid="classKernel_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Plane_3</ref></computeroutput> in case of an entire plane, or from <computeroutput><ref refid="classKernel_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Plane_3</ref></computeroutput> and <computeroutput><ref refid="classKernel_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Line_2</ref></computeroutput> in case of a half-plane. The line orientation determines which half is considered.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classEnvelopeTraits__3" kindref="compound">EnvelopeTraits_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::Arr_linear_traits_2&lt; typename Kernel &gt;</label>
        <link refid="classCGAL_1_1Arr__linear__traits__2" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag"/>
      </node>
      <node id="1">
        <label>CGAL::Env_plane_traits_3&lt; Kernel, ArrLinearTraits &gt;</label>
        <link refid="classCGAL_1_1Env__plane__traits__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Arr_linear_traits_2&lt; typename Kernel &gt;</label>
        <link refid="classCGAL_1_1Arr__linear__traits__2" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag"/>
      </node>
      <node id="1">
        <label>CGAL::Env_plane_traits_3&lt; Kernel, ArrLinearTraits &gt;</label>
        <link refid="classCGAL_1_1Env__plane__traits__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Env_plane_traits_3.h" line="38" column="1" bodyfile="CGAL/Env_plane_traits_3.h" bodystart="38" bodyend="41"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__linear__traits__2_1aba0cbe450024e7b12c715869b974cbfd" prot="public" virt="non-virtual"><scope>CGAL::Env_plane_traits_3</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__linear__traits__2_1ac164fa9f286510a6f82b6d19f1337ea7" prot="public" virt="non-virtual"><scope>CGAL::Env_plane_traits_3</scope><name>Line_2</name></member>
      <member refid="classCGAL_1_1Arr__linear__traits__2_1a0cfd7a27d192fbad2e7756429ed64ef8" prot="public" virt="non-virtual"><scope>CGAL::Env_plane_traits_3</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Arr__linear__traits__2_1a9fabc6237c3e8eecaaaec8294d89ed24" prot="public" virt="non-virtual"><scope>CGAL::Env_plane_traits_3</scope><name>Ray_2</name></member>
      <member refid="classCGAL_1_1Arr__linear__traits__2_1a85c800b80f8a138ce592325131c7e9f4" prot="public" virt="non-virtual"><scope>CGAL::Env_plane_traits_3</scope><name>Segment_2</name></member>
      <member refid="classCGAL_1_1Arr__linear__traits__2_1a1859fa4e849ea69de5e35db0c7ecfaa5" prot="public" virt="non-virtual"><scope>CGAL::Env_plane_traits_3</scope><name>trim_2_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
