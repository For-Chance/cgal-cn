<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Env__triangle__traits__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Env_triangle_traits_3</compoundname>
    <basecompoundref refid="classCGAL_1_1Arr__segment__traits__2" prot="public" virt="non-virtual">CGAL::Arr_segment_traits_2&lt; Kernel &gt;</basecompoundref>
    <includes local="no">CGAL/Env_triangle_traits_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
      <param>
        <type>typename ArrSegmentTraits</type>
        <defval><ref refid="classCGAL_1_1Arr__segment__traits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_segment_traits_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>The traits class template <computeroutput><ref refid="classCGAL_1_1Env__triangle__traits__3" kindref="compound">Env_triangle_traits_3</ref></computeroutput> models the <computeroutput><ref refid="classEnvelopeTraits__3" kindref="compound">EnvelopeTraits_3</ref></computeroutput> concept, and is used for the construction of lower and upper envelopes of triangles in the space. </para>
    </briefdescription>
    <detaileddescription>
<para>When the template is instantiated, the template parameter <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> must be substituted by a CGAL-kernel model, the number type of which should support exact rational arithmetic, to avoid numerical errors and robustness problems. In particular, the number type should support the arithmetic operations <formula id="0">$ +$</formula>, <formula id="1">$ -$</formula>, <formula id="2">$ \times$</formula>, and <formula id="3">$ \div$</formula> without loss of precision. For optimal performance, we recommend instantiating the traits class with the predefined <computeroutput><ref refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Exact_predicates_exact_constructions_kernel</ref></computeroutput> provided by CGAL. Using this kernel guarantees exactness and robustness, while it incurs only a minor overhead (in comparison to working with a fast, inexact number type) for most inputs.</para>
<para>The second template parameter, namely <computeroutput>ArrSegmentTraits</computeroutput>, should be substituted by a 2D arrangement geometry traits class that supports segments. By default it is substituted by <computeroutput><ref refid="classCGAL_1_1Arr__segment__traits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_segment_traits_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>&gt;</computeroutput>.</para>
<para>Note that when we project the boundary of a triangle, or the intersection of two triangles, onto the <formula id="4">$ xy$</formula>-plane, we obtain line segments. Indeed, <computeroutput><ref refid="classCGAL_1_1Env__triangle__traits__3" kindref="compound">Env_triangle_traits_3</ref></computeroutput> inherits from the traits class that substitutes <computeroutput>ArrSegmentTraits</computeroutput>, and extends it by adding operations on 3D objects, namely spatial triangles. Note that the traits class does <emphasis>not</emphasis> define <computeroutput><ref refid="classKernel_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Triangle_3</ref></computeroutput> as its surface (and <formula id="4">$ xy$</formula>-monotone surface) type, as one may expect. This is because the traits class needs to store extra data with the triangles in order to efficiently operate on them. Nevertheless, the nested <computeroutput>Xy_monotone_surface_3</computeroutput> and <computeroutput>Surface_3</computeroutput> types are however constructible from a <computeroutput><ref refid="classKernel_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Triangle_3</ref></computeroutput> instance and are also convertible to a <computeroutput><ref refid="classKernel_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Triangle_3</ref></computeroutput> object. Both types, <computeroutput>Xy_monotone_surface_3</computeroutput> and <computeroutput>Surface_3</computeroutput>, refer to the same class, as <emphasis>every</emphasis> triangle is (weakly) <formula id="4">$ xy$</formula>-monotone).</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classEnvelopeTraits__3" kindref="compound">EnvelopeTraits_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::Arr_segment_traits_2&lt; typename Kernel &gt;</label>
        <link refid="classCGAL_1_1Arr__segment__traits__2" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag"/>
      </node>
      <node id="1">
        <label>CGAL::Env_triangle_traits_3&lt; Kernel, ArrSegmentTraits &gt;</label>
        <link refid="classCGAL_1_1Env__triangle__traits__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Arr_segment_traits_2&lt; typename Kernel &gt;</label>
        <link refid="classCGAL_1_1Arr__segment__traits__2" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag"/>
      </node>
      <node id="1">
        <label>CGAL::Env_triangle_traits_3&lt; Kernel, ArrSegmentTraits &gt;</label>
        <link refid="classCGAL_1_1Env__triangle__traits__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Env_triangle_traits_3.h" line="41" column="1" bodyfile="CGAL/Env_triangle_traits_3.h" bodystart="41" bodyend="44"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__segment__traits__2_1ae9748d8e9803fc46af307d41f8613b79" prot="public" virt="non-virtual"><scope>CGAL::Env_triangle_traits_3</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__segment__traits__2_1a1a78f0864b477016833d7a700e197046" prot="public" virt="non-virtual"><scope>CGAL::Env_triangle_traits_3</scope><name>Line_2</name></member>
      <member refid="classCGAL_1_1Arr__segment__traits__2_1a91ceb0023eafea6c7002b899919a2209" prot="public" virt="non-virtual"><scope>CGAL::Env_triangle_traits_3</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Arr__segment__traits__2_1aecb5ee220c98839341988bc8e3a11c54" prot="public" virt="non-virtual"><scope>CGAL::Env_triangle_traits_3</scope><name>Segment_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
