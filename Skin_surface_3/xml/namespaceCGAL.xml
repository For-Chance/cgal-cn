<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Skin__surface__3" prot="public">CGAL::Skin_surface_3</innerclass>
    <innerclass refid="structCGAL_1_1Skin__surface__polyhedral__items__3" prot="public">CGAL::Skin_surface_polyhedral_items_3</innerclass>
    <innerclass refid="classCGAL_1_1Skin__surface__traits__3" prot="public">CGAL::Skin_surface_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Union__of__balls__3" prot="public">CGAL::Union_of_balls_3</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSkinSurface3Ref_1ga14115b130eb6f75991d80c7ae2d1b233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class WP_iterator</type>
          </param>
          <param>
            <type>class Polyhedron</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_skin_surface_mesh_3</definition>
        <argsstring>(Polyhedron &amp;p, WP_iterator begin, WP_iterator end, double shrink_factor=.5, int nSubdivisions=0, bool grow_balls=true)</argsstring>
        <name>make_skin_surface_mesh_3</name>
        <qualifiedname>CGAL::make_skin_surface_mesh_3</qualifiedname>
        <param>
          <type>Polyhedron &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>WP_iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>WP_iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shrink_factor</declname>
          <defval>.5</defval>
        </param>
        <param>
          <type>int</type>
          <declname>nSubdivisions</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>grow_balls</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>constructs a mesh of the skin surface defined by the weighted points and the shrink factor. </para>
        </briefdescription>
        <detaileddescription>
<para>The function <computeroutput><ref refid="group__PkgSkinSurface3Ref_1ga14115b130eb6f75991d80c7ae2d1b233" kindref="member">make_skin_surface_mesh_3()</ref></computeroutput> constructs a mesh isotopic to the skin surface based on the algorithm in <ref refid="citelist_1CITEREF_cgal:kv-mssct-05" kindref="member">[2]</ref>. It takes as input a range of weighted points and a shrink factor and outputs the mesh in a <computeroutput>Polyhedron_3</computeroutput> object. A number of subdivision steps might be applied to refine the mesh.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>WP_iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an input iterator with weighted points as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an instance of <computeroutput>Polyhedron_3</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>Polyhedron::HDS</computeroutput> can be used as the template argument of the <computeroutput>Polyhedron_incremental_builder_3&lt;HDS&gt;</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/make_skin_surface_mesh_3.h" line="24" column="6" declfile="CGAL/make_skin_surface_mesh_3.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSkinSurface3Ref_1gaf8672dd3f39e8d918bb25153054e8517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></type>
          </param>
          <param>
            <type>typename Polyhedron</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::mesh_skin_surface_3</definition>
        <argsstring>(const SkinSurface_3 &amp;skin_surface, Polyhedron &amp;p)</argsstring>
        <name>mesh_skin_surface_3</name>
        <qualifiedname>CGAL::mesh_skin_surface_3</qualifiedname>
        <param>
          <type>const <ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref> &amp;</type>
          <declname>skin_surface</declname>
        </param>
        <param>
          <type>Polyhedron &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>constructs a mesh of the <computeroutput>skin_surface</computeroutput> in <computeroutput>p</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The function <computeroutput><ref refid="group__PkgSkinSurface3Ref_1gaf8672dd3f39e8d918bb25153054e8517" kindref="member">mesh_skin_surface_3()</ref></computeroutput> constructs a mesh isotopic to the skin surface based on the algorithm in <ref refid="citelist_1CITEREF_cgal:kv-mssct-05" kindref="member">[2]</ref>. It takes as input a <computeroutput><ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></computeroutput> object, which is a model of the <computeroutput><ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></computeroutput> concept and outputs the mesh in a <computeroutput>Polyhedron_3</computeroutput> object.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an instance of <computeroutput>Polyhedron_3</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>Polyhedron::HDS</computeroutput> can be used as the template argument of the <computeroutput>Polyhedron_incremental_builder_3&lt;HDS&gt;</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/mesh_skin_surface_3.h" line="23" column="6" declfile="CGAL/mesh_skin_surface_3.h" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSkinSurface3Ref_1ga9ca985264fb20beb8d7da6ab2cfb1bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></type>
          </param>
          <param>
            <type>class Polyhedron</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::subdivide_skin_surface_mesh_3</definition>
        <argsstring>(const SkinSurface_3 &amp;skin_surface, Polyhedron &amp;p, int nSubdiv=1)</argsstring>
        <name>subdivide_skin_surface_mesh_3</name>
        <qualifiedname>CGAL::subdivide_skin_surface_mesh_3</qualifiedname>
        <param>
          <type>const <ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref> &amp;</type>
          <declname>skin_surface</declname>
        </param>
        <param>
          <type>Polyhedron &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nSubdiv</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>subdivides a skin surface mesh constructed by the function <computeroutput><ref refid="group__PkgSkinSurface3Ref_1gaf8672dd3f39e8d918bb25153054e8517" kindref="member">mesh_skin_surface_3()</ref></computeroutput> using <computeroutput>nSubdiv</computeroutput> 1-4 split operations (each triangle is split into four sub-triangles) and the new vertices are moved towards the skin surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput><ref refid="classSkinSurface__3" kindref="compound">SkinSurface_3</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an instance of <computeroutput>Polyhedron_3</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/subdivide_skin_surface_mesh_3.h" line="19" column="6" declfile="CGAL/subdivide_skin_surface_mesh_3.h" declline="19" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/make_skin_surface_mesh_3.h" line="1" column="1"/>
  </compounddef>
</doxygen>
