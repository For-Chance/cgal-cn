<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Barycentric_coordinates::BarycentricCoordinates_2</compoundname>
    <includes local="no">Concepts/BarycentricCoordinates_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a75ff3e74f7b0e37956b2752d89022e6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Barycentric_coordinates::BarycentricCoordinates_2::BarycentricCoordinates_2</definition>
        <argsstring>(const std::vector&lt; Traits::Point_2 &gt; &amp;vertices, const Traits &amp;barycentric_traits)</argsstring>
        <name>BarycentricCoordinates_2</name>
        <qualifiedname>CGAL::Barycentric_coordinates::BarycentricCoordinates_2::BarycentricCoordinates_2</qualifiedname>
        <param>
          <type>const std::vector&lt; Traits::Point_2 &gt; &amp;</type>
          <declname>vertices</declname>
        </param>
        <param>
          <type>const Traits &amp;</type>
          <declname>barycentric_traits</declname>
        </param>
        <briefdescription>
<para>Creates a class that implements generalized barycentric coordinates for any query point that does not belong to the polygon&apos;s boundary. </para>
        </briefdescription>
        <detaileddescription>
<para>The polygon is given by a range of vertices of the type <computeroutput>Traits::Point_2</computeroutput> stored in a container of the type <ulink url="https://en.cppreference.com/w/cpp/container/vector"><computeroutput>std::vector</computeroutput></ulink>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="32" column="3" bodyfile="Concepts/BarycentricCoordinates_2.h" bodystart="32" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a5e5300b178174dc4aa3036f05f45b969" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &gt;</type>
        <definition>std::optional&lt; OutputIterator &gt; CGAL::Barycentric_coordinates::BarycentricCoordinates_2::weights</definition>
        <argsstring>(const Traits::Point_2 &amp;query_point, OutputIterator &amp;output)</argsstring>
        <name>weights</name>
        <qualifiedname>CGAL::Barycentric_coordinates::BarycentricCoordinates_2::weights</qualifiedname>
        <param>
          <type>const Traits::Point_2 &amp;</type>
          <declname>query_point</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>A function that computes generalized barycentric coordinates without normalization that are called generalized barycentric weights (as fast as possible algorithm is used). </para>
        </briefdescription>
        <detaileddescription>
<para>Weights are computed with respect to a query point of the type <computeroutput>Traits::Point_2</computeroutput> and stored in the output iterator <computeroutput>output</computeroutput>. The function returns a pointer to the last stored element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="49" column="3" bodyfile="Concepts/BarycentricCoordinates_2.h" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a5dc84c7c3d96a5d15694e5d13009dc99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &gt;</type>
        <definition>std::optional&lt; OutputIterator &gt; CGAL::Barycentric_coordinates::BarycentricCoordinates_2::coordinates_on_bounded_side</definition>
        <argsstring>(const Traits::Point_2 &amp;query_point, OutputIterator &amp;output, const Type_of_algorithm type_of_algorithm)</argsstring>
        <name>coordinates_on_bounded_side</name>
        <qualifiedname>CGAL::Barycentric_coordinates::BarycentricCoordinates_2::coordinates_on_bounded_side</qualifiedname>
        <param>
          <type>const Traits::Point_2 &amp;</type>
          <declname>query_point</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceCGAL_1_1Barycentric__coordinates_1a5e5682512438422f23d6080edc49c05b" kindref="member">Type_of_algorithm</ref></type>
          <declname>type_of_algorithm</declname>
        </param>
        <briefdescription>
<para>A function that computes generalized barycentric coordinates on the bounded side of a polygon with one of two possible algorithms: one is precise and one is fast. </para>
        </briefdescription>
        <detaileddescription>
<para>The algorithm type is specified by the parameter <computeroutput>type_of_algorithm</computeroutput>. Coordinates are computed with respect to a query point of the type <computeroutput>Traits::Point_2</computeroutput> and stored in the output iterator <computeroutput>output</computeroutput>. The function returns a pointer to the last stored element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="62" column="3" bodyfile="Concepts/BarycentricCoordinates_2.h" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a6bc9527767b8fdab64de1a0802fbcb97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &gt;</type>
        <definition>std::optional&lt; OutputIterator &gt; CGAL::Barycentric_coordinates::BarycentricCoordinates_2::coordinates_on_unbounded_side</definition>
        <argsstring>(const Traits::Point_2 &amp;query_point, OutputIterator &amp;output, const Type_of_algorithm type_of_algorithm)</argsstring>
        <name>coordinates_on_unbounded_side</name>
        <qualifiedname>CGAL::Barycentric_coordinates::BarycentricCoordinates_2::coordinates_on_unbounded_side</qualifiedname>
        <param>
          <type>const Traits::Point_2 &amp;</type>
          <declname>query_point</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceCGAL_1_1Barycentric__coordinates_1a5e5682512438422f23d6080edc49c05b" kindref="member">Type_of_algorithm</ref></type>
          <declname>type_of_algorithm</declname>
        </param>
        <briefdescription>
<para>A function that computes generalized barycentric coordinates on the unbounded side of a polygon with one of two possible algorithms: one is precise and one is fast. </para>
        </briefdescription>
        <detaileddescription>
<para>The algorithm type is specified by the parameter <computeroutput>type_of_algorithm</computeroutput>. Coordinates are computed with respect to a query point of the type <computeroutput>Traits::Point_2</computeroutput> and stored in the output iterator <computeroutput>output</computeroutput>. The function returns a pointer to the last stored element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/BarycentricCoordinates_2.h" line="77" column="3" bodyfile="Concepts/BarycentricCoordinates_2.h" bodystart="77" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A concept that describes the set of methods that should be defined for all coordinate models used to parameterize the class <computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Generalized__barycentric__coordinates__2" kindref="compound">Generalized_barycentric_coordinates_2</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Wachspress__2" kindref="compound">Wachspress_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Mean__value__2" kindref="compound">Mean_value_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Discrete__harmonic__2" kindref="compound">Discrete_harmonic_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This part of the package is deprecated since the version 5.4 of CGAL. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="Concepts/BarycentricCoordinates_2.h" line="19" column="1" bodyfile="Concepts/BarycentricCoordinates_2.h" bodystart="19" bodyend="86"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a75ff3e74f7b0e37956b2752d89022e6a" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::BarycentricCoordinates_2</scope><name>BarycentricCoordinates_2</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a5dc84c7c3d96a5d15694e5d13009dc99" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::BarycentricCoordinates_2</scope><name>coordinates_on_bounded_side</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a6bc9527767b8fdab64de1a0802fbcb97" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::BarycentricCoordinates_2</scope><name>coordinates_on_unbounded_side</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1BarycentricCoordinates__2_1a5e5300b178174dc4aa3036f05f45b969" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::BarycentricCoordinates_2</scope><name>weights</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
