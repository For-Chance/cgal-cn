<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Barycentric_coordinates::DiscretizedDomain_2</compoundname>
    <includes local="no">Concepts/DiscretizedDomain_2.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1ad3923891ef4f73ad940bfa141195b7f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Barycentric_coordinates::DiscretizedDomain_2::number_of_vertices</definition>
        <argsstring>() const</argsstring>
        <name>number_of_vertices</name>
        <qualifiedname>CGAL::Barycentric_coordinates::DiscretizedDomain_2::number_of_vertices</qualifiedname>
        <briefdescription>
<para>returns the number of vertices after meshing the domain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiscretizedDomain_2.h" line="27" column="15" bodyfile="Concepts/DiscretizedDomain_2.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1a7707e68e11da330839832ab3ad3bfb86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Vertex_2 &amp;</type>
        <definition>const Vertex_2 &amp; CGAL::Barycentric_coordinates::DiscretizedDomain_2::vertex</definition>
        <argsstring>(const std::size_t query_index) const</argsstring>
        <name>vertex</name>
        <qualifiedname>CGAL::Barycentric_coordinates::DiscretizedDomain_2::vertex</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>query_index</declname>
        </param>
        <briefdescription>
<para>returns a const reference to the vertex with the index <computeroutput>query_index</computeroutput>, the <computeroutput>Vertex_2</computeroutput> type being a model of <computeroutput><ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiscretizedDomain_2.h" line="35" column="18" bodyfile="Concepts/DiscretizedDomain_2.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1aefcf06b888475fa2d25f8dd7bc79f774" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Barycentric_coordinates::DiscretizedDomain_2::is_on_boundary</definition>
        <argsstring>(const std::size_t query_index) const</argsstring>
        <name>is_on_boundary</name>
        <qualifiedname>CGAL::Barycentric_coordinates::DiscretizedDomain_2::is_on_boundary</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>query_index</declname>
        </param>
        <briefdescription>
<para>verifies if the vertex with the index <computeroutput>query_index</computeroutput> is on the boundary of the domain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiscretizedDomain_2.h" line="44" column="8" bodyfile="Concepts/DiscretizedDomain_2.h" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1aae99d239310ef83f65004df7b1b186df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Barycentric_coordinates::DiscretizedDomain_2::operator()</definition>
        <argsstring>(const std::size_t query_index, std::vector&lt; std::size_t &gt; &amp;neighbors)</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Barycentric_coordinates::DiscretizedDomain_2::operator()</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>query_index</declname>
        </param>
        <param>
          <type>std::vector&lt; std::size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <briefdescription>
<para>fills <computeroutput>neighbors</computeroutput> with the indices of the vertices, which form the one-ring neighborhood of the vertex with the index <computeroutput>query_index</computeroutput>, the neighbors have to be in the counterclockwise order and form a simple polygon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiscretizedDomain_2.h" line="54" column="8" bodyfile="Concepts/DiscretizedDomain_2.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1a93fb63783fdc4dd84852340cbc24f782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Barycentric_coordinates::DiscretizedDomain_2::locate</definition>
        <argsstring>(const Query_2 &amp;query, std::vector&lt; std::size_t &gt; &amp;indices)</argsstring>
        <name>locate</name>
        <qualifiedname>CGAL::Barycentric_coordinates::DiscretizedDomain_2::locate</qualifiedname>
        <param>
          <type>const Query_2 &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>std::vector&lt; std::size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>fills <computeroutput>indices</computeroutput> with the indices of the vertices, which form a finite element of the domain, that contains a <computeroutput>query</computeroutput> point; if no indices are found, the <computeroutput>query</computeroutput> point does not belong to the domain; the type <computeroutput>Query_2</computeroutput> is a model of <computeroutput><ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/DiscretizedDomain_2.h" line="64" column="8" bodyfile="Concepts/DiscretizedDomain_2.h" bodystart="64" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A concept that describes the set of methods that should be defined for all discretized domains obtained by meshing the interior part of a simple polygon. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>After meshing, the interior part of the polygon is split into multiple finite elements, which share common edges and vertices. These finite elements are then used to approximate certain types of generalized barycentric coordinate functions. The domain is bounded by the polygon.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Barycentric__coordinates_1_1Delaunay__domain__2" kindref="compound">Delaunay_domain_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/DiscretizedDomain_2.h" line="20" column="1" bodyfile="Concepts/DiscretizedDomain_2.h" bodystart="20" bodyend="68"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1aefcf06b888475fa2d25f8dd7bc79f774" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::DiscretizedDomain_2</scope><name>is_on_boundary</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1a93fb63783fdc4dd84852340cbc24f782" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::DiscretizedDomain_2</scope><name>locate</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1ad3923891ef4f73ad940bfa141195b7f8" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::DiscretizedDomain_2</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1aae99d239310ef83f65004df7b1b186df" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::DiscretizedDomain_2</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Barycentric__coordinates_1_1DiscretizedDomain__2_1a7707e68e11da330839832ab3ad3bfb86" prot="public" virt="non-virtual"><scope>CGAL::Barycentric_coordinates::DiscretizedDomain_2</scope><name>vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
