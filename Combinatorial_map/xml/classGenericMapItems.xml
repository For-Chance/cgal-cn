<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classGenericMapItems" kind="class" language="C++" prot="public">
    <compoundname>GenericMapItems</compoundname>
    <includes local="no">Concepts/GenericMapItems.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGenericMapItems_1aeeb7914e6c9ba619e645f47542573851" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMapItems::Use_index</definition>
        <argsstring></argsstring>
        <name>Use_index</name>
        <qualifiedname>GenericMapItems::Use_index</qualifiedname>
        <briefdescription>
<para>If <computeroutput>Use_index</computeroutput> is <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, uses indices as descriptors. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise (if this type is not defined or different from <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>), use handles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMapItems.h" line="44" column="28" bodyfile="Concepts/GenericMapItems.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMapItems_1ae672b593a82d39d7df344fec1e4d6b7f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GenericMapItems::Index_type</definition>
        <argsstring></argsstring>
        <name>Index_type</name>
        <qualifiedname>GenericMapItems::Index_type</qualifiedname>
        <briefdescription>
<para>Number type used for indices when Use_index is <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, use std::uint32_t. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMapItems.h" line="49" column="28" bodyfile="Concepts/GenericMapItems.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classGenericMapItems_1ae25d6c2751d48c79de9f92f106eed684" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Map</type>
          </param>
        </templateparamlist>
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using GenericMapItems::Dart_wrapper =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Dart_wrapper</name>
        <qualifiedname>GenericMapItems::Dart_wrapper</qualifiedname>
        <briefdescription>
<para>Wrapper class defining type of information associated with darts and types of attributes. </para>
        </briefdescription>
        <detaileddescription>
<para>The class <computeroutput>Dart_wrapper&lt;Map&gt;</computeroutput> must provide:</para>
<para><itemizedlist>
<listitem><para><computeroutput>Dart_wrapper&lt;Map&gt;::Dart_info</computeroutput>, the type of information associated with darts. Not defined or equal to <computeroutput>void</computeroutput> to have no information.</para>
</listitem><listitem><para><computeroutput>Dart_wrapper&lt;Map&gt;::Attributes</computeroutput> The tuple of attributes, containing at most <ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>Map::dimension+1</computeroutput></ref> types (one for each possible cell of the generic map). Each type of the tuple must be either a model of the <computeroutput><ref refid="classCellAttribute" kindref="compound">CellAttribute</ref></computeroutput> concept or <computeroutput>void</computeroutput>. The first type corresponds to 0-attributes, the second to 1-attributes and so on. If the <formula id="81">$ i^{\mbox{th}}$</formula> type in the tuple is <computeroutput>void</computeroutput>, (<emphasis>i</emphasis>-1)-attributes are disabled. Otherwise, (<emphasis>i</emphasis>-1)-attributes are enabled and have the given type. If the size of the tuple is <emphasis>k</emphasis>, with <emphasis>k</emphasis>&lt;<ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>Map::dimension</computeroutput></ref>+1, <formula id="69">$ \forall$</formula><emphasis>i</emphasis>: <emphasis>k</emphasis> <formula id="32">$ \leq$</formula><emphasis>i</emphasis> <formula id="32">$ \leq$</formula><ref refid="classGenericMap_1a3480ee52e53430cd773cbc941d7ad9e8" kindref="member"><computeroutput>Map::dimension</computeroutput></ref>, <emphasis>i</emphasis>-attributes are disabled. If this type is not defined, all attributes are disabled.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>It can be implemented using a nested template class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GenericMapItems.h" line="60" column="3" bodyfile="Concepts/GenericMapItems.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classGenericMapItems" kindref="compound">GenericMapItems</ref></computeroutput> allows to customize a <emphasis>d</emphasis>D generic map by choosing the information associated with darts, by enabling and disabling some attributes, and by choosing to use indices or handles. For that, it defines an inner class template named <ref refid="classGenericMapItems_1ae25d6c2751d48c79de9f92f106eed684" kindref="member"><computeroutput>Dart_wrapper</computeroutput></ref>, with one template parameter, <computeroutput>Map</computeroutput>, a model of the <computeroutput><ref refid="classGenericMap" kindref="compound">GenericMap</ref></computeroutput> concept. This inner class can define the two types <computeroutput>Dart_info</computeroutput> and <computeroutput>Attributes</computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ref refid="structCGAL_1_1Generic__map__min__items" kindref="compound"><computeroutput>CGAL::Generic_map_min_items</computeroutput></ref> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classGenericMap" kindref="compound">GenericMap</ref></computeroutput></para>
</simplesect>
<bold>Example</bold><linebreak/>
</para>
<para>The following examples show two possible models of the <computeroutput><ref refid="classGenericMapItems" kindref="compound">GenericMapItems</ref></computeroutput> concept: the first one for a generic map without dart information, nor enabled attributes, the second one for a generic map that uses std::uint16_t as indices, with a <computeroutput>double</computeroutput> associated with each dart, and edge attributes enabled, and associated with a <ref refid="classCGAL_1_1Cell__attribute" kindref="compound"><computeroutput>Cell_attribute</computeroutput></ref> containing an <computeroutput>int</computeroutput>.</para>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Exemple_Item_1</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CMap<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Dart_wrapper</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Exemple_Item_2</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Boolean__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref><sp/>Use_index;<sp/></highlight><highlight class="comment">//<sp/>CGAL::Tag_false<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::uint16_t<sp/>Index_type;<sp/></highlight><highlight class="comment">//<sp/>std::uint32_t<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GMap<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Dart_wrapper</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Dart_info;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Cell__attribute" kindref="compound">CGAL::Cell_attribute&lt;GMap, int&gt;</ref><sp/>Edge_attrib;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::tuple&lt;void,Edge_attrib&gt;<sp/>Attributes;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="Concepts/GenericMapItems.h" line="39" column="1" bodyfile="Concepts/GenericMapItems.h" bodystart="39" bodyend="62"/>
    <listofallmembers>
      <member refid="classGenericMapItems_1ae25d6c2751d48c79de9f92f106eed684" prot="public" virt="non-virtual"><scope>GenericMapItems</scope><name>Dart_wrapper</name></member>
      <member refid="classGenericMapItems_1ae672b593a82d39d7df344fec1e4d6b7f" prot="public" virt="non-virtual"><scope>GenericMapItems</scope><name>Index_type</name></member>
      <member refid="classGenericMapItems_1aeeb7914e6c9ba619e645f47542573851" prot="public" virt="non-virtual"><scope>GenericMapItems</scope><name>Use_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
