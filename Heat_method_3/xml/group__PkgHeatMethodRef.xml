<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgHeatMethodRef" kind="group">
    <compoundname>PkgHeatMethodRef</compoundname>
    <title>Heat Method Reference</title>
    <innerclass refid="classCGAL_1_1Heat__method__3_1_1Surface__mesh__geodesic__distances__3" prot="public">CGAL::Heat_method_3::Surface_mesh_geodesic_distances_3</innerclass>
    <innergroup refid="group__PkgHeatMethodConcepts">Concepts</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgHeatMethodRef_1ga7e2e30c0e5039e224b19b2e26c02216d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename VertexDistanceMap</type>
          </param>
          <param>
            <type>typename Mode</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Heat_method_3::estimate_geodesic_distances</definition>
        <argsstring>(const TriangleMesh &amp;tm, VertexDistanceMap vdm, typename boost::graph_traits&lt; TriangleMesh &gt;::vertex_descriptor source, Mode)</argsstring>
        <name>estimate_geodesic_distances</name>
        <qualifiedname>CGAL::Heat_method_3::estimate_geodesic_distances</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexDistanceMap</type>
          <declname>vdm</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; TriangleMesh &gt;::vertex_descriptor</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Mode</type>
        </param>
        <briefdescription>
<para>computes for each vertex of the triangle mesh <computeroutput>tm</computeroutput> the estimated geodesic distance to a given source vertex. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is provided only if <ref refid="thirdparty_1thirdpartyEigen" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Eigen</ref> 3.3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a triangulated surface mesh, model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput>. It must have an internal vertex point property map with the value type being a 3D point from a cgal <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexDistanceMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>double</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Mode</parametername>
</parameternamelist>
<parameterdescription>
<para>either the tag <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Direct" kindref="compound">Direct</ref></computeroutput> or <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Intrinsic__Delaunay" kindref="compound">Intrinsic_Delaunay</ref></computeroutput>, which determines if the geodesic distance is computed directly on the mesh or if the intrinsic Delaunay triangulation is applied first. The default is <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Intrinsic__Delaunay" kindref="compound">Intrinsic_Delaunay</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>If <computeroutput>Mode</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Direct" kindref="compound">Direct</ref></computeroutput>, <computeroutput>tm</computeroutput> does not have any degenerate faces </para>
</simplesect>
<simplesect kind="warning"><para>The return type is <computeroutput>double</computeroutput> even when used with an exact kernel.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Heat__method__3_1_1Surface__mesh__geodesic__distances__3" kindref="compound">CGAL::Heat_method_3::Surface_mesh_geodesic_distances_3</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Heat_method_3/Surface_mesh_geodesic_distances_3.h" line="907" column="1" bodyfile="CGAL/Heat_method_3/Surface_mesh_geodesic_distances_3.h" bodystart="907" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHeatMethodRef_1ga564c8ba9b275d2f2d9f59c62cf48da40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename VertexDistanceMap</type>
          </param>
          <param>
            <type>typename VertexConstRange</type>
          </param>
          <param>
            <type>typename Mode</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Heat_method_3::estimate_geodesic_distances</definition>
        <argsstring>(const TriangleMesh &amp;tm, VertexDistanceMap vdm, const VertexConstRange &amp;sources, Mode)</argsstring>
        <name>estimate_geodesic_distances</name>
        <qualifiedname>CGAL::Heat_method_3::estimate_geodesic_distances</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexDistanceMap</type>
          <declname>vdm</declname>
        </param>
        <param>
          <type>const VertexConstRange &amp;</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>Mode</type>
        </param>
        <briefdescription>
<para>computes for each vertex of the triangle mesh <computeroutput>tm</computeroutput> the estimated geodesic distance to a given set of source vertices. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is provided only if <ref refid="thirdparty_1thirdpartyEigen" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Eigen</ref> 3.3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a triangulated surface mesh, model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput> It must have an internal vertex point property map with the value type being a 3D point from a cgal <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexDistanceMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>double</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexConstRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> with value type <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Mode</parametername>
</parameternamelist>
<parameterdescription>
<para>either the tag <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Direct" kindref="compound">Direct</ref></computeroutput> or <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Intrinsic__Delaunay" kindref="compound">Intrinsic_Delaunay</ref></computeroutput>, which determines if the geodesic distance is computed directly on the mesh or if the intrinsic Delaunay triangulation is applied first. The default is <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Intrinsic__Delaunay" kindref="compound">Intrinsic_Delaunay</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>If <computeroutput>Mode</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Direct" kindref="compound">Direct</ref></computeroutput>, <computeroutput>tm</computeroutput> mesh does not have any degenerate faces </para>
</simplesect>
<simplesect kind="warning"><para>The return type is <computeroutput>double</computeroutput> even when used with an exact kernel. </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Heat__method__3_1_1Surface__mesh__geodesic__distances__3" kindref="compound">CGAL::Heat_method_3::Surface_mesh_geodesic_distances_3</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Heat_method_3/Surface_mesh_geodesic_distances_3.h" line="948" column="1" bodyfile="CGAL/Heat_method_3/Surface_mesh_geodesic_distances_3.h" bodystart="948" bodyend="962"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="heat-method-small.png"></image>
 </para>
<para> Keenan Crane, Christina Vaz, and Andreas Fabri The package provides an algorithm that solves the single- or multiple-source shortest path problem by returning an approximation of the geodesic distance for all vertices of a triangle mesh to the closest vertex in a given set of source vertices.    <bold>Introduced in:</bold> CGAL 4.14<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cvf-hm3-24b">cgal:cvf-hm3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Concepts</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classHeatMethodTraits__3" kindref="compound">HeatMethodTraits_3</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Classes</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Heat__method__3_1_1Surface__mesh__geodesic__distances__3" kindref="compound">CGAL::Heat_method_3::Surface_mesh_geodesic_distances_3</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Direct" kindref="compound">CGAL::Heat_method_3::Direct</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Heat__method__3_1_1Intrinsic__Delaunay" kindref="compound">CGAL::Heat_method_3::Intrinsic_Delaunay</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgHeatMethodRef_1ga7e2e30c0e5039e224b19b2e26c02216d" kindref="member">CGAL::Heat_method_3::estimate_geodesic_distances()</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
