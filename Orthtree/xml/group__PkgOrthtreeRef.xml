<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgOrthtreeRef" kind="group">
    <compoundname>PkgOrthtreeRef</compoundname>
    <title>Quadtrees, Octrees and Orthtrees Reference</title>
    <innerclass refid="classCGAL_1_1Orthtree" prot="public">CGAL::Orthtree</innerclass>
    <innergroup refid="group__PkgOrthtreeConcepts">Concepts</innergroup>
    <innergroup refid="group__PkgOrthtreeTraits">Traits</innergroup>
    <innergroup refid="group__PkgOrthtreeSplitPredicates">Split Predicates</innergroup>
    <innergroup refid="group__PkgOrthtreeTraversal">Traversal</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__PkgOrthtreeRef_1ga937c2cf9aa6adc991f40c30071f0adad" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename GeomTraits</type>
          </param>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PointMap</type>
            <defval>Identity_property_map&lt;typename std::iterator_traits&lt;typename PointRange::iterator&gt;::value_type&gt;</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>cubic_nodes</declname>
            <defname>cubic_nodes</defname>
            <defval>false</defval>
          </param>
        </templateparamlist>
        <type>Orthtree&lt; Orthtree_traits_point&lt; GeomTraits, PointRange, PointMap, cubic_nodes, 3 &gt; &gt;</type>
        <definition>using CGAL::Octree = typedef Orthtree&lt;Orthtree_traits_point&lt;GeomTraits, PointRange, PointMap, cubic_nodes, 3&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Octree</name>
        <qualifiedname>CGAL::Octree</qualifiedname>
        <briefdescription>
<para>Alias that specializes the <computeroutput><ref refid="classCGAL_1_1Orthtree" kindref="compound">Orthtree</ref></computeroutput> class to a 3D octree storing 3D points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose value type is the key type of <computeroutput>PointMap</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose value type is <computeroutput>GeomTraits::Point_3</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cubic_nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to enforce cubic nodes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Octree.h" line="38" column="1" bodyfile="CGAL/Octree.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgOrthtreeRef_1gae24e1ab33fb7912f5554ff339ee26424" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename GeomTraits</type>
          </param>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PointMap</type>
            <defval>Identity_property_map &lt;typename std::iterator_traits&lt;typename PointRange::iterator&gt;::value_type&gt;</defval>
          </param>
          <param>
            <type>bool</type>
            <declname>squared_nodes</declname>
            <defname>squared_nodes</defname>
            <defval>false</defval>
          </param>
        </templateparamlist>
        <type>Orthtree&lt; Orthtree_traits_point&lt; GeomTraits, PointRange, PointMap, squared_nodes, 2 &gt; &gt;</type>
        <definition>using CGAL::Quadtree = typedef Orthtree&lt;Orthtree_traits_point&lt;GeomTraits, PointRange, PointMap, squared_nodes, 2&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Quadtree</name>
        <qualifiedname>CGAL::Quadtree</qualifiedname>
        <briefdescription>
<para>Alias that specializes the <computeroutput><ref refid="classCGAL_1_1Orthtree" kindref="compound">Orthtree</ref></computeroutput> class to a 2D quadtree storing 2D points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose value type is the key type of <computeroutput>PointMap</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose value type is <computeroutput>GeomTraits::Point_2</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>square_nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean to enforce square nodes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quadtree.h" line="38" column="1" bodyfile="CGAL/Quadtree.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="octree_thumbnail.png"></image>
   Jackson Campolattaro, Simon Giraudot, CÃ©dric Portaneri, Tong Zhao, and Pierre Alliez The Orthtree package provides a data structure that subdivides space, with specializations for 2D (Quadtree) and 3D (Octree), along with a collection of algorithms for operating on these structures.  </para>
<para> <bold>Introduced in:</bold> CGAL 5.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cpz-o-24b">cgal:cpz-o-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Concepts</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classOrthtreeTraits" kindref="compound">OrthtreeTraits</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classOrthtreeTraitsWithData" kindref="compound">OrthtreeTraitsWithData</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classOrthtreeTraversal" kindref="compound">OrthtreeTraversal</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCollectionPartitioningOrthtreeTraits" kindref="compound">CollectionPartitioningOrthtreeTraits</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Classes</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgOrthtreeRef_1gae24e1ab33fb7912f5554ff339ee26424" kindref="member">CGAL::Quadtree</ref>&lt;GeomTraits, PointRange, PointMap&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgOrthtreeRef_1ga937c2cf9aa6adc991f40c30071f0adad" kindref="member">CGAL::Octree</ref>&lt;GeomTraits, PointRange, PointMap&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Orthtree" kindref="compound">CGAL::Orthtree</ref>&lt;GeomTraits, PointRange, PointMap&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Traits</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits" kindref="compound">CGAL::Orthtree_traits</ref>&lt;GeomTraits, dimension&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits__point" kindref="compound">CGAL::Orthtree_traits_point</ref>&lt;GeomTraits, PointRange, PointMap, dimension&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits__base" kindref="compound">CGAL::Orthtree_traits_base</ref>&lt;GeomTraits&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits__face__graph" kindref="compound">CGAL::Orthtree_traits_face_graph</ref>&lt;TriangleMesh, VertexPointMap&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Split Predicates</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Orthtrees_1_1Maximum__contained__elements" kindref="compound">CGAL::Orthtrees::Maximum_contained_elements</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Orthtrees_1_1Maximum__depth" kindref="compound">CGAL::Orthtrees::Maximum_depth</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Orthtrees_1_1Maximum__depth__and__maximum__contained__elements" kindref="compound">CGAL::Orthtrees::Maximum_depth_and_maximum_contained_elements</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Traversal</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtrees_1_1Preorder__traversal" kindref="compound">CGAL::Orthtrees::Preorder_traversal</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtrees_1_1Postorder__traversal" kindref="compound">CGAL::Orthtrees::Postorder_traversal</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtrees_1_1Leaves__traversal" kindref="compound">CGAL::Orthtrees::Leaves_traversal</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtrees_1_1Level__traversal" kindref="compound">CGAL::Orthtrees::Level_traversal</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
