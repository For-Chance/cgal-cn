<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classOrthtreeTraitsWithData" kind="class" language="C++" prot="public">
    <compoundname>OrthtreeTraitsWithData</compoundname>
    <includes local="no">Concepts/OrthtreeTraitsWithData.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classOrthtreeTraitsWithData_1a300f63004e301e334e058b702a6f22cb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using OrthtreeTraitsWithData::Node_data =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Node_data</name>
        <qualifiedname>OrthtreeTraitsWithData::Node_data</qualifiedname>
        <briefdescription>
<para>The data type contained by each node. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be default constructible, copy constructible and copy assignable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OrthtreeTraitsWithData.h" line="25" column="3" bodyfile="Concepts/OrthtreeTraitsWithData.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOrthtreeTraitsWithData_1a7472b1d8ec1496ce6e0d2b7c9f06ba43" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using OrthtreeTraitsWithData::Construct_root_node_contents =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Construct_root_node_contents</name>
        <qualifiedname>OrthtreeTraitsWithData::Construct_root_node_contents</qualifiedname>
        <briefdescription>
<para>Functor which initializes elements contained by the root node. </para>
        </briefdescription>
        <detaileddescription>
<para>Each node of a tree has an associated <computeroutput>Node_data</computeroutput> value. This functor initializes the <computeroutput>Node_data</computeroutput> of the root node. It takes no arguments, and returns an instance of <computeroutput>Node_data</computeroutput>.</para>
<para>Provides the operator: <computeroutput>Node_data operator()()</computeroutput></para>
<para>Typically, the <computeroutput>Node_data</computeroutput> of the root node contains all the elements in the tree. For a tree in which each node contains a span (such as <computeroutput>std::span()</computeroutput>) this function would return the span containing all items. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OrthtreeTraitsWithData.h" line="41" column="3" bodyfile="Concepts/OrthtreeTraitsWithData.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOrthtreeTraitsWithData_1a1282bac3d31869de9d94946bed8e81ac" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>using OrthtreeTraitsWithData::Distribute_node_contents =  unspecified_type</definition>
        <argsstring></argsstring>
        <name>Distribute_node_contents</name>
        <qualifiedname>OrthtreeTraitsWithData::Distribute_node_contents</qualifiedname>
        <briefdescription>
<para>Functor which fills the contents of the nodes children. </para>
        </briefdescription>
        <detaileddescription>
<para>Provides the operator: <computeroutput>void operator()(Node_index, Orthtree&lt;Traits&gt;&amp;, const Point_d&amp;)</computeroutput></para>
<para>The functor is called during refinement of the <computeroutput>Orthtree</computeroutput> on a node after it has been split. The purpose of the functor is to distribute the <computeroutput>Node_data</computeroutput>, accessible via <computeroutput>tree.data()</computeroutput>, to the data of the nodes children, accessible via <computeroutput>tree.children()</computeroutput>. The first parameter is the <computeroutput>Node_index</computeroutput> of the node. The second parameter provides the instance of the <computeroutput>Orthtree</computeroutput> and the last parameter is the barycenter of the node which will be used as shared corner amongst the children of the node.</para>
<para>For a tree in which each node contains a span, this may mean rearranging the contents of the original node and producing spans containing a subset of its contents for each of its children. For compatibility with locate, the center of the node is considered to be part of the upper half. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OrthtreeTraitsWithData.h" line="58" column="3" bodyfile="Concepts/OrthtreeTraitsWithData.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classOrthtreeTraitsWithData_1a0949878310aeb9689c266181c7a6f7f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOrthtreeTraitsWithData_1a7472b1d8ec1496ce6e0d2b7c9f06ba43" kindref="member">Construct_root_node_contents</ref></type>
        <definition>Construct_root_node_contents OrthtreeTraitsWithData::construct_root_node_contents_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_root_node_contents_object</name>
        <qualifiedname>OrthtreeTraitsWithData::construct_root_node_contents_object</qualifiedname>
        <briefdescription>
<para>constructs an object of type <computeroutput>Construct_root_node_contents</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OrthtreeTraitsWithData.h" line="68" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classOrthtreeTraitsWithData_1a9cdda68dbe428248ae6cf395b66e1290" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOrthtreeTraitsWithData_1a1282bac3d31869de9d94946bed8e81ac" kindref="member">Distribute_node_contents</ref></type>
        <definition>Distribute_node_contents OrthtreeTraitsWithData::distribute_node_contents_object</definition>
        <argsstring>() const</argsstring>
        <name>distribute_node_contents_object</name>
        <qualifiedname>OrthtreeTraitsWithData::distribute_node_contents_object</qualifiedname>
        <briefdescription>
<para>constructs an object of type <computeroutput>Distribute_node_contents</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OrthtreeTraitsWithData.h" line="73" column="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classOrthtreeTraitsWithData" kindref="compound">OrthtreeTraitsWithData</ref></computeroutput> defines the requirements for the template parameter of the <computeroutput><ref refid="classCGAL_1_1Orthtree" kindref="compound">CGAL::Orthtree</ref></computeroutput> class for a node type that stores data. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classOrthtreeTraits" kindref="compound">OrthtreeTraits</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits__point" kindref="compound">CGAL::Orthtree_traits_point</ref>&lt;GeomTraits, PointRange, PointMap, dimension&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits__face__graph" kindref="compound">CGAL::Orthtree_traits_face_graph</ref>&lt;PolygonMesh, VPM&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Orthtree__traits__base" kindref="compound">CGAL::Orthtree_traits_base</ref>&lt;K, dimension&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/OrthtreeTraitsWithData.h" line="16" column="1" bodyfile="Concepts/OrthtreeTraitsWithData.h" bodystart="17" bodyend="76"/>
    <listofallmembers>
      <member refid="classOrthtreeTraitsWithData_1a7472b1d8ec1496ce6e0d2b7c9f06ba43" prot="public" virt="non-virtual"><scope>OrthtreeTraitsWithData</scope><name>Construct_root_node_contents</name></member>
      <member refid="classOrthtreeTraitsWithData_1a0949878310aeb9689c266181c7a6f7f5" prot="public" virt="non-virtual"><scope>OrthtreeTraitsWithData</scope><name>construct_root_node_contents_object</name></member>
      <member refid="classOrthtreeTraitsWithData_1a1282bac3d31869de9d94946bed8e81ac" prot="public" virt="non-virtual"><scope>OrthtreeTraitsWithData</scope><name>Distribute_node_contents</name></member>
      <member refid="classOrthtreeTraitsWithData_1a9cdda68dbe428248ae6cf395b66e1290" prot="public" virt="non-virtual"><scope>OrthtreeTraitsWithData</scope><name>distribute_node_contents_object</name></member>
      <member refid="classOrthtreeTraitsWithData_1a300f63004e301e334e058b702a6f22cb" prot="public" virt="non-virtual"><scope>OrthtreeTraitsWithData</scope><name>Node_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
