<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classExtremalPolygonTraits__2" kind="class" language="C++" prot="public">
    <compoundname>ExtremalPolygonTraits_2</compoundname>
    <includes local="no">Concepts/ExtremalPolygonTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classExtremalPolygonTraits__2_1a4eab0b1e0c9d7a870f45ee6f28e7b4e8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtremalPolygonTraits_2::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>ExtremalPolygonTraits_2::FT</qualifiedname>
        <briefdescription>
<para>model for <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="38" column="26" bodyfile="Concepts/ExtremalPolygonTraits_2.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtremalPolygonTraits__2_1a8d3436a6d15260cf491a134318b22d57" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtremalPolygonTraits_2::Point_2</definition>
        <argsstring></argsstring>
        <name>Point_2</name>
        <qualifiedname>ExtremalPolygonTraits_2::Point_2</qualifiedname>
        <briefdescription>
<para>model for <computeroutput><ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="44" column="26" bodyfile="Concepts/ExtremalPolygonTraits_2.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtremalPolygonTraits__2_1ab3295f1c0c36107f28d495d9b26ba43d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtremalPolygonTraits_2::Less_xy_2</definition>
        <argsstring></argsstring>
        <name>Less_xy_2</name>
        <qualifiedname>ExtremalPolygonTraits_2::Less_xy_2</qualifiedname>
        <briefdescription>
<para>model for <computeroutput>Kernel::Less_xy_2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="50" column="26" bodyfile="Concepts/ExtremalPolygonTraits_2.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtremalPolygonTraits__2_1a4db7d8cdf11f71b8c37dfd09a25d1f18" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtremalPolygonTraits_2::Orientation_2</definition>
        <argsstring></argsstring>
        <name>Orientation_2</name>
        <qualifiedname>ExtremalPolygonTraits_2::Orientation_2</qualifiedname>
        <briefdescription>
<para>model for <computeroutput><ref refid="classKernel_1_1Orientation__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Orientation_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="56" column="26" bodyfile="Concepts/ExtremalPolygonTraits_2.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classExtremalPolygonTraits__2_1a130319f0c4d7ab8761ec75c9344a39f2" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ExtremalPolygonTraits_2::Operation</definition>
        <argsstring></argsstring>
        <name>Operation</name>
        <qualifiedname>ExtremalPolygonTraits_2::Operation</qualifiedname>
        <briefdescription>
<para><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref> class <computeroutput>op</computeroutput>: <computeroutput>Point_2</computeroutput> <formula id="7">$ \times$</formula> <computeroutput>Point_2</computeroutput> <formula id="8">$ \rightarrow$</formula> <computeroutput>FT</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Together with <computeroutput>init</computeroutput> this operation recursively defines the objective function to maximize. Let <formula id="18">$ p$</formula> and <formula id="19">$ q$</formula> be two vertices of a polygon <formula id="2">$ P$</formula> such that <formula id="19">$ q$</formula> precedes <formula id="18">$ p$</formula> in the oriented vertex chain of <formula id="2">$ P$</formula> starting with vertex <formula id="9">$ root$</formula>. Then <computeroutput>op(p,q)</computeroutput> returns the value by which an arbitrary sub-polygon of <formula id="2">$ P$</formula> with vertices from <formula id="20">$ [root,\, q]$</formula> increases when <formula id="18">$ p$</formula> is added to it. E.g. in the maximum area case this is the area of the triangle <formula id="11">$ (root,\, q,\, p)$</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="70" column="26" bodyfile="Concepts/ExtremalPolygonTraits_2.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classExtremalPolygonTraits__2_1a3a757c53c0e1c210acc8a266007ab5cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExtremalPolygonTraits_2::min_k</definition>
        <argsstring>() const</argsstring>
        <name>min_k</name>
        <qualifiedname>ExtremalPolygonTraits_2::min_k</qualifiedname>
        <briefdescription>
<para>returns the minimal <formula id="5">$ k$</formula> for which a maximal <formula id="5">$ k$</formula>-gon can be computed. </para>
        </briefdescription>
        <detaileddescription>
<para>(e.g. in the maximum area case this is three.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classExtremalPolygonTraits__2_1a6300cfa8291b8c5d10949800a7ec5636" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtremalPolygonTraits__2_1a4eab0b1e0c9d7a870f45ee6f28e7b4e8" kindref="member">FT</ref></type>
        <definition>FT ExtremalPolygonTraits_2::init</definition>
        <argsstring>(const Point_2 &amp;p, const Point_2 &amp;q) const</argsstring>
        <name>init</name>
        <qualifiedname>ExtremalPolygonTraits_2::init</qualifiedname>
        <param>
          <type>const <ref refid="classExtremalPolygonTraits__2_1a8d3436a6d15260cf491a134318b22d57" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classExtremalPolygonTraits__2_1a8d3436a6d15260cf491a134318b22d57" kindref="member">Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns the value of the objective function for a polygon consisting of the two points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>(e.g. in the maximum area case this is <computeroutput><ref refid="classExtremalPolygonTraits__2_1a4eab0b1e0c9d7a870f45ee6f28e7b4e8" kindref="member">FT( 0)</ref></computeroutput>.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="89" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classExtremalPolygonTraits__2_1a913549c5a1276dc0de054cf8f7988723" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtremalPolygonTraits__2_1a130319f0c4d7ab8761ec75c9344a39f2" kindref="member">Operation</ref></type>
        <definition>Operation ExtremalPolygonTraits_2::operation</definition>
        <argsstring>(const Point_2 &amp;p) const</argsstring>
        <name>operation</name>
        <qualifiedname>ExtremalPolygonTraits_2::operation</qualifiedname>
        <param>
          <type>const <ref refid="classExtremalPolygonTraits__2_1a8d3436a6d15260cf491a134318b22d57" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>return <computeroutput>Operation</computeroutput> where <computeroutput>p</computeroutput> is the fixed <formula id="9">$ root$</formula> point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="96" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classExtremalPolygonTraits__2_1a165af43f9b7d0be71dc8b3d7cb8113ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator ExtremalPolygonTraits_2::compute_min_k_gon</definition>
        <argsstring>(RandomAccessIterator points_begin, RandomAccessIterator points_end, FT &amp;max_area, OutputIterator o) const</argsstring>
        <name>compute_min_k_gon</name>
        <qualifiedname>ExtremalPolygonTraits_2::compute_min_k_gon</qualifiedname>
        <param>
          <type><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></type>
          <declname>points_begin</declname>
        </param>
        <param>
          <type><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></type>
          <declname>points_end</declname>
        </param>
        <param>
          <type><ref refid="classExtremalPolygonTraits__2_1a4eab0b1e0c9d7a870f45ee6f28e7b4e8" kindref="member">FT</ref> &amp;</type>
          <declname>max_area</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>writes the points of [<computeroutput>points_begin</computeroutput>, <computeroutput>points_end</computeroutput>) forming a <computeroutput><ref refid="classExtremalPolygonTraits__2_1a3a757c53c0e1c210acc8a266007ab5cf" kindref="member">min_k()</ref></computeroutput>-gon rooted at <computeroutput>points_begin[0]</computeroutput> of maximal value to o and returns the past-the-end iterator for that sequence (== <computeroutput>o + <ref refid="classExtremalPolygonTraits__2_1a3a757c53c0e1c210acc8a266007ab5cf" kindref="member">min_k()</ref></computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="107" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classExtremalPolygonTraits__2_1adf00bf92c1e1db9b228e8079b5761025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtremalPolygonTraits__2_1ab3295f1c0c36107f28d495d9b26ba43d" kindref="member">Less_xy_2</ref></type>
        <definition>Less_xy_2 ExtremalPolygonTraits_2::less_xy_2_object</definition>
        <argsstring>()</argsstring>
        <name>less_xy_2_object</name>
        <qualifiedname>ExtremalPolygonTraits_2::less_xy_2_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="114" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classExtremalPolygonTraits__2_1a9edf9f470aeb06e74e64bcb4431ef195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classExtremalPolygonTraits__2_1a4db7d8cdf11f71b8c37dfd09a25d1f18" kindref="member">Orientation_2</ref></type>
        <definition>Orientation_2 ExtremalPolygonTraits_2::orientation_2_object</definition>
        <argsstring>()</argsstring>
        <name>orientation_2_object</name>
        <qualifiedname>ExtremalPolygonTraits_2::orientation_2_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ExtremalPolygonTraits_2.h" line="119" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is an advanced concept. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The concept <computeroutput><ref refid="classExtremalPolygonTraits__2" kindref="compound">ExtremalPolygonTraits_2</ref></computeroutput> provides the types and operations needed to compute a maximal <formula id="5">$ k$</formula>-gon that can be inscribed into a given convex polygon. <htmlonly block="yes"> &lt;/div&gt; </htmlonly></para>
<para><simplesect kind="note"><para><computeroutput><ref refid="classExtremalPolygonTraits__2_1ab3295f1c0c36107f28d495d9b26ba43d" kindref="member">ExtremalPolygonTraits_2::Less_xy_2</ref></computeroutput> and <computeroutput><ref refid="classExtremalPolygonTraits__2_1a4db7d8cdf11f71b8c37dfd09a25d1f18" kindref="member">ExtremalPolygonTraits_2::Orientation_2</ref></computeroutput> are used for (expensive) precondition checking only. Therefore, they need not to be specified, in case that precondition checking is disabled.</para>
</simplesect>
<variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Extremal__polygon__area__traits__2" kindref="compound">CGAL::Extremal_polygon_area_traits_2</ref>&lt;K&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Extremal__polygon__perimeter__traits__2" kindref="compound">CGAL::Extremal_polygon_perimeter_traits_2</ref>&lt;K&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgInscribedAreasRef_1gadc80e01bb74bc8b33fb22c1e31364e0f" kindref="member">CGAL::maximum_area_inscribed_k_gon_2()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgInscribedAreasRef_1ga7051f3ca755d0a5d64b42422e99046a6" kindref="member">CGAL::maximum_perimeter_inscribed_k_gon_2()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgInscribedAreasRef_1ga6ae7d07c984fededc523e252beb643eb" kindref="member">CGAL::extremal_polygon_2()</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/ExtremalPolygonTraits_2.h" line="29" column="1" bodyfile="Concepts/ExtremalPolygonTraits_2.h" bodystart="29" bodyend="123"/>
    <listofallmembers>
      <member refid="classExtremalPolygonTraits__2_1a165af43f9b7d0be71dc8b3d7cb8113ad" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>compute_min_k_gon</name></member>
      <member refid="classExtremalPolygonTraits__2_1a4eab0b1e0c9d7a870f45ee6f28e7b4e8" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>FT</name></member>
      <member refid="classExtremalPolygonTraits__2_1a6300cfa8291b8c5d10949800a7ec5636" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>init</name></member>
      <member refid="classExtremalPolygonTraits__2_1ab3295f1c0c36107f28d495d9b26ba43d" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>Less_xy_2</name></member>
      <member refid="classExtremalPolygonTraits__2_1adf00bf92c1e1db9b228e8079b5761025" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>less_xy_2_object</name></member>
      <member refid="classExtremalPolygonTraits__2_1a3a757c53c0e1c210acc8a266007ab5cf" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>min_k</name></member>
      <member refid="classExtremalPolygonTraits__2_1a130319f0c4d7ab8761ec75c9344a39f2" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>Operation</name></member>
      <member refid="classExtremalPolygonTraits__2_1a913549c5a1276dc0de054cf8f7988723" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>operation</name></member>
      <member refid="classExtremalPolygonTraits__2_1a4db7d8cdf11f71b8c37dfd09a25d1f18" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>Orientation_2</name></member>
      <member refid="classExtremalPolygonTraits__2_1a9edf9f470aeb06e74e64bcb4431ef195" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>orientation_2_object</name></member>
      <member refid="classExtremalPolygonTraits__2_1a8d3436a6d15260cf491a134318b22d57" prot="public" virt="non-virtual"><scope>ExtremalPolygonTraits_2</scope><name>Point_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
