<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Polygon__with__holes__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Polygon_with_holes_2</compoundname>
    <basecompoundref refid="classCGAL_1_1General__polygon__with__holes__2" prot="public" virt="non-virtual">CGAL::General_polygon_with_holes_2&lt; CGAL::Polygon_2&lt; Kernel, std::vector&lt; typename Kernel::Point_2 &gt; &gt; &gt;</basecompoundref>
    <includes local="no">CGAL/Polygon_with_holes_2.h</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
      <param>
        <type>class Containter</type>
        <defval>std::vector&lt;typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref>&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__with__holes__2_1a410b554550625ee964f20bc4f49431c0" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound">CGAL::Polygon_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, Containter &gt;</type>
        <definition>typedef CGAL::Polygon_2&lt;Kernel, Containter&gt; CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_2</definition>
        <argsstring></argsstring>
        <name>Polygon_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="46" column="34" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__with__holes__2_1acfd7bc43572d35f2dc3c8ebf6c13e05d" prot="public" static="no">
        <type><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound">General_polygon_with_holes_2</ref>&lt; <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> &gt;</type>
        <definition>typedef General_polygon_with_holes_2&lt;Polygon_2&gt; CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="47" column="43" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__with__holes__2_1af8f31e5b06c1949826fb408e6a5df8b3" prot="public" static="no">
        <type>Base::Hole_const_iterator</type>
        <definition>typedef Base::Hole_const_iterator CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Hole_const_iterator</definition>
        <argsstring></argsstring>
        <name>Hole_const_iterator</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Hole_const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="48" column="54" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polygon__with__holes__2_1aac20a2110975f94bbc4bc8839693a25a" prot="public" static="no">
        <type>Base::Size</type>
        <definition>typedef Base::Size CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Size</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="49" column="54" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1a2e072d6e4447033245f4468b4b05dbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_with_holes_2</definition>
        <argsstring>()=default</argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="52" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1abaae2728ec47c41dd1644e9e26985e52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_with_holes_2</definition>
        <argsstring>(const Base &amp;base)</argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound">Base</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Constructor from the base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="55" column="3" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1ab8911643d595832760cb7717729333e0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_with_holes_2</definition>
        <argsstring>(const Polygon_2 &amp;pgn_boundary)</argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> &amp;</type>
          <declname>pgn_boundary</declname>
        </param>
        <briefdescription>
<para>Constructor from a polygon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="60" column="12" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1a1ef9f365926c45582d6579b31b5233dd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_with_holes_2</definition>
        <argsstring>(Polygon_2 &amp;&amp;pgn_boundary)</argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> &amp;&amp;</type>
          <declname>pgn_boundary</declname>
        </param>
        <briefdescription>
<para>Cconstructor moving a polygon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="65" column="12" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1adc3d686732eefb6ee3768905d0a4d8f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HolesInputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_with_holes_2</definition>
        <argsstring>(const Polygon_2 &amp;pgn_boundary, HolesInputIterator h_begin, HolesInputIterator h_end)</argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> &amp;</type>
          <declname>pgn_boundary</declname>
        </param>
        <param>
          <type>HolesInputIterator</type>
          <declname>h_begin</declname>
        </param>
        <param>
          <type>HolesInputIterator</type>
          <declname>h_end</declname>
        </param>
        <briefdescription>
<para>Constructor from a polygon (outer boundary) and hole polygons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="71" column="3" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1a666897d0b3f166db326abc848805d14f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HolesInputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::Polygon_with_holes_2</definition>
        <argsstring>(Polygon_2 &amp;&amp;pgn_boundary, HolesInputIterator h_begin, HolesInputIterator h_end)</argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref> &amp;&amp;</type>
          <declname>pgn_boundary</declname>
        </param>
        <param>
          <type>HolesInputIterator</type>
          <declname>h_begin</declname>
        </param>
        <param>
          <type>HolesInputIterator</type>
          <declname>h_end</declname>
        </param>
        <briefdescription>
<para>Cconstructor moving a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>In order to move the hole polygons a <computeroutput>std::move_iterator</computeroutput> may be used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="82" column="3" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1a0df75ff57fe33d43dc5f42ccc3784177" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref></type>
        <definition>Bbox_2 CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::bbox</qualifiedname>
        <briefdescription>
<para>returns the bounding box of the polygon with holes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="89" column="10" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="89" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1aafd0ed8cec7a025ebdf537b61222f0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Kernel_</type>
          </param>
          <param>
            <type>class Container_</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Polygon_with_holes_2&lt; Kernel_, Container_ &gt; &amp;p)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound">Polygon_with_holes_2</ref>&lt; Kernel_, Container_ &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>This operator exports a polygon with holes to the output stream <computeroutput>os</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>An ASCII and a binary format exist. The format can be selected with the CGAL modifiers for streams, <computeroutput>set_ascii_mode()</computeroutput> and <computeroutput>set_binary_mode()</computeroutput>, respectively. The modifier <computeroutput>set_pretty_mode()</computeroutput> can be used to allow for (a few) structuring comments in the output. Otherwise, the output would be free of comments. The default for writing is ASCII without comments.</para>
<para>The number of points of the outer boundary is exported followed by the points themselves in counterclockwise order. Then, the number of holes is exported, and for each hole, the number of points on its outer boundary is exported followed by the points themselves in clockwise order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="127" column="1" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="127" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polygon__with__holes__2_1a4b6117c3559e09dcdfa908746984c9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Kernel_</type>
          </param>
          <param>
            <type>class Container_</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Polygon_with_holes_2&lt; Kernel_, Container_ &gt; &amp;p)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Polygon_with_holes_2::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound">Polygon_with_holes_2</ref>&lt; Kernel_, Container_ &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>This operator imports a polygon with holes from the input stream <computeroutput>is</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Both ASCII and binary formats are supported, and the format is automatically detected.</para>
<para>The format consists of the number of points of the outer boundary followed by the points themselves in counterclockwise order, followed by the number of holes, and for each hole, the number of points of the outer boundary is followed by the points themselves, in clockwise order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_with_holes_2.h" line="185" column="14" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="185" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound">Polygon_with_holes_2</ref></computeroutput> models the concept <computeroutput><ref refid="classGeneralPolygonWithHoles__2" kindref="compound">GeneralPolygonWithHoles_2</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>It represents a linear polygon with holes. It is parameterized with two types (<computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> and <computeroutput><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></computeroutput>) that are used to instantiate the type <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>,<ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput>. This poygon type is used to represent the outer boundary and the boundary of the holes (if any exist).</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classGeneralPolygonWithHoles__2" kindref="compound">GeneralPolygonWithHoles_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::General_polygon_with_holes_2&lt; Polygon_ &gt;</label>
        <link refid="classCGAL_1_1General__polygon__with__holes__2"/>
      </node>
      <node id="1">
        <label>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;</label>
        <link refid="classCGAL_1_1Polygon__with__holes__2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::General_polygon_with_holes_2&lt; Polygon_ &gt;</label>
        <link refid="classCGAL_1_1General__polygon__with__holes__2"/>
      </node>
      <node id="1">
        <label>CGAL::Polygon_with_holes_2&lt; Kernel, Containter &gt;</label>
        <link refid="classCGAL_1_1Polygon__with__holes__2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Polygon_with_holes_2.h" line="41" column="1" bodyfile="CGAL/Polygon_with_holes_2.h" bodystart="43" bodyend="91"/>
    <listofallmembers>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a833c0a7a3ca0837858b51955b460e153" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>add_hole</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a032df7235df235599f2e737e6cd4ca5c" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>add_hole</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1acfd7bc43572d35f2dc3c8ebf6c13e05d" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Base</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1a0df75ff57fe33d43dc5f42ccc3784177" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a56021f901985032440a67f7c7cfb2a05" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a9d1c1d838ffb8b70f74b5401608dbd10" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>clear_holes</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a4283057e3568c996bfd1c7889a29c161" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>clear_outer_boundary</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a0f27fada5e113afbd3ef52bf79ccf08d" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>erase_hole</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a399fe6186eb98eceaf52bd7f6fbe895d" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>General_polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a616ff10056ee749e3b5cb113b2347733" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>General_polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a4cb92e23b1c60a7b06880062c304a0a5" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>General_polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a9440d337c2f0a3de3a9b9019448ee036" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>General_polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a324cef17ac1d300c02f159c30125faf3" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>General_polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a387c6c69a564e44388f72706c0f8e4e3" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>has_holes</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1af8f31e5b06c1949826fb408e6a5df8b3" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Hole_const_iterator</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a516e4544d791a76ca79ed35f655e2af2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Hole_iterator</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1aba49fed54896e9e198e2ff42668e5a9e" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>holes</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1af01d16671ffc0b3000156ada2adc5c48" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>holes</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1ad039eabf9cd9d918db0c5ab5ca7777f2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>holes_begin</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1ac171422447541cddb7d3c519770492c2" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>holes_begin</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a4d1d8ff1acbafc1ae70e02370bac95d9" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Holes_container</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a9058a018434269b4b5995d5d41be80dd" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>holes_end</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a6805b096c217f16402c1cb3a516647b4" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>holes_end</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1ab78671ea4176bf952e2d1c275bb93c59" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>is_empty</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a1590886844e268c2c8bc1b7c0e81b9e6" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>is_plane</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1ab99fa9af24f7be8f34562c4601be10c1" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>is_unbounded</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a4f204ab97ccfe40a4a78b2f6b3479f66" prot="protected" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>m_holes</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a02625975e6636735304cb6e2dfcfcdf2" prot="protected" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>m_pgn</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a7f0e910632afeca36fa45211c303ec73" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>number_of_holes</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1aafd0ed8cec7a025ebdf537b61222f0e8" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1ac1b7a10f31afdaf9be40b1b983c84154" prot="public" virt="non-virtual" ambiguityscope="CGAL::General_polygon_with_holes_2::"><scope>CGAL::Polygon_with_holes_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1a4b6117c3559e09dcdfa908746984c9bc" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1ad9a1dd307a51e4e20a7b8d0bf039fdf0" prot="public" virt="non-virtual" ambiguityscope="CGAL::General_polygon_with_holes_2::"><scope>CGAL::Polygon_with_holes_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1aca8a612366542da500e431247147e612" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>outer_boundary</name></member>
      <member refid="classCGAL_1_1General__polygon__with__holes__2_1a8cb3fe55c59af1d0b9c125e8d366650f" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>outer_boundary</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1a410b554550625ee964f20bc4f49431c0" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1a2e072d6e4447033245f4468b4b05dbf6" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1abaae2728ec47c41dd1644e9e26985e52" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1ab8911643d595832760cb7717729333e0" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1a1ef9f365926c45582d6579b31b5233dd" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1adc3d686732eefb6ee3768905d0a4d8f9" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1a666897d0b3f166db326abc848805d14f" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Polygon__with__holes__2_1aac20a2110975f94bbc4bc8839693a25a" prot="public" virt="non-virtual"><scope>CGAL::Polygon_with_holes_2</scope><name>Size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
