<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Multipolygon__with__holes__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Multipolygon_with_holes_2</compoundname>
    <includes local="no">CGAL/Multipolygon_with_holes_2.h</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
      </param>
      <param>
        <type>class <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
        <defval>std::vector&lt;typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref>&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Definition</header>
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1ad4c0f8b6ec0e00514e4ee8df2dfe8377" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Polygon__2" kindref="compound">CGAL::Polygon_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt;</type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Polygon_2 =  CGAL::Polygon_2&lt;Kernel, Container&gt;</definition>
        <argsstring></argsstring>
        <name>Polygon_2</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Polygon_2</qualifiedname>
        <briefdescription>
<para>polygon type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="42" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound">CGAL::Polygon_with_holes_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt;</type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Polygon_with_holes_2 =  CGAL::Polygon_with_holes_2&lt;Kernel, Container&gt;</definition>
        <argsstring></argsstring>
        <name>Polygon_with_holes_2</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Polygon_with_holes_2</qualifiedname>
        <briefdescription>
<para>polygon with holes type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="45" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1ac79edcb7b70ea2403bfa8167e6faf40c" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" kindref="member">Polygon_with_holes_2</ref></type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::value_type =  Polygon_with_holes_2</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="49" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1a42925d1c97fd1c35266873fa9adb458b" prot="public" static="no">
        <type>std::deque&lt; <ref refid="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" kindref="member">Polygon_with_holes_2</ref> &gt;</type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Polygon_with_holes_container =  std::deque&lt;Polygon_with_holes_2&gt;</definition>
        <argsstring></argsstring>
        <name>Polygon_with_holes_container</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Polygon_with_holes_container</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="50" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1aa7bc477b0bd52dd0f561421439c20bf5" prot="public" static="no">
        <type>typename Polygon_with_holes_container::iterator</type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Polygon_with_holes_iterator =  typename Polygon_with_holes_container::iterator</definition>
        <argsstring></argsstring>
        <name>Polygon_with_holes_iterator</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Polygon_with_holes_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="52" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1ae9d370fdaba6434e9ae5f00992630528" prot="public" static="no">
        <type>typename Polygon_with_holes_container::const_iterator</type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Polygon_with_holes_const_iterator =  typename Polygon_with_holes_container::const_iterator</definition>
        <argsstring></argsstring>
        <name>Polygon_with_holes_const_iterator</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Polygon_with_holes_const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="53" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Multipolygon__with__holes__2_1abac63d31dfe6a053e95862f97accbd84" prot="public" static="no">
        <type>unsigned int</type>
        <definition>using CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Size =  unsigned int</definition>
        <argsstring></argsstring>
        <name>Size</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Size</qualifiedname>
        <briefdescription>
<para>the size type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="56" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Multipolygon__with__holes__2_1adfe9d755e8eee9c99c1aab6616ae77a6" prot="protected" static="no" mutable="no">
        <type>Polygon_with_holes_container</type>
        <definition>Polygon_with_holes_container CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::m_polygons</definition>
        <argsstring></argsstring>
        <name>m_polygons</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::m_polygons</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="125" column="32" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a5cd8d17189b68c964f290ee518d6ac08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Multipolygon_with_holes_2</definition>
        <argsstring>()=default</argsstring>
        <name>Multipolygon_with_holes_2</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Multipolygon_with_holes_2</qualifiedname>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="59" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a8367a3ff7b634e645513ce6341d069e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PolygonsInputIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::Multipolygon_with_holes_2</definition>
        <argsstring>(PolygonsInputIterator p_begin, PolygonsInputIterator p_end)</argsstring>
        <name>Multipolygon_with_holes_2</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::Multipolygon_with_holes_2</qualifiedname>
        <param>
          <type>PolygonsInputIterator</type>
          <declname>p_begin</declname>
        </param>
        <param>
          <type>PolygonsInputIterator</type>
          <declname>p_end</declname>
        </param>
        <briefdescription>
<para>Constructor from polygons. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="63" column="3" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1aea392b9271d728f3e8445a183b0f699d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_container &amp;</type>
        <definition>Polygon_with_holes_container &amp; CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::polygons_with_holes</definition>
        <argsstring>()</argsstring>
        <name>polygons_with_holes</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::polygons_with_holes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="68" column="32" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a13863eb40fca2b590eb522e859245196" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Polygon_with_holes_container &amp;</type>
        <definition>const Polygon_with_holes_container &amp; CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::polygons_with_holes</definition>
        <argsstring>() const</argsstring>
        <name>polygons_with_holes</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::polygons_with_holes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="70" column="38" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1ac42d26498fcda221ec95d3259143c2b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_iterator</type>
        <definition>Polygon_with_holes_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::polygons_with_holes_begin</definition>
        <argsstring>()</argsstring>
        <name>polygons_with_holes_begin</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::polygons_with_holes_begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="72" column="31" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a5017c0529b58557cbdc71d068a19574c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_iterator</type>
        <definition>Polygon_with_holes_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::polygons_with_holes_end</definition>
        <argsstring>()</argsstring>
        <name>polygons_with_holes_end</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::polygons_with_holes_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="74" column="31" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a36b8da7de1f9b201ab0044a2c5afc606" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_iterator</type>
        <definition>Polygon_with_holes_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="76" column="31" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a1f12c7303849fc01e19b4892a42469b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_iterator</type>
        <definition>Polygon_with_holes_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="78" column="31" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1adf6c6fba9511f4eb0d2b7723ad7c5a7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_const_iterator</type>
        <definition>Polygon_with_holes_const_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::polygons_with_holes_begin</definition>
        <argsstring>() const</argsstring>
        <name>polygons_with_holes_begin</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::polygons_with_holes_begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="80" column="37" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a10f7b81412d8d108e18410dd5e6fbf4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_const_iterator</type>
        <definition>Polygon_with_holes_const_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::polygons_with_holes_end</definition>
        <argsstring>() const</argsstring>
        <name>polygons_with_holes_end</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::polygons_with_holes_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="82" column="37" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a52c55b3bc002793ad1288de77d5621ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_const_iterator</type>
        <definition>Polygon_with_holes_const_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="84" column="37" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a09f8fe9fc7018818676ffcad8bafb8fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Polygon_with_holes_const_iterator</type>
        <definition>Polygon_with_holes_const_iterator CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="86" column="37" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1aaecc79b95f25b63c16265bc9a51e1bbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::add_polygon</definition>
        <argsstring>(const Polygon_2 &amp;pgn)</argsstring>
        <name>add_polygon</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::add_polygon</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Multipolygon__with__holes__2_1ad4c0f8b6ec0e00514e4ee8df2dfe8377" kindref="member">Polygon_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="89" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1ae8f49ec4a2e6779d4f587e54b5ea9d22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::add_polygon</definition>
        <argsstring>(Polygon_2 &amp;&amp;pgn)</argsstring>
        <name>add_polygon</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::add_polygon</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Multipolygon__with__holes__2_1ad4c0f8b6ec0e00514e4ee8df2dfe8377" kindref="member">Polygon_2</ref> &amp;&amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="91" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a1b457217c299ea562a3e316fac1bcef9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::add_polygon_with_holes</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>add_polygon_with_holes</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::add_polygon_with_holes</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="93" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a7fa6a7b41ee58b2333bb3f000c5410fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::add_polygon_with_holes</definition>
        <argsstring>(Polygon_with_holes_2 &amp;&amp;pgn)</argsstring>
        <name>add_polygon_with_holes</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::add_polygon_with_holes</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" kindref="member">Polygon_with_holes_2</ref> &amp;&amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="95" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1adc384d59b544f38b417b1eea5dabcfef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::push_back</definition>
        <argsstring>(const Polygon_with_holes_2 &amp;pgn)</argsstring>
        <name>push_back</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::push_back</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" kindref="member">Polygon_with_holes_2</ref> &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="97" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a30091077dbdda3e380fa2804357b8d97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::erase_polygon_with_holes</definition>
        <argsstring>(Polygon_with_holes_iterator pit)</argsstring>
        <name>erase_polygon_with_holes</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::erase_polygon_with_holes</qualifiedname>
        <param>
          <type>Polygon_with_holes_iterator</type>
          <declname>pit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="99" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1ac24f13ecaac6da98f666150114669c46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="101" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a0e37911102c9b35e016c36358e38715e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Multipolygon__with__holes__2_1abac63d31dfe6a053e95862f97accbd84" kindref="member">Size</ref></type>
        <definition>Size CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::number_of_polygons_with_holes</definition>
        <argsstring>() const</argsstring>
        <name>number_of_polygons_with_holes</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::number_of_polygons_with_holes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="103" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1a6f9cdd522e51b4991ff165126c69a341" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref></type>
        <definition>Bbox_2 CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::bbox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="105" column="10" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="105" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1ae65c8f1c0c07d6f35d4b5fd2608fc9df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Multipolygon_with_holes_2&lt; Kernel, Container &gt;::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::is_empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="114" column="8" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="114" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Multipolygon__with__holes__2_1af5b0068a1e5377a69063534d54d881f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Multipolygon_with_holes_2&lt; Kernel, Container &gt; &amp;mp)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Multipolygon_with_holes_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Multipolygon__with__holes__2" kindref="compound">Multipolygon_with_holes_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
<para>inserts a multipolygon with holes to the output stream <computeroutput>os</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>An ASCII and a binary format exist. The format can be selected with the CGAL modifiers for streams, <computeroutput>set_ascii_mode()</computeroutput> and <computeroutput>set_binary_mode()</computeroutput>, respectively. The modifier <computeroutput>set_pretty_mode()</computeroutput> can be used to allow for (a few) structuring comments in the output. Otherwise, the output would be free of comments. The default for writing is ASCII without comments.</para>
<para>The number of polygons is written followed by the polygons. For each polygon, the number of points of the outer boundary is written followed by the points themselves in counterclockwise order. Then, the number of holes is written, and for each hole, the number of points on its outer boundary is written followed by the points themselves in clockwise order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Multipolygon_with_holes_2.h" line="186" column="1" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="186" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Multipolygon__with__holes__2" kindref="compound">Multipolygon_with_holes_2</ref></computeroutput> models the concept <computeroutput><ref refid="classMultipolygonWithHoles__2" kindref="compound">MultipolygonWithHoles_2</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>It is parameterized with two types (<computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> and <computeroutput><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></computeroutput>) that are used to instantiate the types <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound">Polygon_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>,<ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput> and <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound">Polygon_with_holes_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>,<ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput>. The latter is used to represent each polygon with holes. The former is converted to the latter.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classMultipolygonWithHoles__2" kindref="compound">MultipolygonWithHoles_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/Multipolygon_with_holes_2.h" line="35" column="1" bodyfile="CGAL/Multipolygon_with_holes_2.h" bodystart="35" bodyend="126"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1aaecc79b95f25b63c16265bc9a51e1bbf" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>add_polygon</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ae8f49ec4a2e6779d4f587e54b5ea9d22" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>add_polygon</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a1b457217c299ea562a3e316fac1bcef9" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>add_polygon_with_holes</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a7fa6a7b41ee58b2333bb3f000c5410fc" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>add_polygon_with_holes</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a6f9cdd522e51b4991ff165126c69a341" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a36b8da7de1f9b201ab0044a2c5afc606" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a52c55b3bc002793ad1288de77d5621ca" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>begin</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ac24f13ecaac6da98f666150114669c46" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a1f12c7303849fc01e19b4892a42469b4" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>end</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a09f8fe9fc7018818676ffcad8bafb8fe" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>end</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a30091077dbdda3e380fa2804357b8d97" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>erase_polygon_with_holes</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ae65c8f1c0c07d6f35d4b5fd2608fc9df" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>is_empty</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1adfe9d755e8eee9c99c1aab6616ae77a6" prot="protected" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>m_polygons</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a5cd8d17189b68c964f290ee518d6ac08" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Multipolygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a8367a3ff7b634e645513ce6341d069e9" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Multipolygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a0e37911102c9b35e016c36358e38715e" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>number_of_polygons_with_holes</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1af5b0068a1e5377a69063534d54d881f8" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ad4c0f8b6ec0e00514e4ee8df2dfe8377" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Polygon_2</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a4b36e39c6f7d6421aeb10bd18391ecdc" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Polygon_with_holes_2</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ae9d370fdaba6434e9ae5f00992630528" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Polygon_with_holes_const_iterator</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a42925d1c97fd1c35266873fa9adb458b" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Polygon_with_holes_container</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1aa7bc477b0bd52dd0f561421439c20bf5" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Polygon_with_holes_iterator</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1aea392b9271d728f3e8445a183b0f699d" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>polygons_with_holes</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a13863eb40fca2b590eb522e859245196" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>polygons_with_holes</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ac42d26498fcda221ec95d3259143c2b8" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>polygons_with_holes_begin</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1adf6c6fba9511f4eb0d2b7723ad7c5a7a" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>polygons_with_holes_begin</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a5017c0529b58557cbdc71d068a19574c" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>polygons_with_holes_end</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1a10f7b81412d8d108e18410dd5e6fbf4f" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>polygons_with_holes_end</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1adc384d59b544f38b417b1eea5dabcfef" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1abac63d31dfe6a053e95862f97accbd84" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>Size</name></member>
      <member refid="classCGAL_1_1Multipolygon__with__holes__2_1ac79edcb7b70ea2403bfa8167e6faf40c" prot="public" virt="non-virtual"><scope>CGAL::Multipolygon_with_holes_2</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
