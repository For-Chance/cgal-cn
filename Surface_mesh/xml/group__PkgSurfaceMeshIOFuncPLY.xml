<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgSurfaceMeshIOFuncPLY" kind="group">
    <compoundname>PkgSurfaceMeshIOFuncPLY</compoundname>
    <title>I/O Functions (PLY)</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncPLY_1ga3b898d61ab5682756b25c425a8d8ec97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_PLY</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm, std::string &amp;comments, bool verbose=true)</argsstring>
        <name>read_PLY</name>
        <qualifiedname>CGAL::IO::read_PLY</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>extracts the surface mesh from an input stream in the <ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref> and appends it to the surface mesh <computeroutput>sm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>To read a binary file, the flag <computeroutput>std::ios::binary</computeroutput> flag must be set during the creation of the <computeroutput>ifstream</computeroutput>.</para>
</simplesect>
</para>
<para><itemizedlist>
<listitem><para>the operator reads the vertex <computeroutput>point</computeroutput> property and the face <computeroutput>vertex_index</computeroutput> (or <computeroutput>vertex_indices</computeroutput>) property;</para>
</listitem><listitem><para>if three PLY properties <computeroutput>nx</computeroutput>, <computeroutput>ny</computeroutput> and <computeroutput>nz</computeroutput> with type <computeroutput>float</computeroutput> or <computeroutput>double</computeroutput> are found for vertices, a &quot;v:normal&quot; vertex property map is added;</para>
</listitem><listitem><para>if three PLY properties <computeroutput>red</computeroutput>, <computeroutput>green</computeroutput> and <computeroutput>blue</computeroutput> with type <computeroutput>uchar</computeroutput> are found for vertices, a &quot;v:color&quot; vertex property map is added;</para>
</listitem><listitem><para>if three PLY properties <computeroutput>red</computeroutput>, <computeroutput>green</computeroutput> and <computeroutput>blue</computeroutput> with type <computeroutput>uchar</computeroutput> are found for faces, a &quot;f:color&quot; face property map is added;</para>
</listitem><listitem><para>if any other PLY property is found, a &quot;[s]:[name]&quot; property map is added, where <computeroutput>[s]</computeroutput> is <computeroutput>v</computeroutput> for vertex and <computeroutput>f</computeroutput> for face, and <computeroutput>[name]</computeroutput> is the name of the PLY property.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the <emphasis>point</emphasis> property of a vertex. There is no requirement on <computeroutput>P</computeroutput>, besides being default constructible and assignable. In typical use cases it will be a 2D or 3D point type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface mesh to be constructed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>a string used to store the potential comments found in the PLY header. Each line starting by &quot;comment &quot; in the header is appended to the <computeroutput>comments</computeroutput> string (without the &quot;comment &quot; word). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>whether extra information is printed when an incident occurs during reading</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>The data in the stream must represent a two-manifold. If this is not the case the <computeroutput>failbit</computeroutput> of <computeroutput>is</computeroutput> is set and the mesh cleared.</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/IO/PLY.h" line="787" column="6" bodyfile="CGAL/Surface_mesh/IO/PLY.h" bodystart="787" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncPLY_1ga50f0e9f2b293855d2c7f1a62939cbe8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_PLY</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm, const std::string &amp;comments, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_PLY</name>
        <qualifiedname>CGAL::IO::write_PLY</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>inserts the surface mesh in an output stream in the <ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If found, internal property maps with names &quot;v:normal&quot;, &quot;v:color&quot; and &quot;f:color&quot; are inserted in the stream.</para>
<para>All other vertex and face properties with simple types are inserted in the stream. Edges are only inserted in the stream if they have at least one property with simple type: if they do, all edge properties with simple types are inserted in the stream. The halfedges follow the same behavior.</para>
<para><simplesect kind="attention"><para>To write to a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ofstream</computeroutput>, and the <ref refid="group__PkgStreamSupportEnumRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag"><computeroutput>IO::Mode</computeroutput> </ref> of the stream must be set to <computeroutput>BINARY</computeroutput>.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the <emphasis>point</emphasis> property of a vertex. There is no requirement on <computeroutput>P</computeroutput>, besides being default constructible and assignable. In typical use cases it will be a 2D or 3D point type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>the surface mesh to be output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>a string included line by line in the header of the PLY stream (each line will be precedeed by &quot;comment &quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> described below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold>the precision of the stream <computeroutput>os</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only meaningful while using ASCII encoding. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/IO/PLY.h" line="949" column="6" bodyfile="CGAL/Surface_mesh/IO/PLY.h" bodystart="949" bodyend="1143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>I/O Functions for the <ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
