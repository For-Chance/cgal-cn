<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgSurface__mesh" kind="group">
    <compoundname>PkgSurface_mesh</compoundname>
    <title>Surface Mesh Reference</title>
    <innerclass refid="classCGAL_1_1Surface__mesh" prot="public">CGAL::Surface_mesh</innerclass>
    <innergroup refid="group__PkgDrawSurfaceMesh">Draw a Surface Mesh</innergroup>
    <innergroup refid="group__PkgSurfaceMeshIOFunc">I/O Functions</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurface__mesh_1gace96325c1be2a053bba0afd0fae128c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>Surface_mesh&lt; P &gt; &amp;</type>
        <definition>Surface_mesh&lt; P &gt; &amp; operator+=</definition>
        <argsstring>(Surface_mesh&lt; P &gt; &amp;sm, const Surface_mesh&lt; P &gt; &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>CGAL::Surface_mesh::operator+=</qualifiedname>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Inserts <computeroutput>other</computeroutput> into <computeroutput>sm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Shifts the indices of vertices of <computeroutput>other</computeroutput> by <computeroutput>sm.number_of_vertices() + sm.number_of_removed_vertices()</computeroutput> and analogously for halfedges, edges, and faces. Copies entries of all property maps which have the same name in <computeroutput>sm</computeroutput> and <computeroutput>other</computeroutput>. that is, property maps which are only in <computeroutput>other</computeroutput> are ignored. Also copies elements which are marked as removed, and concatenates the freelists of <computeroutput>sm</computeroutput> and <computeroutput>other</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2251" column="16" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2251" bodyend="2255"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1ga5bb8fea5de90f1481268a5e313405808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Surface_mesh::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
<para>This operator calls <computeroutput>write_OFF(std::ostream&amp; os, const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound">CGAL::Surface_mesh</ref>&amp; sm)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2261" column="3" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2261" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurface__mesh_1ga268e72b885b6a04c4ee6c16ad5265b46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Surface_mesh::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Surface_mesh&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
<para>Extracts the surface mesh from an input stream in OFF and appends it to the surface mesh <computeroutput>sm</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This operator calls <computeroutput>read_OFF(std::istream&amp; is, <ref refid="classCGAL_1_1Surface__mesh" kindref="compound">CGAL::Surface_mesh</ref>&amp; sm)</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh/Surface_mesh.h" line="2273" column="16" bodyfile="CGAL/Surface_mesh/Surface_mesh.h" bodystart="2273" bodyend="2277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="Surface_mesh_teaser.png"></image>
   Mario Botsch, Daniel Sieger, Philipp Moeller, and Andreas Fabri The surface mesh class provided by this package is an implementation of the halfedge data structure allowing to represent polyhedral surfaces. It is an alternative to the packages <ref refid="packages_1PkgHalfedgeDS" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Halfedge Data Structures</ref> and <ref refid="packages_1PkgPolyhedron" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">3D Polyhedral Surface</ref>. The main differences are that it is indexed based and not pointer based, and that the mechanism for adding information to vertices, halfedges, edges, and faces is much simpler and can be used at runtime and not at compile time.    <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:bsmf-sm-24b">cgal:bsmf-sm-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Classes</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Surface__mesh" kindref="compound">CGAL::Surface_mesh</ref>&lt;P&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Draw a Surface Mesh</heading>
</para>
<para><itemizedlist>
<listitem><para><ref refid="group__PkgDrawSurfaceMesh" kindref="compound">CGAL::draw&lt;SM&gt;() </ref></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">I/O Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><ref refid="group__PkgSurfaceMeshIOFuncOFF" kindref="compound">I/O for <computeroutput>OFF</computeroutput> files </ref></para>
</listitem><listitem><para><ref refid="group__PkgSurfaceMeshIOFuncPLY" kindref="compound">I/O for <computeroutput>PLY</computeroutput> files </ref></para>
</listitem><listitem><para><computeroutput>read_3MF()</computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
