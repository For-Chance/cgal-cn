<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgSurfaceMeshParameterizationMainFunction" kind="group">
    <compoundname>PkgSurfaceMeshParameterizationMainFunction</compoundname>
    <title>Main Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurfaceMeshParameterizationMainFunction_1ga246acaaf92fb9e3926fae77e625ab0e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class Parameterizer</type>
          </param>
          <param>
            <type>class HD</type>
          </param>
          <param>
            <type>class VertexUVmap</type>
          </param>
        </templateparamlist>
        <type>Error_code</type>
        <definition>Error_code CGAL::Surface_mesh_parameterization::parameterize</definition>
        <argsstring>(TriangleMesh &amp;mesh, Parameterizer parameterizer, HD bhd, VertexUVmap uvmap)</argsstring>
        <name>parameterize</name>
        <qualifiedname>CGAL::Surface_mesh_parameterization::parameterize</qualifiedname>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>Parameterizer</type>
          <declname>parameterizer</declname>
        </param>
        <param>
          <type>HD</type>
          <declname>bhd</declname>
        </param>
        <param>
          <type>VertexUVmap</type>
          <declname>uvmap</declname>
        </param>
        <briefdescription>
<para>computes a one-to-one mapping from a 3D triangle surface <computeroutput>mesh</computeroutput> to a simple 2D domain. </para>
        </briefdescription>
        <detaileddescription>
<para>The mapping is piecewise linear on the triangle mesh. The result is a pair <computeroutput>(u,v)</computeroutput> of parameter coordinates for each vertex of the input mesh.</para>
<para>A one-to-one mapping may be guaranteed or not, depending on the chosen Parameterizer algorithm.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Parameterizer</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classParameterizer__3" kindref="compound">Parameterizer_3</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HD</parametername>
</parameternamelist>
<parameterdescription>
<para>must be the halfedge_descriptor type corresponding to the graph traits of <computeroutput>TriangleMesh</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexUVmap</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and Point_2 (type deduced from <computeroutput>TriangleMesh</computeroutput> using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel_traits</ref></computeroutput>) as value type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a triangulated surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameterizer</parametername>
</parameternamelist>
<parameterdescription>
<para>a parameterizer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bhd</parametername>
</parameternamelist>
<parameterdescription>
<para>a halfedge descriptor on the boundary of <computeroutput>mesh</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uvmap</parametername>
</parameternamelist>
<parameterdescription>
<para>an instantiation of the class <computeroutput>VertexUVmap</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>mesh</computeroutput> must be a triangular mesh. </para>
</simplesect>
<simplesect kind="pre"><para>The mesh border must be mapped onto a convex polygon (for fixed border parameterizations). </para>
</simplesect>
<simplesect kind="pre"><para>The vertices must be indexed (vimap must be initialized). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_parameterization/parameterize.h" line="59" column="12" bodyfile="CGAL/Surface_mesh_parameterization/parameterize.h" bodystart="59" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshParameterizationMainFunction_1gaf59093f653c62e7f5c04bb3be4fb1e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class HD</type>
          </param>
          <param>
            <type>class VertexUVmap</type>
          </param>
        </templateparamlist>
        <type>Error_code</type>
        <definition>Error_code CGAL::Surface_mesh_parameterization::parameterize</definition>
        <argsstring>(TriangleMesh &amp;mesh, HD bhd, VertexUVmap uvmap)</argsstring>
        <name>parameterize</name>
        <qualifiedname>CGAL::Surface_mesh_parameterization::parameterize</qualifiedname>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>HD</type>
          <declname>bhd</declname>
        </param>
        <param>
          <type>VertexUVmap</type>
          <declname>uvmap</declname>
        </param>
        <briefdescription>
<para>computes a one-to-one mapping from a 3D triangle surface <computeroutput>mesh</computeroutput> to a 2D circle, using Floater Mean Value Coordinates algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>A one-to-one mapping is guaranteed.</para>
<para>The mapping is piecewise linear on the input mesh triangles. The result is a <computeroutput>(u,v)</computeroutput> pair of parameter coordinates for each vertex of the input mesh.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>HD</parametername>
</parameternamelist>
<parameterdescription>
<para>must be the halfedge_descriptor type corresponding to the graph traits of <computeroutput>TriangleMesh</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexUVmap</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and Point_2 (type deduced from <computeroutput>TriangleMesh</computeroutput> using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel_traits</ref></computeroutput>) as value type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a triangulated surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bhd</parametername>
</parameternamelist>
<parameterdescription>
<para>a halfedge descriptor on the boundary of <computeroutput>mesh</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uvmap</parametername>
</parameternamelist>
<parameterdescription>
<para>an instantiation of the class <computeroutput>VertexUVmap</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>mesh</computeroutput> must be a triangular mesh. </para>
</simplesect>
<simplesect kind="pre"><para>The vertices must be indexed (vimap must be initialized). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_parameterization/parameterize.h" line="104" column="12" bodyfile="CGAL/Surface_mesh_parameterization/parameterize.h" bodystart="104" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The central functions, main entry point of the package. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
