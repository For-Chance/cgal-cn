<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Apollonius__graph__hierarchy__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Apollonius_graph_hierarchy_2</compoundname>
    <basecompoundref refid="classCGAL_1_1Apollonius__graph__2" prot="public" virt="non-virtual">CGAL::Apollonius_graph_2&lt; Gt, Agds &gt;</basecompoundref>
    <includes local="no">CGAL/Apollonius_graph_hierarchy_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename Gt</type>
      </param>
      <param>
        <type>typename Agds</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a03e2c9d08a1aaffcdc08b9339390686e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::Apollonius_graph_hierarchy_2</definition>
        <argsstring>(Gt gt=Gt())</argsstring>
        <name>Apollonius_graph_hierarchy_2</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::Apollonius_graph_hierarchy_2</qualifiedname>
        <param>
          <type>Gt</type>
          <declname>gt</declname>
          <defval>Gt()</defval>
        </param>
        <briefdescription>
<para>Creates an hierarchy of Apollonius graphs using <computeroutput>gt</computeroutput> as geometric traits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1ad46364f1b6f577f641f31c815fa63be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Input_iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::Apollonius_graph_hierarchy_2</definition>
        <argsstring>(Input_iterator first, Input_iterator beyond, Gt gt=Gt())</argsstring>
        <name>Apollonius_graph_hierarchy_2</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::Apollonius_graph_hierarchy_2</qualifiedname>
        <param>
          <type>Input_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Input_iterator</type>
          <declname>beyond</declname>
        </param>
        <param>
          <type>Gt</type>
          <declname>gt</declname>
          <defval>Gt()</defval>
        </param>
        <briefdescription>
<para>Creates an Apollonius graph hierarchy using <computeroutput>gt</computeroutput> as geometric traits and inserts all sites in the range [<computeroutput>first</computeroutput>, <computeroutput>beyond</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1aa478cd80c93481b79720e7c6e4fa9bd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::Apollonius_graph_hierarchy_2</definition>
        <argsstring>(const Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; &amp;other)</argsstring>
        <name>Apollonius_graph_hierarchy_2</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::Apollonius_graph_hierarchy_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>All faces, vertices, and inter-level pointers are duplicated. After the construction, <computeroutput>agh</computeroutput> and <computeroutput>other</computeroutput> refer to two different Apollonius graph hierarchies: if <computeroutput>other</computeroutput> is modified, <computeroutput>agh</computeroutput> is not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a10bc94c6da1a8e37f367c562cb40a852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
        <definition>Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::operator=</definition>
        <argsstring>(Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; other)</argsstring>
        <name>operator=</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::operator=</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Assignment. </para>
        </briefdescription>
        <detaileddescription>
<para>All faces, vertices and inter-level pointers are duplicated. After the construction, <computeroutput>agh</computeroutput> and <computeroutput>other</computeroutput> refer to two different Apollonius graph hierarchies: if <computeroutput>other</computeroutput> is modified, <computeroutput>agh</computeroutput> is not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="87" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insertion</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0eaa28df7025c5f0899bb9c7fb721458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Input_iterator</type>
          </param>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::insert</definition>
        <argsstring>(Input_iterator first, Input_iterator beyond)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::insert</qualifiedname>
        <param>
          <type>Input_iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>Input_iterator</type>
          <declname>beyond</declname>
        </param>
        <briefdescription>
<para>Inserts the sites in the range [<computeroutput>first</computeroutput>,<computeroutput>beyond</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
<para>The number of sites in the range [<computeroutput>first</computeroutput>, <computeroutput>beyond</computeroutput>) is returned. <simplesect kind="pre"><para><computeroutput>Input_iterator</computeroutput> must be a model of <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> and its value type must be <computeroutput>Site_2</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="102" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1ac51880e521aaaf257f44f082a73ac36b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::insert</definition>
        <argsstring>(const Site_2 &amp;s)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::insert</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Apollonius__graph__2_1aef591204a5abd776cd7717b258b52f69" kindref="member">Site_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Inserts the site <computeroutput>s</computeroutput> in the Apollonius graph hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s</computeroutput> is visible then the vertex handle of <computeroutput>s</computeroutput> is returned, otherwise <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle(nullptr)</ref></computeroutput> is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="110" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1aef39ca94a20a5bdbbdcd53374e8731ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::insert</definition>
        <argsstring>(const Site_2 &amp;s, Vertex_handle vnear)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::insert</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Apollonius__graph__2_1aef591204a5abd776cd7717b258b52f69" kindref="member">Site_2</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
          <declname>vnear</declname>
        </param>
        <briefdescription>
<para>Inserts <computeroutput>s</computeroutput> in the Apollonius graph hierarchy using the site associated with <computeroutput>vnear</computeroutput> as an estimate for the nearest neighbor of the center of <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s</computeroutput> is visible then the vertex handle of <computeroutput>s</computeroutput> is returned, otherwise <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle(nullptr)</ref></computeroutput> is returned. A call to this method is equivalent to <computeroutput>agh.insert(s);</computeroutput> and it has been added for the sake of conformity with the interface of the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="122" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Removal</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a1dc064a2c574f6e2f9616288a14219fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::remove</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>remove</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::remove</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Removes the site associated to the vertex handle <computeroutput>v</computeroutput> from the Apollonius graph hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>v</computeroutput> must correspond to a valid finite vertex of the Apollonius graph hierarchy. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="135" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Nearest Neighbor Location</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1aa970de0db668f3822db8bd9695258edf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::nearest_neighbor</definition>
        <argsstring>(const Point_2 &amp;p) const</argsstring>
        <name>nearest_neighbor</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::nearest_neighbor</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Apollonius__graph__2_1a4417369c58be047f0159259f4a679a9e" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Finds the nearest neighbor of the point <computeroutput>p</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>In other words it finds the site whose Apollonius cell contains <computeroutput>p</computeroutput>. Ties are broken arbitrarily and one of the nearest neighbors of <computeroutput>p</computeroutput> is returned. If there are no visible sites in the Apollonius diagram <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle(nullptr)</ref></computeroutput> is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="149" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1acae1ba0c79da4e1820951cc1c1bbe404" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
        <definition>Vertex_handle CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::nearest_neighbor</definition>
        <argsstring>(const Point_2 &amp;p, Vertex_handle vnear) const</argsstring>
        <name>nearest_neighbor</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::nearest_neighbor</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Apollonius__graph__2_1a4417369c58be047f0159259f4a679a9e" kindref="member">Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle</ref></type>
          <declname>vnear</declname>
        </param>
        <briefdescription>
<para>Finds the nearest neighbor of the point <computeroutput>p</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If there are no visible sites in the Apollonius diagram <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" kindref="member">Vertex_handle(nullptr)</ref></computeroutput> is returned. A call to this method is equivalent to <computeroutput>agh.nearest_neighbor(p);</computeroutput> and it has been added for the sake of conformity with the interface of the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="160" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>I/O</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a38e31fe1bc3dfc64192bbf7699fe10ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::file_output</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>file_output</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::file_output</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Writes the current state of the Apollonius graph hierarchy to an output stream. </para>
        </briefdescription>
        <detaileddescription>
<para>In particular, all visible and hidden sites are written as well as the underlying combinatorial hierarchical data structure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="173" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a55ac85ac491b3bda8e1aa63030c241f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::file_input</definition>
        <argsstring>(std::istream &amp;is)</argsstring>
        <name>file_input</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::file_input</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Reads the state of the Apollonius graph hierarchy from an input stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="179" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a58071ada6866761daf8815914e6bbc36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; agh) const</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>agh</declname>
        </param>
        <briefdescription>
<para>Writes the current state of the Apollonius graph hierarchy to an output stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a56674948182e2f9aac93f3c2c2f94312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; agh)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt;</type>
          <declname>agh</declname>
        </param>
        <briefdescription>
<para>Reads the state of the Apollonius graph hierarchy from an input stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="190" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Validity Check</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0612cee07f0f84f69b4e6e359ea20b6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::is_valid</definition>
        <argsstring>(bool verbose=false, int level=1) const</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::is_valid</qualifiedname>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Checks the validity of the Apollonius graph hierarchy. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>verbose</computeroutput> is <computeroutput>true</computeroutput> a short message is sent to <computeroutput>std::cerr</computeroutput>. If <computeroutput>level</computeroutput> is 0, the data structure at all levels is validated, as well as the inter-level pointers. If <computeroutput>level</computeroutput> is 1, then the data structure at all levels is validated, the inter-level pointers are validated and all levels of the Apollonius graph hierarchy are also validated. Negative values of <computeroutput>level</computeroutput> always return <computeroutput>true</computeroutput>, and values greater than 1 are equivalent to <computeroutput>level</computeroutput> being 1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="208" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a7f389883387f80c8069b0cea9ea15ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::clear</qualifiedname>
        <briefdescription>
<para>Clears all contents of the Apollonius graph hierarchy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="219" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Apollonius__graph__hierarchy__2_1a08a6fb18d4560cce23fe15bd0e0f78cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;::swap</definition>
        <argsstring>(Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt; &amp;other)</argsstring>
        <name>swap</name>
        <qualifiedname>CGAL::Apollonius_graph_hierarchy_2::swap</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref>&lt; Gt, Agds &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>The Apollonius graph hierarchies <computeroutput>other</computeroutput> and <computeroutput>agh</computeroutput> are swapped. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>agh.swap(other)</computeroutput> should be preferred to <computeroutput>agh = other</computeroutput> or to <computeroutput>agh(other)</computeroutput> if <computeroutput>other</computeroutput> is deleted afterwards. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="226" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>We provide an alternative to the class <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> for the dynamic construction of the Apollonius graph. </para>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> class maintains a hierarchy of Apollonius graphs. The bottom-most level of the hierarchy contains the full Apollonius diagram. A site that is in level <formula id="28">$ i$</formula>, is in level <formula id="29">$ i+1$</formula> with probability <formula id="30">$ 1/\alpha$</formula> where <formula id="31">$ \alpha &gt; 1$</formula> is some constant. The difference between the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class and the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> is on how the nearest neighbor location is done. Given a point <formula id="13">$ p$</formula> the location is done as follows: at the top most level we find the nearest neighbor of <formula id="13">$ p$</formula> as in the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. At every subsequent level <formula id="28">$ i$</formula> we use the nearest neighbor found at level <formula id="29">$ i+1$</formula> to find the nearest neighbor at level <formula id="28">$ i$</formula>. This is a variant of the corresponding hierarchy for points found in <ref refid="citelist_1CITEREF_d-iirdt-98" kindref="member">[2]</ref>.</para>
<para>The class has two template parameters which have essentially the same meaning as in the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Gt</parametername>
</parameternamelist>
<parameterdescription>
<para>is the geometric traits class and must be a model of <computeroutput><ref refid="classApolloniusGraphTraits__2" kindref="compound">ApolloniusGraphTraits_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Agds</parametername>
</parameternamelist>
<parameterdescription>
<para>is the Apollonius graph data structure and must be a model of <computeroutput><ref refid="classApolloniusGraphDataStructure__2" kindref="compound">ApolloniusGraphDataStructure_2</ref></computeroutput> whose vertex and face must be models of <computeroutput><ref refid="classApolloniusGraphHierarchyVertexBase__2" kindref="compound">ApolloniusGraphHierarchyVertexBase_2</ref></computeroutput> and <computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_2.tag">TriangulationFaceBase_2</ref></computeroutput>, respectively. It defaults to: <programlisting><codeline><highlight class="normal"><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">CGAL::Triangulation_data_structure_2</ref>&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__vertex__base__2" kindref="compound">CGAL::Apollonius_graph_hierarchy_vertex_base_2&lt;CGAL::Apollonius_graph_vertex_base_2&lt;Gt,true&gt;</ref><sp/>&gt;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classCGAL_1_1Triangulation__face__base__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_2.tag">CGAL::Triangulation_face_base_2&lt;Gt&gt;</ref><sp/>&gt;</highlight></codeline>
</programlisting></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<bold>Heritage</bold><linebreak/>
</para>
<para>The <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> class derives publicly from the <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> class. The interface is the same with its base class. In the sequel only the methods overridden are documented.</para>
<para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__hierarchy__2" kindref="compound">Apollonius_graph_hierarchy_2</ref></computeroutput> does not introduce other types than those introduced by its base class <computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput>.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__2" kindref="compound">CGAL::Apollonius_graph_2</ref>&lt;Gt,Agds&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__traits__2" kindref="compound">CGAL::Apollonius_graph_traits_2</ref>&lt;K,Method_tag&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Apollonius__graph__filtered__traits__2" kindref="compound">CGAL::Apollonius_graph_filtered_traits_2</ref>&lt;CK,CM,EK,EM,FK,FM&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::Apollonius_graph_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__2"/>
      </node>
      <node id="1">
        <label>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__hierarchy__2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Apollonius_graph_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__2"/>
      </node>
      <node id="1">
        <label>CGAL::Apollonius_graph_hierarchy_2&lt; Gt, Agds &gt;</label>
        <link refid="classCGAL_1_1Apollonius__graph__hierarchy__2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Apollonius_graph_hierarchy_2.h" line="52" column="1" bodyfile="CGAL/Apollonius_graph_hierarchy_2.h" bodystart="52" bodyend="230"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a96f40373b26f5f54f43459866589ce9c" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_edges_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab22fcb7373318bd74c0569988c7f0df6" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_edges_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a1a980bb005f7609fe901793c14e029eb" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>All_edges_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0d2673ad1501aebdebecb504d965a40d" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_faces_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aa96070f479def52c8c41a56944b6257f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_faces_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a42b527855a0d86c39666fadbffe35a0e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>All_faces_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a30c5eec12ceba7c32c3156f84834f07e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_vertices_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a5b2a9454def8fbd012cf7fbd976989d7" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>all_vertices_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a67efc48a9fdc072f18176cf8b2d1bf4f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>All_vertices_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aa5584c72f4877bcac11e5022b79bbb8b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af387fad63bf790839d8ce5ffb2a875aa" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a77b430b6cf2e494cf14099e2a0054c1b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a03e2c9d08a1aaffcdc08b9339390686e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_hierarchy_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1ad46364f1b6f577f641f31c815fa63be4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_hierarchy_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1aa478cd80c93481b79720e7c6e4fa9bd4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Apollonius_graph_hierarchy_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a7f389883387f80c8069b0cea9ea15ca4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a83e2ffdb51bdbade565ef5f04f842bf3" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>data_structure</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1adc99b3b3a8d7adc7f5b4e38a21733985" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Data_structure</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a040616ba5d85f21114b5d9f66f94f975" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dimension</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4af1241444a6f3f0d7060f43d92afd73" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a76c0ba944717855d9de8dd6adc5ddb2b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_dual_edge</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a2fa082ea432ff8cf0e2a1714edb64ea6" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_primal</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a5c663700543fdf1850642be667068799" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>draw_primal_edge</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a304f5fe797914ddda090095ece7fdd7d" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6e6e1b20ab5018c96e4b0ed2c0f0ee00" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ad290e2f58373af8dfd04b083540af35f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab1f5de353e920892190337b1b76cd509" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Edge</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4a54f07541f4ef6fa55ac47cc260b619" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Edge_circulator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a5fd4209127d34c18ac0885520aab5520" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Face</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6935414a5009edc49af24e8100deed54" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Face_circulator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1afe012870773a550396ad67f4cdfe6ccd" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Face_handle</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a55ac85ac491b3bda8e1aa63030c241f4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>file_input</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a38e31fe1bc3dfc64192bbf7699fe10ad" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>file_output</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a186d8f58c9f8835e75f3bd9900e42925" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_edges_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aa68354f251165db9f08d69ae19e57db3" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_edges_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0c52fcbb3b25be0c6b78d4ae68f6661a" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Finite_edges_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ae1ec57a6ed30e596614d7fa9c801ee8c" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_faces_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a26800688e5691e8a926568addb7cdbbe" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_faces_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a3969c0696ecb5a405a1a01a459c5b6df" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Finite_faces_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a203a6d2782af812135a3c3890f8ce842" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_vertex</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0676c730d2f8a39fbf85cff6ba28d856" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_vertices_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ae2308f8e4ad50c30969cffe986ffa2f7" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>finite_vertices_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4c2e91040f1c353a7b611b55614bcf79" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Finite_vertices_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a6b4717e54ecb1feffe55b5a85b5596bf" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>geom_traits</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a1e780c09c97d949d3425144a8cc81e1a" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Geom_traits</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1afb9d549d2654220cca50b20a478c80c9" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>hidden_sites_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a25f6977dceb8fd21143edcf978c04f02" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>hidden_sites_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1afa1b8c7922d472b50aa9503520b12979" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Hidden_sites_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ae737f9780b8e82660cf5cba2e91fa6ab" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_edges</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a246db3669d7f3f37b5b41db82b3bff93" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_edges</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a105e4545eccd9d77d56bc427390b1497" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_faces</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af1c92a3799648b599b776887d3b05435" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_faces</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab79b54196229b0e316f31087b6cdd7b0" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_vertices</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a2abda67bf614ad219266188bd87b8006" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>incident_vertices</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1acf04fd992512b8fc8ad6087954e4495a" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>infinite_face</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a32531acecde7b014ba780c4328ed519d" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>infinite_vertex</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0eaa28df7025c5f0899bb9c7fb721458" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1ac51880e521aaaf257f44f082a73ac36b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1aef39ca94a20a5bdbbdcd53374e8731ae" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a36820d88501404365245c6a7f7fca573" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4fb0275444193c09ffaacacaf3e57b40" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aeeea392554f6977a65d6c46d10bcf51f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ac10e77936155bb1710d70d47f4d6900f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a82b53618d81c23d3b8f250fdbf942827" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_infinite</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a0612cee07f0f84f69b4e6e359ea20b6f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1aa970de0db668f3822db8bd9695258edf" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1acae1ba0c79da4e1820951cc1c1bbe404" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>nearest_neighbor</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a9754175ffe172527164a2aa776153be9" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_faces</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1abd505d277047969aac281c3b06d3024e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_hidden_sites</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af7c36b8cf6eb82fed7f9896540c8e6f5" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_vertices</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af42cb4d4aceda28c842829c0f127df8b" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>number_of_visible_sites</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a58071ada6866761daf8815914e6bbc36" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a0c6f7e8f89f2b15cd1f07c11697c138c" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a10bc94c6da1a8e37f367c562cb40a852" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a2a701a24e0c0a5c4f54383b342e5685d" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a56674948182e2f9aac93f3c2c2f94312" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a3e6ee40ec025851112e67338f1613b0e" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a4417369c58be047f0159259f4a679a9e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Point_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a1dc064a2c574f6e2f9616288a14219fc" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>remove</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aef591204a5abd776cd7717b258b52f69" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Site_2</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ad2c9b1e5cc26b9a09a2f3c3214d8d824" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>sites_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a50982d21aad7b712945046696c71f13f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>sites_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ade765de09304a43067546280f0302003" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Sites_iterator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1af45600846b8c46a7cfb5ede06ff33d7e" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>size_type</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__hierarchy__2_1a08a6fb18d4560cce23fe15bd0e0f78cb" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>swap</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ad4fddfda832750c89647807451ae757e" prot="public" virt="non-virtual" ambiguityscope="CGAL::Apollonius_graph_2::"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>swap</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a17e25341b1e9d805a18e5e7968f5331f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>tds</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a61636138d13c212ff2a6dd4ff5f816c9" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Triangulation_data_structure</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a17245aed36840bee031fc4fa908d2450" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Vertex</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a7c2be7467b149c7c76eab8ea3b1e2d33" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Vertex_circulator</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ac49e5e5289682d991ea051327a4c0d8f" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Vertex_handle</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1ab2f2378456fe1cac1e2983ca59c720a4" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>visible_sites_begin</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1aa6507e4e0c85d68fb62f16bf66a3b561" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>visible_sites_end</name></member>
      <member refid="classCGAL_1_1Apollonius__graph__2_1a03a9c34a198c73ce1604723d4c4926ff" prot="public" virt="non-virtual"><scope>CGAL::Apollonius_graph_hierarchy_2</scope><name>Visible_sites_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
