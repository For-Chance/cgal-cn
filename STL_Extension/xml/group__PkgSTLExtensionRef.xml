<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgSTLExtensionRef" kind="group">
    <compoundname>PkgSTLExtensionRef</compoundname>
    <title>STL Extensions for CGAL Reference</title>
    <innerclass refid="classCGAL_1_1CC__safe__handle" prot="public">CGAL::CC_safe_handle</innerclass>
    <innerclass refid="structCGAL_1_1Concurrent__compact__container__traits" prot="public">CGAL::Concurrent_compact_container_traits</innerclass>
    <innerclass refid="structCGAL_1_1Default" prot="public">CGAL::Default</innerclass>
    <innerclass refid="classCGAL_1_1Iterator__range" prot="public">CGAL::Iterator_range</innerclass>
    <innerclass refid="classCGAL_1_1Multiset" prot="public">CGAL::Multiset</innerclass>
    <innerclass refid="classCGAL_1_1Object" prot="public">CGAL::Object</innerclass>
    <innerclass refid="structCGAL_1_1cpp11_1_1result__of" prot="public">CGAL::cpp11::result_of</innerclass>
    <innerclass refid="classCGAL_1_1Spatial__lock__grid__3" prot="public">CGAL::Spatial_lock_grid_3</innerclass>
    <innerclass refid="structCGAL_1_1value__type__traits" prot="public">CGAL::value_type_traits</innerclass>
    <innergroup refid="group__STLAlgos">Generic Algorithms</innergroup>
    <innergroup refid="group__CompactContainer">Compact Container</innergroup>
    <innergroup refid="group__projectionobjects">Projection Function Objects</innergroup>
    <innergroup refid="group__STLCreators">Creator Function Objects</innergroup>
    <innergroup refid="group__inplacelist">Doubly-Connected List Managing Items in Place</innergroup>
    <innergroup refid="group__STLIterators">Iterators and Iterator/Circulator Adaptors</innergroup>
    <innergroup refid="group__PkgSTLExtensionConcepts">Concepts</innergroup>
    <innergroup refid="group__PkgSTLExtensionUtilities">Utilities</innergroup>
    <innergroup refid="group__PkgSTLExtensionAssertions">Assertions and Failure Behavior</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::parameters::Default_named_parameters</definition>
        <argsstring></argsstring>
        <name>Default_named_parameters</name>
        <qualifiedname>CGAL::parameters::Default_named_parameters</qualifiedname>
        <briefdescription>
<para>Type of the default named parameter pack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Named_function_parameters.h" line="5" column="26" bodyfile="CGAL/Named_function_parameters.h" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSTLExtensionRef_1ga08aa4fa93a53622eae19f823e8e141df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::array&lt; T, N &gt;</type>
        <definition>std::array&lt; T, N &gt; CGAL::make_array</definition>
        <argsstring>(const T &amp;...)</argsstring>
        <name>make_array</name>
        <qualifiedname>CGAL::make_array</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>std::array&lt;T, N&gt;</computeroutput> where <computeroutput>N</computeroutput> is the number of arguments given to the function. The position of each argument in the array is the same as its position in the argument list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/array.h" line="10" column="24" declfile="CGAL/array.h" declline="10" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Default_named_parameters</type>
        <definition>Default_named_parameters CGAL::parameters::default_values</definition>
        <argsstring>()</argsstring>
        <name>default_values</name>
        <qualifiedname>CGAL::parameters::default_values</qualifiedname>
        <briefdescription>
<para>returns a default named parameter type indicating that default values should be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Named_function_parameters.h" line="9" column="26" declfile="CGAL/Named_function_parameters.h" declline="9" declcolumn="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__PkgSTLExtensionRef_1ga859086d0e8d189c8c967229e024e5e82" prot="public" static="no">
        <name>CGAL_ALLOCATOR</name>
        <param><defname>T</defname></param>
        <initializer>std::allocator&lt; T &gt;</initializer>
        <briefdescription>
<para>A define for the allocator used by CGAL. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only defined if there is no user defined version before <computeroutput>memory.h</computeroutput> is included the first time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/memory.h" line="11" column="9" bodyfile="CGAL/memory.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="plusplus.png"></image>
   Michael Hoffmann, Lutz Kettner, Sylvain Pion, and Ron Wein CGAL is designed in the spirit of the generic programming paradigm to work together with the Standard Template Library (STL). This package provides non-geometric STL-like algorithms and datastructures that are not in the STL standard, as well as functions to change the failure behavior of assertions.    <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hkpw-se-24b">cgal:hkpw-se-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">LGPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Doubly-Connected List Managing Items in Place</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1In__place__list" kindref="compound">CGAL::In_place_list</ref>&lt;T,bool&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1In__place__list__base" kindref="compound">CGAL::In_place_list_base</ref>&lt;T&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Compact <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound">CGAL::Compact_container</ref>&lt;T, Allocator&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Compact__container__traits" kindref="compound">CGAL::Compact_container_traits</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Compact__container__base" kindref="compound">CGAL::Compact_container_base</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Multiset with Extended Functionality</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Multiset" kindref="compound">CGAL::Multiset</ref>&lt;Type,Compare,Allocator&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Generic Algorithms</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__STLAlgos_1ga2f3822e4faf8eca315ef0f49c373d05a" kindref="member">CGAL::min_max_element</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__STLAlgos_1ga03da480625f380d4d06ea64de211add4" kindref="member">CGAL::cpp98::random_shuffle</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Iterators and Iterator/Circulator Adaptors</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Dispatch__output__iterator" kindref="compound">CGAL::Dispatch_output_iterator</ref>&lt;V,O&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Dispatch__or__drop__output__iterator" kindref="compound">CGAL::Dispatch_or_drop_output_iterator</ref>&lt;V,O&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Emptyset__iterator" kindref="compound">CGAL::Emptyset_iterator</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Oneset__iterator" kindref="compound">CGAL::Oneset_iterator</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Insert__iterator" kindref="compound">CGAL::Insert_iterator</ref>&lt;<ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Counting__iterator" kindref="compound">CGAL::Counting_iterator</ref>&lt;<ref refid="classIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Iterator</ref>, Value&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1N__step__adaptor" kindref="compound">CGAL::N_step_adaptor</ref>&lt;I,int N&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Filter__iterator" kindref="compound">CGAL::Filter_iterator</ref>&lt;<ref refid="classIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Iterator</ref>, Predicate&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Join__input__iterator__1" kindref="compound">CGAL::Join_input_iterator_1</ref>&lt;<ref refid="classIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Iterator</ref>, Creator&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Inverse__index" kindref="compound">CGAL::Inverse_index</ref>&lt;IC&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Random__access__adaptor" kindref="compound">CGAL::Random_access_adaptor</ref>&lt;IC&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Random__access__value__adaptor" kindref="compound">CGAL::Random_access_value_adaptor</ref>&lt;IC,T&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Ranges</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Iterator__range" kindref="compound">CGAL::Iterator_range</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Projection Function Objects</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Identity" kindref="compound">CGAL::Identity</ref>&lt;Value&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Dereference" kindref="compound">CGAL::Dereference</ref>&lt;Value&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Get__address" kindref="compound">CGAL::Get_address</ref>&lt;Value&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Cast__function__object" kindref="compound">CGAL::Cast_function_object</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__vertex" kindref="compound">CGAL::Project_vertex</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__facet" kindref="compound">CGAL::Project_facet</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__point" kindref="compound">CGAL::Project_point</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__normal" kindref="compound">CGAL::Project_normal</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__plane" kindref="compound">CGAL::Project_plane</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__next" kindref="compound">CGAL::Project_next</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__prev" kindref="compound">CGAL::Project_prev</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__next__opposite" kindref="compound">CGAL::Project_next_opposite</ref>&lt;Node&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Project__opposite__prev" kindref="compound">CGAL::Project_opposite_prev</ref>&lt;Node&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Creator Function Objects</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__1" kindref="compound">CGAL::Creator_1</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__2" kindref="compound">CGAL::Creator_2</ref>&lt;Arg1, Arg2, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__3" kindref="compound">CGAL::Creator_3</ref>&lt;Arg1, Arg2, Arg3, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__4" kindref="compound">CGAL::Creator_4</ref>&lt;Arg1, Arg2, Arg3, Arg4, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__5" kindref="compound">CGAL::Creator_5</ref>&lt;Arg1, Arg2, Arg3, Arg4, Arg5, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__2" kindref="compound">CGAL::Creator_uniform_2</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__3" kindref="compound">CGAL::Creator_uniform_3</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__4" kindref="compound">CGAL::Creator_uniform_4</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__5" kindref="compound">CGAL::Creator_uniform_5</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__6" kindref="compound">CGAL::Creator_uniform_6</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__7" kindref="compound">CGAL::Creator_uniform_7</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__8" kindref="compound">CGAL::Creator_uniform_8</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__9" kindref="compound">CGAL::Creator_uniform_9</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Creator__uniform__d" kindref="compound">CGAL::Creator_uniform_d</ref>&lt;Arg, Result&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Utilities</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Twotuple" kindref="compound">CGAL::Twotuple</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Threetuple" kindref="compound">CGAL::Threetuple</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Fourtuple" kindref="compound">CGAL::Fourtuple</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Sixtuple" kindref="compound">CGAL::Sixtuple</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Triple" kindref="compound">CGAL::Triple</ref>&lt;T1, T2, T3&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Quadruple" kindref="compound">CGAL::Quadruple</ref>&lt;T1, T2, T3, T4&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Boolean__tag" kindref="compound">CGAL::Boolean_tag</ref>&lt;bool value&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member">CGAL::Tag_true</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member">CGAL::Tag_false</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Null__tag" kindref="compound">CGAL::Null_tag</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Null__functor" kindref="compound">CGAL::Null_functor</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound">CGAL::Sequential_tag</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound">CGAL::Parallel_tag</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Parallel__if__available__tag" kindref="compound">CGAL::Parallel_if_available_tag</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Uncertain" kindref="compound">CGAL::Uncertain</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Default" kindref="compound">CGAL::Default</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Fast" kindref="compound">CGAL::Fast</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Compact" kindref="compound">CGAL::Compact</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1Location__policy" kindref="compound">CGAL::Location_policy</ref>&lt;Tag&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga8f61a2b71f265bad92d78ae606afc830" kindref="member">CGAL::Fast_location</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga96bf435aef680d59e1bcb722239222dd" kindref="member">CGAL::Compact_location</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="structCGAL_1_1value__type__traits" kindref="compound">CGAL::value_type_traits</ref>&lt;T&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member">CGAL::parameters::Default_named_parameters</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member">CGAL::parameters::default_values()</ref></computeroutput> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
