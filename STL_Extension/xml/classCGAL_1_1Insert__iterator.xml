<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Insert__iterator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Insert_iterator</compoundname>
    <includes local="no">CGAL/iterator.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Insert__iterator_1ae32b2940b590afe06fecd9ccb3473608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Insert_iterator&lt; Container &gt;::Insert_iterator</definition>
        <argsstring>(Container &amp;c)</argsstring>
        <name>Insert_iterator</name>
        <qualifiedname>CGAL::Insert_iterator::Insert_iterator</qualifiedname>
        <param>
          <type><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>initializes the internal container reference to <computeroutput>c</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="413" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Insert__iterator_1ae316f2ae4e2de55fb827526dcf9a7289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Insert__iterator" kindref="compound">Insert_iterator</ref>&lt; <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt;</type>
        <definition>Insert_iterator&lt; Container &gt; inserter</definition>
        <argsstring>(Container &amp;c)</argsstring>
        <name>inserter</name>
        <qualifiedname>CGAL::Insert_iterator::inserter</qualifiedname>
        <param>
          <type><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Constructs <computeroutput><ref refid="classCGAL_1_1Insert__iterator" kindref="compound">Insert_iterator</ref>&lt;<ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;(x)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/iterator.h" line="386" column="1" declfile="CGAL/iterator.h" declline="386" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The output iterator <computeroutput><ref refid="classCGAL_1_1Insert__iterator" kindref="compound">Insert_iterator</ref></computeroutput> is similar to <computeroutput>std::insert_iterator</computeroutput>, but differs in that it calls the <computeroutput>insert()</computeroutput> function of the container without the iterator additional argument. </para>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>provides a member function <computeroutput>insert(const Container::const_reference&amp;)</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="CGAL/iterator.h" line="404" column="1" bodyfile="CGAL/iterator.h" bodystart="404" bodyend="421"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Insert__iterator_1ae32b2940b590afe06fecd9ccb3473608" prot="public" virt="non-virtual"><scope>CGAL::Insert_iterator</scope><name>Insert_iterator</name></member>
      <member refid="classCGAL_1_1Insert__iterator_1ae316f2ae4e2de55fb827526dcf9a7289" prot="public" virt="non-virtual"><scope>CGAL::Insert_iterator</scope><name>inserter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
