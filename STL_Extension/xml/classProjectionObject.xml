<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classProjectionObject" kind="class" language="C++" prot="public">
    <compoundname>ProjectionObject</compoundname>
    <includes local="no">Concepts/ProjectionObject.h</includes>
      <sectiondef kind="user-defined">
      <header>Definition</header>
      <memberdef kind="typedef" id="classProjectionObject_1ab507db0cd352fd04fe7b7f92fa7bb4dd" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ProjectionObject::argument_type</definition>
        <argsstring></argsstring>
        <name>argument_type</name>
        <qualifiedname>ProjectionObject::argument_type</qualifiedname>
        <briefdescription>
<para>argument type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ProjectionObject.h" line="43" column="26" bodyfile="Concepts/ProjectionObject.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classProjectionObject_1a897b5549df2ea09f3e0697e9543a680f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type ProjectionObject::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <qualifiedname>ProjectionObject::result_type</qualifiedname>
        <briefdescription>
<para>result type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ProjectionObject.h" line="52" column="26" bodyfile="Concepts/ProjectionObject.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classProjectionObject_1ac7e3e8d01f446472c8135f3acbb03cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ProjectionObject::ProjectionObject</definition>
        <argsstring>()</argsstring>
        <name>ProjectionObject</name>
        <qualifiedname>ProjectionObject::ProjectionObject</qualifiedname>
        <briefdescription>
<para>default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ProjectionObject.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classProjectionObject_1a429df2abb3336f26397dcf8f99fb799d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classProjectionObject_1a897b5549df2ea09f3e0697e9543a680f" kindref="member">result_type</ref> &amp;</type>
        <definition>result_type &amp; ProjectionObject::operator()</definition>
        <argsstring>(argument_type &amp;) const</argsstring>
        <name>operator()</name>
        <qualifiedname>ProjectionObject::operator()</qualifiedname>
        <param>
          <type><ref refid="classProjectionObject_1ab507db0cd352fd04fe7b7f92fa7bb4dd" kindref="member">argument_type</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ProjectionObject.h" line="72" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classProjectionObject_1aa224850b85fde6e038378467bdd29602" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classProjectionObject_1a897b5549df2ea09f3e0697e9543a680f" kindref="member">result_type</ref> &amp;</type>
        <definition>const result_type &amp; ProjectionObject::operator()</definition>
        <argsstring>(const argument_type &amp;) const</argsstring>
        <name>operator()</name>
        <qualifiedname>ProjectionObject::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classProjectionObject_1ab507db0cd352fd04fe7b7f92fa7bb4dd" kindref="member">argument_type</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ProjectionObject.h" line="84" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><anchor id="classProjectionObject_1sectionProjectionFunctionObjects"/></para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>The concept <computeroutput><ref refid="classProjectionObject" kindref="compound">ProjectionObject</ref></computeroutput> is modeled after the STL concept <computeroutput>UnaryFunction</computeroutput>, but takes also care of (const) references.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Identity" kindref="compound">CGAL::Identity</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Dereference" kindref="compound">CGAL::Dereference</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Get__address" kindref="compound">CGAL::Get_address</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Cast__function__object" kindref="compound">CGAL::Cast_function_object</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__vertex" kindref="compound">CGAL::Project_vertex</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__facet" kindref="compound">CGAL::Project_facet</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__point" kindref="compound">CGAL::Project_point</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__normal" kindref="compound">CGAL::Project_normal</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__plane" kindref="compound">CGAL::Project_plane</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__next" kindref="compound">CGAL::Project_next</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__prev" kindref="compound">CGAL::Project_prev</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__next__opposite" kindref="compound">CGAL::Project_next_opposite</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="structCGAL_1_1Project__opposite__prev" kindref="compound">CGAL::Project_opposite_prev</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/ProjectionObject.h" line="34" column="1" bodyfile="Concepts/ProjectionObject.h" bodystart="34" bodyend="92"/>
    <listofallmembers>
      <member refid="classProjectionObject_1ab507db0cd352fd04fe7b7f92fa7bb4dd" prot="public" virt="non-virtual"><scope>ProjectionObject</scope><name>argument_type</name></member>
      <member refid="classProjectionObject_1a429df2abb3336f26397dcf8f99fb799d" prot="public" virt="non-virtual"><scope>ProjectionObject</scope><name>operator()</name></member>
      <member refid="classProjectionObject_1aa224850b85fde6e038378467bdd29602" prot="public" virt="non-virtual"><scope>ProjectionObject</scope><name>operator()</name></member>
      <member refid="classProjectionObject_1ac7e3e8d01f446472c8135f3acbb03cbe" prot="public" virt="non-virtual"><scope>ProjectionObject</scope><name>ProjectionObject</name></member>
      <member refid="classProjectionObject_1a897b5549df2ea09f3e0697e9543a680f" prot="public" virt="non-virtual"><scope>ProjectionObject</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
