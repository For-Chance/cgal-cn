<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="devman_create_cgal_CMakeLists" kind="page">
    <compoundname>devman_create_cgal_CMakeLists</compoundname>
    <title>Creating a CMake Script for a Program Using CGAL</title>
    <innerpage refid="devman_create_and_use_a_cmakelist">How to use %CGAL with CMake</innerpage>
    <briefdescription>
<para>To compile a program that is not shipped with CGAL, it is recommended to also rely on a CMake-supported configuration using a <computeroutput>CMakeLists.txt</computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>The Bourne-shell script <computeroutput>cgal_create_CMakeLists.txt</computeroutput> can be used to create such <computeroutput>CMakeLists.txt</computeroutput> files. This script resides in the <computeroutput>scripts</computeroutput> directory of CGAL (e.g. <computeroutput>CGAL-6.0.1</computeroutput><computeroutput>/scripts</computeroutput> directory if you have downloaded a tarball). Executing <computeroutput>cgal_create_CMakeLists.txt</computeroutput> in an application directory creates a <computeroutput>CMakeLists.txt</computeroutput> containing rules to build the contained application(s). Three command line options determine details of the configuration.</para>
<para><variablelist>
<varlistentry><term><bold><computeroutput>-s source</computeroutput></bold></term></varlistentry>
<listitem><para>If this parameter is given the script will create <bold>a single executable</bold> for &apos;source&apos; linked with compilations of all other source files (<computeroutput>*.cc</computeroutput>, <computeroutput>*.cp</computeroutput>, <computeroutput>*.cxx</computeroutput>, <computeroutput>*.cpp</computeroutput>, <computeroutput>*.CPP</computeroutput>, <computeroutput>*.c++</computeroutput>, or <computeroutput>*.C</computeroutput>). This behavior is usually needed for (graphical) demos.</para>
<para>If the parameter is not given, the script creates <bold>one executable for each given source file</bold>. </para>
</listitem>
<varlistentry><term><bold><computeroutput>-c com1:com2:...</computeroutput></bold></term></varlistentry>
<listitem><para>Lists components (&quot;com1&quot;, &quot;com2&quot;) of CGAL to which the executable(s) should be linked. Valid components are CGAL&apos;s libraries (i.e. &quot;Core&quot;, &quot;ImageIO&quot;, and &quot;Qt6&quot;). An example is <computeroutput>-c Core</computeroutput>.</para>
<para></para>
</listitem>
<varlistentry><term><bold><computeroutput>-b boost1:boost2:...</computeroutput></bold></term></varlistentry>
<listitem><para>Lists components (&quot;boost1&quot;, &quot;boost2&quot;) of Boost to which the executable(s) should be linked. Valid options are, for instance, &quot;filesystem&quot; or &quot;program_options&quot;.</para>
<para></para>
</listitem>
</variablelist>
</para>
<para>These options should suffice to create a <computeroutput>CMakeLists.txt</computeroutput> script for most directories containing programs. However, in some special cases, it might still be required to create the script manually, for instance, if some source files/executables need a different linking than other source files. The Section <ref refid="devman_create_and_use_a_cmakelist" kindref="compound">How to use CGAL with CMake</ref> provides more details. </para>
    </detaileddescription>
    <location file="Developer_manual/cmakelist_script.txt"/>
  </compounddef>
</doxygen>
