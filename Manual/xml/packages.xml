<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="packages" kind="page">
    <compoundname>packages</compoundname>
    <title>Package Overview</title>
    <briefdescription>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly> </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="packages_1PartAlgebraicFoundations">
<title>Arithmetic and Algebra</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgAlgebraicFoundations">
<title>Algebraic Foundations</title>
<para>  <image type="html" name="Algebraic_foundations2.png"></image>
   Michael Hemmer This package defines what algebra means for CGAL, in terms of concepts, classes and functions. The main features are: (i) explicit concepts for interoperability of types (ii) separation between algebraic types (not necessarily embeddable into the reals), and number types (embeddable into the reals).   <ref refid="index_1Chapter_Algebraic_Foundations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">User Manual</ref>  <ref refid="group__PkgAlgebraicFoundationsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-af-24b">cgal:h-af-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgNumberTypes">
<title>Number Types</title>
<para>  <image type="html" name="illustration.png"></image>
   Michael Hemmer, Susan Hert, Sylvain Pion, and Stefan Schirra This package provides number type concepts as well as number type classes and wrapper classes for third party number type libraries.    <ref refid="index_1Chapter_Number_Types" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Number_types.tag">User Manual</ref>  <ref refid="group__PkgNumberTypesRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Number_types.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hhkps-nt-24b">cgal:hhkps-nt-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgModularArithmetic">
<title>Modular Arithmetic</title>
<para>  <image type="html" name="Modular_arithmetic.png"></image>
   Michael Hemmer and Sylvain Pion This package provides arithmetic over finite fields. The provided tools are in particular useful for filters based on modular arithmetic and algorithms based on Chinese remainder.    <ref refid="index_1Chapter_Modular_Arithmetic" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Modular_arithmetic.tag">User Manual</ref>  <ref refid="group__PkgModularArithmeticRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Modular_arithmetic.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.4<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-ma-24b">cgal:h-ma-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPolynomial">
<title>Polynomial</title>
<para>  <image type="html" name="Polynomial.png"></image>
   Michael Hemmer This package introduces a concept for univariate and multivariate polynomials in <formula id="0">$ d$</formula> variables. Though the concept is written for an arbitrary number of variables, the number of variables is considered as fixed for a particular model of this concept.   <ref refid="index_1Chapter_Polynomial" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polynomial.tag">User Manual</ref>  <ref refid="group__PkgPolynomialRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polynomial.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-p-24b">cgal:h-p-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgAlgebraicKernelD">
<title>Algebraic Kernel</title>
<para>  <image type="html" name="Algebraic_kernel_d.png"></image>
   Eric Berberich, Michael Hemmer, Michael Kerber, Sylvain Lazard, Luis Peñaranda, and Monique Teillaud Real solving of polynomials is a fundamental problem with a wide application range. This package is targeted to provide black-box implementations of state-of-the-art algorithms to determine, compare and approximate real roots of univariate polynomials and bivariate polynomial systems. Such a black-box is called an <emphasis>Algebraic Kernel</emphasis>. So far the package only provides models for the univariate kernel. Nevertheless, it already defines concepts for the bivariate kernel, since this settles the interface for upcoming implementations.   <ref refid="index_1Chapter_Algebraic_Kernel" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_kernel_d.tag">User Manual</ref>  <ref refid="group__PkgAlgebraicKernelDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_kernel_d.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.6<linebreak/>
 <bold>Depends on:</bold> Some models depend on <ref refid="thirdparty_1thirdpartyRS3" kindref="member">RS and RS3</ref>. <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:bht-ak-24b">cgal:bht-ak-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartCombinatorialAlgorithms">
<title>Combinatorial Algorithms</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgMatrixSearch">
<title>Monotone and Sorted Matrix Search</title>
<para>  <image type="html" name="matrix.png"></image>
   Michael Hoffmann This package provides a matrix search framework, which is the underlying technique for the computation of all furthest neighbors for the vertices of a convex polygon, maximal k-gons inscribed into a planar point set, and computing rectangular p-centers.   <ref refid="index_1Chapter_Monotone_and_Sorted_Matrix_Search" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Matrix_search.tag">User Manual</ref>  <ref refid="group__PkgMatrixSearchRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Matrix_search.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-msms-24b">cgal:h-msms-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgQPSolver">
<title>Linear and Quadratic Programming Solver</title>
<para>  <image type="html" name="qp.png"></image>
   Kaspar Fischer, Bernd Gärtner, Sven Schönherr, and Frans Wessendorp This package contains algorithms for minimizing linear and convex quadratic functions over polyhedral domains, described by linear equations and inequalities. The algorithms are exact, i.e. the solution is computed in terms of multiprecision rational numbers. The resulting solution is certified: along with the claims that the problem under consideration has an optimal solution, is infeasible, or is unbounded, the algorithms also deliver proofs for these facts. These proofs can easily (and independently from the algorithms) be checked for correctness. The solution algorithms are based on a generalization of the simplex method to quadratic objective functions.    <ref refid="index_1Chapter_Linear_and_Quadratic_Programming_Solver" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/QP_solver.tag">User Manual</ref>  <ref refid="group__PkgQPSolverRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/QP_solver.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fgsw-lqps-24b">cgal:fgsw-lqps-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartKernels">
<title>Geometry Kernels</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgKernel23">
<title>2D and 3D Linear Geometry Kernel</title>
<para>  <image type="html" name="pointSegmentTriangle.png"></image>
   Hervé Brönnimann, Andreas Fabri, Geert-Jan Giezeman, Susan Hert, Michael Hoffmann, Lutz Kettner, Sylvain Pion, and Stefan Schirra This package contains kernels each containing objects of constant size, such as point, vector, direction, line, ray, segment, circle as well as predicates and constructions for these objects. The kernels mainly differ in the way they handle robustness issues.   <ref refid="index_1Chapter_2D_and_3D_Geometry_Kernel" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">User Manual</ref>  <ref refid="group__PkgKernel23Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 0.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:bfghhkps-lgk23-24b">cgal:bfghhkps-lgk23-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgKernelD">
<title>dD Geometry Kernel</title>
<para>  <image type="html" name="hypercube.png"></image>
   Michael Seel The dD Kernel contains objects of constant size, such as point, vector, direction, line, ray, segment, circle in d dimensional Euclidean space, as well as predicates and constructions for these objects.   <ref refid="index_1Chapter_dD_Geometry_Kernel" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_d.tag">User Manual</ref>  <ref refid="group__PkgKernelDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_d.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:s-gkd-24b">cgal:s-gkd-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgCircularKernel2">
<title>2D Circular Geometry Kernel</title>
<para>  <image type="html" name="Boolean_operation_detail.png"></image>
   Pedro Machado Manhães de Castro, Sylvain Pion, and Monique Teillaud This package is an extension of the linear CGAL kernel. It offers functionalities on circles, circular arcs and line segments in the plane.    <ref refid="index_1Chapter_2D_Circular_Geometry_Kernel" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">User Manual</ref>  <ref refid="group__PkgCircularKernel2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cpt-cgk2-24b">cgal:cpt-cgk2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/circular_kernel.zip">Arrangement of Circular Arcs</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgCircularKernel3">
<title>3D Spherical Geometry Kernel</title>
<para>  <image type="html" name="segment_sphere_intersection_detail.png"></image>
   Pedro Machado Manhães de Castro, Frédéric Cazals, Sébastien Loriot, and Monique Teillaud This package is an extension of the linear CGAL Kernel. It offers functionalities on spheres, circles, circular arcs and line segments, in the 3D space or restricted on a reference sphere.   <ref refid="index_1Chapter_3D_Spherical_Geometry_Kernel" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_3.tag">User Manual</ref>  <ref refid="group__PkgCircularKernel3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.4<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cclt-sgk3-24b">cgal:cclt-sgk3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartConvexHullAlgorithms">
<title>Convex Hull Algorithms</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgConvexHull2">
<title>2D Convex Hulls and Extreme Points</title>
<para>  <image type="html" name="convex_hull.png"></image>
   Susan Hert and Stefan Schirra This package provides functions for computing convex hulls in two dimensions as well as functions for checking if sets of points are strongly convex are not. There are also a number of functions described for computing particular extreme points and subsequences of hull points, such as the lower and upper hull of a set of points.   <ref refid="index_1Chapter_2D_Convex_Hulls_and_Extreme_Points" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_hull_2.tag">User Manual</ref>  <ref refid="group__PkgConvexHull2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_hull_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hs-chep2-24b">cgal:hs-chep2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/bounding_volumes_2.zip">See Bounding Volumes</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgConvexHull3">
<title>3D Convex Hulls</title>
<para>  <image type="html" name="bunny.png"></image>
   Susan Hert and Stefan Schirra This package provides functions for computing convex hulls in three dimensions as well as functions for checking if sets of points are strongly convex or not. One can compute the convex hull of a set of points in three dimensions in two ways: using a static algorithm or using a triangulation to get a fully dynamic computation.   <ref refid="index_1Chapter_3D_Convex_Hulls" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_hull_3.tag">User Manual</ref>  <ref refid="group__PkgConvexHull3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_hull_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.1<linebreak/>
 <bold>Depends on:</bold> The dynamic algorithms depend on <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref>. <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hs-ch3-24b">cgal:hs-ch3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgConvexHullD">
<title>dD Convex Hulls and Delaunay Triangulations</title>
<para>  <image type="html" name="convex_hull_d-teaser.png"></image>
   Susan Hert and Michael Seel This package provides functions for computing convex hulls and Delaunay triangulations in <formula id="0">$ d$</formula>-dimensional Euclidean space.   <ref refid="index_1Chapter_dD_Convex_Hulls_and_Delaunay_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_hull_d.tag">User Manual</ref>  <ref refid="group__PkgConvexHullDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_hull_d.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hs-chdt3-24b">cgal:hs-chdt3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartPolygons">
<title>Polygons</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgPolygon2">
<title>2D Polygons</title>
<para>  <image type="html" name="polygon.png"></image>
   Geert-Jan Giezeman and Wieger Wesselink This package provides a 2D polygon class and operations on sequences of points, like bounding box, extremal points, signed area, simplicity and convexity test, orientation, and point location. The demo includes operations on polygons, such as computing a convex partition, and the straight skeleton.   <ref refid="index_1Chapter_2D_Polygon" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">User Manual</ref>  <ref refid="group__PkgPolygon2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 0.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:gw-p2-24b">cgal:gw-p2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/polygon.zip">Operations on Polygons</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPolygonRepair">
<title>2D Polygon Repair</title>
<para>  <image type="html" name="Polygon_repair-small.png"></image>
 </para>
<para> Ken Arroyo Ohori This package provides algorithms to repair 2D polygons, polygons with holes, and multipolygons with holes, by selecting faces of the arrangement of the input based on a selection rule. Currently, only the even-odd rule is provided.    <ref refid="index_1Chapter_2D_Polygon_repair" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon_repair.tag">User Manual</ref>  <ref refid="group__PkgPolygonRepairRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon_repair.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 6.0<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgPolygon2" kindref="member">2D Polygons</ref>, <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:a-pr-24b">cgal:a-pr-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgBooleanSetOperations2">
<title>2D Regularized Boolean Set-Operations</title>
<para>  <image type="html" name="Boolean_set_operations_2.png"></image>
   Efi Fogel, Ophir Setter, Ron Wein, Guy Zucker, Baruch Zukerman, and Dan Halperin This package consists of the implementation of Boolean set-operations on point sets bounded by weakly x-monotone curves in 2-dimensional Euclidean space. In particular, it contains the implementation of regularized Boolean set-operations, intersection predicates, and point containment predicates.   <ref refid="index_1Chapter_2D_Regularized_Boolean_Set-Operations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Boolean_set_operations_2.tag">User Manual</ref>  <ref refid="group__PkgBooleanSetOperations2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Boolean_set_operations_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fwzh-rbso2-24b">cgal:fwzh-rbso2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgNef2">
<title>2D Boolean Operations on Nef Polygons</title>
<para>  <image type="html" name="complex-teaser.png"></image>
   Michael Seel A Nef polygon is any set that can be obtained from a finite set of open halfspaces by set complement and set intersection operations. Due to the fact that all other binary set operations like union, difference and symmetric difference can be reduced to intersection and complement calculations, Nef polygons are also closed under those operations. Apart from the set complement operation there are more topological unary set operations that are closed in the domain of Nef polygons interior, boundary, and closure.   <ref refid="index_1Chapter_2D_Boolean_Operations_on_Nef_Polygons" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_2.tag">User Manual</ref>  <ref refid="group__PkgNef2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:s-bonp2-24b">cgal:s-bonp2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgNefS2">
<title>2D Boolean Operations on Nef Polygons Embedded on the Sphere</title>
<para>  <image type="html" name="Nef_S2-teaser-small.png"></image>
   Peter Hachenberger and Lutz Kettner This package offers the equivalent to 2D Nef Polygons in the plane. Here halfplanes correspond to half spheres delimited by great circles.   <ref refid="index_1Chapter_2D_Boolean_Operations_on_Nef_Polygons_Embedded_on_the_Sphere" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_S2.tag">User Manual</ref>  <ref refid="group__PkgNefS2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_S2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgNef2" kindref="member">2D Boolean Operations on Nef Polygons</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hk-bonpes2-24b">cgal:hk-bonpes2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPartition2">
<title>2D Polygon Partitioning</title>
<para>  <image type="html" name="Partition_2-teaser-small.png"></image>
   Susan Hert This package provides functions for partitioning polygons in monotone or convex polygons. The algorithms can produce results with the minimal number of polygons, as well as approximations which have no more than four times the optimal number of convex pieces but they differ in their runtime complexities.   <ref refid="index_1Chapter_2D_Polygon_Partitioning" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Partition_2.tag">User Manual</ref>  <ref refid="group__PkgPartition2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Partition_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-pp2-24b">cgal:h-pp2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgStraightSkeleton2">
<title>2D Straight Skeleton and Polygon Offsetting</title>
<para>  <image type="html" name="StraightSkeletonTeaser.png"></image>
   Fernando Cacciola, Sébastien Loriot, and Mael Rouxel-Labbé This package implements an algorithm to construct a halfedge data structure representing the weighted straight skeleton in the interior of 2D polygons with holes and an algorithm to construct inward offset polygons at any offset distance given a straight skeleton.   <ref refid="index_1Chapter_2D_Straight_Skeleton_and_Polygon_Offsetting" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Straight_skeleton_2.tag">User Manual</ref>  <ref refid="group__PkgStraightSkeleton2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Straight_skeleton_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgHalfedgeDS" kindref="member">Halfedge Data Structures</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:c-sspo2-24b">cgal:c-sspo2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgMinkowskiSum2">
<title>2D Minkowski Sums</title>
<para>  <image type="html" name="Minkowski_sum_2.png"></image>
   Ron Wein, Alon Baram, Eyal Flato, Efi Fogel, Michael Hemmer, and Sebastian Morr This package consists of functions that compute the Minkowski sum of two simple straight-edge polygons in the plane. It also contains functions for computing the Minkowski sum of a polygon and a disc, an operation known as <emphasis>offsetting</emphasis> or <emphasis>dilating</emphasis> a polygon. The package can compute the exact representation of the offset polygon, or provide a guaranteed approximation of the offset.   <ref refid="index_1Chapter_2D_Minkowski_Sums" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Minkowski_sum_2.tag">User Manual</ref>  <ref refid="group__PkgMinkowskiSum2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Minkowski_sum_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref>, <ref refid="packages_1PkgAABBTree" kindref="member">2D and 3D Fast Intersection and Distance Computation</ref>, <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:w-rms2-24b">cgal:w-rms2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPolylineSimplification2">
<title>2D Polyline Simplification</title>
<para>  <image type="html" name="PolylineSimplification-small.png"></image>
   Andreas Fabri This package enables to simplify polylines with the guarantee that the topology of the polylines does not change. This can be done for a single polyline as well as for a set of polyline constraints in a constrained triangulation. The simplification can be controlled with cost and stop functions.   <ref refid="index_1Chapter_2D_Polyline_simplification" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyline_simplification_2.tag">User Manual</ref>  <ref refid="group__PkgPolylineSimplification2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyline_simplification_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:f-ps2-24b">cgal:f-ps2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/polyline_simplification_2.zip">Polyline Simplification</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgVisibility2">
<title>2D Visibility Computation</title>
<para>  <image type="html" name="visibility-teaser-thumbnail.png"></image>
   Michael Hemmer, Kan Huang, Francisc Bungiu, and Ning Xu This package provides several variants to compute the visibility area of a point within polygonal regions in two dimensions.   <ref refid="index_1Chapter_2D_Visibility_Computation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Visibility_2.tag">User Manual</ref>  <ref refid="group__PkgVisibility2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Visibility_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref> <linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#hhb-visibility-2-24b">hhb-visibility-2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSetMovableSeparability2">
<title>2D Movable Separability of Sets</title>
<para>  <image type="html" name="Casting_2.png"></image>
   Shahar Shamai and Efi Fogel <emphasis>Movable Separability of Sets</emphasis> <ref refid="citelist_1CITEREF_t-mss-85" kindref="member">[11]</ref> is a class of problems that deal with moving sets of objects, such as polygons in the plane; the challenge is to avoid collisions between the objects while considering different kinds of motions and various definitions of separation.   <ref refid="index_1Chapter_SetMovableSeparability2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Set_movable_separability_2.tag">User Manual</ref>  <ref refid="group__PkgSetMovableSeparability2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Set_movable_separability_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.12<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgPolygon2" kindref="member">2D Polygons</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:sf-sms2-24b">cgal:sf-sms2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartPolyhedra">
<title>Cell Complexes and Polyhedra</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgPolyhedron">
<title>3D Polyhedral Surface</title>
<para>  <image type="html" name="Polyhedron-teaser-small.png"></image>
   Lutz Kettner Polyhedral surfaces in three dimensions are composed of vertices, edges, facets and an incidence relationship on them. The organization beneath is a halfedge data structure, which restricts the class of representable surfaces to orientable 2-manifolds - with and without boundary. If the surface is closed we call it a polyhedron.   <ref refid="index_1Chapter_3D_Polyhedral_Surfaces" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyhedron.tag">User Manual</ref>  <ref refid="group__PkgPolyhedronRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyhedron.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgHalfedgeDS" kindref="member">Halfedge Data Structures</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:k-ps-24b">cgal:k-ps-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgHalfedgeDS">
<title>Halfedge Data Structures</title>
<para>  <image type="html" name="HalfedgeDS-teaser-small.png"></image>
   Lutz Kettner A halfedge data structure is an edge-centered data structure capable of maintaining incidence information of vertices, edges and faces, for example for planar maps, polyhedra, or other orientable, two-dimensional surfaces embedded in arbitrary dimension. Each edge is decomposed into two halfedges with opposite orientations. One incident face and one incident vertex are stored in each halfedge. For each face and each vertex, one incident halfedge is stored. Reduced variants of the halfedge data structure can omit some of these information, for example the halfedge pointers in faces or the storage of faces at all.   <ref refid="index_1Chapter_Halfedge_Data_Structures" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/HalfedgeDS.tag">User Manual</ref>  <ref refid="group__PkgHalfedgeDSRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/HalfedgeDS.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:k-hds-24b">cgal:k-hds-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMesh">
<title>Surface Mesh</title>
<para>  <image type="html" name="Surface_mesh_teaser.png"></image>
   Mario Botsch, Daniel Sieger, Philipp Moeller, and Andreas Fabri The surface mesh class provided by this package is an implementation of the halfedge data structure allowing to represent polyhedral surfaces. It is an alternative to the packages <ref refid="packages_1PkgHalfedgeDS" kindref="member">Halfedge Data Structures</ref> and <ref refid="packages_1PkgPolyhedron" kindref="member">3D Polyhedral Surface</ref>. The main differences are that it is indexed based and not pointer based, and that the mechanism for adding information to vertices, halfedges, edges, and faces is much simpler and can be used at runtime and not at compile time.   <ref refid="index_1Chapter_3D_Surface_mesh" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">User Manual</ref>  <ref refid="group__PkgSurface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:bsmf-sm-24b">cgal:bsmf-sm-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgCombinatorialMaps">
<title>Combinatorial Maps</title>
<para>  <image type="html" name="cmap_logo.png"></image>
   Guillaume Damiand This package implements Combinatorial Maps in <emphasis>d</emphasis> dimensions. A combinatorial map is a data structure enabling to represent an orientable subdivided object by describing all the cells of the subdivision (for example in 3D vertices, edges, faces, volumes) and all the incidence and adjacency relationships between these cells. Information can be associated to cells thanks to attributes. In 2D, a combinatorial map is equivalent to a halfedge data structure. The package provides basic creation, modification operations, and several iterators enabling to run through some specific part of the object.   <ref refid="index_1Chapter_Combinatorial_Maps" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Combinatorial_map.tag">User Manual</ref>  <ref refid="group__PkgCombinatorialMapsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Combinatorial_map.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:d-cm-24b">cgal:d-cm-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgGeneralizedMaps">
<title>Generalized Maps</title>
<para>  <image type="html" name="gmap_logo.png"></image>
   Guillaume Damiand This package implements Generalized Maps in <emphasis>d</emphasis> dimensions. A generalized map is a data structure enabling to represent an orientable or non orientable subdivided object by describing all the cells of the subdivision (for example in 3D vertices, edges, faces, volumes) and all the incidence and adjacency relationships between these cells. Information can be associated to cells thanks to attributes. The package provides basic creation, modification operations, and several iterators enabling to run through some specific part of the object.   <ref refid="index_1Chapter_Generalized_Maps" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Generalized_map.tag">User Manual</ref>  <ref refid="group__PkgGeneralizedMapsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Generalized_map.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:d-gm-24b">cgal:d-gm-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgLinearCellComplex">
<title>Linear Cell Complex</title>
<para>  <image type="html" name="lcc_logo.png"></image>
   Guillaume Damiand This package implements linear cell complexes, objects in <emphasis>d</emphasis>-dimension with linear geometry. The combinatorial part of objects is described either by a combinatorial or a generalized map, representing all the cells of the object plus the incidence and adjacency relations between cells. Geometry is added to the combinatorial data-structure simply by associating a point to each vertex of the map. Taking a 2D combinatorial map, and using 3D points, gives a linear cell complex equivalent to a <emphasis>Polyhedron_3</emphasis>.   <ref refid="index_1Chapter_Linear_Cell_Complex" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Linear_cell_complex.tag">User Manual</ref>  <ref refid="group__PkgLinearCellComplexRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Linear_cell_complex.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.0<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgCombinatorialMaps" kindref="member">Combinatorial Maps</ref> <linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgGeneralizedMaps" kindref="member">Generalized Maps</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:d-lcc-12-24b">cgal:d-lcc-12-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/linear_cell_complex_3.zip">3D Linear Cell Complex</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgNef3">
<title>3D Boolean Operations on Nef Polyhedra</title>
<para>  <image type="html" name="Nef_3-teaser.png"></image>
   Peter Hachenberger and Lutz Kettner 3D Nef polyhedra, are a boundary representation for cell-complexes bounded by halfspaces that supports Boolean operations and topological operations in full generality including unbounded cells, mixed dimensional cells (e.g., isolated vertices and antennas). Nef polyhedra distinguish between open and closed sets and can represent non-manifold geometry.   <ref refid="index_1Chapter_3D_Boolean_Operations_on_Nef_Polyhedra" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">User Manual</ref>  <ref refid="group__PkgNef3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgNef2" kindref="member">2D Boolean Operations on Nef Polygons</ref>, <ref refid="packages_1PkgNefS2" kindref="member">2D Boolean Operations on Nef Polygons Embedded on the Sphere</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hk-bonp3-24b">cgal:hk-bonp3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgConvexDecomposition3">
<title>Convex Decomposition of Polyhedra</title>
<para>  <image type="html" name="Convex_decomposition_3-teaser.png"></image>
   Peter Hachenberger This packages provides a function for decomposing a bounded polyhedron into convex sub-polyhedra. The decomposition yields <formula id="13">$O(r^2)$</formula> convex pieces, where <formula id="14">$ r$</formula> is the number of edges, whose adjacent facets form an angle of more than 180 degrees with respect to the polyhedron&apos;s interior. This bound is worst-case optimal.    <ref refid="index_1Chapter_Convex_Decomposition_of_Polyhedra" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_decomposition_3.tag">User Manual</ref>  <ref refid="group__PkgConvexDecomposition3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Convex_decomposition_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-emspe-24b">cgal:h-emspe-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgMinkowskiSum3">
<title>3D Minkowski Sum of Polyhedra</title>
<para>  <image type="html" name="Minkowski_sum_3_teaser.png"></image>
   Peter Hachenberger This package provides a function, which computes the Minkowski sum of two point sets in <formula id="15">$ \mathbb{R}^3$</formula>. These point sets may consist of isolated vertices, isolated edges, surfaces with convex facets without holes, and open and closed solids. Thus, it is possible to compute the configuration space of translational robots (even in tight passage scenarios) as well as several graphics operations, like for instance the glide operation, which computes the point set swept by a polyhedron that moves along a polygonal line.   <ref refid="index_1Chapter_3D_Minkowski_Sum_of_Polyhedra" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Minkowski_sum_3.tag">User Manual</ref>  <ref refid="group__PkgMinkowskiSum3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Minkowski_sum_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgNef3" kindref="member">3D Boolean Operations on Nef Polyhedra</ref>, <ref refid="packages_1PkgConvexDecomposition3" kindref="member">Convex Decomposition of Polyhedra</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:h-msp3-24b">cgal:h-msp3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartArrangements">
<title>Arrangements</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgArrangementOnSurface2">
<title>2D Arrangements</title>
<para>  <image type="html" name="Arrangement_2.png"></image>
   Ron Wein, Eric Berberich, Efi Fogel, Dan Halperin, Michael Hemmer, Oren Salzman, and Baruch Zukerman This package can be used to construct, maintain, alter, and display arrangements in the plane. Once an arrangement is constructed, the package can be used to obtain results of various queries on the arrangement, such as point location. The package also includes generic implementations of two algorithmic frameworks, that are, computing the zone of an arrangement, and line-sweeping the plane, the arrangements is embedded on. These frameworks are used in turn in the implementations of other operations on arrangements. Computing the overlay of two arrangements, for example, is based on the sweep-line framework. Arrangements and arrangement components can also be extended to store additional data. An important extension stores the construction history of the arrangement, such that it is possible to obtain the originating curve of an arrangement subcurve.   <ref refid="index_1Chapter_2D_Arrangements" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">User Manual</ref>  <ref refid="group__PkgArrangementOnSurface2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:wfzh-a2-24b">cgal:wfzh-a2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/arrangements_2.zip">2D Arrangements</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceSweep2">
<title>2D Intersection of Curves</title>
<para>  <image type="html" name="Curve_intersections_2.png"></image>
   Baruch Zukerman, Ron Wein, and Efi Fogel This package provides three free functions implemented based on the sweep-line paradigm: given a collection of input curves, compute all intersection points, compute the set of subcurves that are pairwise interior-disjoint induced by them, and check whether there is at least one pair of curves among them that intersect in their interior.   <ref refid="index_1Chapter_2D_Intersection_of_Curves" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_sweep_2.tag">User Manual</ref>  <ref refid="group__PkgSurfaceSweep2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_sweep_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.4<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:wfz-ic2-24b">cgal:wfz-ic2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSnapRounding2">
<title>2D Snap Rounding</title>
<para>  <image type="html" name="snap-detail.png"></image>
   Eli Packer Snap Rounding is a well known method for converting arbitrary-precision arrangements of segments into a fixed-precision representation. In the study of robust geometric computing, it can be classified as a finite precision approximation technique. Iterated Snap Rounding is a modification of Snap Rounding in which each vertex is at least half-the-width-of-a-pixel away from any non-incident edge. This package supports both methods.   <ref refid="index_1Chapter_2D_Snap_Rounding" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Snap_rounding_2.tag">User Manual</ref>  <ref refid="group__PkgSnapRounding2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Snap_rounding_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:p-sr2-24b">cgal:p-sr2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/snap_rounding_2.zip">2D Snap Rounding</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgEnvelope2">
<title>2D Envelopes</title>
<para>  <image type="html" name="Envelope_2.png"></image>
   Ron Wein This package consists of functions that computes the lower (or upper) envelope of a set of arbitrary curves in 2D. The output is represented as an envelope diagram, namely a subdivision of the <formula id="16">$ x$</formula>-axis into intervals, such that the identity of the curves that induce the envelope on each interval is unique.   <ref refid="index_1Chapter_Envelopes_of_Curves_in_2D" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Envelope_2.tag">User Manual</ref>  <ref refid="group__PkgEnvelope2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Envelope_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:w-e2-24b">cgal:w-e2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgEnvelope3">
<title>3D Envelopes</title>
<para>  <image type="html" name="Envelope_3.png"></image>
   Dan Halperin, Michal Meyerovitch, Ron Wein, and Baruch Zukerman This package consists of functions that compute the lower (or upper) envelope of a set of arbitrary surfaces in 3D. The output is represented as an 2D envelope diagram, namely a planar subdivision such that the identity of the surfaces that induce the envelope over each diagram cell is unique.   <ref refid="index_1Chapter_Envelopes_of_Surfaces_in_3D" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Envelope_3.tag">User Manual</ref>  <ref refid="group__PkgEnvelope3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Envelope_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgArrangementOnSurface2" kindref="member">2D Arrangements</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:mwz-e3-24b">cgal:mwz-e3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartTriangulationsAndDelaunayTriangulations">
<title>Triangulations and Delaunay Triangulations</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgTriangulation2">
<title>2D Triangulations</title>
<para>  <image type="html" name="cdt2d-small.png"></image>
   Mariette Yvinec This package allows to build and handle various triangulations for point sets two dimensions. Any CGAL triangulation covers the convex hull of its vertices. Triangulations are built incrementally and can be modified by insertion or removal of vertices. They offer point location facilities. The package provides plain triangulation (whose faces depend on the insertion order of the vertices) and Delaunay triangulations. Regular triangulations are also provided for sets of weighted points. Delaunay and regular triangulations offer nearest neighbor queries and primitives to build the dual Voronoi and power diagrams. Finally, constrained and Delaunay constrained triangulations allows to force some constrained segments to appear as edges of the triangulation. Several versions of constrained and Delaunay constrained triangulations are provided: some of them handle intersections between input constraints segment while others do not.    <ref refid="index_1Chapter_2D_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_2.tag">User Manual</ref>  <ref refid="group__PkgTriangulation2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 0.9<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTDS2" kindref="member">2D Triangulation Data Structure</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:y-t2-24b">cgal:y-t2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demos:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/delaunay_triangulation_2.zip">Delaunay Triangulation</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/regular_triangulation_2.zip">Regular Triangulation</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/constrained_delaunay_triangulation_2.zip">Constrained Delaunay Triangulation</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTDS2">
<title>2D Triangulation Data Structure</title>
<para>  <image type="html" name="tds_small.png"></image>
   Sylvain Pion and Mariette Yvinec This package provides a data structure to store a two-dimensional triangulation that has the topology of a two-dimensional sphere. The package acts as a container for the vertices and faces of the triangulation and provides basic combinatorial operation on the triangulation.    <ref refid="index_1Chapter_2D_Triangulation_Data_Structure" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">User Manual</ref>  <ref refid="group__PkgTDS2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.2<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:py-tds2-24b">cgal:py-tds2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTriangulationOnSphere2">
<title>2D Triangulations on the Sphere</title>
<para>  <image type="html" name="triangulation_on_sphere.png"></image>
   Mael Rouxel-Labbé, Monique Teillaud, and Claudia Werner This package enables the construction and manipulation of Delaunay triangulations on the 2-sphere. Triangulations are built incrementally and can be modified by insertion or removal of vertices. Point location querying and primitives to build the dual Voronoi diagram are provided.   <ref refid="index_1Chapter_2D_Triangulations_on_sphere" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_on_sphere_2.tag">User Manual</ref>  <ref refid="group__PkgTriangulationOnSphere2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_on_sphere_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 5.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTDS2" kindref="member">2D Triangulation Data Structure</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:rtw-tos2-24b">cgal:rtw-tos2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/triangulation_on_sphere_2.zip">2D Triangulations on the sphere</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPeriodic2Triangulation2">
<title>2D Periodic Triangulations</title>
<para>  <image type="html" name="p2Delaunay2_thumb.png"></image>
 </para>
<para> Nico Kruithof This package allows to build and handle triangulations of point sets in the two dimensional flat torus. Triangulations are built incrementally and can be modified by insertion or removal of vertices. They offer point location facilities. The package provides Delaunay triangulations and offers nearest neighbor queries and primitives to build the dual Voronoi diagrams.   <ref refid="index_1Chapter_2D_Periodic_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_2_triangulation_2.tag">User Manual</ref>  <ref refid="group__PkgPeriodic2Triangulation2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_2_triangulation_2.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:k-pt2-13-24b">cgal:k-pt2-13-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/Periodic_2_Delaunay_triangulation_2.zip">Periodic Delaunay Triangulation</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgHyperbolicTriangulation2">
<title>2D Hyperbolic Delaunay Triangulations</title>
<para>  <image type="html" name="ht-120px.png"></image>
 </para>
<para> Mikhail Bogdanov, Iordan Iordanov, and Monique Teillaud This package enables building and handling Delaunay triangulations of point sets in the Poincar<eacute/> disk model of the hyperbolic plane. Triangulations are built incrementally and can be modified by insertion and removal of vertices; point location facilities are also offered, as well as primitives to build the dual Voronoi diagrams.   <ref refid="index_1Chapter_2D_Hyperbolic_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Hyperbolic_triangulation_2.tag">User Manual</ref>  <ref refid="group__PkgHyperbolicTriangulation2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Hyperbolic_triangulation_2.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.14<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:bt-ht2-17-24b">cgal:bt-ht2-17-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/Hyperbolic_Delaunay_triangulation_2.zip">Hyperbolic Delaunay Triangulation</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPeriodic4HyperbolicTriangulation2">
<title>2D Periodic Hyperbolic Triangulations</title>
<para>  <image type="html" name="new-triangulation-120px.png"></image>
 </para>
<para> Iordan Iordanov and Monique Teillaud This package enables building and handling triangulations of point sets on the two dimensional hyperbolic Bolza surface. Triangulations are built incrementally and can be modified by insertion or removal of vertices. Point location facilities are also offered. The package provides Delaunay triangulations and offers primitives to build the dual Voronoi diagrams.   <ref refid="index_1Chapter_2D_Periodic_Hyperbolic_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_4_hyperbolic_triangulation_2.tag">User Manual</ref>  <ref refid="group__PkgPeriodic4HyperbolicTriangulation2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_4_hyperbolic_triangulation_2.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.14<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgHyperbolicTriangulation2" kindref="member">2D Hyperbolic Delaunay Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:i-p4ht2-17-24b">cgal:i-p4ht2-17-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/Periodic_4_hyperbolic_Delaunay_triangulation_2.zip">Periodic Hyperbolic Delaunay Triangulation</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTriangulation3">
<title>3D Triangulations</title>
<para>  <image type="html" name="twotets.png"></image>
   Clément Jamin, Sylvain Pion, and Monique Teillaud This package allows to build and handle triangulations for point sets in three dimensions. Any CGAL triangulation covers the convex hull of its vertices. Triangulations are build incrementally and can be modified by insertion, displacements or removal of vertices. They offer point location facilities. The package provides plain triangulation (whose faces depends on the insertion order of the vertices) and Delaunay triangulations. Regular triangulations are also provided for sets of weighted points. Delaunay and regular triangulations offer nearest neighbor queries and primitives to build the dual Voronoi and power diagrams. Optionally, the main Delaunay and regular triangulation algorithms (insert, remove) support multi-core shared-memory architectures to take advantage of available parallelism.   <ref refid="index_1Chapter_3D_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_3.tag">User Manual</ref>  <ref refid="group__PkgTriangulation3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTDS3" kindref="member">3D Triangulation Data Structure</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:pt-t3-24b">cgal:pt-t3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/triangulation_3.zip">3D Triangulations</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTDS3">
<title>3D Triangulation Data Structure</title>
<para>  <image type="html" name="tds3_small.png"></image>
   Clément Jamin, Sylvain Pion, and Monique Teillaud This package provides a data structure to store a three-dimensional triangulation that has the topology of a three-dimensional sphere. The package acts as a container for the vertices and cells of the triangulation and provides basic combinatorial operations on the triangulation.   <ref refid="index_1Chapter_3D_Triangulation_Data_Structure" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_3.tag">User Manual</ref>  <ref refid="group__PkgTDS3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:pt-tds3-24b">cgal:pt-tds3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPeriodic3Triangulation3">
<title>3D Periodic Triangulations</title>
<para>  <image type="html" name="p3Delaunay3_small.jpg"></image>
   Manuel Caroli, Aymeric Pellé, Mael Rouxel-Labbé, and Monique Teillaud This package allows to build and handle triangulations of point sets in the three dimensional flat torus. Triangulations are built incrementally and can be modified by insertion or removal of vertices. They offer point location facilities. The package provides Delaunay and regular triangulations and offers nearest neighbor queries and primitives to build the dual Voronoi diagrams.   <ref refid="index_1Chapter_3D_Periodic_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_3_triangulation_3.tag">User Manual</ref>  <ref refid="group__PkgPeriodic3Triangulation3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_3_triangulation_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTDS3" kindref="member">3D Triangulation Data Structure</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ct-pt3-24b">cgal:ct-pt3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demos:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/periodic_3_triangulation_3.zip">3D Periodic Delaunay Triangulation</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/periodic_3_lloyd.zip">3D Periodic Lloyd</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTriangulations">
<title>dD Triangulations</title>
<para>  <image type="html" name="Hypertriangle.png"></image>
   Olivier Devillers, Samuel Hornus, and Clément Jamin This package provides classes for manipulating triangulations (pure simplicial complexes) in Euclidean spaces whose dimension can be specified at compile-time or at run-time. Specifically, it provides a data structure to store the triangulations, and two classes to handle triangulations and Delaunay triangulations of point sets. Point location and point insertion are supported. The Delaunay triangulation also supports point removal.   <ref refid="index_1Chapter_Triangulations" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation.tag">User Manual</ref>  <ref refid="group__PkgTriangulationsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hdj-t-24b">cgal:hdj-t-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgAlphaShapes2">
<title>2D Alpha Shapes</title>
<para>  <image type="html" name="alpha-detail.png"></image>
   Tran Kai Frank Da This package offers a data structure encoding the whole family of alpha-complexes related to a given 2D Delaunay or regular triangulation. In particular, the data structure allows to retrieve the alpha-complex for any alpha value, the whole spectrum of critical alpha values and a filtration on the triangulation faces (this filtration is based on the first alpha value for which each face is included on the alpha-complex).   <ref refid="index_1Chapter_2D_Alpha_Shapes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Alpha_shapes_2.tag">User Manual</ref>  <ref refid="group__PkgAlphaShapes2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Alpha_shapes_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:d-as2-24b">cgal:d-as2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/alpha_shapes_2.zip">2D Alpha Shapes</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgAlphaShapes3">
<title>3D Alpha Shapes</title>
<para>  <image type="html" name="alpha_shapes_3_small.png"></image>
   Tran Kai Frank Da, Sébastien Loriot, and Mariette Yvinec This package offers a data structure encoding either one alpha-complex or the whole family of alpha-complexes related to a given 3D Delaunay or regular triangulation. In the latter case, the data structure allows to retrieve the alpha-complex for any alpha value, the whole spectrum of critical alpha values and a filtration on the triangulation faces (this filtration is based on the first alpha value for which each face is included on the alpha-complex).    <ref refid="index_1Chapter_3D_Alpha_Shapes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Alpha_shapes_3.tag">User Manual</ref>  <ref refid="group__PkgAlphaShapes3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Alpha_shapes_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dy-as3-24b">cgal:dy-as3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/alpha_shape_3.zip">3D Alpha Shapes</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartVoronoiDiagrams">
<title>Voronoi Diagrams</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgSegmentDelaunayGraph2">
<title>2D Segment Delaunay Graphs</title>
<para>  <image type="html" name="svd.png"></image>
   Menelaos Karavelas An algorithm for computing the dual of a Voronoi diagram of a set of segments under the Euclidean metric. It is a generalization of the standard Voronoi diagram for points. The algorithms provided are dynamic.   <ref refid="index_1Chapter_2D_Segment_Delaunay_Graphs" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Segment_Delaunay_graph_2.tag">User Manual</ref>  <ref refid="group__PkgSegmentDelaunayGraph2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Segment_Delaunay_graph_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTDS2" kindref="member">2D Triangulation Data Structure</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:k-sdg2-24b">cgal:k-sdg2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GNU GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/segment_voronoi_diagram_2.zip">2D Segment Voronoi Diagram</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSegmentDelaunayGraphLinf2">
<title>L Infinity Segment Delaunay Graphs</title>
<para>  <image type="html" name="sdglinf-small.png"></image>
 </para>
<para> Panagiotis Cheilaris, Sandeep Kumar Dey, and Evanthia Papadopoulou Algorithms and geometric traits for computing the dual of the Voronoi diagram of a set of points and segments under the <formula id="17">$L_{\infty}$</formula> metric.   <ref refid="index_1Chapter_L_Infinity_Segment_Delaunay_Graphs" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Segment_Delaunay_graph_Linf_2.tag">User Manual</ref>  <ref refid="group__PkgSegmentDelaunayGraphLinf2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Segment_Delaunay_graph_Linf_2.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSegmentDelaunayGraph2" kindref="member">2D Segment Delaunay Graphs</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cdp-sdglinf2-24b">cgal:cdp-sdglinf2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgApolloniusGraph2">
<title>2D Apollonius Graphs (Delaunay Graphs of Disks)</title>
<para>  <image type="html" name="CircleVoronoi.png"></image>
   Menelaos Karavelas and Mariette Yvinec Algorithms for computing the Apollonius graph in two dimensions. The Apollonius graph is the dual of the Apollonius diagram, also known as the <emphasis>additively weighted Voronoi diagram</emphasis>. The latter can be thought of as the Voronoi diagram of a set of disks under the Euclidean metric, and it is a generalization of the standard Voronoi diagram for points. The algorithms provided are dynamic.   <ref refid="index_1Chapter_2D_Apollonius_Graphs" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Apollonius_graph_2.tag">User Manual</ref>  <ref refid="group__PkgApolloniusGraph2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Apollonius_graph_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.0<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTDS2" kindref="member">2D Triangulation Data Structure</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ky-ag2-24b">cgal:ky-ag2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/apollonius_graph_2.zip">2D Apollonius Graph</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgVoronoiDiagram2">
<title>2D Voronoi Diagram Adaptor</title>
<para>  <image type="html" name="voronoi.png"></image>
   Menelaos Karavelas The 2D Voronoi diagram adaptor package provides an adaptor that adapts a 2-dimensional triangulated Delaunay graph to the corresponding Voronoi diagram, represented as a doubly connected edge list (DCEL) data structure. The adaptor has the ability to automatically eliminate, in a consistent manner, degenerate features of the Voronoi diagram, that are artifacts of the requirement that Delaunay graphs should be triangulated even in degenerate configurations. Depending on the type of operations that the underlying Delaunay graph supports, the adaptor allows for the incremental or dynamic construction of Voronoi diagrams and can support point location queries.    <ref refid="index_1Chapter_2D_Voronoi_Diagram_Adaptor" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Voronoi_diagram_2.tag">User Manual</ref>  <ref refid="group__PkgVoronoiDiagram2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Voronoi_diagram_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:k-vda2-24b">cgal:k-vda2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demos:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/delaunay_triangulation_2.zip">2D Point Voronoi Diagram </ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/apollonius_graph_2.zip">2D Disk Voronoi Diagram</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/segment_voronoi_diagram_2.zip">2D Segment Voronoi Diagram</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartMeshing">
<title>Mesh Generation</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgMesh2">
<title>2D Conforming Triangulations and Meshes</title>
<para>  <image type="html" name="delaunaymesh-small.png"></image>
   Laurent Rineau This package implements a Delaunay refinement algorithm to construct conforming triangulations and 2D meshes. Conforming Delaunay triangulations are obtained from constrained Delaunay triangulations by refining constrained edges until they are Delaunay edges. Conforming Gabriel triangulations are obtained by further refining constrained edges until they become Gabriel edges. The package provides also a 2D mesh generator that refines triangles and constrained edges until user defined size and shape criteria on triangles are satisfied. The generated meshes can be optimized using the Lloyd algorithm, also provided in this package. The package can handle intersecting input constraints and set no restriction on the angle formed by two constraints sharing an endpoint.   <ref refid="index_1Chapter_2D_Conforming_Triangulations_and_Meshes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_2.tag">User Manual</ref>  <ref refid="group__PkgMesh2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:r-ctm2-24b">cgal:r-ctm2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/constrained_delaunay_triangulation_2.zip">2D Mesh Generator</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMesher3">
<title>3D Surface Mesh Generation</title>
<para>  <image type="html" name="segmented_head-small.png"></image>
   Laurent Rineau and Mariette Yvinec This package provides functions to generate surface meshes that interpolate smooth surfaces. The meshing algorithm is based on Delaunay refinement and provides some guarantees on the resulting mesh: the user is able to control the size and shape of the mesh elements and the accuracy of the surface approximation. There is no restriction on the topology and number of components of input surfaces. The surface mesh generator may also be used for non smooth surfaces but without guarantee. Currently, implementations are provided for implicit surfaces described as the zero level set of some function and surfaces described as a gray level set in a three-dimensional image.   <ref refid="index_1Chapter_3D_Surface_Mesh_Generation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesher.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMesher3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesher.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ry-smg-24b">cgal:ry-smg-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GNU GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSkinSurface3">
<title>3D Skin Surface Meshing</title>
<para>  <image type="html" name="small.png"></image>
   Nico Kruithof This package allows to build a triangular mesh of a skin surface. Skin surfaces are used for modeling large molecules in biological computing. The surface is defined by a set of balls, representing the atoms of the molecule, and a shrink factor that determines the size of the smooth patches gluing the balls together. The construction of a triangular mesh of a smooth skin surface is often necessary for further analysis and for fast visualization. This package provides functions to construct a triangular mesh approximating the skin surface from a set of balls and a shrink factor. It also contains code to subdivide the mesh efficiently.    <ref refid="index_1Chapter_3D_Skin_Surface_Meshing" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Skin_surface_3.tag">User Manual</ref>  <ref refid="group__PkgSkinSurface3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Skin_surface_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> and <ref refid="packages_1PkgPolyhedron" kindref="member">3D Polyhedral Surface</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:k-ssm3-24b">cgal:k-ssm3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSMDS3">
<title>3D Simplicial Mesh Data Structure</title>
<para>  <image type="html" name="knot_small.png"></image>
 </para>
<para> Pierre Alliez, Clément Jamin, Laurent Rineau, Stéphane Tayeb, Jane Tournois, and Mariette Yvinec This package provides a data structure to store three-dimensional simplicial meshes and their subcomplexes. It provides an API for tetrahedral meshes generated with CGAL or not, to be processed with CGAL 3D mesh generation and remeshing algorithms, along with iterators, IO functions, and additional helper functions.    <ref refid="index_1Chapter_3D_Simplicial_Mesh_Data_Structure" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/SMDS_3.tag">User Manual</ref>  <ref refid="group__PkgSMDS3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/SMDS_3.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 5.6<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ajrtty-mds3-24b">cgal:ajrtty-mds3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgMesh3">
<title>3D Mesh Generation</title>
<para>  <image type="html" name="multilabel_mesher_small.jpg"></image>
   Pierre Alliez, Clément Jamin, Laurent Rineau, Stéphane Tayeb, Jane Tournois, and Mariette Yvinec This package is devoted to the generation of isotropic simplicial meshes discretizing 3D domains. The domain to be meshed is a region of 3D space that has to be bounded. The region may be connected or composed of multiple components and/or subdivided in several subdomains. The domain is input as an oracle able to answer queries, of a few different types, on the domain. Boundary and subdivision surfaces are either smooth or piecewise smooth surfaces, formed with planar or curved surface patches. Surfaces may exhibit 1-dimensional features (e.g. crease edges) and 0-dimensional features (e.g. singular points as corners tips, cusps or darts), that have to be fairly approximated in the mesh. Optionally, the algorithms support multi-core shared-memory architectures to take advantage of available parallelism.   <ref refid="index_1Chapter_3D_Mesh_Generation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_3.tag">User Manual</ref>  <ref refid="group__PkgMesh3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> and <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:rty-m3-24b">cgal:rty-m3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTetrahedralRemeshing">
<title>Tetrahedral Remeshing</title>
<para>  <image type="html" name="bimba_back_small.png"></image>
 </para>
<para> Jane Tournois, Noura Faraj, Jean-Marc Thiery, and Tamy Boubekeur  The package provides a function for remeshing tetrahedral meshes, targeting high quality meshes with respect to dihedral angles. This practical iterative remeshing algorithm is designed to remesh multi-material tetrahedral meshes, by iteratively performing a sequence of elementary operations such as edge splits, edge collapses, edge flips, and vertex relocations following a Laplacian smoothing. The algorithm results in high-quality uniform isotropic meshes, with the desired mesh density, while preserving the input geometric curve and surface features.    <ref refid="index_1Chapter_Tetrahedral_Remeshing" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Tetrahedral_remeshing.tag">User Manual</ref>  <ref refid="group__PkgTetrahedralRemeshingRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Tetrahedral_remeshing.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 5.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:tftb-tr-24b">cgal:tftb-tr-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPeriodic3Mesh3">
<title>3D Periodic Mesh Generation</title>
<para>  <image type="html" name="periodic_mesher_small.png"></image>
   Mikhail Bogdanov, Aymeric Pellé, Mael Rouxel-Labbé, and Monique Teillaud This package is devoted to the generation of isotropic simplicial meshes discretizing periodic 3D domains. The domain to be meshed is a region of the three-dimensional flat torus. The periodic mesh generator provides users with the same flexibility that is offered in the <ref refid="packages_1PkgMesh3" kindref="member">3D Mesh Generation</ref> package.   <ref refid="index_1Chapter_3D_Periodic_Mesh_Generation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_3_mesh_3.tag">User Manual</ref>  <ref refid="group__PkgPeriodic3Mesh3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Periodic_3_mesh_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.13<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgPeriodic3Triangulation3" kindref="member">3D Periodic Triangulations</ref>, <ref refid="packages_1PkgMesh3" kindref="member">3D Mesh Generation</ref>, and <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:btprl-p3m3-24b">cgal:btprl-p3m3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgAlphaWrap3">
<title>3D Alpha Wrapping</title>
<para>  <image type="html" name="alpha_wrap_3.jpg"></image>
   Pierre Alliez, David Cohen-Steiner, Michael Hemmer, Cédric Portaneri, and Mael Rouxel-Labbé This component takes a 3D triangle mesh, a triangle soup, or a point set as input, and generates a valid triangulated surface mesh that strictly contains the input (watertight, intersection-free and 2-manifold). The algorithm proceeds by shrink-wrapping and refining a 3D Delaunay triangulation starting from a loose bounding box of the input. Two user-defined parameters, alpha and offset, offer control over the maximum size of cavities where the shrink-wrapping process can enter, and the tightness of the final surface mesh to the input, respectively. Once combined, these parameters provide a means to trade fidelity to the input for complexity of the output.   <ref refid="index_1Chapter_3D_Alpha_wrapping" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Alpha_wrap_3.tag">User Manual</ref>  <ref refid="group__PkgAlphaWrap3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Alpha_wrap_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 5.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> and <ref refid="packages_1PkgPolygonMeshProcessing" kindref="member">Polygon Mesh Processing</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:achpr-aw3-24b">cgal:achpr-aw3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartReconstruction">
<title>Shape Reconstruction</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgPoissonSurfaceReconstruction3">
<title>Poisson Surface Reconstruction</title>
<para>  <image type="html" name="surface_reconstruction_points_detail.png"></image>
   Pierre Alliez, Laurent Saboret, and Gaël Guennebaud This package implements a surface reconstruction method: Poisson Surface Reconstruction. It takes as input a set of points with oriented normals and computes an implicit function. The CGAL surface mesh generator can then be used to extract an iso-surface from this function.    <ref refid="index_1Chapter_Poisson_Surface_Reconstruction" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Poisson_surface_reconstruction_3.tag">User Manual</ref>  <ref refid="group__PkgPoissonSurfaceReconstruction3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Poisson_surface_reconstruction_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:asg-srps-24b">cgal:asg-srps-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgScaleSpaceReconstruction3">
<title>Scale-Space Surface Reconstruction</title>
<para>  <image type="html" name="knot_thumb.png"></image>
   Thijs van Lankveld This method allows to reconstruct a surface that interpolates a set of 3D points using either an alpha shape or the advancing front surface reconstruction method. The output interpolates the point set (as opposed to approximating the point set). How the surface connects the points depends on a scale variable, which can be estimated semi-automatically.   <ref refid="index_1Chapter_Scale_space_reconstruction" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Scale_space_reconstruction_3.tag">User Manual</ref>  <ref refid="group__PkgScaleSpaceReconstruction3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Scale_space_reconstruction_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ssr3-24b">cgal:ssr3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgAlphaShapes3" kindref="member">3D Alpha Shapes</ref>, <ref refid="packages_1PkgSpatialSearchingD" kindref="member">dD Spatial Searching</ref>, <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgAdvancingFrontSurfaceReconstruction">
<title>Advancing Front Surface Reconstruction</title>
<para>  <image type="html" name="afsr-detail.png"></image>
   Tran Kai Frank Da and David Cohen-Steiner This package provides a greedy algorithm for surface reconstruction from an unorganized point set. Starting from a seed facet, a piecewise linear surface is grown by adding Delaunay triangles one by one. The most plausible triangles are added first, in a way that avoids the appearance of topological singularities.    <ref refid="index_1Chapter_Advancing_Front_Surface_Reconstruction" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Advancing_front_surface_reconstruction.tag">User Manual</ref>  <ref refid="group__PkgAdvancingFrontSurfaceReconstructionRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Advancing_front_surface_reconstruction.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation3" kindref="member">3D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dc-afsr-24b">cgal:dc-afsr-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPolygonalSurfaceReconstruction">
<title>Polygonal Surface Reconstruction</title>
<para>  <image type="html" name="polyfit.png"></image>
 </para>
<para> Liangliang Nan This package provides a method for piecewise planar object reconstruction from point clouds. The method takes as input an unordered point set (and optionally planar segments) of a piecewise planar object and outputs a lightweight and watertight surface mesh interpolating the input point set. The method can handle arbitrary piecewise planar objects and is capable of recovering sharp features and is robust to noise and outliers.   <ref refid="index_1Chapter_PolygonalSurfaceReconstruction" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygonal_surface_reconstruction.tag">User Manual</ref>  <ref refid="group__PkgPolygonalSurfaceReconstructionRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygonal_surface_reconstruction.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.14<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgAlphaShapes2" kindref="member">2D Alpha Shapes</ref> and <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:x-x-24b">cgal:x-x-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
</para>
<para></para>
</sect2>
<sect2 id="packages_1PkgKineticSpacePartition">
<title>Kinetic Space Partition</title>
<para>  <image type="html" name="kinetic_logo.png"></image>
 </para>
<para> Sven Oesau and Florent Lafarge This package implements kinetic space partition. Based on a set of planar input shapes the bounding box of the input data is split into convex volumes. The complexity of the partition can be adjusted with a single parameter.   <ref refid="index_1Chapter_Kinetic_Space_Partition" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kinetic_space_partition.tag">User Manual</ref>  <ref refid="group__PkgKineticSpacePartitionRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kinetic_space_partition.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 6.0<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSurfaceMesh" kindref="member">Surface Mesh</ref>, <ref refid="packages_1PkgLinearCellComplex" kindref="member">Linear Cell Complex</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ol-kinetic-partition-24b">cgal:ol-kinetic-partition-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgKineticSurfaceReconstruction">
<title>Kinetic Surface Reconstruction</title>
<para>  <image type="html" name="kinetic_logo2.png"></image>
 </para>
<para> Sven Oesau and Florent Lafarge The package implements a piece-wise planar surface reconstruction pipeline from point clouds combining methods from the Shape Detection, Shape Regularization and Kinetic Shape Partition packages and graph-cut.   <ref refid="index_1Chapter_Kinetic_Surface_Reconstruction" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kinetic_surface_reconstruction.tag">User Manual</ref>  <ref refid="group__PkgKineticSurfaceReconstructionRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kinetic_surface_reconstruction.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 6.0<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgKineticSpacePartition" kindref="member">Kinetic Space Partition</ref>, <ref refid="packages_1PkgSurfaceMesh" kindref="member">Surface Mesh</ref>, <ref refid="packages_1PkgLinearCellComplex" kindref="member">Linear Cell Complex</ref>, <ref refid="packages_1PkgShapeDetection" kindref="member">Shape Detection</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ol-kinetic-reconstruction-24b">cgal:ol-kinetic-reconstruction-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgOptimalTransportationReconstruction2">
<title>Optimal Transportation Curve Reconstruction</title>
<para>  <image type="html" name="RS_2_small.png"></image>
   Pierre Alliez, David Cohen-Steiner, Fernando de Goes, Clément Jamin, and Ivo Vigan This package provides an algorithm to reconstruct and simplify a shape from a point set in the plane, possibly hampered with noise and outliers. It generates as output a set of line segments and isolated points, which approximate the input point set.   <ref refid="index_1Chapter_Optimal_Transportation_Curve_Reconstruction" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Optimal_transportation_reconstruction_2.tag">User Manual</ref>  <ref refid="group__PkgOptimalTransportationReconstruction2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Optimal_transportation_reconstruction_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.8<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:gavj-rs-24b">cgal:gavj-rs-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/otr2.zip">2D Optimal Transportation Curve Reconstruction</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartGeometryProcessing">
<title>Geometry Processing</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgPolygonMeshProcessing">
<title>Polygon Mesh Processing</title>
<para>  <image type="html" name="hole_filling_ico.png"></image>
 </para>
<para> David Coeurjolly, Jaques-Olivier Lachaud, Konstantinos Katrioplas, Sébastien Loriot, Ivan Pađen, Mael Rouxel-Labbé, Hossam Saeed, Jane Tournois, and Ilker O. Yaz This package provides a collection of methods and classes for polygon mesh processing, ranging from basic operations on simplices, to complex geometry processing algorithms such as Boolean operations, remeshing, repairing, collision and intersection detection, and more.   <ref refid="index_1Chapter_PolygonMeshProcessing" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon_mesh_processing.tag">User Manual</ref>  <ref refid="group__PkgPolygonMeshProcessingRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon_mesh_processing.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> documented for each function; <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:lty-pmp-24b">cgal:lty-pmp-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceSubdivisionMethod3">
<title>3D Surface Subdivision Methods</title>
<para>  <image type="html" name="twoheads-detail.png"></image>
   Le-Jeng Andy Shiue Subdivision methods recursively refine a control mesh and generate points approximating the limit surface. This package consists of four popular subdivision methods and their refinement hosts. Supported subdivision methods include Catmull-Clark, Loop, Doo-Sabin and <formula id="18">$ \sqrt{3}$</formula> subdivisions. Their respective refinement hosts are Pqq, Ptq, Dqq and <formula id="18">$ \sqrt{3}$</formula> refinements. Variations of those methods can be easily extended by substituting the geometry computation of the refinement host.   <ref refid="index_1Chapter_3D_Surface_Subdivision_Methods" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Subdivision_method_3.tag">User Manual</ref>  <ref refid="group__PkgSurfaceSubdivisionMethod3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Subdivision_method_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.11<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:s-ssm2-24b">cgal:s-ssm2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshSegmentation">
<title>Triangulated Surface Mesh Segmentation</title>
<para>  <image type="html" name="segmentation_ico.png"></image>
 </para>
<para> Ilker O. Yaz and Sébastien Loriot This package provides a method to generate a segmentation of a triangulated surface mesh. The algorithm first computes the <emphasis>Shape Diameter Function</emphasis> (SDF) for all facets and applies a graph-cut based algorithm over these values. Low level functions are provided to replace any intermediate step by a custom one.    <ref refid="index_1Chapter_3D_SurfaceSegmentation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_segmentation.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshSegmentationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_segmentation.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.4<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgAABBTree" kindref="member">2D and 3D Fast Intersection and Distance Computation</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:y-smsimpl-24b">cgal:y-smsimpl-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshSimplification">
<title>Triangulated Surface Mesh Simplification</title>
<para>  <image type="html" name="SMS-detail.png"></image>
   Fernando Cacciola, Mael Rouxel-Labbé, Baskın Şenbaşlar, and Julian Komaromy This package provides an algorithm to simplify a triangulated surface mesh by edge collapsing. Users can define cost, constraints, and placement strategies to decide when and how should edges be collapsed. A few strategies are offered by default, such as the Turk/Lindstrom and Garland-Heckbert <emphasis>memoryless</emphasis> approaches.   <ref refid="index_1Chapter_Triangulated_Surface_Mesh_Simplification" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_simplification.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshSimplificationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_simplification.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:c-tsms-12-24b">cgal:c-tsms-12-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshDeformation">
<title>Triangulated Surface Mesh Deformation</title>
<para>  <image type="html" name="deform-ico.png"></image>
   Sébastien Loriot, Olga Sorkine-Hornung, Yin Xu, and Ilker O. Yaz This package offers surface mesh deformation algorithms which provide new positions to the vertices of a surface mesh under positional constraints of some of its vertices, without requiring any additional structure other than the surface mesh itself.   <ref refid="index_1Chapter_SurfaceMeshDeformation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_deformation.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshDeformationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_deformation.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> and <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:lsxy-tsmd-24b">cgal:lsxy-tsmd-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshParameterization">
<title>Triangulated Surface Mesh Parameterization</title>
<para>  <image type="html" name="bimbaDetail.png"></image>
   Laurent Saboret, Pierre Alliez, Bruno Lévy, Mael Rouxel-Labbé, Andreas Fabri, and Hardik Jain Parameterizing a surface amounts to finding a one-to-one mapping from a suitable domain to the surface. In this package, we focus on triangulated surfaces that are homeomorphic to a disk and on piecewise linear mappings into a planar domain. This package implements several surface mesh parameterization methods, such as As Rigid As Possible Parameterization, Discrete Authalic Parameterization, Discrete Conformal Map, Floater Mean Value Coordinates, Least Squares Conformal Maps, Orbifold Tutte Embedding, or Tutte Barycentric Mapping. The code is generic and works with any model of the <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> concept.   <ref refid="index_1Chapter_Planar_Parameterization_of_Triangulated_Surface_Meshes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_parameterization.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshParameterizationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_parameterization.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:salf-pptsm2-24b">cgal:salf-pptsm2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshShortestPath">
<title>Triangulated Surface Mesh Shortest Paths</title>
<para>  <image type="html" name="shortestpathspackage-ico.png"></image>
   Stephen Kiazyk, Sébastien Loriot, and Éric Colin de Verdière The package provides methods for computing geodesic shortest path on triangulated surface meshes. The algorithm used is based on a paper by Xin and Wang <ref refid="citelist_1CITEREF_XinWang2009improvingchenandhan" kindref="member">[13]</ref> . The input of this package can be any model of the <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> concept.    <ref refid="index_1Chapter_Surface_mesh_shortest_path" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_shortest_path.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshShortestPathRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_shortest_path.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:klcdv-tsmsp-24b">cgal:klcdv-tsmsp-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshSkeletonization">
<title>Triangulated Surface Mesh Skeletonization</title>
<para>  <image type="html" name="mcfskel-small.png"></image>
   Xiang Gao, Sébastien Loriot, and Andrea Tagliasacchi This package provides a (1D) curve skeleton extraction algorithm for a triangulated polygonal mesh without borders based on the mean curvature flow. The particularity of this skeleton is that it captures the topology of the input. For each skeleton vertex one can obtain its location and its corresponding vertices from the input mesh. The code is generic and works with any model of the <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> concept.    <ref refid="index_1Chapter_3D_Surface_mesh_skeletonization" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_skeletonization.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshSkeletonizationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_skeletonization.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:glt-tsms-24b">cgal:glt-tsms-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgTSMA">
<title>Triangulated Surface Mesh Approximation</title>
<para>  <image type="html" name="sma-pkg-small.png"></image>
 </para>
<para> Pierre Alliez, David Cohen-Steiner, and Lingjie Zhu This package implements the Variational Shape Approximation method to approximate an input surface triangle mesh by a simpler surface triangle mesh. The algorithm proceeds by iterative clustering of triangles, the clustering process being seeded randomly, incrementally or hierarchically. While the default function runs an automated version of the algorithm, interactive control is possible via a class interface. The API is flexible and can be extended to user-defined proxies and error metrics.   <ref refid="index_1Chapter_Triangulated_Surface_Mesh_Approximation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_approximation.tag">User Manual</ref>  <ref refid="group__PkgTSMARef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_approximation.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.14<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:az-tsma-24b">cgal:az-tsma-24b</ulink><linebreak/>
 <bold>Depends on:</bold> <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgRidges3">
<title>Approximation of Ridges and Umbilics on Triangulated Surface Meshes</title>
<para>  <image type="html" name="RidgesMechPartDetail.png"></image>
   Marc Pouget and Frédéric Cazals Global features related to curvature extrema encode important information used in segmentation, registration, matching and surface analysis. Given pointwise estimations of local differential quantities, this package allows the approximation of differential features on a triangulated surface mesh. Such curvature related features are curves: ridges or crests, and points: umbilics.   <ref refid="index_1Chapter_Approximation_of_Ridges_and_Umbilics_on_Triangulated_Surface_Meshes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Ridges_3.tag">User Manual</ref>  <ref refid="group__PkgRidges3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Ridges_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cp-arutsm-24b">cgal:cp-arutsm-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgJetFitting3">
<title>Estimation of Local Differential Properties of Point-Sampled Surfaces</title>
<para>  <image type="html" name="DavidDetail.png"></image>
   Marc Pouget and Frédéric Cazals For a surface discretized as a point cloud or a mesh, it is desirable to estimate pointwise differential quantities. More precisely, first order properties correspond to the normal or the tangent plane; second order properties provide the principal curvatures and directions, third order properties provide the directional derivatives of the principal curvatures along the curvature lines, etc. This package allows the estimation of local differential quantities of a surface from a point sample.   <ref refid="index_1Chapter_Estimation_of_Local_Differential_Properties_of_Point-Sampled_Surfaces" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Jet_fitting_3.tag">User Manual</ref>  <ref refid="group__PkgJetFitting3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Jet_fitting_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> and <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:pc-eldp-24b">cgal:pc-eldp-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPointSet3">
<title>3D Point Set</title>
<para>  <image type="html" name="point_set_3.png"></image>
   Simon Giraudot This component provides the user with a flexible 3D point set data structure. The user can define any additional property needed such as normal vectors, colors or labels. CGAL algorithms can be easily applied to this data structure.   <ref refid="index_1Chapter_Point_Set_3" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_3.tag">User Manual</ref>  <ref refid="group__PkgPointSet3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.10<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:g-ps-24b">cgal:g-ps-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPointSetProcessing3">
<title>Point Set Processing</title>
<para>  <image type="html" name="point_set_processing_detail.png"></image>
   Pierre Alliez, Simon Giraudot, Clément Jamin, Florent Lafarge, Quentin Mérigot, Jocelyn Meyron, Laurent Saboret, Nader Salman, Shihao Wu, and Necip Fazil Yildiran This CGAL component implements methods to analyze and process unorganized point sets. The input is an unorganized point set, possibly with normal attributes (unoriented or oriented). The point set can be analyzed to measure its average spacing, and processed through functions devoted to the simplification, outlier removal, smoothing, normal estimation, normal orientation, feature edges estimation and registration.   <ref refid="index_1Chapter_Point_Set_Processing" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_processing_3.tag">User Manual</ref>  <ref refid="group__PkgPointSetProcessing3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_processing_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ass-psp-24b">cgal:ass-psp-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgShapeDetection">
<title>Shape Detection</title>
<para>  <image type="html" name="shapes_detail.png"></image>
 </para>
<para> Sven Oesau, Yannick Verdie, Clément Jamin, Pierre Alliez, Florent Lafarge, Simon Giraudot, Thien Hoang, and Dmitry Anisimov This package implements the Efficient RANSAC (RANdom SAmple Consensus) approach for detecting arbitrary shapes in an unorganized point set with unoriented normals and the Region Growing approach for detecting shapes in a set of arbitrary items.   <ref refid="index_1Chapter_Shape_Detection" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Shape_detection.tag">User Manual</ref>  <ref refid="group__PkgShapeDetectionRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Shape_detection.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.7<linebreak/>
 <bold>Depends on:</bold> <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ovja-pssd-24b">cgal:ovja-pssd-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgShapeRegularization">
<title>Shape Regularization</title>
<para>  <image type="html" name="sr_logo_120x120.png"></image>
 </para>
<para> Dmitry Anisimov, Gennadii Sytov, Simon Giraudot, Jean-Philippe Bauchet, and Florent Lafarge Regularization of a set of segments and open or closed contours in 2D and a set of planes in 3D such that all input objects are rotated and aligned with respect to the user-specified conditions.   <ref refid="index_1Chapter_Shape_Regularization" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Shape_regularization.tag">User Manual</ref>  <ref refid="group__PkgShapeRegularizationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Shape_regularization.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 5.4<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:asgbl-sr-24b">cgal:asgbl-sr-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgStreamLines2">
<title>2D Placement of Streamlines</title>
<para>  <image type="html" name="streamlines-small.jpg"></image>
   Abdelkrim Mebarki Visualizing vector fields is important for many application domains. A good way to do it is to generate streamlines that describe the flow behavior. This package implements the &quot;Farthest Point Seeding&quot; algorithm for placing streamlines in 2D vector fields. It generates a list of streamlines corresponding to an input flow using a specified separating distance. The algorithm uses a Delaunay triangulation to model objects and address different queries, and relies on choosing the centers of the biggest empty circles to start the integration of the streamlines.   <ref refid="index_1Chapter_2D_Placement_of_Streamlines" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_lines_2.tag">User Manual</ref>  <ref refid="group__PkgStreamLines2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_lines_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:m-ps-24b">cgal:m-ps-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/streamlines.zip">2D Stream Lines</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgClassification">
<title>Classification</title>
<para>  <image type="html" name="data_classif.png"></image>
 </para>
<para> Simon Giraudot and Florent Lafarge This component implements an algorithm that classifies a data set into a user-defined set of labels (such as ground, vegetation, buildings, etc.). A flexible API is provided so that users can classify any type of data, compute their own local features on the input data set, and define their own labels.   <ref refid="index_1Chapter_Classification" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Classification.tag">User Manual</ref>  <ref refid="group__PkgClassificationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Classification.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.12<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref>, <ref refid="packages_1PkgSpatialSearchingD" kindref="member">dD Spatial Searching</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:lm-clscm-12-24b">cgal:lm-clscm-12-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgHeatMethod">
<title>The Heat Method</title>
<para>  <image type="html" name="heat-method-small.png"></image>
 </para>
<para> Keenan Crane, Christina Vaz, and Andreas Fabri The package provides an algorithm that solves the single- or multiple-source shortest path problem by returning an approximation of the geodesic distance for all vertices of a triangle mesh to the closest vertex in a given set of source vertices.   <ref refid="index_1Chapter_HeatMethod" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Heat_method_3.tag">User Manual</ref>  <ref refid="group__PkgHeatMethodRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Heat_method_3.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.14<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cvf-hm3-24b">cgal:cvf-hm3-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSurfaceMeshTopology">
<title>Surface Mesh Topology</title>
<para>  <image type="html" name="surface-mesh-topology-logo.png"></image>
   Guillaume Damiand and Francis Lazarus This package provides a toolbox for manipulating curves on a combinatorial surface from the topological point of view. Two main functionalities are proposed. One is the computation of shortest curves that cannot be continuously deformed to a point. This includes the computation of the so-called edge width and face width of the vertex-edge graph of a combinatorial surface. The other functionality is the homotopy test for deciding if two given curves on a combinatorial surface can be continuously deformed one into the other.   <ref refid="index_1Chapter_Surface_Mesh_Topology" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_topology.tag">User Manual</ref>  <ref refid="group__PkgSurfaceMeshTopologyRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_topology.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 5.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dl-smtopology-24b">cgal:dl-smtopology-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartSearchStructures">
<title>Spatial Searching and Sorting</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgPointSet2">
<title>2D Range and Neighbor Search</title>
<para>  <image type="html" name="point_set.png"></image>
   Matthias Bäsken This package supports circular, triangular, and isorectangular range search queries as well as (k) nearest neighbor search queries on 2D point sets. In contrast to the spatial searching package, this package uses a Delaunay triangulation as underlying data structure.   <ref refid="index_1Chapter_2D_Range_and_Neighbor_Search" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_2.tag">User Manual</ref>  <ref refid="group__PkgPointSet2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_2.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 2.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgTriangulation2" kindref="member">2D Triangulations</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:b-ss2-24b">cgal:b-ss2-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgIntervalSkipList">
<title>Interval Skip List</title>
<para>  <image type="html" name="query.png"></image>
   Andreas Fabri An interval skip list is a data structure for finding all intervals that contain a point, and for stabbing queries, that is for answering the question whether a given point is contained in an interval or not. For a triangulated terrain, this allows to quickly identify the triangles which intersect an iso line.    <ref refid="index_1Chapter_Interval_Skip_List" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Interval_skip_list.tag">User Manual</ref>  <ref refid="group__PkgIntervalSkipListRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Interval_skip_list.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:f-isl-24b">cgal:f-isl-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSpatialSearchingD">
<title>dD Spatial Searching</title>
<para>  <image type="html" name="windowQuery.png"></image>
   Hans Tangelder and Andreas Fabri This package implements exact and approximate distance browsing by providing exact and approximate algorithms for range searching, k-nearest and k-furthest neighbor searching, as well as incremental nearest and incremental furthest neighbor searching, where the query items are points in dD Euclidean space.   <ref refid="index_1Chapter_dD_Spatial_Searching" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Spatial_searching.tag">User Manual</ref>  <ref refid="group__PkgSpatialSearchingDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Spatial_searching.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:tf-ssd-24b">cgal:tf-ssd-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/spatial_searching.zip">2D Spatial Searching</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSearchStructures">
<title>dD Range and Segment Trees</title>
<para>  <image type="html" name="segment_tree.png"></image>
   Gabriele Neyer Range and segment trees allow to perform window queries on point sets, and to enumerate all ranges enclosing a query point. The provided data structures are static and they are optimized for fast queries.   <ref refid="index_1Chapter_dD_Range_and_Segment_Trees" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/SearchStructures.tag">User Manual</ref>  <ref refid="group__PkgSearchStructuresRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/SearchStructures.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 0.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:n-rstd-24b">cgal:n-rstd-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgBoxIntersectionD">
<title>Intersecting Sequences of dD Iso-oriented Boxes</title>
<para>  <image type="html" name="box_inters-small.png"></image>
   Lutz Kettner, Andreas Meyer, and Afra Zomorodian An efficient algorithm for finding all intersecting pairs for large numbers of iso-oriented boxes, in order to apply a user defined callback on them. Typically these boxes will be bounding boxes of more complicated geometries. The algorithm is useful for (self-) intersection tests of surfaces etc.    <ref refid="index_1Chapter_Intersecting_Sequences_of_dD_Iso-oriented_Boxes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Box_intersection_d.tag">User Manual</ref>  <ref refid="group__PkgBoxIntersectionDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Box_intersection_d.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:kmz-isiobd-24b">cgal:kmz-isiobd-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgAABBTree">
<title>2D and 3D Fast Intersection and Distance Computation</title>
<para>  <image type="html" name="aabb-teaser-thumb.png"></image>
   Pierre Alliez, Stéphane Tayeb, and Camille Wormser The AABB (axis-aligned bounding box) tree component offers a static data structure and algorithms to perform efficient intersection and distance queries on sets of finite 2D and 3D geometric objects.   <ref refid="index_1Chapter_Fast_Intersection_and_Distance_Computation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/AABB_tree.tag">User Manual</ref>  <ref refid="group__PkgAABBTreeRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/AABB_tree.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:atw-aabb-24b">cgal:atw-aabb-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/AABB_demo.zip">AABB Tree</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgOrthtree">
<title>Quadtrees, Octrees, and Orthtrees</title>
<para>  <image type="html" name="octree_thumbnail.png"></image>
   Jackson Campolattaro, Simon Giraudot, Cédric Portaneri, Tong Zhao, and Pierre Alliez The Orthtree package provides a data structure that subdivides space, with specializations for 2D (Quadtree) and 3D (Octree), along with a collection of algorithms for operating on these structures.   <ref refid="index_1Chapter_Orthtree" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Orthtree.tag">User Manual</ref>  <ref refid="group__PkgOrthtreeRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Orthtree.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 5.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cpz-o-24b">cgal:cpz-o-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSpatialSorting">
<title>Spatial Sorting</title>
<para>  <image type="html" name="hilbert.png"></image>
   Christophe Delage and Olivier Devillers This package provides functions for sorting geometric objects in two, three and higher dimensions, including on a sphere, in order to improve efficiency of incremental geometric algorithms.   <ref refid="index_1Chapter_Spatial_Sorting" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Spatial_sorting.tag">User Manual</ref>  <ref refid="group__PkgSpatialSortingRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Spatial_sorting.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dd-ss-24b">cgal:dd-ss-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartGeometricOptimization">
<title>Geometric Optimization</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgBoundingVolumes">
<title>Bounding Volumes</title>
<para>  <image type="html" name="minCircle.png"></image>
   Kaspar Fischer, Bernd Gärtner, Thomas Herrmann, Michael Hoffmann, and Sven Schönherr This package provides algorithms for computing optimal bounding volumes of point sets. In d-dimensional space, the smallest enclosing sphere, ellipsoid (approximate), and annulus can be computed. In 3-dimensional space, the smallest enclosing strip is available as well, and in 2-dimensional space, there are algorithms for a number of additional volumes (rectangles, parallelograms, <formula id="19">$ k=2,3,4$</formula> axis-aligned rectangles). The smallest enclosing sphere algorithm can also be applied to a set of d-dimensional spheres.   <ref refid="index_1Chapter_Bounding_Volumes" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Bounding_volumes.tag">User Manual</ref>  <ref refid="group__PkgBoundingVolumesRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Bounding_volumes.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="thirdparty_1thirdpartyEigen" kindref="member">Eigen</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fghhs-bv-24b">cgal:fghhs-bv-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/bounding_volumes_2.zip">2D Bounding Volumes</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgInscribedAreas">
<title>Inscribed Areas</title>
<para>  <image type="html" name="ler-detail.png"></image>
   Michael Hoffmann and Eli Packer This package provides algorithms for computing inscribed areas. The algorithms for computing inscribed areas are: the largest inscribed k-gon (area or perimeter) of a convex point set and the largest inscribed iso-rectangle.   <ref refid="index_1Chapter_Inscribed_Areas" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Inscribed_areas.tag">User Manual</ref>  <ref refid="group__PkgInscribedAreasRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Inscribed_areas.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hp-ia-24b">cgal:hp-ia-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demos:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/polygon.zip">2D Inscribed k-gon as part of Polygon demo</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/largest_empty_rect_2.zip">2D Largest Empty Rectangle</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPolytopeDistanceD">
<title>Optimal Distances</title>
<para>  <image type="html" name="dist.png"></image>
   Kaspar Fischer, Bernd Gärtner, Thomas Herrmann, Michael Hoffmann, and Sven Schönherr This package provides algorithms for computing the distance between the convex hulls of two point sets in d-dimensional space, without explicitly constructing the convex hulls. It further provides an algorithm to compute the width of a point set, and the furthest point for each vertex of a convex polygon.    <ref refid="index_1Chapter_Optimal_Distances" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polytope_distance_d.tag">User Manual</ref>  <ref refid="group__PkgPolytopeDistanceDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polytope_distance_d.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fghhs-od-24b">cgal:fghhs-od-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPrincipalComponentAnalysisD">
<title>Principal Component Analysis</title>
<para>  <image type="html" name="teaserLeastSquaresFitting.png"></image>
   Pierre Alliez, Sylvain Pion, and Ankit Gupta This package provides functions to compute global information about the shape of a set of 2D or 3D objects. It provides the computation of axis-aligned bounding boxes for point sets, and barycenters of weighted point sets. In addition, it provides computation of centroids (center of mass) and linear least squares fitting for point sets as well as for sets of other bounded objects. More specifically, it is possible to fit 2D lines to 2D segments, circles, disks, iso rectangles and triangles, as well as to fit 3D lines or 3D planes to 3D segments, triangles, iso cuboids, tetrahedra, spheres and balls. The common interface to these functions takes an iterator range of objects.   <ref refid="index_1Chapter_Principal_Component_Analysis" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Principal_component_analysis.tag">User Manual</ref>  <ref refid="group__PkgPrincipalComponentAnalysisDRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Principal_component_analysis.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgSolverInterface" kindref="member">CGAL and Solvers</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:ap-pcad-24b">cgal:ap-pcad-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demos:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/pca.zip">Principal Component Analysis</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/polygon.zip">Operations on Polygons</ulink>, <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgOptimalBoundingBox">
<title>Optimal Bounding Box</title>
<para>  <image type="html" name="optimal_bounding_box.png"></image>
   Konstantinos Katrioplas and Mael Rouxel-Labbé This package provides functions to compute tight oriented bounding boxes around a point set or a polygon mesh.   <ref refid="index_1Chapter_Building_Optimal_Bounding_Box" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Optimal_bounding_box.tag">User Manual</ref>  <ref refid="group__PkgOptimalBoundingBoxRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Optimal_bounding_box.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 5.1<linebreak/>
 <bold>Depends on:</bold> <ref refid="packages_1PkgConvexHull3" kindref="member">3D Convex Hulls</ref> <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:obb-24b">cgal:obb-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartInterpolation">
<title>Interpolation</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgInterpolation2">
<title>2D and Surface Function Interpolation</title>
<para>  <image type="html" name="interpolation.png"></image>
   Julia Flötotto This package implements different methods for scattered data interpolation: Given measures of a function on a set of discrete data points, the task is to interpolate this function on an arbitrary query point. The package further offers functions for natural neighbor interpolation.   <ref refid="index_1Chapter_2D_and_Surface_Function_Interpolation" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Interpolation.tag">User Manual</ref>  <ref refid="group__PkgInterpolation2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Interpolation.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.1<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:f-i-24b">cgal:f-i-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgBarycentricCoordinates2">
<title>2D Generalized Barycentric Coordinates</title>
<para>  <image type="html" name="barcoord_thumb.png"></image>
 </para>
<para> Dmitry Anisimov, David Bommes, Kai Hormann, and Pierre Alliez This package offers an efficient and robust implementation of 2D generalized barycentric coordinates defined for simple polygons in the plane. If coordinates with respect to multivariate scattered points instead of a polygon are required, please refer to natural neighbor coordinates from the Package <ref refid="packages_1PkgInterpolation2" kindref="member">2D and Surface Function Interpolation</ref>.   <ref refid="index_1Chapter_2D_Generalized_Barycentric_Coordinates" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Barycentric_coordinates_2.tag">User Manual</ref>  <ref refid="group__PkgBarycentricCoordinates2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Barycentric_coordinates_2.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.6<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:abha-gbc-24b">cgal:abha-gbc-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartSupportLibrary">
<title>Support Library</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgSTLExtension">
<title>STL Extensions for CGAL</title>
<para>  <image type="html" name="plusplus.png"></image>
   Michael Hoffmann, Lutz Kettner, Sylvain Pion, and Ron Wein CGAL is designed in the spirit of the generic programming paradigm to work together with the Standard Template Library (STL). This package provides non-geometric STL-like algorithms and datastructures that are not in the STL standard, as well as functions to change the failure behavior of assertions.   <ref refid="index_1Chapter_STL_Extensions_for_CGAL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">User Manual</ref>  <ref refid="group__PkgSTLExtensionRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:hkpw-se-24b">cgal:hkpw-se-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgBGL">
<title>CGAL and the Boost Graph Library</title>
<para>  <image type="html" name="emst-detail.png"></image>
   Andreas Fabri, Fernando Cacciola, Philipp Moeller, and Ron Wein This package provides a framework for interfacing CGAL data structures with the algorithms of the Boost Graph Library, or BGL for short. It allows to run graph algorithms directly on CGAL data structures which are model of the BGL graph concepts, for example the shortest path algorithm on a Delaunay triangulation in order to compute the Euclidean minimum spanning tree. Furthermore, it introduces several new graph concepts describing halfedge data structures.   <ref refid="index_1Chapter_CGAL_and_the_Boost_Graph_Library" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">User Manual</ref>  <ref refid="group__PkgBGLRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.3<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:cfw-cbgl-24b">cgal:cfw-cbgl-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgSolverInterface">
<title>CGAL and Solvers</title>
<para>  <image type="html" name="solver.png"></image>
   Simon Giraudot, Pierre Alliez, Frédéric Cazals, Gaël Guennebaud, Bruno Lévy, Marc Pouget, Laurent Saboret, and Liangliang Nan This package provides concepts and models for solving linear systems with dense or sparse matrices, mixed integer programming problems with or without constraints, and nonlinear programming problems with or without constraints.   <ref refid="index_1Chapter_CGAL_and_Solvers" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">User Manual</ref>  <ref refid="group__PkgSolverInterfaceRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 4.8<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:eb-solver-24b">cgal:eb-solver-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgPropertyMap">
<title>CGAL and Boost Property Maps</title>
<para>  <image type="html" name="property_map.png"></image>
   Andreas Fabri and Laurent Saboret This package provides a framework for interfacing CGAL data structures with algorithms expecting Boost Property Maps.   <ref refid="index_1Chapter_CGAL_and_Boost_Property_Maps" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">User Manual</ref>  <ref refid="group__PkgPropertyMapRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fs-cbpm-24b">cgal:fs-cbpm-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgWeights">
<title>Weight Interface</title>
<para>  <image type="html" name="weights_logo_120x120.png"></image>
 </para>
<para> Dmitry Anisimov Many geometric algorithms rely on weighted constructions. This package provides a simple and unified interface to different types of weights. In particular, it includes numerous weights with a simple analytic expression, generalized barycentric weights, and weighting regions. All weights are available both in 2D and 3D.   <ref refid="index_1Chapter_Weights" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Weights.tag">User Manual</ref>  <ref refid="group__PkgWeightsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Weights.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 5.4<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:a-wi-24b">cgal:a-wi-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/CGALlab.zip">CGAL Lab</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgConeSpanners2">
<title>Cone-Based Spanners</title>
<para>  <image type="html" name="Logo-ConeSpanners.png"></image>
 </para>
<para> Weisheng Si, Quincy Tse, and Frédérik Paradis This package provides functors for constructing two kinds of cone-based spanners: Yao graph and Theta graph, given a set of vertices on the plane and the directions of cone boundaries. Both exact and inexact constructions are supported. In exact construction, the cone boundaries are calculated using the roots of polynomials, thus avoiding the use of <formula id="20">$ \pi $</formula>, which cannot be represented exactly. In inexact construction, the cone boundaries are calculated using the approximate <formula id="20">$ \pi $</formula> value defined in CGAL, which is still accurate enough for most applications. Moreover, for visualization purpose, this package provides a global function to generate the data and script files used by Gnuplot to plot the constructed graphs. This package also provides options for the Half Yao graph and the Half Theta graph.   <ref refid="index_1Chapter_ConeBasedSpanners" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Cone_spanners_2.tag">User Manual</ref>  <ref refid="group__PkgConeSpanners2Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Cone_spanners_2.tag">Reference Manual</ref>   </para>
<para> <bold>Introduced in:</bold> CGAL 4.9<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:st-cbs-24b">cgal:st-cbs-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgHandlesAndCirculators">
<title>Handles and Circulators</title>
<para>  <image type="html" name="circulator.png"></image>
   Olivier Devillers, Lutz Kettner, Sylvain Pion, Michael Seel, and Mariette Yvinec This package describes handles and circulators. They are related to iterators. Handles allow to dereference but neither to increment nor to decrement. Circulators have no notion of past-the-end, and they are used in CGAL whenever we have cyclic structures.    <ref refid="index_1Chapter_Handles_Ranges_and_Circulators" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">User Manual</ref>  <ref refid="group__PkgHandlesAndCirculatorsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dksy-hc-24b">cgal:dksy-hc-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgGenerators">
<title>Geometric Object Generators</title>
<para>  <image type="html" name="dice.png"></image>
   Pedro M. M. de Castro, Olivier Devillers, Susan Hert, Michael Hoffmann, Lutz Kettner, Sven Schönherr, Alexandru Tifrea, and Maxime Gimeno This package provides a variety of generators for geometric objects. They are useful as synthetic test data sets, e.g. for testing algorithms on degenerate object sets and for performance analysis.    <ref refid="index_1Chapter_Geometric_Object_Generators" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Generator.tag">User Manual</ref>  <ref refid="group__PkgGeneratorsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Generator.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:dhhk-gog-24b">cgal:dhhk-gog-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 <bold>Windows Demo:</bold> <ulink url="https://www.cgal.org/demo/6.0.1/generator.zip">Generators</ulink><linebreak/>
 </para>
</sect2>
<sect2 id="packages_1Miscellany">
<title>Profiling tools, Hash Map, Union-find, Modifiers</title>
<para>  <image type="html" name="stopwatch.png"></image>
   Lutz Kettner, Sylvain Pion, and Michael Seel This package provides classes for profiling time and memory consumption, profiling macros, a hash map, a union find data structure and a modifier.   <ref refid="index_1Chapter_Profiling_Tools_Hash_Map_Union-find_Modifiers" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Miscellany.tag">User Manual</ref>  <ref refid="group__MiscellanyRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Miscellany.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.2<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:kps-pthum-24b">cgal:kps-pthum-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgStreamSupport">
<title>I/O Streams</title>
<para>  <image type="html" name="io.png"></image>
   Andreas Fabri, Geert-Jan Giezeman, and Lutz Kettner All classes in the CGAL kernel provide input and output operators for I/O streams. The basic task of such an operator is to produce a representation of an object that can be written as a sequence of characters on devices as a console, a file, or a pipe. In CGAL we distinguish between a raw ASCII, a raw binary and a pretty printing format.   <ref refid="index_1Chapter_IO_Streams" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">User Manual</ref>  <ref refid="group__PkgStreamSupportRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fgk-ios-12-24b">cgal:fgk-ios-12-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
<para><htmlonly block="yes"> &lt;div style=&quot;background-color: #EEEDF2;&quot;&gt;</htmlonly></para>
</sect2>
</sect1>
<sect1 id="packages_1PartVisualization">
<title>Visualization</title>
<para><htmlonly block="yes"> &lt;/div&gt;</htmlonly></para>
<sect2 id="packages_1PkgGraphicsView">
<title>CGAL and the Qt Graphics View Framework</title>
<para>  <image type="html" name="detail.png"></image>
   Andreas Fabri and Laurent Rineau This package provides classes for displaying CGAL objects and data structures in the <ulink url="https://doc.qt.io/qt-5/graphicsview.html">Qt 5 Graphics View Framework</ulink>.   <ref refid="index_1Chapter_CGAL_and_the_Qt_Graphics_View_Framework" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/GraphicsView.tag">User Manual</ref>  <ref refid="group__PkgGraphicsViewRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/GraphicsView.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.4<linebreak/>
 <bold>Depends on:</bold> Qt 5 <linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fr-cqgvf-24b">cgal:fr-cqgvf-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesGPL" kindref="member">GPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgCGALIpelets">
<title>CGAL Ipelets</title>
<para>  <image type="html" name="ipeico.jpg"></image>
   Olivier Devillers, Sébastien Loriot, and Sylvain Pion This package provides a generic framework to easily write ipelets (plug-in&apos;s) using CGAL for the Ipe extensible drawing editor.   <ref refid="index_1Chapter_CGAL_Ipelets" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/CGAL_ipelets.tag">User Manual</ref>  <ref refid="group__PkgCGALIpeletsRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/CGAL_ipelets.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 3.5<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:lp-gi-24b">cgal:lp-gi-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
 </para>
</sect2>
<sect2 id="packages_1PkgBasicViewer">
<title>Basic Viewer</title>
<para>  <image type="html" name="basic_viewer_logo.png"></image>
   Guillaume Damiand and Mostafa Ashraf This package provides interactive visualization for most CGAL packages. First, the function <computeroutput><ref refid="group__PkgDrawSurfaceMesh_1ga73d415a7cf9cf671950b27e8b5cdf6f5" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">draw()</ref></computeroutput> is provided for each data structure. Several data structures can be added to a same graphics scene and visualized simultaneously. Rendering can be controlled (color, point size, etc.). Finally a Qt widget is provided that can be integrated in the GUI of a user application.   <ref refid="index_1Chapter_Basic_viewer" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Basic_viewer.tag">User Manual</ref>  <ref refid="group__PkgBasicViewerRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Basic_viewer.tag">Reference Manual</ref>     <bold>Introduced in:</bold> CGAL 6.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:d-bv-24b">cgal:d-bv-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member">LGPL</ref> <linebreak/>
  </para>
</sect2>
</sect1>
    </detaileddescription>
    <location file="packages.txt"/>
  </compounddef>
</doxygen>
