<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Dual" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Dual</compoundname>
    <includes local="no">CGAL/boost/graph/Dual.h</includes>
    <templateparamlist>
      <param>
        <type>typename Primal_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" prot="public" static="no">
        <type>Primal_</type>
        <definition>typedef Primal_ CGAL::Dual&lt; Primal_ &gt;::Primal</definition>
        <argsstring></argsstring>
        <name>Primal</name>
        <qualifiedname>CGAL::Dual::Primal</qualifiedname>
        <briefdescription>
<para>The underlying primal type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="57" column="19" bodyfile="CGAL/boost/graph/Dual.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Dual_1a3e71bf44ae5842f50038c491bb2496aa" prot="private" static="no" mutable="no">
        <type>const Primal_ &amp;</type>
        <definition>const Primal_&amp; CGAL::Dual&lt; Primal_ &gt;::primal_</definition>
        <argsstring></argsstring>
        <name>primal_</name>
        <qualifiedname>CGAL::Dual::primal_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="53" column="17" bodyfile="CGAL/boost/graph/Dual.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Dual_1add5bcd5fa450de44a72f8fe633852528" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Dual&lt; Primal_ &gt;::Dual</definition>
        <argsstring>(const Primal &amp;primal)</argsstring>
        <name>Dual</name>
        <qualifiedname>CGAL::Dual::Dual</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" kindref="member">Primal</ref> &amp;</type>
          <declname>primal</declname>
        </param>
        <briefdescription>
<para>constructs a <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref> from a given primal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="60" column="3" bodyfile="CGAL/boost/graph/Dual.h" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Dual_1aad365ac3cbe67a3d487a63aa9b49cdec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" kindref="member">Primal</ref> &amp;</type>
        <definition>const Primal &amp; CGAL::Dual&lt; Primal_ &gt;::primal</definition>
        <argsstring>() const</argsstring>
        <name>primal</name>
        <qualifiedname>CGAL::Dual::primal</qualifiedname>
        <briefdescription>
<para>returns the underlying primal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="64" column="16" bodyfile="CGAL/boost/graph/Dual.h" bodystart="64" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Dual_1a85d851dbd90074098e101a10457f65a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" kindref="member">Primal</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; <ref refid="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" kindref="member">Primal</ref> &gt;</type>
        <definition>Dual&lt; Primal &gt; dual</definition>
        <argsstring>(const Primal &amp;primal)</argsstring>
        <name>dual</name>
        <qualifiedname>CGAL::Dual::dual</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" kindref="member">Primal</ref> &amp;</type>
          <declname>primal</declname>
        </param>
        <briefdescription>
<para>constructs a <computeroutput><ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref></computeroutput> from a given <computeroutput>primal</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="74" column="6" bodyfile="CGAL/boost/graph/Dual.h" bodystart="74" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class template <computeroutput><ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref></computeroutput> is an adaptor that creates the dual view of a <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>Faces of the original graph correspond to vertices in the <computeroutput><ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref></computeroutput> and vice versa.</para>
<para>Note that border edges in a <computeroutput><ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref></computeroutput> have the <computeroutput>null_face</computeroutput> of the original graph as either source or target. This is unusual and might break other algorithms since edges are always assumed to have non-null vertices as a source and target. It is possible to filter border edges using <computeroutput>boost::filtered_graph</computeroutput> as shown in example <ref refid="BGL_surface_mesh_2surface_mesh_dual_8cpp-example" kindref="compound">BGL_surface_mesh/surface_mesh_dual.cpp</ref></para>
<para><bold>Property Forwarding</bold><linebreak/>
</para>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>Edge properties of the underlying graph are forwarded directly. For faces and vertices only the <computeroutput>face_index</computeroutput> and <computeroutput>vertex_index</computeroutput> properties are forwarded. Accessing other properties will lead to a compilation error. <htmlonly block="yes"> &lt;/div&gt; </htmlonly></para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Primal_</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/boost/graph/Dual.h" line="51" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="52" bodyend="66"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Dual_1add5bcd5fa450de44a72f8fe633852528" prot="public" virt="non-virtual"><scope>CGAL::Dual</scope><name>Dual</name></member>
      <member refid="classCGAL_1_1Dual_1a85d851dbd90074098e101a10457f65a1" prot="public" virt="non-virtual"><scope>CGAL::Dual</scope><name>dual</name></member>
      <member refid="classCGAL_1_1Dual_1a22a27f0319fa2626209231dfb37e4926" prot="public" virt="non-virtual"><scope>CGAL::Dual</scope><name>Primal</name></member>
      <member refid="classCGAL_1_1Dual_1aad365ac3cbe67a3d487a63aa9b49cdec" prot="public" virt="non-virtual"><scope>CGAL::Dual</scope><name>primal</name></member>
      <member refid="classCGAL_1_1Dual_1a3e71bf44ae5842f50038c491bb2496aa" prot="private" virt="non-virtual"><scope>CGAL::Dual</scope><name>primal_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
