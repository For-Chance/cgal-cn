<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__bgl__namedparameters" kind="group">
    <compoundname>bgl_namedparameters</compoundname>
    <title>Named Parameters</title>
    <briefdescription>
<para>The algorithms of the Boost Graph Library (BGL) often have many parameters with default values that are appropriate for most cases. </para>
    </briefdescription>
    <detaileddescription>
<para>In general, when no special treatment is applied, the values of such parameters are passed as a sequence. Deviating from the default for a certain parameter requires the user to explicitly pass values for all preceding parameters. The solution to this problem is to first write a tag and then the parameter, which for Dijkstra&apos;s shortest path algorithm might look as follows:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">std::vector&lt;vertex_descriptor&gt;<sp/>p(num_vertices(g));</highlight></codeline>
<codeline><highlight class="normal">std::vector&lt;int&gt;<sp/>d(num_vertices(g));</highlight></codeline>
<codeline><highlight class="normal">vertex_descriptor<sp/>s<sp/>=<sp/>vertex(A,<sp/>g);</highlight></codeline>
<codeline><highlight class="normal">dijkstra_shortest_paths(g,<sp/>s,<sp/>predecessor_map(&amp;p[0]).distance_map(&amp;d[0]));</highlight></codeline>
</programlisting></para>
<para>In the BGL manual, this is called <ulink url="https://www.boost.org/libs/graph/doc/bgl_named_params.html">named parameters</ulink>. The named parameters in the snippet use the tags <computeroutput>predecessor_map</computeroutput> and <computeroutput>distance_map</computeroutput> and they are concatenated using the dot operator.<linebreak/>
</para>
<para>A similar mechanism was introduced in CGAL, with the small difference that the named parameters tag live in the <computeroutput><ref refid="namespaceCGAL_1_1parameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters</ref>::</computeroutput> namespace and <computeroutput><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::default_values()</ref></computeroutput> can be used to indicate that default values of optional named parameters must be used. As in the BGL, named parameters in CGAL are also concatenated using the dot operator, and a typical usage is thus:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">Graph<sp/>g1,<sp/>g2;</highlight></codeline>
<codeline><highlight class="normal">Vertex_point_map_2<sp/>vpm_2;<sp/></highlight><highlight class="comment">//<sp/>an<sp/>hypothetical<sp/>custom<sp/>property<sp/>map<sp/>assigning<sp/>a<sp/>Point<sp/>to<sp/>the<sp/>vertices<sp/>of<sp/>g2</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>without<sp/>any<sp/>named<sp/>parameter<sp/>(default<sp/>values<sp/>are<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgBGLHelperFct_1ga2682fb7d5f4ff4eb65607ae4118e31bc" kindref="member">CGAL::copy_face_graph</ref>(g1,<sp/>g2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>specifying<sp/>named<sp/>parameters<sp/>for<sp/>the<sp/>second<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgBGLHelperFct_1ga2682fb7d5f4ff4eb65607ae4118e31bc" kindref="member">CGAL::copy_face_graph</ref>(g1,<sp/>g2,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CGAL::parameters::vertex_point_map(vpm)<sp/><sp/></highlight><highlight class="comment">//parameter<sp/>for<sp/>g1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.vertex_to_vertex_map(v2v),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//other<sp/>parameter<sp/>for<sp/>g1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::default_values</ref>());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parameter<sp/>for<sp/>g2</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
