<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgBGLIOFct" kind="group">
    <compoundname>PkgBGLIOFct</compoundname>
    <title>I/O Functions</title>
    <innergroup refid="group__PkgBGLIoFuncsSTL">STL I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncsPLY">PLY I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncsOBJ">OBJ I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncsOFF">OFF I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncsVTP">VTP I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncsGOCAD">GOCAD I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncsWRL">WRL I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIoFuncs3MF">3MF I/O Functions</innergroup>
    <innergroup refid="group__PkgBGLIOFctDeprecated">I/O Functions (Deprecated)</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgBGLIOFct_1ga49f5b5e6fbfcbfaaac7604c88e10915c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_polygon_mesh</definition>
        <argsstring>(const std::string &amp;fname, Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_polygon_mesh</name>
        <qualifiedname>CGAL::IO::read_polygon_mesh</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>reads a polygon mesh from a file. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOFF" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Object File Format (OFF)</ref> (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOBJ" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Wavefront Advanced Visualizer Object Format (OBJ)</ref> (<computeroutput>.obj</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamSTL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">STereoLithography (STL) File Format</ref> (<computeroutput>.stl</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref> (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamGocad" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">GOCAD (TS) File Format</ref> (<computeroutput>.ts</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamVTK" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">VTK (VTU / VTP / legacy) File Formats</ref> (<computeroutput>.vtp</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the filename extension (letter case is not important).</para>
<para>The data is expected to represent a 2-manifold (possibly with borders).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound">MutableFaceGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> described below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>g</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;Graph&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, g)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>Graph</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>verbose</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>whether extra information is printed when an incident occurs during reading </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para>Other named parameters may be used according to the file extension, see <ref refid="group__PkgBGLIOFct" kindref="compound">I/O Functions</ref> for an exhaustive list.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if reading was successful, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__PMP__IO__grp" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon_mesh_processing.tag"><computeroutput>CGAL::Polygon_mesh_processing::IO::read_polygon_mesh()</computeroutput></ref> if the data is not 2-manifold </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/polygon_mesh_io.h" line="123" column="6" bodyfile="CGAL/IO/polygon_mesh_io.h" bodystart="123" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFct_1gafa143949a33371dc6df8307be1ab8a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_polygon_mesh</definition>
        <argsstring>(const std::string &amp;fname, Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_polygon_mesh</name>
        <qualifiedname>CGAL::IO::write_polygon_mesh</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes a polygon mesh in a file. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOFF" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Object File Format (OFF)</ref> (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOBJ" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Wavefront Advanced Visualizer Object Format (OBJ)</ref> (<computeroutput>.obj</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamSTL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">STereoLithography (STL) File Format</ref> (<computeroutput>.stl</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref> (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamGocad" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">GOCAD (TS) File Format</ref> (<computeroutput>.ts</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamVTK" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">VTK (VTU / VTP / legacy) File Formats</ref> (<computeroutput>.vtp</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the filename extension (letter case is not important).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh to be output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> described below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>g</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;Graph&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, g)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>Graph</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>6</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only meaningful while using ASCII encoding. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be written in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only meaningful for formats that support binary encoding. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>verbose</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>whether extra information is printed when an incident occurs during reading </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para>Other named parameters may be used according to the file extension, see <ref refid="group__PkgBGLIOFct" kindref="compound">I/O Functions</ref> for an exhaustive list.</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/polygon_mesh_io.h" line="223" column="6" bodyfile="CGAL/IO/polygon_mesh_io.h" bodystart="223" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Methods to read and write graphs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
