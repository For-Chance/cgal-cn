<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classVertexListGraph" kind="class" language="C++" prot="public">
    <compoundname>VertexListGraph</compoundname>
    <includes local="no">Concepts/VertexListGraph.h</includes>
      <sectiondef kind="related">
      <memberdef kind="function" id="classVertexListGraph_1a3eb7f06fc4dfb72e705535b4844cdc74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref></type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; boost::graph_traits&lt; <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref> &gt;::vertex_iterator, boost::graph_traits&lt; <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref> &gt;::vertex_iterator &gt;</type>
        <definition>std::pair&lt; boost::graph_traits&lt; VertexListGraph &gt;::vertex_iterator, boost::graph_traits&lt; VertexListGraph &gt;::vertex_iterator &gt; vertices</definition>
        <argsstring>(const VertexListGraph &amp;g)</argsstring>
        <name>vertices</name>
        <qualifiedname>VertexListGraph::vertices</qualifiedname>
        <param>
          <type>const <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/VertexListGraph.h" line="29" column="1" declfile="Concepts/VertexListGraph.h" declline="29" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="classVertexListGraph_1a77e742c910da6a8230a45273186b130b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref></type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref> &gt;::vertices_size_type</type>
        <definition>boost::graph_traits&lt; VertexListGraph &gt;::vertices_size_type num_vertices</definition>
        <argsstring>(const VertexListGraph &amp;g)</argsstring>
        <name>num_vertices</name>
        <qualifiedname>VertexListGraph::num_vertices</qualifiedname>
        <param>
          <type>const <ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an upper bound of the number of vertices of the graph. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para><computeroutput><ref refid="classVertexListGraph_1a77e742c910da6a8230a45273186b130b" kindref="member">num_vertices()</ref></computeroutput> may return a number larger than <computeroutput>std::distance(vertices(g).first, vertices(g).second)</computeroutput>. This is the case for implementations only marking vertices deleted in the vertex container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/VertexListGraph.h" line="39" column="1" declfile="Concepts/VertexListGraph.h" declline="39" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concept from the Boost Graph Library. See <ulink url="https://www.boost.org/libs/graph/doc/VertexListGraph.html">https://www.boost.org/libs/graph/doc/VertexListGraph.html</ulink>. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>The concept <computeroutput><ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref></computeroutput> refines the concept <ulink url="https://www.boost.org/libs/graph/doc/Graph.html"><computeroutput>Graph</computeroutput></ulink> and adds the requirement for traversal of all vertices in a graph.</para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput></computeroutput> <ulink url="https://www.boost.org/libs/graph/doc/Graph.html">Graph</ulink></para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para>See <ref refid="group__PkgBGLTraits" kindref="compound">Boost Graph Traits Specializations </ref> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><ref refid="group__PkgBGLConcepts" kindref="compound">Graph Concepts </ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/VertexListGraph.h" line="20" column="1" bodyfile="Concepts/VertexListGraph.h" bodystart="20" bodyend="20"/>
    <listofallmembers>
      <member refid="classVertexListGraph_1a77e742c910da6a8230a45273186b130b" prot="public" virt="non-virtual"><scope>VertexListGraph</scope><name>num_vertices</name></member>
      <member refid="classVertexListGraph_1a3eb7f06fc4dfb72e705535b4844cdc74" prot="public" virt="non-virtual"><scope>VertexListGraph</scope><name>vertices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
