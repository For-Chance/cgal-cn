<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Aff__transformation__2" prot="public">CGAL::Aff_transformation_2</innerclass>
    <innerclass refid="classCGAL_1_1Aff__transformation__3" prot="public">CGAL::Aff_transformation_3</innerclass>
    <innerclass refid="classCGAL_1_1Algebraic__structure__traits" prot="public">CGAL::Algebraic_structure_traits</innerclass>
    <innerclass refid="structCGAL_1_1Ambient__dimension" prot="public">CGAL::Ambient_dimension</innerclass>
    <innerclass refid="classCGAL_1_1Aos__observer" prot="public">CGAL::Aos_observer</innerclass>
    <innerclass refid="classCGAL_1_1Arr__accessor" prot="public">CGAL::Arr_accessor</innerclass>
    <innerclass refid="classCGAL_1_1Arr__algebraic__segment__traits__2" prot="public">CGAL::Arr_algebraic_segment_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__Bezier__curve__traits__2" prot="public">CGAL::Arr_Bezier_curve_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__bounded__planar__topology__traits__2" prot="public">CGAL::Arr_bounded_planar_topology_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__circle__segment__traits__2" prot="public">CGAL::Arr_circle_segment_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__circular__arc__traits__2" prot="public">CGAL::Arr_circular_arc_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__circular__line__arc__traits__2" prot="public">CGAL::Arr_circular_line_arc_traits_2</innerclass>
    <innerclass refid="structCGAL_1_1Arr__closed__side__tag" prot="public">CGAL::Arr_closed_side_tag</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2" prot="public">CGAL::Arr_conic_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__consolidated__curve__data__traits__2" prot="public">CGAL::Arr_consolidated_curve_data_traits_2</innerclass>
    <innerclass refid="structCGAL_1_1Arr__contracted__side__tag" prot="public">CGAL::Arr_contracted_side_tag</innerclass>
    <innerclass refid="classCGAL_1_1Arr__curve__data__traits__2" prot="public">CGAL::Arr_curve_data_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__dcel" prot="public">CGAL::Arr_dcel</innerclass>
    <innerclass refid="classCGAL_1_1Arr__dcel__base" prot="public">CGAL::Arr_dcel_base</innerclass>
    <innerclass refid="classCGAL_1_1Arr__default__overlay__traits" prot="public">CGAL::Arr_default_overlay_traits</innerclass>
    <innerclass refid="classCGAL_1_1Arr__extended__dcel" prot="public">CGAL::Arr_extended_dcel</innerclass>
    <innerclass refid="classCGAL_1_1Arr__extended__dcel__text__formatter" prot="public">CGAL::Arr_extended_dcel_text_formatter</innerclass>
    <innerclass refid="classCGAL_1_1Arr__extended__face" prot="public">CGAL::Arr_extended_face</innerclass>
    <innerclass refid="classCGAL_1_1Arr__extended__halfedge" prot="public">CGAL::Arr_extended_halfedge</innerclass>
    <innerclass refid="classCGAL_1_1Arr__extended__vertex" prot="public">CGAL::Arr_extended_vertex</innerclass>
    <innerclass refid="classCGAL_1_1Arr__face__extended__dcel" prot="public">CGAL::Arr_face_extended_dcel</innerclass>
    <innerclass refid="classCGAL_1_1Arr__face__extended__text__formatter" prot="public">CGAL::Arr_face_extended_text_formatter</innerclass>
    <innerclass refid="classCGAL_1_1Arr__face__index__map" prot="public">CGAL::Arr_face_index_map</innerclass>
    <innerclass refid="classCGAL_1_1Arr__face__overlay__traits" prot="public">CGAL::Arr_face_overlay_traits</innerclass>
    <innerclass refid="classCGAL_1_1Arr__geodesic__arc__on__sphere__traits__2" prot="public">CGAL::Arr_geodesic_arc_on_sphere_traits_2</innerclass>
    <innerclass refid="structCGAL_1_1Arr__identified__side__tag" prot="public">CGAL::Arr_identified_side_tag</innerclass>
    <innerclass refid="classCGAL_1_1Arr__landmarks__point__location" prot="public">CGAL::Arr_landmarks_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__line__arc__traits__2" prot="public">CGAL::Arr_line_arc_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__linear__traits__2" prot="public">CGAL::Arr_linear_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__naive__point__location" prot="public">CGAL::Arr_naive_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__non__caching__segment__basic__traits__2" prot="public">CGAL::Arr_non_caching_segment_basic_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__non__caching__segment__traits__2" prot="public">CGAL::Arr_non_caching_segment_traits_2</innerclass>
    <innerclass refid="structCGAL_1_1Arr__oblivious__side__tag" prot="public">CGAL::Arr_oblivious_side_tag</innerclass>
    <innerclass refid="structCGAL_1_1Arr__open__side__tag" prot="public">CGAL::Arr_open_side_tag</innerclass>
    <innerclass refid="structCGAL_1_1Arr__point__location__result" prot="public">CGAL::Arr_point_location_result</innerclass>
    <innerclass refid="classCGAL_1_1Arr__polycurve__traits__2" prot="public">CGAL::Arr_polycurve_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__polyline__traits__2" prot="public">CGAL::Arr_polyline_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__rational__function__traits__2" prot="public">CGAL::Arr_rational_function_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__segment__traits__2" prot="public">CGAL::Arr_segment_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__spherical__topology__traits__2" prot="public">CGAL::Arr_spherical_topology_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__text__formatter" prot="public">CGAL::Arr_text_formatter</innerclass>
    <innerclass refid="classCGAL_1_1Arr__trapezoid__ric__point__location" prot="public">CGAL::Arr_trapezoid_ric_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__triangulation__point__location" prot="public">CGAL::Arr_triangulation_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__unb__planar__topology__traits__2" prot="public">CGAL::Arr_unb_planar_topology_traits_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__vertex__index__map" prot="public">CGAL::Arr_vertex_index_map</innerclass>
    <innerclass refid="classCGAL_1_1Arr__walk__along__line__point__location" prot="public">CGAL::Arr_walk_along_line_point_location</innerclass>
    <innerclass refid="classCGAL_1_1Arr__with__history__text__formatter" prot="public">CGAL::Arr_with_history_text_formatter</innerclass>
    <innerclass refid="classCGAL_1_1Arrangement__2" prot="public">CGAL::Arrangement_2</innerclass>
    <innerclass refid="classCGAL_1_1Arrangement__on__surface__2" prot="public">CGAL::Arrangement_on_surface_2</innerclass>
    <innerclass refid="classCGAL_1_1Arrangement__on__surface__with__history__2" prot="public">CGAL::Arrangement_on_surface_with_history_2</innerclass>
    <innerclass refid="classCGAL_1_1Arrangement__with__history__2" prot="public">CGAL::Arrangement_with_history_2</innerclass>
    <innerclass refid="classCGAL_1_1Bbox__2" prot="public">CGAL::Bbox_2</innerclass>
    <innerclass refid="classCGAL_1_1Bbox__3" prot="public">CGAL::Bbox_3</innerclass>
    <innerclass refid="structCGAL_1_1Bidirectional__circulator__base" prot="public">CGAL::Bidirectional_circulator_base</innerclass>
    <innerclass refid="classCGAL_1_1Bidirectional__circulator__ptrbase" prot="public">CGAL::Bidirectional_circulator_ptrbase</innerclass>
    <innerclass refid="structCGAL_1_1Bidirectional__circulator__tag" prot="public">CGAL::Bidirectional_circulator_tag</innerclass>
    <innerclass refid="structCGAL_1_1Boolean__property__map" prot="public">CGAL::Boolean_property_map</innerclass>
    <innerclass refid="structCGAL_1_1Boolean__tag" prot="public">CGAL::Boolean_tag</innerclass>
    <innerclass refid="structCGAL_1_1Cartesian" prot="public">CGAL::Cartesian</innerclass>
    <innerclass refid="classCGAL_1_1Cartesian__converter" prot="public">CGAL::Cartesian_converter</innerclass>
    <innerclass refid="structCGAL_1_1Cartesian__converter__property__map" prot="public">CGAL::Cartesian_converter_property_map</innerclass>
    <innerclass refid="structCGAL_1_1Cast__function__object" prot="public">CGAL::Cast_function_object</innerclass>
    <innerclass refid="classCGAL_1_1CC__safe__handle" prot="public">CGAL::CC_safe_handle</innerclass>
    <innerclass refid="classCGAL_1_1Cell__attribute" prot="public">CGAL::Cell_attribute</innerclass>
    <innerclass refid="classCGAL_1_1Cell__attribute__with__id" prot="public">CGAL::Cell_attribute_with_id</innerclass>
    <innerclass refid="classCGAL_1_1Cell__attribute__with__point" prot="public">CGAL::Cell_attribute_with_point</innerclass>
    <innerclass refid="classCGAL_1_1Cell__attribute__with__point__and__id" prot="public">CGAL::Cell_attribute_with_point_and_id</innerclass>
    <innerclass refid="classCGAL_1_1Circle__2" prot="public">CGAL::Circle_2</innerclass>
    <innerclass refid="classCGAL_1_1Circle__3" prot="public">CGAL::Circle_3</innerclass>
    <innerclass refid="structCGAL_1_1Circulator__base" prot="public">CGAL::Circulator_base</innerclass>
    <innerclass refid="classCGAL_1_1Circulator__from__container" prot="public">CGAL::Circulator_from_container</innerclass>
    <innerclass refid="classCGAL_1_1Circulator__from__iterator" prot="public">CGAL::Circulator_from_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Circulator__tag" prot="public">CGAL::Circulator_tag</innerclass>
    <innerclass refid="structCGAL_1_1Circulator__traits" prot="public">CGAL::Circulator_traits</innerclass>
    <innerclass refid="structCGAL_1_1Coercion__traits" prot="public">CGAL::Coercion_traits</innerclass>
    <innerclass refid="classCGAL_1_1Combinatorial__map" prot="public">CGAL::Combinatorial_map</innerclass>
    <innerclass refid="structCGAL_1_1Compact" prot="public">CGAL::Compact</innerclass>
    <innerclass refid="classCGAL_1_1Compact__container" prot="public">CGAL::Compact_container</innerclass>
    <innerclass refid="classCGAL_1_1Compact__container__base" prot="public">CGAL::Compact_container_base</innerclass>
    <innerclass refid="structCGAL_1_1Compact__container__traits" prot="public">CGAL::Compact_container_traits</innerclass>
    <innerclass refid="classCGAL_1_1Compare__to__less" prot="public">CGAL::Compare_to_less</innerclass>
    <innerclass refid="structCGAL_1_1Compose__property__map" prot="public">CGAL::Compose_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Concurrent__compact__container" prot="public">CGAL::Concurrent_compact_container</innerclass>
    <innerclass refid="structCGAL_1_1Concurrent__compact__container__traits" prot="public">CGAL::Concurrent_compact_container_traits</innerclass>
    <innerclass refid="classCGAL_1_1Const__oneset__iterator" prot="public">CGAL::Const_oneset_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Constant__property__map" prot="public">CGAL::Constant_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Constrained__Delaunay__triangulation__2" prot="public">CGAL::Constrained_Delaunay_triangulation_2</innerclass>
    <innerclass refid="classCGAL_1_1Constrained__triangulation__2" prot="public">CGAL::Constrained_triangulation_2</innerclass>
    <innerclass refid="classCGAL_1_1Constrained__triangulation__face__base__2" prot="public">CGAL::Constrained_triangulation_face_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Constrained__triangulation__plus__2" prot="public">CGAL::Constrained_triangulation_plus_2</innerclass>
    <innerclass refid="structCGAL_1_1Construct__array" prot="public">CGAL::Construct_array</innerclass>
    <innerclass refid="classCGAL_1_1Container__from__circulator" prot="public">CGAL::Container_from_circulator</innerclass>
    <innerclass refid="classCGAL_1_1CORE__algebraic__number__traits" prot="public">CGAL::CORE_algebraic_number_traits</innerclass>
    <innerclass refid="classCGAL_1_1Counting__iterator" prot="public">CGAL::Counting_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Creator__1" prot="public">CGAL::Creator_1</innerclass>
    <innerclass refid="classCGAL_1_1Creator__2" prot="public">CGAL::Creator_2</innerclass>
    <innerclass refid="classCGAL_1_1Creator__3" prot="public">CGAL::Creator_3</innerclass>
    <innerclass refid="classCGAL_1_1Creator__4" prot="public">CGAL::Creator_4</innerclass>
    <innerclass refid="classCGAL_1_1Creator__5" prot="public">CGAL::Creator_5</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__2" prot="public">CGAL::Creator_uniform_2</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__3" prot="public">CGAL::Creator_uniform_3</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__4" prot="public">CGAL::Creator_uniform_4</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__5" prot="public">CGAL::Creator_uniform_5</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__6" prot="public">CGAL::Creator_uniform_6</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__7" prot="public">CGAL::Creator_uniform_7</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__8" prot="public">CGAL::Creator_uniform_8</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__9" prot="public">CGAL::Creator_uniform_9</innerclass>
    <innerclass refid="classCGAL_1_1Creator__uniform__d" prot="public">CGAL::Creator_uniform_d</innerclass>
    <innerclass refid="structCGAL_1_1Default" prot="public">CGAL::Default</innerclass>
    <innerclass refid="classCGAL_1_1Deformation__Eigen__closest__rotation__traits__3" prot="public">CGAL::Deformation_Eigen_closest_rotation_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Deformation__Eigen__polar__closest__rotation__traits__3" prot="public">CGAL::Deformation_Eigen_polar_closest_rotation_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__triangulation__2" prot="public">CGAL::Delaunay_triangulation_2</innerclass>
    <innerclass refid="structCGAL_1_1Dereference" prot="public">CGAL::Dereference</innerclass>
    <innerclass refid="structCGAL_1_1Dereference__property__map" prot="public">CGAL::Dereference_property_map</innerclass>
    <innerclass refid="structCGAL_1_1Descriptor2Descriptor" prot="public">CGAL::Descriptor2Descriptor</innerclass>
    <innerclass refid="structCGAL_1_1Dimension__tag" prot="public">CGAL::Dimension_tag</innerclass>
    <innerclass refid="classCGAL_1_1Direction__2" prot="public">CGAL::Direction_2</innerclass>
    <innerclass refid="classCGAL_1_1Direction__3" prot="public">CGAL::Direction_3</innerclass>
    <innerclass refid="classCGAL_1_1Dispatch__or__drop__output__iterator" prot="public">CGAL::Dispatch_or_drop_output_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Dispatch__output__iterator" prot="public">CGAL::Dispatch_output_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Dual" prot="public">CGAL::Dual</innerclass>
    <innerclass refid="structCGAL_1_1Dynamic__dimension__tag" prot="public">CGAL::Dynamic_dimension_tag</innerclass>
    <innerclass refid="structCGAL_1_1dynamic__edge__property__t" prot="public">CGAL::dynamic_edge_property_t</innerclass>
    <innerclass refid="structCGAL_1_1dynamic__face__property__t" prot="public">CGAL::dynamic_face_property_t</innerclass>
    <innerclass refid="structCGAL_1_1dynamic__halfedge__property__t" prot="public">CGAL::dynamic_halfedge_property_t</innerclass>
    <innerclass refid="structCGAL_1_1dynamic__vertex__property__t" prot="public">CGAL::dynamic_vertex_property_t</innerclass>
    <innerclass refid="classCGAL_1_1Edge__around__face__iterator" prot="public">CGAL::Edge_around_face_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Emptyset__iterator" prot="public">CGAL::Emptyset_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Euclidean__ring__tag" prot="public">CGAL::Euclidean_ring_tag</innerclass>
    <innerclass refid="structCGAL_1_1Exact__intersections__tag" prot="public">CGAL::Exact_intersections_tag</innerclass>
    <innerclass refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel" prot="public">CGAL::Exact_predicates_exact_constructions_kernel</innerclass>
    <innerclass refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel__with__kth__root" prot="public">CGAL::Exact_predicates_exact_constructions_kernel_with_kth_root</innerclass>
    <innerclass refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel__with__root__of" prot="public">CGAL::Exact_predicates_exact_constructions_kernel_with_root_of</innerclass>
    <innerclass refid="classCGAL_1_1Exact__predicates__exact__constructions__kernel__with__sqrt" prot="public">CGAL::Exact_predicates_exact_constructions_kernel_with_sqrt</innerclass>
    <innerclass refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" prot="public">CGAL::Exact_predicates_inexact_constructions_kernel</innerclass>
    <innerclass refid="structCGAL_1_1Exact__predicates__tag" prot="public">CGAL::Exact_predicates_tag</innerclass>
    <innerclass refid="classCGAL_1_1Face__around__face__circulator" prot="public">CGAL::Face_around_face_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Face__around__face__iterator" prot="public">CGAL::Face_around_face_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Face__around__target__circulator" prot="public">CGAL::Face_around_target_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Face__around__target__iterator" prot="public">CGAL::Face_around_target_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Face__filtered__graph" prot="public">CGAL::Face_filtered_graph</innerclass>
    <innerclass refid="structCGAL_1_1Fast" prot="public">CGAL::Fast</innerclass>
    <innerclass refid="structCGAL_1_1Feature__dimension" prot="public">CGAL::Feature_dimension</innerclass>
    <innerclass refid="structCGAL_1_1Field__tag" prot="public">CGAL::Field_tag</innerclass>
    <innerclass refid="structCGAL_1_1Field__with__kth__root__tag" prot="public">CGAL::Field_with_kth_root_tag</innerclass>
    <innerclass refid="structCGAL_1_1Field__with__root__of__tag" prot="public">CGAL::Field_with_root_of_tag</innerclass>
    <innerclass refid="structCGAL_1_1Field__with__sqrt__tag" prot="public">CGAL::Field_with_sqrt_tag</innerclass>
    <innerclass refid="structCGAL_1_1Filter__iterator" prot="public">CGAL::Filter_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Filtered__kernel" prot="public">CGAL::Filtered_kernel</innerclass>
    <innerclass refid="structCGAL_1_1Filtered__kernel__adaptor" prot="public">CGAL::Filtered_kernel_adaptor</innerclass>
    <innerclass refid="classCGAL_1_1Filtered__predicate" prot="public">CGAL::Filtered_predicate</innerclass>
    <innerclass refid="structCGAL_1_1First__of__pair__property__map" prot="public">CGAL::First_of_pair_property_map</innerclass>
    <innerclass refid="structCGAL_1_1Forward__circulator__base" prot="public">CGAL::Forward_circulator_base</innerclass>
    <innerclass refid="classCGAL_1_1Forward__circulator__ptrbase" prot="public">CGAL::Forward_circulator_ptrbase</innerclass>
    <innerclass refid="structCGAL_1_1Forward__circulator__tag" prot="public">CGAL::Forward_circulator_tag</innerclass>
    <innerclass refid="classCGAL_1_1Fourtuple" prot="public">CGAL::Fourtuple</innerclass>
    <innerclass refid="classCGAL_1_1Fraction__traits" prot="public">CGAL::Fraction_traits</innerclass>
    <innerclass refid="structCGAL_1_1Generic__map__min__items" prot="public">CGAL::Generic_map_min_items</innerclass>
    <innerclass refid="structCGAL_1_1Get__address" prot="public">CGAL::Get_address</innerclass>
    <innerclass refid="structCGAL_1_1graph__has__property" prot="public">CGAL::graph_has_property</innerclass>
    <innerclass refid="structCGAL_1_1graph__has__property_3_01CGAL_1_1Face__filtered__graph_3_01Graph_00_01FIMap_00_01V4f758a8bc3563784859a7c224ac6afaf" prot="public">CGAL::graph_has_property&lt; CGAL::Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, PropertyTag &gt;</innerclass>
    <innerclass refid="structCGAL_1_1graph__has__property_3_01CGAL_1_1Graph__with__descriptor__with__graph_3_01Graph_01_4_00_01PropertyTag_01_4" prot="public">CGAL::graph_has_property&lt; CGAL::Graph_with_descriptor_with_graph&lt; Graph &gt;, PropertyTag &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Graph__with__descriptor__with__graph" prot="public">CGAL::Graph_with_descriptor_with_graph</innerclass>
    <innerclass refid="structCGAL_1_1Graph__with__descriptor__with__graph__property__map" prot="public">CGAL::Graph_with_descriptor_with_graph_property_map</innerclass>
    <innerclass refid="structCGAL_1_1Graph__with__descriptor__with__graph__property__map_3_01Graph_00_01PM_00_01boost_131ff34400bfc8897af62ea8224f17291" prot="public">CGAL::Graph_with_descriptor_with_graph_property_map&lt; Graph, PM, boost::lvalue_property_map_tag &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Gwdwg__descriptor" prot="public">CGAL::Gwdwg_descriptor</innerclass>
    <innerclass refid="classCGAL_1_1Halfedge__around__face__circulator" prot="public">CGAL::Halfedge_around_face_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Halfedge__around__face__iterator" prot="public">CGAL::Halfedge_around_face_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Halfedge__around__source__circulator" prot="public">CGAL::Halfedge_around_source_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Halfedge__around__source__iterator" prot="public">CGAL::Halfedge_around_source_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Halfedge__around__target__circulator" prot="public">CGAL::Halfedge_around_target_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Halfedge__around__target__iterator" prot="public">CGAL::Halfedge_around_target_iterator</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__const__decorator" prot="public">CGAL::HalfedgeDS_const_decorator</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__decorator" prot="public">CGAL::HalfedgeDS_decorator</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__default" prot="public">CGAL::HalfedgeDS_default</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__face__base" prot="public">CGAL::HalfedgeDS_face_base</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__face__max__base__with__id" prot="public">CGAL::HalfedgeDS_face_max_base_with_id</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__face__min__base" prot="public">CGAL::HalfedgeDS_face_min_base</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__halfedge__base" prot="public">CGAL::HalfedgeDS_halfedge_base</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__halfedge__max__base__with__id" prot="public">CGAL::HalfedgeDS_halfedge_max_base_with_id</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__halfedge__min__base" prot="public">CGAL::HalfedgeDS_halfedge_min_base</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__items__2" prot="public">CGAL::HalfedgeDS_items_2</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__items__decorator" prot="public">CGAL::HalfedgeDS_items_decorator</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__list" prot="public">CGAL::HalfedgeDS_list</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__min__items" prot="public">CGAL::HalfedgeDS_min_items</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__vector" prot="public">CGAL::HalfedgeDS_vector</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__vertex__base" prot="public">CGAL::HalfedgeDS_vertex_base</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__vertex__max__base__with__id" prot="public">CGAL::HalfedgeDS_vertex_max_base_with_id</innerclass>
    <innerclass refid="classCGAL_1_1HalfedgeDS__vertex__min__base" prot="public">CGAL::HalfedgeDS_vertex_min_base</innerclass>
    <innerclass refid="structCGAL_1_1Handle__hash__function" prot="public">CGAL::Handle_hash_function</innerclass>
    <innerclass refid="structCGAL_1_1Homogeneous" prot="public">CGAL::Homogeneous</innerclass>
    <innerclass refid="classCGAL_1_1Homogeneous__converter" prot="public">CGAL::Homogeneous_converter</innerclass>
    <innerclass refid="structCGAL_1_1Identity" prot="public">CGAL::Identity</innerclass>
    <innerclass refid="structCGAL_1_1Identity__property__map" prot="public">CGAL::Identity_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Identity__transformation" prot="public">CGAL::Identity_transformation</innerclass>
    <innerclass refid="classCGAL_1_1In__edge__iterator" prot="public">CGAL::In_edge_iterator</innerclass>
    <innerclass refid="classCGAL_1_1In__place__list" prot="public">CGAL::In_place_list</innerclass>
    <innerclass refid="classCGAL_1_1In__place__list__base" prot="public">CGAL::In_place_list_base</innerclass>
    <innerclass refid="structCGAL_1_1Input__iterator__property__map" prot="public">CGAL::Input_iterator_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Input__rep" prot="public">CGAL::Input_rep</innerclass>
    <innerclass refid="classCGAL_1_1Insert__iterator" prot="public">CGAL::Insert_iterator</innerclass>
    <innerclass refid="structCGAL_1_1Integral__domain__tag" prot="public">CGAL::Integral_domain_tag</innerclass>
    <innerclass refid="structCGAL_1_1Integral__domain__without__division__tag" prot="public">CGAL::Integral_domain_without_division_tag</innerclass>
    <innerclass refid="classCGAL_1_1Inverse__index" prot="public">CGAL::Inverse_index</innerclass>
    <innerclass refid="classCGAL_1_1Iso__cuboid__3" prot="public">CGAL::Iso_cuboid_3</innerclass>
    <innerclass refid="classCGAL_1_1Iso__rectangle__2" prot="public">CGAL::Iso_rectangle_2</innerclass>
    <innerclass refid="classCGAL_1_1Istream__iterator" prot="public">CGAL::Istream_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Iterator__range" prot="public">CGAL::Iterator_range</innerclass>
    <innerclass refid="structCGAL_1_1Iterator__tag" prot="public">CGAL::Iterator_tag</innerclass>
    <innerclass refid="classCGAL_1_1Join__input__iterator__1" prot="public">CGAL::Join_input_iterator_1</innerclass>
    <innerclass refid="classCGAL_1_1Join__input__iterator__2" prot="public">CGAL::Join_input_iterator_2</innerclass>
    <innerclass refid="classCGAL_1_1Join__input__iterator__3" prot="public">CGAL::Join_input_iterator_3</innerclass>
    <innerclass refid="structCGAL_1_1Kernel__traits" prot="public">CGAL::Kernel_traits</innerclass>
    <innerclass refid="classCGAL_1_1Line__2" prot="public">CGAL::Line_2</innerclass>
    <innerclass refid="classCGAL_1_1Line__3" prot="public">CGAL::Line_3</innerclass>
    <innerclass refid="structCGAL_1_1Linear__cell__complex__bgl__min__items" prot="public">CGAL::Linear_cell_complex_bgl_min_items</innerclass>
    <innerclass refid="structCGAL_1_1Linear__cell__complex__for__bgl__combinatorial__map__helper" prot="public">CGAL::Linear_cell_complex_for_bgl_combinatorial_map_helper</innerclass>
    <innerclass refid="classCGAL_1_1Linear__cell__complex__for__combinatorial__map" prot="public">CGAL::Linear_cell_complex_for_combinatorial_map</innerclass>
    <innerclass refid="classCGAL_1_1Linear__cell__complex__for__generalized__map" prot="public">CGAL::Linear_cell_complex_for_generalized_map</innerclass>
    <innerclass refid="classCGAL_1_1Linear__cell__complex__incremental__builder__3" prot="public">CGAL::Linear_cell_complex_incremental_builder_3</innerclass>
    <innerclass refid="structCGAL_1_1Linear__cell__complex__min__items" prot="public">CGAL::Linear_cell_complex_min_items</innerclass>
    <innerclass refid="structCGAL_1_1Linear__cell__complex__traits" prot="public">CGAL::Linear_cell_complex_traits</innerclass>
    <innerclass refid="structCGAL_1_1Location__policy" prot="public">CGAL::Location_policy</innerclass>
    <innerclass refid="structCGAL_1_1Manifold__tag" prot="public">CGAL::Manifold_tag</innerclass>
    <innerclass refid="structCGAL_1_1Manifold__with__boundary__tag" prot="public">CGAL::Manifold_with_boundary_tag</innerclass>
    <innerclass refid="structCGAL_1_1Memory__sizer" prot="public">CGAL::Memory_sizer</innerclass>
    <innerclass refid="classCGAL_1_1Modifier__base" prot="public">CGAL::Modifier_base</innerclass>
    <innerclass refid="classCGAL_1_1Multiset" prot="public">CGAL::Multiset</innerclass>
    <innerclass refid="classCGAL_1_1N__step__adaptor" prot="public">CGAL::N_step_adaptor</innerclass>
    <innerclass refid="classCGAL_1_1Nef__nary__union__3" prot="public">CGAL::Nef_nary_union_3</innerclass>
    <innerclass refid="classCGAL_1_1Nef__polyhedron__3" prot="public">CGAL::Nef_polyhedron_3</innerclass>
    <innerclass refid="structCGAL_1_1No__constraint__intersection__requiring__constructions__tag" prot="public">CGAL::No_constraint_intersection_requiring_constructions_tag</innerclass>
    <innerclass refid="structCGAL_1_1No__constraint__intersection__tag" prot="public">CGAL::No_constraint_intersection_tag</innerclass>
    <innerclass refid="structCGAL_1_1No__intersection__tag" prot="public">CGAL::No_intersection_tag</innerclass>
    <innerclass refid="structCGAL_1_1Non__manifold__tag" prot="public">CGAL::Non_manifold_tag</innerclass>
    <innerclass refid="structCGAL_1_1Nth__of__tuple__property__map" prot="public">CGAL::Nth_of_tuple_property_map</innerclass>
    <innerclass refid="structCGAL_1_1Nth__of__tuple__property__map_3_01N_00_01std_1_1tuple_3_01T_8_8_8_01_4_01_4" prot="public">CGAL::Nth_of_tuple_property_map&lt; N, std::tuple&lt; T... &gt; &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Null__functor" prot="public">CGAL::Null_functor</innerclass>
    <innerclass refid="structCGAL_1_1Null__tag" prot="public">CGAL::Null_tag</innerclass>
    <innerclass refid="classCGAL_1_1Null__vector" prot="public">CGAL::Null_vector</innerclass>
    <innerclass refid="classCGAL_1_1Object" prot="public">CGAL::Object</innerclass>
    <innerclass refid="classCGAL_1_1Oneset__iterator" prot="public">CGAL::Oneset_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Opposite__edge__around__face__iterator" prot="public">CGAL::Opposite_edge_around_face_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Origin" prot="public">CGAL::Origin</innerclass>
    <innerclass refid="classCGAL_1_1Ostream__iterator" prot="public">CGAL::Ostream_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Out__edge__iterator" prot="public">CGAL::Out_edge_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Output__rep" prot="public">CGAL::Output_rep</innerclass>
    <innerclass refid="structCGAL_1_1Parallel__if__available__tag" prot="public">CGAL::Parallel_if_available_tag</innerclass>
    <innerclass refid="structCGAL_1_1Parallel__tag" prot="public">CGAL::Parallel_tag</innerclass>
    <innerclass refid="classCGAL_1_1Plane__3" prot="public">CGAL::Plane_3</innerclass>
    <innerclass refid="classCGAL_1_1Point__2" prot="public">CGAL::Point_2</innerclass>
    <innerclass refid="classCGAL_1_1Point__3" prot="public">CGAL::Point_3</innerclass>
    <innerclass refid="structCGAL_1_1Pointer__property__map" prot="public">CGAL::Pointer_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Polygon__mesh__slicer" prot="public">CGAL::Polygon_mesh_slicer</innerclass>
    <innerclass refid="structCGAL_1_1Polyhedral__envelope" prot="public">CGAL::Polyhedral_envelope</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__3" prot="public">CGAL::Polyhedron_3</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__incremental__builder__3" prot="public">CGAL::Polyhedron_incremental_builder_3</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__items__3" prot="public">CGAL::Polyhedron_items_3</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__items__with__id__3" prot="public">CGAL::Polyhedron_items_with_id_3</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__min__items__3" prot="public">CGAL::Polyhedron_min_items_3</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__traits__3" prot="public">CGAL::Polyhedron_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Polyhedron__traits__with__normals__3" prot="public">CGAL::Polyhedron_traits_with_normals_3</innerclass>
    <innerclass refid="structCGAL_1_1Profile__counter" prot="public">CGAL::Profile_counter</innerclass>
    <innerclass refid="structCGAL_1_1Project__facet" prot="public">CGAL::Project_facet</innerclass>
    <innerclass refid="structCGAL_1_1Project__next" prot="public">CGAL::Project_next</innerclass>
    <innerclass refid="structCGAL_1_1Project__next__opposite" prot="public">CGAL::Project_next_opposite</innerclass>
    <innerclass refid="structCGAL_1_1Project__normal" prot="public">CGAL::Project_normal</innerclass>
    <innerclass refid="structCGAL_1_1Project__opposite__prev" prot="public">CGAL::Project_opposite_prev</innerclass>
    <innerclass refid="structCGAL_1_1Project__plane" prot="public">CGAL::Project_plane</innerclass>
    <innerclass refid="structCGAL_1_1Project__point" prot="public">CGAL::Project_point</innerclass>
    <innerclass refid="structCGAL_1_1Project__prev" prot="public">CGAL::Project_prev</innerclass>
    <innerclass refid="structCGAL_1_1Project__vertex" prot="public">CGAL::Project_vertex</innerclass>
    <innerclass refid="classCGAL_1_1Projection__traits__3" prot="public">CGAL::Projection_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Projection__traits__xy__3" prot="public">CGAL::Projection_traits_xy_3</innerclass>
    <innerclass refid="classCGAL_1_1Projection__traits__xz__3" prot="public">CGAL::Projection_traits_xz_3</innerclass>
    <innerclass refid="classCGAL_1_1Projection__traits__yz__3" prot="public">CGAL::Projection_traits_yz_3</innerclass>
    <innerclass refid="structCGAL_1_1Property__map__to__unary__function" prot="public">CGAL::Property_map_to_unary_function</innerclass>
    <innerclass refid="classCGAL_1_1Quadruple" prot="public">CGAL::Quadruple</innerclass>
    <innerclass refid="classCGAL_1_1Random__access__adaptor" prot="public">CGAL::Random_access_adaptor</innerclass>
    <innerclass refid="structCGAL_1_1Random__access__circulator__base" prot="public">CGAL::Random_access_circulator_base</innerclass>
    <innerclass refid="classCGAL_1_1Random__access__circulator__ptrbase" prot="public">CGAL::Random_access_circulator_ptrbase</innerclass>
    <innerclass refid="structCGAL_1_1Random__access__circulator__tag" prot="public">CGAL::Random_access_circulator_tag</innerclass>
    <innerclass refid="classCGAL_1_1Random__access__property__map" prot="public">CGAL::Random_access_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Random__access__value__adaptor" prot="public">CGAL::Random_access_value_adaptor</innerclass>
    <innerclass refid="classCGAL_1_1Ray__2" prot="public">CGAL::Ray_2</innerclass>
    <innerclass refid="classCGAL_1_1Ray__3" prot="public">CGAL::Ray_3</innerclass>
    <innerclass refid="classCGAL_1_1Real__embeddable__traits" prot="public">CGAL::Real_embeddable_traits</innerclass>
    <innerclass refid="classCGAL_1_1Real__timer" prot="public">CGAL::Real_timer</innerclass>
    <innerclass refid="classCGAL_1_1Reflection" prot="public">CGAL::Reflection</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__2" prot="public">CGAL::Regular_triangulation_2</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__face__base__2" prot="public">CGAL::Regular_triangulation_face_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__vertex__base__2" prot="public">CGAL::Regular_triangulation_vertex_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Rigid__triangle__mesh__collision__detection" prot="public">CGAL::Rigid_triangle_mesh_collision_detection</innerclass>
    <innerclass refid="classCGAL_1_1Rotation" prot="public">CGAL::Rotation</innerclass>
    <innerclass refid="classCGAL_1_1Scaling" prot="public">CGAL::Scaling</innerclass>
    <innerclass refid="classCGAL_1_1Seam__mesh" prot="public">CGAL::Seam_mesh</innerclass>
    <innerclass refid="structCGAL_1_1Second__of__pair__property__map" prot="public">CGAL::Second_of_pair_property_map</innerclass>
    <innerclass refid="classCGAL_1_1Segment__2" prot="public">CGAL::Segment_2</innerclass>
    <innerclass refid="classCGAL_1_1Segment__3" prot="public">CGAL::Segment_3</innerclass>
    <innerclass refid="structCGAL_1_1Sequential__tag" prot="public">CGAL::Sequential_tag</innerclass>
    <innerclass refid="classCGAL_1_1Side__of__triangle__mesh" prot="public">CGAL::Side_of_triangle_mesh</innerclass>
    <innerclass refid="structCGAL_1_1Simple__cartesian" prot="public">CGAL::Simple_cartesian</innerclass>
    <innerclass refid="structCGAL_1_1Simple__homogeneous" prot="public">CGAL::Simple_homogeneous</innerclass>
    <innerclass refid="classCGAL_1_1Sixtuple" prot="public">CGAL::Sixtuple</innerclass>
    <innerclass refid="classCGAL_1_1Spatial__lock__grid__3" prot="public">CGAL::Spatial_lock_grid_3</innerclass>
    <innerclass refid="classCGAL_1_1Sphere__3" prot="public">CGAL::Sphere_3</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh" prot="public">CGAL::Surface_mesh</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__deformation" prot="public">CGAL::Surface_mesh_deformation</innerclass>
    <innerclass refid="classCGAL_1_1Tetrahedron__3" prot="public">CGAL::Tetrahedron_3</innerclass>
    <innerclass refid="classCGAL_1_1Threetuple" prot="public">CGAL::Threetuple</innerclass>
    <innerclass refid="classCGAL_1_1Timer" prot="public">CGAL::Timer</innerclass>
    <innerclass refid="classCGAL_1_1Translation" prot="public">CGAL::Translation</innerclass>
    <innerclass refid="classCGAL_1_1Triangle__2" prot="public">CGAL::Triangle_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangle__3" prot="public">CGAL::Triangle_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__2" prot="public">CGAL::Triangulation_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__cw__ccw__2" prot="public">CGAL::Triangulation_cw_ccw_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__face__base__2" prot="public">CGAL::Triangulation_face_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__face__base__with__id__2" prot="public">CGAL::Triangulation_face_base_with_id_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__face__base__with__info__2" prot="public">CGAL::Triangulation_face_base_with_info_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__hierarchy__2" prot="public">CGAL::Triangulation_hierarchy_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__hierarchy__vertex__base__2" prot="public">CGAL::Triangulation_hierarchy_vertex_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__vertex__base__2" prot="public">CGAL::Triangulation_vertex_base_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__vertex__base__with__id__2" prot="public">CGAL::Triangulation_vertex_base_with_id_2</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__vertex__base__with__info__2" prot="public">CGAL::Triangulation_vertex_base_with_info_2</innerclass>
    <innerclass refid="classCGAL_1_1Triple" prot="public">CGAL::Triple</innerclass>
    <innerclass refid="classCGAL_1_1Twotuple" prot="public">CGAL::Twotuple</innerclass>
    <innerclass refid="classCGAL_1_1Uncertain" prot="public">CGAL::Uncertain</innerclass>
    <innerclass refid="classCGAL_1_1Union__find" prot="public">CGAL::Union_find</innerclass>
    <innerclass refid="structCGAL_1_1Unique__factorization__domain__tag" prot="public">CGAL::Unique_factorization_domain_tag</innerclass>
    <innerclass refid="classCGAL_1_1Unique__hash__map" prot="public">CGAL::Unique_hash_map</innerclass>
    <innerclass refid="structCGAL_1_1value__type__traits" prot="public">CGAL::value_type_traits</innerclass>
    <innerclass refid="structCGAL_1_1value__type__traits_3_01std_1_1back__insert__iterator_3_01Container_01_4_01_4" prot="public">CGAL::value_type_traits&lt; std::back_insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="structCGAL_1_1value__type__traits_3_01std_1_1front__insert__iterator_3_01Container_01_4_01_4" prot="public">CGAL::value_type_traits&lt; std::front_insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="structCGAL_1_1value__type__traits_3_01std_1_1insert__iterator_3_01Container_01_4_01_4" prot="public">CGAL::value_type_traits&lt; std::insert_iterator&lt; Container &gt; &gt;</innerclass>
    <innerclass refid="classCGAL_1_1Vector__2" prot="public">CGAL::Vector_2</innerclass>
    <innerclass refid="classCGAL_1_1Vector__3" prot="public">CGAL::Vector_3</innerclass>
    <innerclass refid="classCGAL_1_1Verbose__ostream" prot="public">CGAL::Verbose_ostream</innerclass>
    <innerclass refid="classCGAL_1_1Vertex__around__face__circulator" prot="public">CGAL::Vertex_around_face_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Vertex__around__face__iterator" prot="public">CGAL::Vertex_around_face_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Vertex__around__target__circulator" prot="public">CGAL::Vertex_around_target_circulator</innerclass>
    <innerclass refid="classCGAL_1_1Vertex__around__target__iterator" prot="public">CGAL::Vertex_around_target_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Weighted__point__2" prot="public">CGAL::Weighted_point_2</innerclass>
    <innerclass refid="classCGAL_1_1Weighted__point__3" prot="public">CGAL::Weighted_point_3</innerclass>
    <innernamespace refid="namespaceCGAL_1_1BGL">CGAL::BGL</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1cpp11">CGAL::cpp11</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1cpp98">CGAL::cpp98</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Euler">CGAL::Euler</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1IO">CGAL::IO</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1METIS">CGAL::METIS</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1parameters">CGAL::parameters</innernamespace>
    <innernamespace refid="classCGAL_1_1Polygon__mesh__processing_1_1Adaptive__sizing__field">CGAL::Polygon_mesh_processing</innernamespace>
    <innernamespace refid="classCGAL_1_1Surface__mesh__parameterization_1_1ARAP__parameterizer__3">CGAL::Surface_mesh_parameterization</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Surface__mesh__simplification">CGAL::Surface_mesh_simplification</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="enum" id="group__PkgBGLProperties_1gaa353754aa1ad406fecc81818051683cd" prot="public" static="no" strong="no">
        <type></type>
        <name>vertex_index_t</name>
        <qualifiedname>CGAL::vertex_index_t</qualifiedname>
        <enumvalue id="group__PkgBGLProperties_1ggaa353754aa1ad406fecc81818051683cda312574cc0b9643380d26dda154571718" prot="public">
          <name>vertex_index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The constant <computeroutput>vertex_index</computeroutput> is a property tag which identifies the <emphasis>index</emphasis> property of a vertex of a BGL <ulink url="https://www.boost.org/libs/graph/doc/Graph.html"><computeroutput>Graph</computeroutput></ulink>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ulink url="https://www.boost.org/libs/graph/doc/PropertyTag.html"><computeroutput>PropertyTag</computeroutput></ulink> </para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/properties.h" line="12" column="1" bodyfile="CGAL/boost/graph/properties.h" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgBGLProperties_1ga662b4b2e5c87ee73713da5a735777eab" prot="public" static="no" strong="no">
        <type></type>
        <name>halfedge_index_t</name>
        <qualifiedname>CGAL::halfedge_index_t</qualifiedname>
        <enumvalue id="group__PkgBGLProperties_1ga662b4b2e5c87ee73713da5a735777eaba368fd56ad048438af4664deb0f26a84e" prot="public">
          <name>halfedge_index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The constant <computeroutput>halfedge_index</computeroutput> is a property tag which identifies the <emphasis>index</emphasis> property of a halfedge of a <computeroutput><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a property tag introduced by CGAL. <variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ulink url="https://www.boost.org/libs/graph/doc/PropertyTag.html"><computeroutput>PropertyTag</computeroutput></ulink> </para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/properties.h" line="20" column="1" bodyfile="CGAL/boost/graph/properties.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgBGLProperties_1ga77ee64652c85816d674fd899ecadd4ed" prot="public" static="no" strong="no">
        <type></type>
        <name>edge_index_t</name>
        <qualifiedname>CGAL::edge_index_t</qualifiedname>
        <enumvalue id="group__PkgBGLProperties_1ga77ee64652c85816d674fd899ecadd4edaa8e8446dac189dece2670839bbbf8583" prot="public">
          <name>edge_index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The constant <computeroutput>edge_index</computeroutput> is a property tag which identifies the <emphasis>index</emphasis> property of an edge of a BGL <ulink url="https://www.boost.org/libs/graph/doc/Graph.html"><computeroutput>Graph</computeroutput></ulink>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ulink url="https://www.boost.org/libs/graph/doc/PropertyTag.html"><computeroutput>PropertyTag</computeroutput></ulink> </para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/properties.h" line="27" column="1" bodyfile="CGAL/boost/graph/properties.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgBGLProperties_1ga4d8b2f143dbc2547a5a307f76a48f8e0" prot="public" static="no" strong="no">
        <type></type>
        <name>face_index_t</name>
        <qualifiedname>CGAL::face_index_t</qualifiedname>
        <enumvalue id="group__PkgBGLProperties_1ga4d8b2f143dbc2547a5a307f76a48f8e0a2a65843a6540df97e85e19e8764fec6e" prot="public">
          <name>face_index</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The constant <computeroutput>face_index</computeroutput> is a property tag which identifies the <emphasis>index</emphasis> property of a face of a <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a property tag introduced by CGAL. <variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ulink url="https://www.boost.org/libs/graph/doc/PropertyTag.html"><computeroutput>PropertyTag</computeroutput></ulink> </para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/properties.h" line="35" column="1" bodyfile="CGAL/boost/graph/properties.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" prot="public" static="no" strong="no">
        <type></type>
        <name>vertex_point_t</name>
        <qualifiedname>CGAL::vertex_point_t</qualifiedname>
        <enumvalue id="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1a2b4cf51aaef43d7db50dca576f339f7e" prot="public">
          <name>vertex_point</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The constant <computeroutput>vertex_point</computeroutput> is a property tag which refers to the geometric embedding property of a vertex of a <computeroutput><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a property tag introduced by CGAL. <variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ulink url="https://www.boost.org/libs/graph/doc/PropertyTag.html"><computeroutput>PropertyTag</computeroutput></ulink> </para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/properties.h" line="44" column="1" bodyfile="CGAL/boost/graph/properties.h" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" prot="public" static="no" strong="no">
        <type></type>
        <name>Angle</name>
        <qualifiedname>CGAL::Angle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12256" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" prot="public" static="no" strong="no">
        <type></type>
        <name>Bounded_side</name>
        <qualifiedname>CGAL::Bounded_side</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12281" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" prot="public" static="no" strong="no">
        <type></type>
        <name>Comparison_result</name>
        <qualifiedname>CGAL::Comparison_result</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12306" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" prot="public" static="no" strong="no">
        <type></type>
        <name>Sign</name>
        <qualifiedname>CGAL::Sign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12331" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" prot="public" static="no" strong="no">
        <type></type>
        <name>Oriented_side</name>
        <qualifiedname>CGAL::Oriented_side</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12356" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" prot="public" static="no" strong="no">
        <type></type>
        <name>Box_parameter_space_2</name>
        <qualifiedname>CGAL::Box_parameter_space_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12381" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" prot="public" static="no" strong="no">
        <type></type>
        <name>Angle</name>
        <qualifiedname>CGAL::Angle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16942" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" prot="public" static="no" strong="no">
        <type></type>
        <name>Bounded_side</name>
        <qualifiedname>CGAL::Bounded_side</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16967" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" prot="public" static="no" strong="no">
        <type></type>
        <name>Comparison_result</name>
        <qualifiedname>CGAL::Comparison_result</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16992" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" prot="public" static="no" strong="no">
        <type></type>
        <name>Sign</name>
        <qualifiedname>CGAL::Sign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17017" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" prot="public" static="no" strong="no">
        <type></type>
        <name>Oriented_side</name>
        <qualifiedname>CGAL::Oriented_side</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17042" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" prot="public" static="no" strong="no">
        <type></type>
        <name>Box_parameter_space_2</name>
        <qualifiedname>CGAL::Box_parameter_space_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17067" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" prot="public" static="no" strong="no">
        <type></type>
        <name>Failure_behaviour</name>
        <qualifiedname>CGAL::Failure_behaviour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4590" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" prot="public" static="no" strong="no">
        <type></type>
        <name>Failure_behaviour</name>
        <qualifiedname>CGAL::Failure_behaviour</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4947" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgArrangementOnSurface2Enums_1ga29246893be4be2ad9a8fbc249f49f0b5" prot="public" static="no" strong="no">
        <type></type>
        <name>Arr_curve_end</name>
        <qualifiedname>CGAL::Arr_curve_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10274" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgArrangementOnSurface2Enums_1ga92ec015604dd1aab753c009565fd28d0" prot="public" static="no" strong="no">
        <type></type>
        <name>Arr_halfedge_direction</name>
        <qualifiedname>CGAL::Arr_halfedge_direction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10293" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgArrangementOnSurface2Enums_1ga29246893be4be2ad9a8fbc249f49f0b5" prot="public" static="no" strong="no">
        <type></type>
        <name>Arr_curve_end</name>
        <qualifiedname>CGAL::Arr_curve_end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11252" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgArrangementOnSurface2Enums_1ga92ec015604dd1aab753c009565fd28d0" prot="public" static="no" strong="no">
        <type></type>
        <name>Arr_halfedge_direction</name>
        <qualifiedname>CGAL::Arr_halfedge_direction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11271" column="1"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgSurfaceMeshDeformationRef_1gabccf12c64e4e13d82a0b5f5ca17d55f5" prot="public" static="no" strong="no">
        <type></type>
        <name>Deformation_algorithm_tag</name>
        <qualifiedname>CGAL::Deformation_algorithm_tag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="436" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__kernel__enums_1ga1147c0cf556939e71279546b38f2a1c5" prot="public" static="no">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Sign</ref></type>
        <definition>typedef Sign CGAL::Orientation</definition>
        <argsstring></argsstring>
        <name>Orientation</name>
        <qualifiedname>CGAL::Orientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12249" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__kernel__enums_1ga1147c0cf556939e71279546b38f2a1c5" prot="public" static="no">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Sign</ref></type>
        <definition>typedef Sign CGAL::Orientation</definition>
        <argsstring></argsstring>
        <name>Orientation</name>
        <qualifiedname>CGAL::Orientation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16935" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1ga96bf435aef680d59e1bcb722239222dd" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Location__policy" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Location_policy</ref>&lt; <ref refid="structCGAL_1_1Compact" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact</ref> &gt;</type>
        <definition>typedef Location_policy&lt; Compact &gt; CGAL::Compact_location</definition>
        <argsstring></argsstring>
        <name>Compact_location</name>
        <qualifiedname>CGAL::Compact_location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4492" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1ga8f61a2b71f265bad92d78ae606afc830" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Location__policy" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Location_policy</ref>&lt; <ref refid="structCGAL_1_1Fast" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Fast</ref> &gt;</type>
        <definition>typedef Location_policy&lt; Fast &gt; CGAL::Fast_location</definition>
        <argsstring></argsstring>
        <name>Fast_location</name>
        <qualifiedname>CGAL::Fast_location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4499" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Boolean__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Boolean_tag</ref>&lt; false &gt;</type>
        <definition>typedef CGAL::Boolean_tag&lt; false &gt; CGAL::Tag_false</definition>
        <argsstring></argsstring>
        <name>Tag_false</name>
        <qualifiedname>CGAL::Tag_false</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4506" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Boolean__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Boolean_tag</ref>&lt; true &gt;</type>
        <definition>typedef CGAL::Boolean_tag&lt; true &gt; CGAL::Tag_true</definition>
        <argsstring></argsstring>
        <name>Tag_true</name>
        <qualifiedname>CGAL::Tag_true</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4513" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* CGAL::Failure_function)(const char *type, const char *expression, const char *file, int line, const char *explanation)</definition>
        <argsstring>)(const char *type, const char *expression, const char *file, int line, const char *explanation)</argsstring>
        <name>Failure_function</name>
        <qualifiedname>CGAL::Failure_function</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4627" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1ga96bf435aef680d59e1bcb722239222dd" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Location__policy" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Location_policy</ref>&lt; <ref refid="structCGAL_1_1Compact" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact</ref> &gt;</type>
        <definition>typedef Location_policy&lt; Compact &gt; CGAL::Compact_location</definition>
        <argsstring></argsstring>
        <name>Compact_location</name>
        <qualifiedname>CGAL::Compact_location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4914" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1ga8f61a2b71f265bad92d78ae606afc830" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Location__policy" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Location_policy</ref>&lt; <ref refid="structCGAL_1_1Fast" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Fast</ref> &gt;</type>
        <definition>typedef Location_policy&lt; Fast &gt; CGAL::Fast_location</definition>
        <argsstring></argsstring>
        <name>Fast_location</name>
        <qualifiedname>CGAL::Fast_location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4921" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Boolean__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Boolean_tag</ref>&lt; false &gt;</type>
        <definition>typedef CGAL::Boolean_tag&lt; false &gt; CGAL::Tag_false</definition>
        <argsstring></argsstring>
        <name>Tag_false</name>
        <qualifiedname>CGAL::Tag_false</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4928" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Boolean__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Boolean_tag</ref>&lt; true &gt;</type>
        <definition>typedef CGAL::Boolean_tag&lt; true &gt; CGAL::Tag_true</definition>
        <argsstring></argsstring>
        <name>Tag_true</name>
        <qualifiedname>CGAL::Tag_true</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4935" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* CGAL::Failure_function)(const char *type, const char *expression, const char *file, int line, const char *explanation)</definition>
        <argsstring>)(const char *type, const char *expression, const char *file, int line, const char *explanation)</argsstring>
        <name>Failure_function</name>
        <qualifiedname>CGAL::Failure_function</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4984" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgArrangementOnSurface2DCEL_1gaf9635869a3794a46d7dcfce63d7de2a6" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Arr__dcel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_dcel</ref>&lt; Traits &gt;</type>
        <definition>typedef Arr_dcel&lt; Traits &gt; CGAL::Arr_default_dcel</definition>
        <argsstring></argsstring>
        <name>Arr_default_dcel</name>
        <qualifiedname>CGAL::Arr_default_dcel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10253" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgArrangementOnSurface2Enums_1ga118afacd6b8f9fae5e992b5b2845dd9d" prot="public" static="no">
        <type><ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Box_parameter_space_2</ref></type>
        <definition>typedef Box_parameter_space_2 CGAL::Arr_parameter_space</definition>
        <argsstring></argsstring>
        <name>Arr_parameter_space</name>
        <qualifiedname>CGAL::Arr_parameter_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10260" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgArrangementOnSurface2Ref_1ga8019f986f5469920136c4b92290b7b1b" prot="public" static="no">
        <type>typename Arrangement_::Observer</type>
        <definition>typedef typename Arrangement_::Observer CGAL::Arr_observer</definition>
        <argsstring></argsstring>
        <name>Arr_observer</name>
        <qualifiedname>CGAL::Arr_observer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10267" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgArrangementOnSurface2Ref_1ga8019f986f5469920136c4b92290b7b1b" prot="public" static="no">
        <type>typename Arrangement_::Observer</type>
        <definition>typedef typename Arrangement_::Observer CGAL::Arr_observer</definition>
        <argsstring></argsstring>
        <name>Arr_observer</name>
        <qualifiedname>CGAL::Arr_observer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10731" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgArrangementOnSurface2DCEL_1gaf9635869a3794a46d7dcfce63d7de2a6" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Arr__dcel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_dcel</ref>&lt; Traits &gt;</type>
        <definition>typedef Arr_dcel&lt; Traits &gt; CGAL::Arr_default_dcel</definition>
        <argsstring></argsstring>
        <name>Arr_default_dcel</name>
        <qualifiedname>CGAL::Arr_default_dcel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10888" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__PkgArrangementOnSurface2Enums_1ga118afacd6b8f9fae5e992b5b2845dd9d" prot="public" static="no">
        <type><ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Box_parameter_space_2</ref></type>
        <definition>typedef Box_parameter_space_2 CGAL::Arr_parameter_space</definition>
        <argsstring></argsstring>
        <name>Arr_parameter_space</name>
        <qualifiedname>CGAL::Arr_parameter_space</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11245" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__kernel__enums_1gga8be07b00890ca29c0653be379113e8b0a38f38441f2d7af7e7d848bff2bf49ec2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::OBTUSE</definition>
        <argsstring></argsstring>
        <name>OBTUSE</name>
        <qualifiedname>CGAL::OBTUSE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12263" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga8be07b00890ca29c0653be379113e8b0a03813b78e3d21e482f0a763b25dfa1b6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::RIGHT</definition>
        <argsstring></argsstring>
        <name>RIGHT</name>
        <qualifiedname>CGAL::RIGHT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12269" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga8be07b00890ca29c0653be379113e8b0ace2a11071ccbc32967b0792e5bb7377b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ACUTE</definition>
        <argsstring></argsstring>
        <name>ACUTE</name>
        <qualifiedname>CGAL::ACUTE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12275" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111a3a96e6da84164cc8300c9e130be23f71" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_UNBOUNDED_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_UNBOUNDED_SIDE</name>
        <qualifiedname>CGAL::ON_UNBOUNDED_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12288" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111a060193157c0875fb2e6445a648f3ac1f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ON_BOUNDARY</name>
        <qualifiedname>CGAL::ON_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12294" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111ad8333d35d4801c08b3a5ae9e94d7cabe" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_BOUNDED_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_BOUNDED_SIDE</name>
        <qualifiedname>CGAL::ON_BOUNDED_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12300" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab925c6b1ff8cd0bdea7f31fe18d3c38b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::SMALLER</definition>
        <argsstring></argsstring>
        <name>SMALLER</name>
        <qualifiedname>CGAL::SMALLER</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12313" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469a5f224784e56ca565837a5d6d268fe078" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EQUAL</definition>
        <argsstring></argsstring>
        <name>EQUAL</name>
        <qualifiedname>CGAL::EQUAL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12319" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab25bdbfd193e9ea35187a4f46e7d6fcd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::LARGER</definition>
        <argsstring></argsstring>
        <name>LARGER</name>
        <qualifiedname>CGAL::LARGER</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12325" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a3aef56502334293e3ad25e166d74bb2a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::NEGATIVE</definition>
        <argsstring></argsstring>
        <name>NEGATIVE</name>
        <qualifiedname>CGAL::NEGATIVE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12338" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a15dcf7100dd2016acdd8172e81a7cb09" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ZERO</definition>
        <argsstring></argsstring>
        <name>ZERO</name>
        <qualifiedname>CGAL::ZERO</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12344" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a963eefff16725de743f4022f4e23fc0d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::POSITIVE</definition>
        <argsstring></argsstring>
        <name>POSITIVE</name>
        <qualifiedname>CGAL::POSITIVE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12350" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979ab906419672c7ae509b5e63158479ed85" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_NEGATIVE_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_NEGATIVE_SIDE</name>
        <qualifiedname>CGAL::ON_NEGATIVE_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12363" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979a45220491cf36139beffd09434aa31256" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_ORIENTED_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ON_ORIENTED_BOUNDARY</name>
        <qualifiedname>CGAL::ON_ORIENTED_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12369" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979aec3846b620579589dcc30c8fe71cc7f0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_POSITIVE_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_POSITIVE_SIDE</name>
        <qualifiedname>CGAL::ON_POSITIVE_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12375" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfaea36d4831df16606dc880b9adb4a593b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::LEFT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>LEFT_BOUNDARY</name>
        <qualifiedname>CGAL::LEFT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12388" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfa901615b6b6191a8b2c741fec08e749e2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::RIGHT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>RIGHT_BOUNDARY</name>
        <qualifiedname>CGAL::RIGHT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12394" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfa43ed149452c8f36052b6b337a841a6ad" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::BOTTOM_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>BOTTOM_BOUNDARY</name>
        <qualifiedname>CGAL::BOTTOM_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12400" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfaa7c683e90e1420cf6ff2f7eacf933f07" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::TOP_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>TOP_BOUNDARY</name>
        <qualifiedname>CGAL::TOP_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12406" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfae50ce8454203d2d01d268379e26bc729" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::INTERIOR</definition>
        <argsstring></argsstring>
        <name>INTERIOR</name>
        <qualifiedname>CGAL::INTERIOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12412" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfaab13aed2fa346ef0e65f069589d7aa32" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EXTERIOR</definition>
        <argsstring></argsstring>
        <name>EXTERIOR</name>
        <qualifiedname>CGAL::EXTERIOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="12418" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga5aa0906f2432d414090dd8723c10f304" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::CLOCKWISE</definition>
        <argsstring></argsstring>
        <name>CLOCKWISE</name>
        <qualifiedname>CGAL::CLOCKWISE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13873" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga39fcfbab0b0f0ce9139ad1613e21d60d" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::COUNTERCLOCKWISE</definition>
        <argsstring></argsstring>
        <name>COUNTERCLOCKWISE</name>
        <qualifiedname>CGAL::COUNTERCLOCKWISE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13880" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::COLLINEAR</definition>
        <argsstring></argsstring>
        <name>COLLINEAR</name>
        <qualifiedname>CGAL::COLLINEAR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13887" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::LEFT_TURN</definition>
        <argsstring></argsstring>
        <name>LEFT_TURN</name>
        <qualifiedname>CGAL::LEFT_TURN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13894" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::RIGHT_TURN</definition>
        <argsstring></argsstring>
        <name>RIGHT_TURN</name>
        <qualifiedname>CGAL::RIGHT_TURN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13901" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga56587f3c15032c9127a9fe81c038b0d7" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::COPLANAR</definition>
        <argsstring></argsstring>
        <name>COPLANAR</name>
        <qualifiedname>CGAL::COPLANAR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13908" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga84ae121de5d53cc92dc2f3ee763a0440" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::DEGENERATE</definition>
        <argsstring></argsstring>
        <name>DEGENERATE</name>
        <qualifiedname>CGAL::DEGENERATE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13915" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga4a98ec6bd9dfd8fe8c46fea553b5d238" prot="public" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Null__vector" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Null_vector</ref></type>
        <definition>const CGAL::Null_vector CGAL::NULL_VECTOR</definition>
        <argsstring></argsstring>
        <name>NULL_VECTOR</name>
        <qualifiedname>CGAL::NULL_VECTOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13922" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga9d272a8e3a8080b851741b6d3a44afdc" prot="public" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Origin" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Origin</ref></type>
        <definition>const CGAL::Origin CGAL::ORIGIN</definition>
        <argsstring></argsstring>
        <name>ORIGIN</name>
        <qualifiedname>CGAL::ORIGIN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="13929" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga8be07b00890ca29c0653be379113e8b0a38f38441f2d7af7e7d848bff2bf49ec2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::OBTUSE</definition>
        <argsstring></argsstring>
        <name>OBTUSE</name>
        <qualifiedname>CGAL::OBTUSE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16949" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga8be07b00890ca29c0653be379113e8b0a03813b78e3d21e482f0a763b25dfa1b6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::RIGHT</definition>
        <argsstring></argsstring>
        <name>RIGHT</name>
        <qualifiedname>CGAL::RIGHT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16955" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga8be07b00890ca29c0653be379113e8b0ace2a11071ccbc32967b0792e5bb7377b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ACUTE</definition>
        <argsstring></argsstring>
        <name>ACUTE</name>
        <qualifiedname>CGAL::ACUTE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16961" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111a3a96e6da84164cc8300c9e130be23f71" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_UNBOUNDED_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_UNBOUNDED_SIDE</name>
        <qualifiedname>CGAL::ON_UNBOUNDED_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16974" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111a060193157c0875fb2e6445a648f3ac1f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ON_BOUNDARY</name>
        <qualifiedname>CGAL::ON_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16980" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ggaf6030e89dadcc1f45369b0cdc5d9e111ad8333d35d4801c08b3a5ae9e94d7cabe" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_BOUNDED_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_BOUNDED_SIDE</name>
        <qualifiedname>CGAL::ON_BOUNDED_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16986" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab925c6b1ff8cd0bdea7f31fe18d3c38b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::SMALLER</definition>
        <argsstring></argsstring>
        <name>SMALLER</name>
        <qualifiedname>CGAL::SMALLER</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="16999" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469a5f224784e56ca565837a5d6d268fe078" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EQUAL</definition>
        <argsstring></argsstring>
        <name>EQUAL</name>
        <qualifiedname>CGAL::EQUAL</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17005" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab25bdbfd193e9ea35187a4f46e7d6fcd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::LARGER</definition>
        <argsstring></argsstring>
        <name>LARGER</name>
        <qualifiedname>CGAL::LARGER</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17011" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a3aef56502334293e3ad25e166d74bb2a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::NEGATIVE</definition>
        <argsstring></argsstring>
        <name>NEGATIVE</name>
        <qualifiedname>CGAL::NEGATIVE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17024" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a15dcf7100dd2016acdd8172e81a7cb09" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ZERO</definition>
        <argsstring></argsstring>
        <name>ZERO</name>
        <qualifiedname>CGAL::ZERO</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17030" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga59bee58a806ccde81562ea315ff75525a963eefff16725de743f4022f4e23fc0d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::POSITIVE</definition>
        <argsstring></argsstring>
        <name>POSITIVE</name>
        <qualifiedname>CGAL::POSITIVE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17036" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979ab906419672c7ae509b5e63158479ed85" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_NEGATIVE_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_NEGATIVE_SIDE</name>
        <qualifiedname>CGAL::ON_NEGATIVE_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17049" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979a45220491cf36139beffd09434aa31256" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_ORIENTED_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ON_ORIENTED_BOUNDARY</name>
        <qualifiedname>CGAL::ON_ORIENTED_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17055" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga5006dd2552d97fa577d81bd819c0f979aec3846b620579589dcc30c8fe71cc7f0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ON_POSITIVE_SIDE</definition>
        <argsstring></argsstring>
        <name>ON_POSITIVE_SIDE</name>
        <qualifiedname>CGAL::ON_POSITIVE_SIDE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17061" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfaea36d4831df16606dc880b9adb4a593b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::LEFT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>LEFT_BOUNDARY</name>
        <qualifiedname>CGAL::LEFT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17074" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfa901615b6b6191a8b2c741fec08e749e2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::RIGHT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>RIGHT_BOUNDARY</name>
        <qualifiedname>CGAL::RIGHT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17080" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfa43ed149452c8f36052b6b337a841a6ad" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::BOTTOM_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>BOTTOM_BOUNDARY</name>
        <qualifiedname>CGAL::BOTTOM_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17086" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfaa7c683e90e1420cf6ff2f7eacf933f07" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::TOP_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>TOP_BOUNDARY</name>
        <qualifiedname>CGAL::TOP_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17092" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfae50ce8454203d2d01d268379e26bc729" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::INTERIOR</definition>
        <argsstring></argsstring>
        <name>INTERIOR</name>
        <qualifiedname>CGAL::INTERIOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17098" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1gga69d3e68aa488b8927506333b04400bdfaab13aed2fa346ef0e65f069589d7aa32" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EXTERIOR</definition>
        <argsstring></argsstring>
        <name>EXTERIOR</name>
        <qualifiedname>CGAL::EXTERIOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17104" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga5aa0906f2432d414090dd8723c10f304" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::CLOCKWISE</definition>
        <argsstring></argsstring>
        <name>CLOCKWISE</name>
        <qualifiedname>CGAL::CLOCKWISE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17131" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga39fcfbab0b0f0ce9139ad1613e21d60d" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::COUNTERCLOCKWISE</definition>
        <argsstring></argsstring>
        <name>COUNTERCLOCKWISE</name>
        <qualifiedname>CGAL::COUNTERCLOCKWISE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17138" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::COLLINEAR</definition>
        <argsstring></argsstring>
        <name>COLLINEAR</name>
        <qualifiedname>CGAL::COLLINEAR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17145" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga803e5969acd01d45aec5acaee6f82883" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::LEFT_TURN</definition>
        <argsstring></argsstring>
        <name>LEFT_TURN</name>
        <qualifiedname>CGAL::LEFT_TURN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17152" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga1f9d8cac74201e22d484b10384fe3bf9" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::RIGHT_TURN</definition>
        <argsstring></argsstring>
        <name>RIGHT_TURN</name>
        <qualifiedname>CGAL::RIGHT_TURN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17159" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga56587f3c15032c9127a9fe81c038b0d7" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::COPLANAR</definition>
        <argsstring></argsstring>
        <name>COPLANAR</name>
        <qualifiedname>CGAL::COPLANAR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17166" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga84ae121de5d53cc92dc2f3ee763a0440" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Orientation</ref></type>
        <definition>const CGAL::Orientation CGAL::DEGENERATE</definition>
        <argsstring></argsstring>
        <name>DEGENERATE</name>
        <qualifiedname>CGAL::DEGENERATE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17173" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga4a98ec6bd9dfd8fe8c46fea553b5d238" prot="public" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Null__vector" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Null_vector</ref></type>
        <definition>const CGAL::Null_vector CGAL::NULL_VECTOR</definition>
        <argsstring></argsstring>
        <name>NULL_VECTOR</name>
        <qualifiedname>CGAL::NULL_VECTOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17180" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__kernel__enums_1ga9d272a8e3a8080b851741b6d3a44afdc" prot="public" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Origin" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Origin</ref></type>
        <definition>const CGAL::Origin CGAL::ORIGIN</definition>
        <argsstring></argsstring>
        <name>ORIGIN</name>
        <qualifiedname>CGAL::ORIGIN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag" line="17187" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deeafd47edae67791f804b5f1b616f2782ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ABORT</definition>
        <argsstring></argsstring>
        <name>ABORT</name>
        <qualifiedname>CGAL::ABORT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4597" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea03e7a9436476c257881f8ce46db26f7d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EXIT</definition>
        <argsstring></argsstring>
        <name>EXIT</name>
        <qualifiedname>CGAL::EXIT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4603" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deeaf7034bd0320b9bca60e23c0be889d728" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EXIT_WITH_SUCCESS</definition>
        <argsstring></argsstring>
        <name>EXIT_WITH_SUCCESS</name>
        <qualifiedname>CGAL::EXIT_WITH_SUCCESS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4609" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea697442e04c769afa5f8506d7dd378ed4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::CONTINUE</definition>
        <argsstring></argsstring>
        <name>CONTINUE</name>
        <qualifiedname>CGAL::CONTINUE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4615" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea47ef91f2d5d0efcdc748c65519d3532d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::THROW_EXCEPTION</definition>
        <argsstring></argsstring>
        <name>THROW_EXCEPTION</name>
        <qualifiedname>CGAL::THROW_EXCEPTION</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4621" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deeafd47edae67791f804b5f1b616f2782ff" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ABORT</definition>
        <argsstring></argsstring>
        <name>ABORT</name>
        <qualifiedname>CGAL::ABORT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4954" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea03e7a9436476c257881f8ce46db26f7d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EXIT</definition>
        <argsstring></argsstring>
        <name>EXIT</name>
        <qualifiedname>CGAL::EXIT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4960" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deeaf7034bd0320b9bca60e23c0be889d728" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::EXIT_WITH_SUCCESS</definition>
        <argsstring></argsstring>
        <name>EXIT_WITH_SUCCESS</name>
        <qualifiedname>CGAL::EXIT_WITH_SUCCESS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4966" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea697442e04c769afa5f8506d7dd378ed4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::CONTINUE</definition>
        <argsstring></argsstring>
        <name>CONTINUE</name>
        <qualifiedname>CGAL::CONTINUE</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4972" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSTLExtensionAssertions_1ggac5eee7bb7edcc41dd3251042c5934deea47ef91f2d5d0efcdc748c65519d3532d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::THROW_EXCEPTION</definition>
        <argsstring></argsstring>
        <name>THROW_EXCEPTION</name>
        <qualifiedname>CGAL::THROW_EXCEPTION</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag" line="4978" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga29246893be4be2ad9a8fbc249f49f0b5ae94b64f2e1653bac4461db9bd5d0ad88" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_MIN_END</definition>
        <argsstring></argsstring>
        <name>ARR_MIN_END</name>
        <qualifiedname>CGAL::ARR_MIN_END</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10281" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga29246893be4be2ad9a8fbc249f49f0b5a3e2c2ccf1e5433588fa82aec99013cce" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_MAX_END</definition>
        <argsstring></argsstring>
        <name>ARR_MAX_END</name>
        <qualifiedname>CGAL::ARR_MAX_END</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10287" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga92ec015604dd1aab753c009565fd28d0acd7482855e300ef8d05409913808b64d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_LEFT_TO_RIGHT</definition>
        <argsstring></argsstring>
        <name>ARR_LEFT_TO_RIGHT</name>
        <qualifiedname>CGAL::ARR_LEFT_TO_RIGHT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10300" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga92ec015604dd1aab753c009565fd28d0a10f2cdb5a28163cc1e237914cc4bdcef" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_RIGHT_TO_LEFT</definition>
        <argsstring></argsstring>
        <name>ARR_RIGHT_TO_LEFT</name>
        <qualifiedname>CGAL::ARR_RIGHT_TO_LEFT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10306" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1ga2bbdd8004c0a37409305b01cf7fc2563" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_LEFT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_LEFT_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_LEFT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10557" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1ga341fb5c90e8037d651012f955e38fda1" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_RIGHT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_RIGHT_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_RIGHT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10564" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gaf276ca43e83c8791923154aba4584651" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_BOTTOM_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_BOTTOM_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_BOTTOM_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10571" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gaf8d89294c23614f33351e94ff28e0d59" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_TOP_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_TOP_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_TOP_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10578" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gad93bd71ee623a2e4fded635967e9c8d2" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_INTERIOR</definition>
        <argsstring></argsstring>
        <name>ARR_INTERIOR</name>
        <qualifiedname>CGAL::ARR_INTERIOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="10585" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga29246893be4be2ad9a8fbc249f49f0b5ae94b64f2e1653bac4461db9bd5d0ad88" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_MIN_END</definition>
        <argsstring></argsstring>
        <name>ARR_MIN_END</name>
        <qualifiedname>CGAL::ARR_MIN_END</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11259" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga29246893be4be2ad9a8fbc249f49f0b5a3e2c2ccf1e5433588fa82aec99013cce" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_MAX_END</definition>
        <argsstring></argsstring>
        <name>ARR_MAX_END</name>
        <qualifiedname>CGAL::ARR_MAX_END</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11265" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga92ec015604dd1aab753c009565fd28d0acd7482855e300ef8d05409913808b64d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_LEFT_TO_RIGHT</definition>
        <argsstring></argsstring>
        <name>ARR_LEFT_TO_RIGHT</name>
        <qualifiedname>CGAL::ARR_LEFT_TO_RIGHT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11278" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gga92ec015604dd1aab753c009565fd28d0a10f2cdb5a28163cc1e237914cc4bdcef" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ARR_RIGHT_TO_LEFT</definition>
        <argsstring></argsstring>
        <name>ARR_RIGHT_TO_LEFT</name>
        <qualifiedname>CGAL::ARR_RIGHT_TO_LEFT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11284" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1ga2bbdd8004c0a37409305b01cf7fc2563" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_LEFT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_LEFT_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_LEFT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11290" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1ga341fb5c90e8037d651012f955e38fda1" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_RIGHT_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_RIGHT_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_RIGHT_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11297" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gaf276ca43e83c8791923154aba4584651" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_BOTTOM_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_BOTTOM_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_BOTTOM_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11304" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gaf8d89294c23614f33351e94ff28e0d59" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_TOP_BOUNDARY</definition>
        <argsstring></argsstring>
        <name>ARR_TOP_BOUNDARY</name>
        <qualifiedname>CGAL::ARR_TOP_BOUNDARY</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11311" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgArrangementOnSurface2Enums_1gad93bd71ee623a2e4fded635967e9c8d2" prot="public" static="no" mutable="no">
        <type>const <ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>const Arr_parameter_space CGAL::ARR_INTERIOR</definition>
        <argsstring></argsstring>
        <name>ARR_INTERIOR</name>
        <qualifiedname>CGAL::ARR_INTERIOR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag" line="11318" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSurfaceMeshDeformationRef_1ggabccf12c64e4e13d82a0b5f5ca17d55f5a7ee949596ab9bba3f2a135f603133edc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::ORIGINAL_ARAP</definition>
        <argsstring></argsstring>
        <name>ORIGINAL_ARAP</name>
        <qualifiedname>CGAL::ORIGINAL_ARAP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_deformation.tag" line="443" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSurfaceMeshDeformationRef_1ggabccf12c64e4e13d82a0b5f5ca17d55f5ab9e5fe1cabbec0e7b6b1743c45029d24" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::SPOKES_AND_RIMS</definition>
        <argsstring></argsstring>
        <name>SPOKES_AND_RIMS</name>
        <qualifiedname>CGAL::SPOKES_AND_RIMS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_deformation.tag" line="449" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__PkgSurfaceMeshDeformationRef_1ggabccf12c64e4e13d82a0b5f5ca17d55f5a1f3f0d4c8a512996f404dc0886b6c1a1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>CGAL::SRE_ARAP</definition>
        <argsstring></argsstring>
        <name>SRE_ARAP</name>
        <qualifiedname>CGAL::SRE_ARAP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_deformation.tag" line="455" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceCGAL_1acdae9a147ad2a3998cc21f88bc292dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string CGAL::data_file_path</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>data_file_path</name>
        <qualifiedname>CGAL::data_file_path</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__enums_1gac3993cbddb0f5186b19ad7ef8338a89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::enum_cast</definition>
        <argsstring>(const U &amp;u)</argsstring>
        <name>enum_cast</name>
        <qualifiedname>CGAL::enum_cast</qualifiedname>
        <param>
          <type>const U &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__enums_1gad0a8110cb95f76bac65649bfe58c650b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::opposite</definition>
        <argsstring>(const Oriented_side &amp;o)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>const <ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__enums_1ga30e66263975bfc9a72730cba0c25367c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::opposite</definition>
        <argsstring>(const Bounded_side &amp;o)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>const <ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__linear__grp_1ga9514a218a097ac392d21775368d3dd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__linear__grp_1ga0fc4e7e2217631c1f9d1e193716d652f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Plane_3&lt; Kernel &gt; obj1, Plane_3&lt; Kernel &gt; obj2, Plane_3&lt; Kernel &gt; obj3)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__linear__grp_1gade00253914ac774cce3d2031c07d74fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) CGAL::intersection</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__linear__grp_1ga1ae668d4f2a5a7006cefc0731b89875b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) CGAL::intersection</definition>
        <argsstring>(const Plane_3&lt; Kernel &gt; &amp;pl1, const Plane_3&lt; Kernel &gt; &amp;pl2, const Plane_3&lt; Kernel &gt; &amp;pl3)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>pl1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>pl2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>pl3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga529057989da53e549b38c5a88e82967b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1gaacaa68822ff84b1be59d3c84b8fed9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1gaf3848756a6457f983b39bca5f34fb989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga81888c6eb0e8066905d73a9868362e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga7c42d769e84f19b342c1577caec9eeba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga3675cad77d9399fdeca6f0ea463d931c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga0e57f7e44fa891f84673d7251277cc79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__approximate__angle__grp_1ga2a28592ce82e8d1ec2053a6250e3c360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::approximate_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>approximate_angle</name>
        <qualifiedname>CGAL::approximate_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__approximate__angle__grp_1ga252a36fb19ddcde7e4bfe4b26a1ac2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::approximate_angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>approximate_angle</name>
        <qualifiedname>CGAL::approximate_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__approximate__dihedral__angle__grp_1gadc7ae25da46f18af4db99f6871f97b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::approximate_dihedral_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>approximate_dihedral_angle</name>
        <qualifiedname>CGAL::approximate_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__area__grp_1gad5b975e731751609655f88d287f7385a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::area</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>area</name>
        <qualifiedname>CGAL::area</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__ordered__along__line__grp_1gad0595dca20e967b66057c84f4bc9bcf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_ordered_along_line</name>
        <qualifiedname>CGAL::are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__ordered__along__line__grp_1ga5a56ab0987fbf02e7e03be7ebaebe26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_ordered_along_line</name>
        <qualifiedname>CGAL::are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__strictly__ordered__along__line__grp_1ga69aafc78b2d382efc95c186e4d5119ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__strictly__ordered__along__line__grp_1ga6171a3fb098250d290f33e84399268c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga93e459977649c2430139b5778101529b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gaa6a45c396e0accb1f0df10537f538d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gaff99ae24e88263966c203ecbe46eb567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga37c22a8dc59bd6b9fdfe5b471bef42d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga10f26898d449285572accf3b548f17ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_2&lt; Kernel &gt; &amp;p4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gaaa8d6079c64dbdd0081ef2e6f8086f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_2&lt; Kernel &gt; &amp;p4, const Kernel::FT &amp;w4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gabc7fc4bcbd7c9a42ada2b7ec640088ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gafd4201c8cb6943447755f84d01f78e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gafaeddc02828b4eba0377c0f558267fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gac46869387dc75521d93e48031c9fcf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga9a31d7fe4a0020529f29359fd628374f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_3&lt; Kernel &gt; &amp;p4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gad0b84597deb724f349828b9370a51b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_3&lt; Kernel &gt; &amp;p4, const Kernel::FT &amp;w4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1gae2f18028215b4f35e25f2b976c7fbe18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12662" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1ga6ab4118cb8d778c1a71baab68fee9ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1gabbd6e8a906a35af72bb4c3cd9db0af97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1ga65430282124195ea4ab11ca496e8d641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h1, const CGAL::Plane_3&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12683" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga3ba0496a839f97ee6cd506baff51dfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga0c29478f8f1dd16f0ea7cdeeee60cf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12697" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga43926e539ee3d650810ddfa52ddcdf12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Triangle_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1gad80c13988bf13119f04630c5a2c07cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12711" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1gae64da70280e9ea0b9834e2b434b055ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1gac6b7c5823650d2e37a03eb3129b7a542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Triangle_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12725" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga1a08847d24879ea3e0a6d029845f598e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Tetrahedron_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12732" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga37a20bf6fba404c8478839b79f7d86fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga428547debb4b2a1e5f9add7eac6a0252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12746" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga79c902e4193136b21f1f34f41ec3758b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Triangle_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12753" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gae7e2f5c2113dfcaacdac1c48731ec4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12760" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaf9d9a943d799c9ecc1ceb2621ce8d338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12767" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaf09cd6ac1f6e2244165fd14e5649b720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Triangle_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12774" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaab15ebb35f4455debe3884c419838ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga9528d43c5ab5ea4145e97709a1e33187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Tetrahedron_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12788" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__ordered__along__line__grp_1ga62c50e1ef3fb7e4533720373827fd4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__ordered__along__line__grp_1ga4ea9e9123c81b5cc398fd942140599e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__strictly__ordered__along__line__grp_1ga9d8636d66af954605ce632590b3b705d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12809" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__strictly__ordered__along__line__grp_1gafb68a13a9bffce3ffd211e875994839d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12816" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__grp_1gadaa777c7b2f72b4321fe1ac3893efc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear</name>
        <qualifiedname>CGAL::collinear</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12823" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__grp_1gaf22e6010f55de63a8aff0dd2c7b12bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear</name>
        <qualifiedname>CGAL::collinear</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12830" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__global__function_1gafc40016b26f9b699ae6f4230735062b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;a, const CGAL::Point_3&lt; Kernel &gt; &amp;b, const CGAL::Point_3&lt; Kernel &gt; &amp;c, const Kernel::FT &amp;cosine)</argsstring>
        <name>compare_angle</name>
        <qualifiedname>CGAL::compare_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>cosine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12837" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga9a70a34f86fe41a55b760967694f43a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;a1, const CGAL::Point_3&lt; Kernel &gt; &amp;b1, const CGAL::Point_3&lt; Kernel &gt; &amp;c1, const CGAL::Point_3&lt; Kernel &gt; &amp;d1, const Kernel::FT &amp;cosine)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>cosine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12844" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga52404107d79baa56301bfc8199134228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;a1, const CGAL::Point_3&lt; Kernel &gt; &amp;b1, const CGAL::Point_3&lt; Kernel &gt; &amp;c1, const CGAL::Point_3&lt; Kernel &gt; &amp;d1, const CGAL::Point_3&lt; Kernel &gt; &amp;a2, const CGAL::Point_3&lt; Kernel &gt; &amp;b2, const CGAL::Point_3&lt; Kernel &gt; &amp;c2, const CGAL::Point_3&lt; Kernel &gt; &amp;d2)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12851" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga3f9c8a8863ab1411fc6484163fae4d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u1, const CGAL::Vector_3&lt; Kernel &gt; &amp;v1, const CGAL::Vector_3&lt; Kernel &gt; &amp;w1, const Kernel::FT &amp;cosine)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>cosine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12858" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga7cb035f021001289b2da2be5bf799c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u1, const CGAL::Vector_3&lt; Kernel &gt; &amp;v1, const CGAL::Vector_3&lt; Kernel &gt; &amp;w1, const CGAL::Vector_3&lt; Kernel &gt; &amp;u2, const CGAL::Vector_3&lt; Kernel &gt; &amp;v2, const CGAL::Vector_3&lt; Kernel &gt; &amp;w2)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12865" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__distance__to__point__grp_1ga51e8ac85edc4e7c4beb6a9d139f5c853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_distance_to_point</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>compare_distance_to_point</name>
        <qualifiedname>CGAL::compare_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__distance__to__point__grp_1ga7a005824ca304dd1f5278474f4843dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_distance_to_point</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>compare_distance_to_point</name>
        <qualifiedname>CGAL::compare_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__lexicographically__linear__grp_1ga241d6b0c51b2ec9ee8b7a4e04e7dd562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_lexicographically</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_lexicographically</name>
        <qualifiedname>CGAL::compare_lexicographically</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12886" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__lexicographically__linear__grp_1gaf90bdb2a89d1e09ecf3a9e8f97671711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_lexicographically</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_lexicographically</name>
        <qualifiedname>CGAL::compare_lexicographically</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12893" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__line__grp_1gaf3dbb38f621e8d62944cd1869a97f8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_signed_distance_to_line</name>
        <qualifiedname>CGAL::compare_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__line__grp_1ga9f9eaaab84172968cf94e094a13df26c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_signed_distance_to_line</name>
        <qualifiedname>CGAL::compare_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12907" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__plane__grp_1gaa505cef98a05358ff85487d674cc0394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h, const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_signed_distance_to_plane</name>
        <qualifiedname>CGAL::compare_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__plane__grp_1ga63052c3cbbf565aec4bc58dd511e71d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>compare_signed_distance_to_plane</name>
        <qualifiedname>CGAL::compare_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1ga9d7f9afebfb7635c676fa7bcf3ac3185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12928" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1gad1aefd6d41881734885cb77c37af4e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1ga8d425470625e96c831173da960ec6552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;s1s, const CGAL::Point_2&lt; Kernel &gt; &amp;s1t, const CGAL::Point_2&lt; Kernel &gt; &amp;s2s, const CGAL::Point_2&lt; Kernel &gt; &amp;s2t)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1t</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12942" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1gad4ad60324fe765d0ed26f56f3e2bf81e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__distance__grp_1ga8dbd662fc129db51e5344c2105191b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_distance</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const typename Kernel::FT &amp;d2)</argsstring>
        <name>compare_squared_distance</name>
        <qualifiedname>CGAL::compare_squared_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__distance__grp_1ga75555e2894e9c943e725483a054d5cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_distance</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const typename Kernel::FT &amp;d2)</argsstring>
        <name>compare_squared_distance</name>
        <qualifiedname>CGAL::compare_squared_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12963" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1gaeb1716519cb30cbb97fc798e0cd00ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12970" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1ga3d71c0c80b5c2a89b49289e1d587fdd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12977" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1ga0fa5f4a04f1c7f04f3c43a4d521019ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12984" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1ga811f58ab0215115643da5fe16f37cfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1gade38745038a708e76421e624dc448f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="12998" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1ga274dc815852583262e54dfb35d601268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13005" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1gae502ab2980aac4e37c4dd08108400618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1gadd405f29b1f84e3d5ceceee2632ee536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13019" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1ga84301a123a63ed4e1de35d2c19367808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13026" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__circular__grp_1ga02958df52814f2ff41a48f98a0550159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13033" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__circular__grp_1ga5829822afcc60c83ead02c83dc74ce0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13040" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__spherical__grp_1ga8e7a74c1584c377bc410425b01da2970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__spherical__grp_1gaf7039fd589b194b40d9da5aab435cc26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__linear__grp_1ga99c5707cdcbc126783a194696aad388b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__linear__grp_1ga6979ac7902358ad28cb66fcd9ad96791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13068" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__circular__grp_1gad4c4b6140a494db45913be987acebcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13075" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__circular__grp_1gadf28eba2f31263cd46f7d35d866e7ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13082" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__spherical__grp_1ga59723f2273da0d3ae98d287ebf3c0fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__spherical__grp_1ga5d43db96cb7dc2c89331153d88243785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1gab87cbd18f319eb74f150b989f1cc98a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1ga7f3809c29b2e82721b7340c8c4da2c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1ga4deab4f857e9a869266482ce37a65862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1gabf322237fb2e50bb9df33127869c74a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga0570b8a2164c4f3923053d63b24b4f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga7b7f2a9e506760f69854b5dce9ab275c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gaf2f8b7114e12573f676e8e0302e54500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gaff3351d5c7507c74b3e48e8b1e4c3a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga05b0ffd47157a5f59142243b13961edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga93fab9114bbea4402fc7c26825347fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga62a44c9df055aa0ae83ea84455152f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1gae1e416199adc1805b06c7ea9389829f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga07e78831d6ed3f5b614d5608ce5c9b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga9768badf93898701d6f95101bd9befc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga942435b4ff4a3ed0907b3c745e1c377f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__circular__grp_1ga37138f9ce1d4a565f4c73c30c3c68e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__circular__grp_1gaac34b0fd69305ef5b845bcf1f3246bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__spherical__grp_1ga369f42a99f1823358d3d295e26875e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__spherical__grp_1gaa91ade50fb9ca7e99a7b4a23b92b497e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xyz__linear__grp_1ga85c912016468489da1decfb7a85264f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xyz</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_xyz</name>
        <qualifiedname>CGAL::compare_xyz</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xyz__spherical__grp_1ga7e3a1f8a22e0bd774570d2fea9810e2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xyz</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xyz</name>
        <qualifiedname>CGAL::compare_xyz</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xyz__spherical__grp_1ga850572d69328843cf26f9363bd3bc272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xyz</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xyz</name>
        <qualifiedname>CGAL::compare_xyz</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__z__linear__grp_1ga369456c72206d97ab114cd9f2e7f4af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_z</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_z</name>
        <qualifiedname>CGAL::compare_z</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__z__spherical__grp_1gaf616ffb0fcc52773f71743c29e842dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_z</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_z</name>
        <qualifiedname>CGAL::compare_z</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__z__spherical__grp_1gab46d0e224d7010de3ee0b2150e0b7fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_z</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_z</name>
        <qualifiedname>CGAL::compare_z</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__yx__grp_1gaed9bd83a324097061c5b3825ed663258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_yx</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_yx</name>
        <qualifiedname>CGAL::compare_yx</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__grp_1ga79b3b4bcb01bf81048486dfd59a22c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::coplanar</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar</name>
        <qualifiedname>CGAL::coplanar</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__orientation__grp_1gaf6fa77ad91160fdbe406db839e87f543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::coplanar_orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar_orientation</name>
        <qualifiedname>CGAL::coplanar_orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__orientation__grp_1gae6eea9e4c75a610511866cf3eb4ae139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::coplanar_orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>coplanar_orientation</name>
        <qualifiedname>CGAL::coplanar_orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__side__of__bounded__circle__grp_1gab02e2952353223cde67697df3ac84ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::coplanar_side_of_bounded_circle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar_side_of_bounded_circle</name>
        <qualifiedname>CGAL::coplanar_side_of_bounded_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__cross__product__grp_1gab032f9890a983dff3e0a29346318176e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::cross_product</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>cross_product</name>
        <qualifiedname>CGAL::cross_product</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__determinant__grp_1ga43b04b357a2c01b2e0f1f5775fc5ebb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::determinant</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;v, const CGAL::Vector_2&lt; Kernel &gt; &amp;w)</argsstring>
        <name>determinant</name>
        <qualifiedname>CGAL::determinant</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__determinant__grp_1ga607a85e1ce137513fa2904ff63290401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::determinant</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v, const CGAL::Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>determinant</name>
        <qualifiedname>CGAL::determinant</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__equidistant__line__grp_1gac7476ed32034ddd19dda9106b31f882f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_3&lt; Kernel &gt; CGAL::equidistant_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>equidistant_line</name>
        <qualifiedname>CGAL::equidistant_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__distance__to__point__grp_1ga1c6f2c3521bc70d4f8ed8eb88762a07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_distance_to_point</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_larger_distance_to_point</name>
        <qualifiedname>CGAL::has_larger_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__distance__to__point__grp_1ga8c05b8e965b22c75873c4ba0c9e0b9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_distance_to_point</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_larger_distance_to_point</name>
        <qualifiedname>CGAL::has_larger_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__line__grp_1ga6b3cb9555a8bea981e8283bd456d123c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_larger_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__line__grp_1ga9d810a2961d0c785e970893920085d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>has_larger_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__plane__grp_1ga645bab7e870b124eb8ab9fe93ef47dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h, const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_larger_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__plane__grp_1ga44f687b45a7ea420a2b84d7a55a46b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>has_larger_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__distance__to__point__grp_1gaced5841787740fba7ee44a531284a128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_distance_to_point</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_smaller_distance_to_point</name>
        <qualifiedname>CGAL::has_smaller_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__distance__to__point__grp_1ga8c3c1514f7cebaee0645e47a476538d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_distance_to_point</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_smaller_distance_to_point</name>
        <qualifiedname>CGAL::has_smaller_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__line__grp_1gae507fea54d14e701c56de815d9730444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_smaller_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__line__grp_1ga70ddaf8025c685beda7d33f61c3b36c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>has_smaller_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__plane__grp_1ga4c2f5b7428e8753d023e75e99bff1ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h, const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_smaller_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__plane__grp_1gacadf351cba0ccd154a2943dbb8b0e8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>has_smaller_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__l__infinity__distance__grp_1ga9e1407df1c6b4f23019b2e97cd4a390a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::l_infinity_distance</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>l_infinity_distance</name>
        <qualifiedname>CGAL::l_infinity_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__l__infinity__distance__grp_1gaf9f6d0f4e1243856dac35c168f6508c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::l_infinity_distance</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>l_infinity_distance</name>
        <qualifiedname>CGAL::l_infinity_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__left__turn__grp_1ga54cc2a847df7133bee7fd61c7b236dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::left_turn</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>left_turn</name>
        <qualifiedname>CGAL::left_turn</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__larger__grp_1ga0cf066e4d5572a493c7c9f9ff58c19a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_larger</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_larger</name>
        <qualifiedname>CGAL::lexicographically_xy_larger</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13446" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__larger__or__equal__grp_1gad643d05f3cce01489b600ac5377e950e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_larger_or_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_larger_or_equal</name>
        <qualifiedname>CGAL::lexicographically_xy_larger_or_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__smaller__grp_1gab4ac1479fab3f0e58debc845316a52e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_smaller</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_smaller</name>
        <qualifiedname>CGAL::lexicographically_xy_smaller</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__smaller__or__equal__grp_1ga44153edeb60da6f895ce5342f277f630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_smaller_or_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_smaller_or_equal</name>
        <qualifiedname>CGAL::lexicographically_xy_smaller_or_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xyz__smaller__grp_1ga8bf93a0885a3a693c401cd229a52c633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xyz_smaller</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xyz_smaller</name>
        <qualifiedname>CGAL::lexicographically_xyz_smaller</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xyz__smaller__or__equal__grp_1ga4ca673bb805f17d7f3b597e94108a113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xyz_smaller_or_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xyz_smaller_or_equal</name>
        <qualifiedname>CGAL::lexicographically_xyz_smaller_or_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__max__vertex__grp_1ga46562d115720a01049f3dbb778929fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::max_vertex</definition>
        <argsstring>(const CGAL::Iso_rectangle_2&lt; Kernel &gt; &amp;ir)</argsstring>
        <name>max_vertex</name>
        <qualifiedname>CGAL::max_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__rectangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_rectangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__max__vertex__grp_1ga1410c073d65e5c67b159934754c9ed45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::max_vertex</definition>
        <argsstring>(const CGAL::Iso_cuboid_3&lt; Kernel &gt; &amp;ic)</argsstring>
        <name>max_vertex</name>
        <qualifiedname>CGAL::max_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1ga6b971827bb460dd0611c932a7dd287f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13502" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1ga0b2a925018adf872b8afe39fdbc9915f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1gaaa348ce932c82135def586ad3fdee373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1gab705ff35cc397db7b95b2bc1d35a8b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__min__vertex__grp_1gabd1b13ccd9cf230613dceed55f2918ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::min_vertex</definition>
        <argsstring>(const CGAL::Iso_rectangle_2&lt; Kernel &gt; &amp;ir)</argsstring>
        <name>min_vertex</name>
        <qualifiedname>CGAL::min_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__rectangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_rectangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__min__vertex__grp_1ga69d8c57f6f04c0e84bf7cbd404747b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::min_vertex</definition>
        <argsstring>(const CGAL::Iso_cuboid_3&lt; Kernel &gt; &amp;ic)</argsstring>
        <name>min_vertex</name>
        <qualifiedname>CGAL::min_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__normal__grp_1gafe43c91d0ec7130cb673402cf8227dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::normal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>normal</name>
        <qualifiedname>CGAL::normal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga91d9866cfde916ba70e5dbc596176d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1gaecb33819c6e8259cec78c457a7650383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga0a65d09ea2af5f9bcfececb9aba9ca35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga565faf2582847419e36f177af821011e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v, const CGAL::Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orthogonal__vector__grp_1ga94c6b113c3d1dcd196c4e83eeb153941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::orthogonal_vector</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;p)</argsstring>
        <name>orthogonal_vector</name>
        <qualifiedname>CGAL::orthogonal_vector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orthogonal__vector__grp_1ga1698efc20e2a9ada89118ec3fe887777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::orthogonal_vector</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>orthogonal_vector</name>
        <qualifiedname>CGAL::orthogonal_vector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13586" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gaf8b045ed5b2d7e892f6371ff6093ce5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga40204dc3851914ada523ba7a02033ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Ray_2&lt; Kernel &gt; &amp;r1, const CGAL::Ray_2&lt; Kernel &gt; &amp;r2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gae0d355e2a6bfdabee4f756eb8ba6b99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gaeb6bfe961d6a3c29470b828000437695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Line_3&lt; Kernel &gt; &amp;l1, const CGAL::Line_3&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga55cbad9fbbb52748d75a1272184207b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h1, const CGAL::Plane_3&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gae16f0e8fffcdff942d0a2e8a8fda7d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Ray_3&lt; Kernel &gt; &amp;r1, const CGAL::Ray_3&lt; Kernel &gt; &amp;r2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga99661a71ebf67dc44fdbd2011177ae01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s1, const CGAL::Segment_3&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__radical__plane__grp_1ga054555e8e0fcb48fa7bdf1b98e05ee99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::radical_plane</definition>
        <argsstring>(const CGAL::Sphere_3&lt; Kernel &gt; &amp;s1, const CGAL::Sphere_3&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>radical_plane</name>
        <qualifiedname>CGAL::radical_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13642" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__radical__line__grp_1ga520538c23b92629f7967beea3e1bb691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::radical_line</definition>
        <argsstring>(const CGAL::Circle_2&lt; Kernel &gt; &amp;c1, const CGAL::Circle_2&lt; Kernel &gt; &amp;c2)</argsstring>
        <name>radical_line</name>
        <qualifiedname>CGAL::radical_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Circle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Circle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__right__turn__grp_1ga0ad6e42d5e16269b43122503521f447a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::right_turn</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>right_turn</name>
        <qualifiedname>CGAL::right_turn</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__scalar__product__grp_1gacab514ee2b6517d8a0b0fe4cc0a28295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::scalar_product</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>scalar_product</name>
        <qualifiedname>CGAL::scalar_product</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__scalar__product__grp_1ga4f960db92fe46468f8ba3377f69f64bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::scalar_product</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>scalar_product</name>
        <qualifiedname>CGAL::scalar_product</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__circle__grp_1ga0e5c29a7810ca3cc1d92e3854ee9bf00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_circle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_circle</name>
        <qualifiedname>CGAL::side_of_bounded_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__circle__grp_1ga1a28c423cc75775dd0799f80700506c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_circle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_circle</name>
        <qualifiedname>CGAL::side_of_bounded_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__sphere__grp_1gac0b860dea5e5b831e810ed5a25fad802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_sphere</name>
        <qualifiedname>CGAL::side_of_bounded_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__sphere__grp_1gaa23c2a763ef75f120f43ee5db09f7fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_sphere</name>
        <qualifiedname>CGAL::side_of_bounded_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__sphere__grp_1ga5e7dc3dd99618777cdef9d6a823822fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_sphere</name>
        <qualifiedname>CGAL::side_of_bounded_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__oriented__circle__grp_1gaa1ff7e181e3ba191d405fe716e02ba38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::side_of_oriented_circle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;test)</argsstring>
        <name>side_of_oriented_circle</name>
        <qualifiedname>CGAL::side_of_oriented_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__oriented__sphere__grp_1ga3b3afd1f878c2269e34bbd4e49a85317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::side_of_oriented_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;test)</argsstring>
        <name>side_of_oriented_sphere</name>
        <qualifiedname>CGAL::side_of_oriented_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__area__grp_1ga4a78403d9db87ffea0efec851fea117c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::squared_area</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>squared_area</name>
        <qualifiedname>CGAL::squared_area</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1ga087e4ab1508d37f963b7a21bfae183fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1ga64edbde8622fec7f5af6338018d3d56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1ga900e29278394948952f59de7ff163b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13747" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1gaad156e1cc780af1d39f05b346bf22fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13754" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1ga3145805e8a5b1bac1b103c3bbb52d1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13761" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gaba7777a559d3fbd8adcbe4a4dd983ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13768" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gab253118245ae039b575d17bfe9ab42c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gab3c9f8a3d059e67d623e1e1e36ed3896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1ga5967e2435b1310bd11faed446e0c8184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gabb7bff11b3e660e7817ff903db61f28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1ga35e79cbee82e910f786783e6b35fed4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13803" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__unit__normal__grp_1ga2dd531ada431e654de186b792ad28c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::unit_normal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>unit_normal</name>
        <qualifiedname>CGAL::unit_normal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__volume__grp_1ga4ba6790576ca34b8421e120ec7562d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::volume</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p0, const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>volume</name>
        <qualifiedname>CGAL::volume</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__x__equal__grp_1gab4f8fb5007b5a620bfb127f2ba322bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::x_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>x_equal</name>
        <qualifiedname>CGAL::x_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__x__equal__grp_1ga7517cf957b48bad706d7a871de9d0927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::x_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>x_equal</name>
        <qualifiedname>CGAL::x_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__y__equal__grp_1ga9d8eace6afac8a35cacd81966adbc51d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::y_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>y_equal</name>
        <qualifiedname>CGAL::y_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__y__equal__grp_1gacc77baaaac56b1344fd43f6082f4a11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::y_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>y_equal</name>
        <qualifiedname>CGAL::y_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13845" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__z__equal__grp_1ga70c2660284fdacf56fa7f399895ec9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::z_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>z_equal</name>
        <qualifiedname>CGAL::z_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__rational__rotation__approximation__grp_1gac7990dcba1e282368c6140c0afae456b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::rational_rotation_approximation</definition>
        <argsstring>(const RingNumberType &amp;dirx, const RingNumberType &amp;diry, RingNumberType &amp;sin_num, RingNumberType &amp;cos_num, RingNumberType &amp;denom, const RingNumberType &amp;eps_num, const RingNumberType &amp;eps_den)</argsstring>
        <name>rational_rotation_approximation</name>
        <qualifiedname>CGAL::rational_rotation_approximation</qualifiedname>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>dirx</declname>
        </param>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>diry</declname>
        </param>
        <param>
          <type><ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>sin_num</declname>
        </param>
        <param>
          <type><ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>cos_num</declname>
        </param>
        <param>
          <type><ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>denom</declname>
        </param>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>eps_num</declname>
        </param>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>eps_den</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__distance__grp_1ga1ff73525660a052564d33fbdd61a4f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::squared_distance</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>squared_distance</name>
        <qualifiedname>CGAL::squared_distance</qualifiedname>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga86c0a5f5428e9ca692074e51df997643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_2&lt; Homogeneous&lt; RT &gt; &gt; CGAL::cartesian_to_homogeneous</definition>
        <argsstring>(const Point_2&lt; Cartesian&lt; RT &gt; &gt; &amp;cp)</argsstring>
        <name>cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13936" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga117e6839956d495d8558318f8c592113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_3&lt; Homogeneous&lt; RT &gt; &gt; CGAL::cartesian_to_homogeneous</definition>
        <argsstring>(const Point_3&lt; Cartesian&lt; RT &gt; &gt; &amp;cp)</argsstring>
        <name>cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13943" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gaad0850326fc64ce9885a8befad7f2e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; FT &gt; &gt;</type>
        <definition>Point_2&lt; Cartesian&lt; FT &gt; &gt; CGAL::homogeneous_to_cartesian</definition>
        <argsstring>(const Point_2&lt; Homogeneous&lt; FT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; FT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13950" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga5368409e52451a22241b3c955f6bccf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; FT &gt; &gt;</type>
        <definition>Point_3&lt; Cartesian&lt; FT &gt; &gt; CGAL::homogeneous_to_cartesian</definition>
        <argsstring>(const Point_3&lt; Homogeneous&lt; FT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; FT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13957" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gae84de091ced0db5b730c830fead99865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt;</type>
        <definition>Point_2&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; CGAL::homogeneous_to_quotient_cartesian</definition>
        <argsstring>(const Point_2&lt; Homogeneous&lt; RT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_quotient_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_quotient_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13964" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gaaf08becb34e99c17015c255ad5e3faf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt;</type>
        <definition>Point_3&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; CGAL::homogeneous_to_quotient_cartesian</definition>
        <argsstring>(const Point_3&lt; Homogeneous&lt; RT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_quotient_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_quotient_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13971" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gab091304585e78321766f754440cb4e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_2&lt; Homogeneous&lt; RT &gt; &gt; CGAL::quotient_cartesian_to_homogeneous</definition>
        <argsstring>(const Point_2&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;cp)</argsstring>
        <name>quotient_cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::quotient_cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13978" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga60e8d4ef9422c54ddb56491a18d290a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_3&lt; Homogeneous&lt; RT &gt; &gt; CGAL::quotient_cartesian_to_homogeneous</definition>
        <argsstring>(const Point_3&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;cp)</argsstring>
        <name>quotient_cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::quotient_cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13985" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__circular__grp_1ga23e2d6b82fd69230e033a1cabeb50c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; CircularKernel &gt; obj1, Type2&lt; CircularKernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; CircularKernel &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; CircularKernel &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13992" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__circular__grp_1ga45cfe651177ee2011c12d055a893fbc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const Type1 &amp;obj1, const Type2 &amp;obj2, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const Type1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="13999" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga31c617e3d8655fb3578f0bc9682f18e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_2&lt; CircularKernel &gt; &amp;a)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_2&lt; CircularKernel &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14006" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gae97031deffe68932300f80df4e2ff259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Line_arc_2&lt; CircularKernel &gt; &amp;a)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Line_arc_2&lt; CircularKernel &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14013" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__spherical__grp_1ga89d510f4f086dc2a46466351116898c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; SphericalKernel &gt; obj1, Type2&lt; SphericalKernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; SphericalKernel &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; SphericalKernel &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14020" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__spherical__grp_1ga020f0d63c70182b733b1997b506f445d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; SphericalKernel &gt; obj1, Type2&lt; SphericalKernel &gt; obj2, Type3&lt; SphericalKernel &gt; obj3)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; SphericalKernel &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; SphericalKernel &gt;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type>Type3&lt; SphericalKernel &gt;</type>
          <declname>obj3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14027" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__spherical__grp_1gaf48415042b58e0d2fa6467f0af013d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const SphericalType1 &amp;obj1, const SphericalType2 &amp;obj2, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const SphericalType1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const SphericalType2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14034" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__spherical__grp_1gaf918dcdeaa3bc4da0c5582fb4f38fdef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const Type1 &amp;obj1, const Type2 &amp;obj2, const Type3 &amp;obj3, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const Type1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type>const Type3 &amp;</type>
          <declname>obj3</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14041" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga529057989da53e549b38c5a88e82967b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1gaacaa68822ff84b1be59d3c84b8fed9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1gaf3848756a6457f983b39bca5f34fb989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga81888c6eb0e8066905d73a9868362e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga7c42d769e84f19b342c1577caec9eeba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga3675cad77d9399fdeca6f0ea463d931c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__angle__grp_1ga0e57f7e44fa891f84673d7251277cc79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga8be07b00890ca29c0653be379113e8b0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Angle</ref></type>
        <definition>Angle CGAL::angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>angle</name>
        <qualifiedname>CGAL::angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__approximate__angle__grp_1ga2a28592ce82e8d1ec2053a6250e3c360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::approximate_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>approximate_angle</name>
        <qualifiedname>CGAL::approximate_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__approximate__angle__grp_1ga252a36fb19ddcde7e4bfe4b26a1ac2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::approximate_angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>approximate_angle</name>
        <qualifiedname>CGAL::approximate_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__approximate__dihedral__angle__grp_1gadc7ae25da46f18af4db99f6871f97b5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::approximate_dihedral_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>approximate_dihedral_angle</name>
        <qualifiedname>CGAL::approximate_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__area__grp_1gad5b975e731751609655f88d287f7385a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::area</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>area</name>
        <qualifiedname>CGAL::area</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__ordered__along__line__grp_1gad0595dca20e967b66057c84f4bc9bcf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_ordered_along_line</name>
        <qualifiedname>CGAL::are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__ordered__along__line__grp_1ga5a56ab0987fbf02e7e03be7ebaebe26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_ordered_along_line</name>
        <qualifiedname>CGAL::are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14456" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__strictly__ordered__along__line__grp_1ga69aafc78b2d382efc95c186e4d5119ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14468" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__are__strictly__ordered__along__line__grp_1ga6171a3fb098250d290f33e84399268c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga93e459977649c2430139b5778101529b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gaa6a45c396e0accb1f0df10537f538d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gaff99ae24e88263966c203ecbe46eb567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga37c22a8dc59bd6b9fdfe5b471bef42d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga10f26898d449285572accf3b548f17ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_2&lt; Kernel &gt; &amp;p4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gaaa8d6079c64dbdd0081ef2e6f8086f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_2&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_2&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_2&lt; Kernel &gt; &amp;p4, const Kernel::FT &amp;w4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gabc7fc4bcbd7c9a42ada2b7ec640088ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gafd4201c8cb6943447755f84d01f78e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gafaeddc02828b4eba0377c0f558267fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gac46869387dc75521d93e48031c9fcf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1ga9a31d7fe4a0020529f29359fd628374f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_3&lt; Kernel &gt; &amp;p4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__barycenter__grp_1gad0b84597deb724f349828b9370a51b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::barycenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const Kernel::FT &amp;w1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const Kernel::FT &amp;w2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3, const Kernel::FT &amp;w3, const CGAL::Point_3&lt; Kernel &gt; &amp;p4, const Kernel::FT &amp;w4)</argsstring>
        <name>barycenter</name>
        <qualifiedname>CGAL::barycenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w3</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>w4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1gae2f18028215b4f35e25f2b976c7fbe18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1ga6ab4118cb8d778c1a71baab68fee9ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1gabbd6e8a906a35af72bb4c3cd9db0af97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1ga65430282124195ea4ab11ca496e8d641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h1, const CGAL::Plane_3&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga3ba0496a839f97ee6cd506baff51dfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14609" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga0c29478f8f1dd16f0ea7cdeeee60cf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14616" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga43926e539ee3d650810ddfa52ddcdf12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Triangle_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1gad80c13988bf13119f04630c5a2c07cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1gae64da70280e9ea0b9834e2b434b055ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1gac6b7c5823650d2e37a03eb3129b7a542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Triangle_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__centroid__grp_1ga1a08847d24879ea3e0a6d029845f598e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::centroid</definition>
        <argsstring>(const CGAL::Tetrahedron_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>centroid</name>
        <qualifiedname>CGAL::centroid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga37a20bf6fba404c8478839b79f7d86fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga428547debb4b2a1e5f9add7eac6a0252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga79c902e4193136b21f1f34f41ec3758b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Triangle_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gae7e2f5c2113dfcaacdac1c48731ec4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaf9d9a943d799c9ecc1ceb2621ce8d338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaf09cd6ac1f6e2244165fd14e5649b720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Triangle_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaab15ebb35f4455debe3884c419838ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga9528d43c5ab5ea4145e97709a1e33187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Tetrahedron_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__ordered__along__line__grp_1ga62c50e1ef3fb7e4533720373827fd4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__ordered__along__line__grp_1ga4ea9e9123c81b5cc398fd942140599e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14731" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__strictly__ordered__along__line__grp_1ga9d8636d66af954605ce632590b3b705d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14743" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__are__strictly__ordered__along__line__grp_1gafb68a13a9bffce3ffd211e875994839d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear_are_strictly_ordered_along_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear_are_strictly_ordered_along_line</name>
        <qualifiedname>CGAL::collinear_are_strictly_ordered_along_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14750" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__grp_1gadaa777c7b2f72b4321fe1ac3893efc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear</name>
        <qualifiedname>CGAL::collinear</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14762" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__collinear__grp_1gaf22e6010f55de63a8aff0dd2c7b12bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::collinear</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>collinear</name>
        <qualifiedname>CGAL::collinear</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14769" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga9a70a34f86fe41a55b760967694f43a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;a1, const CGAL::Point_3&lt; Kernel &gt; &amp;b1, const CGAL::Point_3&lt; Kernel &gt; &amp;c1, const CGAL::Point_3&lt; Kernel &gt; &amp;d1, const Kernel::FT &amp;cosine)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>cosine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga52404107d79baa56301bfc8199134228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;a1, const CGAL::Point_3&lt; Kernel &gt; &amp;b1, const CGAL::Point_3&lt; Kernel &gt; &amp;c1, const CGAL::Point_3&lt; Kernel &gt; &amp;d1, const CGAL::Point_3&lt; Kernel &gt; &amp;a2, const CGAL::Point_3&lt; Kernel &gt; &amp;b2, const CGAL::Point_3&lt; Kernel &gt; &amp;c2, const CGAL::Point_3&lt; Kernel &gt; &amp;d2)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14788" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga3f9c8a8863ab1411fc6484163fae4d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u1, const CGAL::Vector_3&lt; Kernel &gt; &amp;v1, const CGAL::Vector_3&lt; Kernel &gt; &amp;w1, const Kernel::FT &amp;cosine)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>cosine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__dihedral__angle__grp_1ga7cb035f021001289b2da2be5bf799c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_dihedral_angle</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u1, const CGAL::Vector_3&lt; Kernel &gt; &amp;v1, const CGAL::Vector_3&lt; Kernel &gt; &amp;w1, const CGAL::Vector_3&lt; Kernel &gt; &amp;u2, const CGAL::Vector_3&lt; Kernel &gt; &amp;v2, const CGAL::Vector_3&lt; Kernel &gt; &amp;w2)</argsstring>
        <name>compare_dihedral_angle</name>
        <qualifiedname>CGAL::compare_dihedral_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__distance__to__point__grp_1ga51e8ac85edc4e7c4beb6a9d139f5c853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_distance_to_point</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>compare_distance_to_point</name>
        <qualifiedname>CGAL::compare_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14814" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__distance__to__point__grp_1ga7a005824ca304dd1f5278474f4843dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_distance_to_point</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>compare_distance_to_point</name>
        <qualifiedname>CGAL::compare_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14821" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__lexicographically__linear__grp_1ga241d6b0c51b2ec9ee8b7a4e04e7dd562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_lexicographically</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_lexicographically</name>
        <qualifiedname>CGAL::compare_lexicographically</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14833" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__lexicographically__linear__grp_1gaf90bdb2a89d1e09ecf3a9e8f97671711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_lexicographically</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_lexicographically</name>
        <qualifiedname>CGAL::compare_lexicographically</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__line__grp_1gaf3dbb38f621e8d62944cd1869a97f8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_signed_distance_to_line</name>
        <qualifiedname>CGAL::compare_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__line__grp_1ga9f9eaaab84172968cf94e094a13df26c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_signed_distance_to_line</name>
        <qualifiedname>CGAL::compare_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__plane__grp_1gaa505cef98a05358ff85487d674cc0394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h, const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_signed_distance_to_plane</name>
        <qualifiedname>CGAL::compare_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14871" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__signed__distance__to__plane__grp_1ga63052c3cbbf565aec4bc58dd511e71d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>compare_signed_distance_to_plane</name>
        <qualifiedname>CGAL::compare_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14878" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1ga9d7f9afebfb7635c676fa7bcf3ac3185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14890" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1gad1aefd6d41881734885cb77c37af4e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14897" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1ga8d425470625e96c831173da960ec6552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;s1s, const CGAL::Point_2&lt; Kernel &gt; &amp;s1t, const CGAL::Point_2&lt; Kernel &gt; &amp;s2s, const CGAL::Point_2&lt; Kernel &gt; &amp;s2t)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1t</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__slopes__grp_1gad4ad60324fe765d0ed26f56f3e2bf81e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_slope</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_slope</name>
        <qualifiedname>CGAL::compare_slope</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__distance__grp_1ga8dbd662fc129db51e5344c2105191b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_distance</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const typename Kernel::FT &amp;d2)</argsstring>
        <name>compare_squared_distance</name>
        <qualifiedname>CGAL::compare_squared_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__distance__grp_1ga75555e2894e9c943e725483a054d5cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_distance</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const typename Kernel::FT &amp;d2)</argsstring>
        <name>compare_squared_distance</name>
        <qualifiedname>CGAL::compare_squared_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>d2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1gaeb1716519cb30cbb97fc798e0cd00ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14942" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1ga3d71c0c80b5c2a89b49289e1d587fdd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1ga0fa5f4a04f1c7f04f3c43a4d521019ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__squared__radius__grp_1ga811f58ab0215115643da5fe16f37cfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const typename Kernel::FT &amp;sr)</argsstring>
        <name>compare_squared_radius</name>
        <qualifiedname>CGAL::compare_squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14963" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1gade38745038a708e76421e624dc448f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14983" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1ga274dc815852583262e54dfb35d601268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14990" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1gae502ab2980aac4e37c4dd08108400618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="14997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1gadd405f29b1f84e3d5ceceee2632ee536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15004" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__linear__grp_1ga84301a123a63ed4e1de35d2c19367808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15011" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__circular__grp_1ga02958df52814f2ff41a48f98a0550159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15024" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__circular__grp_1ga5829822afcc60c83ead02c83dc74ce0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15031" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__spherical__grp_1ga8e7a74c1584c377bc410425b01da2970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__spherical__grp_1gaf7039fd589b194b40d9da5aab435cc26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_x</name>
        <qualifiedname>CGAL::compare_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15050" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__linear__grp_1ga99c5707cdcbc126783a194696aad388b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__linear__grp_1ga6979ac7902358ad28cb66fcd9ad96791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15077" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__circular__grp_1gad4c4b6140a494db45913be987acebcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__circular__grp_1gadf28eba2f31263cd46f7d35d866e7ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__spherical__grp_1ga59723f2273da0d3ae98d287ebf3c0fbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xy__spherical__grp_1ga5d43db96cb7dc2c89331153d88243785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xy</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xy</name>
        <qualifiedname>CGAL::compare_xy</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1gab87cbd18f319eb74f150b989f1cc98a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1ga7f3809c29b2e82721b7340c8c4da2c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1ga4deab4f857e9a869266482ce37a65862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__x__at__y__grp_1gabf322237fb2e50bb9df33127869c74a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_x_at_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_x_at_y</name>
        <qualifiedname>CGAL::compare_x_at_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga0570b8a2164c4f3923053d63b24b4f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga7b7f2a9e506760f69854b5dce9ab275c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gaf2f8b7114e12573f676e8e0302e54500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gaff3351d5c7507c74b3e48e8b1e4c3a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga05b0ffd47157a5f59142243b13961edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga93fab9114bbea4402fc7c26825347fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga31c617e3d8655fb3578f0bc9682f18e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_2&lt; CircularKernel &gt; &amp;a)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_2&lt; CircularKernel &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gae97031deffe68932300f80df4e2ff259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Line_arc_2&lt; CircularKernel &gt; &amp;a)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Line_arc_2&lt; CircularKernel &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga62a44c9df055aa0ae83ea84455152f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1gae1e416199adc1805b06c7ea9389829f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga07e78831d6ed3f5b614d5608ce5c9b60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga9768badf93898701d6f95101bd9befc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compary__y__linear__grp_1ga942435b4ff4a3ed0907b3c745e1c377f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__circular__grp_1ga37138f9ce1d4a565f4c73c30c3c68e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__circular__grp_1gaac34b0fd69305ef5b845bcf1f3246bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Point_2&lt; CircularKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; CircularKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__spherical__grp_1ga369f42a99f1823358d3d295e26875e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__spherical__grp_1gaa91ade50fb9ca7e99a7b4a23b92b497e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_y</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_y</name>
        <qualifiedname>CGAL::compare_y</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xyz__linear__grp_1ga85c912016468489da1decfb7a85264f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xyz</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_xyz</name>
        <qualifiedname>CGAL::compare_xyz</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xyz__spherical__grp_1ga7e3a1f8a22e0bd774570d2fea9810e2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xyz</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xyz</name>
        <qualifiedname>CGAL::compare_xyz</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__xyz__spherical__grp_1ga850572d69328843cf26f9363bd3bc272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_xyz</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_xyz</name>
        <qualifiedname>CGAL::compare_xyz</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__z__linear__grp_1ga369456c72206d97ab114cd9f2e7f4af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_z</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_z</name>
        <qualifiedname>CGAL::compare_z</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__z__spherical__grp_1gaf616ffb0fcc52773f71743c29e842dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_z</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_z</name>
        <qualifiedname>CGAL::compare_z</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__z__spherical__grp_1gab46d0e224d7010de3ee0b2150e0b7fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_z</definition>
        <argsstring>(const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;p, const CGAL::Point_3&lt; SphericalKernel &gt; &amp;q)</argsstring>
        <name>compare_z</name>
        <qualifiedname>CGAL::compare_z</qualifiedname>
        <param>
          <type>const CGAL::Circular_arc_point_3&lt; SphericalKernel &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; SphericalKernel &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__yx__grp_1gaed9bd83a324097061c5b3825ed663258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_yx</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>compare_yx</name>
        <qualifiedname>CGAL::compare_yx</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__grp_1ga79b3b4bcb01bf81048486dfd59a22c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::coplanar</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar</name>
        <qualifiedname>CGAL::coplanar</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__orientation__grp_1gaf6fa77ad91160fdbe406db839e87f543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::coplanar_orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar_orientation</name>
        <qualifiedname>CGAL::coplanar_orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__orientation__grp_1gae6eea9e4c75a610511866cf3eb4ae139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::coplanar_orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>coplanar_orientation</name>
        <qualifiedname>CGAL::coplanar_orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__coplanar__side__of__bounded__circle__grp_1gab02e2952353223cde67697df3ac84ec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::coplanar_side_of_bounded_circle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>coplanar_side_of_bounded_circle</name>
        <qualifiedname>CGAL::coplanar_side_of_bounded_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__cross__product__grp_1gab032f9890a983dff3e0a29346318176e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::cross_product</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>cross_product</name>
        <qualifiedname>CGAL::cross_product</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__determinant__grp_1ga43b04b357a2c01b2e0f1f5775fc5ebb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::determinant</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;v, const CGAL::Vector_2&lt; Kernel &gt; &amp;w)</argsstring>
        <name>determinant</name>
        <qualifiedname>CGAL::determinant</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__determinant__grp_1ga607a85e1ce137513fa2904ff63290401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::determinant</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v, const CGAL::Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>determinant</name>
        <qualifiedname>CGAL::determinant</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__linear__grp_1ga9514a218a097ac392d21775368d3dd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__linear__grp_1ga0fc4e7e2217631c1f9d1e193716d652f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Plane_3&lt; Kernel &gt; obj1, Plane_3&lt; Kernel &gt; obj2, Plane_3&lt; Kernel &gt; obj3)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__circular__grp_1ga23e2d6b82fd69230e033a1cabeb50c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; CircularKernel &gt; obj1, Type2&lt; CircularKernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; CircularKernel &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; CircularKernel &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__spherical__grp_1ga89d510f4f086dc2a46466351116898c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; SphericalKernel &gt; obj1, Type2&lt; SphericalKernel &gt; obj2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; SphericalKernel &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; SphericalKernel &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__do__intersect__spherical__grp_1ga020f0d63c70182b733b1997b506f445d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Type1&lt; SphericalKernel &gt; obj1, Type2&lt; SphericalKernel &gt; obj2, Type3&lt; SphericalKernel &gt; obj3)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>Type1&lt; SphericalKernel &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; SphericalKernel &gt;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type>Type3&lt; SphericalKernel &gt;</type>
          <declname>obj3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__equidistant__line__grp_1gac7476ed32034ddd19dda9106b31f882f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_3&lt; Kernel &gt; CGAL::equidistant_line</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>equidistant_line</name>
        <qualifiedname>CGAL::equidistant_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__distance__to__point__grp_1ga1c6f2c3521bc70d4f8ed8eb88762a07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_distance_to_point</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_larger_distance_to_point</name>
        <qualifiedname>CGAL::has_larger_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__distance__to__point__grp_1ga8c05b8e965b22c75873c4ba0c9e0b9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_distance_to_point</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_larger_distance_to_point</name>
        <qualifiedname>CGAL::has_larger_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__line__grp_1ga6b3cb9555a8bea981e8283bd456d123c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_larger_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__line__grp_1ga9d810a2961d0c785e970893920085d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>has_larger_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__plane__grp_1ga645bab7e870b124eb8ab9fe93ef47dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h, const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_larger_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__larger__signed__distance__to__plane__grp_1ga44f687b45a7ea420a2b84d7a55a46b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_larger_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>has_larger_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_larger_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__distance__to__point__grp_1gaced5841787740fba7ee44a531284a128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_distance_to_point</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_smaller_distance_to_point</name>
        <qualifiedname>CGAL::has_smaller_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__distance__to__point__grp_1ga8c3c1514f7cebaee0645e47a476538d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_distance_to_point</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>has_smaller_distance_to_point</name>
        <qualifiedname>CGAL::has_smaller_distance_to_point</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__line__grp_1gae507fea54d14e701c56de815d9730444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l, const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_smaller_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__line__grp_1ga70ddaf8025c685beda7d33f61c3b36c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_line</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>has_smaller_signed_distance_to_line</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__plane__grp_1ga4c2f5b7428e8753d023e75e99bff1ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h, const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>has_smaller_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__has__smaller__signed__distance__to__plane__grp_1gacadf351cba0ccd154a2943dbb8b0e8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::has_smaller_signed_distance_to_plane</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>has_smaller_signed_distance_to_plane</name>
        <qualifiedname>CGAL::has_smaller_signed_distance_to_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__linear__grp_1gade00253914ac774cce3d2031c07d74fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) CGAL::intersection</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__linear__grp_1ga1ae668d4f2a5a7006cefc0731b89875b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) CGAL::intersection</definition>
        <argsstring>(const Plane_3&lt; Kernel &gt; &amp;pl1, const Plane_3&lt; Kernel &gt; &amp;pl2, const Plane_3&lt; Kernel &gt; &amp;pl3)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>pl1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>pl2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>pl3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__circular__grp_1ga45cfe651177ee2011c12d055a893fbc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const Type1 &amp;obj1, const Type2 &amp;obj2, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const Type1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15683" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__spherical__grp_1gaf48415042b58e0d2fa6467f0af013d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const SphericalType1 &amp;obj1, const SphericalType2 &amp;obj2, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const SphericalType1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const SphericalType2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__intersection__spherical__grp_1gaf918dcdeaa3bc4da0c5582fb4f38fdef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::intersection</definition>
        <argsstring>(const Type1 &amp;obj1, const Type2 &amp;obj2, const Type3 &amp;obj3, OutputIterator intersections)</argsstring>
        <name>intersection</name>
        <qualifiedname>CGAL::intersection</qualifiedname>
        <param>
          <type>const Type1 &amp;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>const Type2 &amp;</type>
          <declname>obj2</declname>
        </param>
        <param>
          <type>const Type3 &amp;</type>
          <declname>obj3</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>intersections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__l__infinity__distance__grp_1ga9e1407df1c6b4f23019b2e97cd4a390a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::l_infinity_distance</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>l_infinity_distance</name>
        <qualifiedname>CGAL::l_infinity_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__l__infinity__distance__grp_1gaf9f6d0f4e1243856dac35c168f6508c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::l_infinity_distance</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>l_infinity_distance</name>
        <qualifiedname>CGAL::l_infinity_distance</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15721" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__left__turn__grp_1ga54cc2a847df7133bee7fd61c7b236dcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::left_turn</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>left_turn</name>
        <qualifiedname>CGAL::left_turn</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__larger__grp_1ga0cf066e4d5572a493c7c9f9ff58c19a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_larger</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_larger</name>
        <qualifiedname>CGAL::lexicographically_xy_larger</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15745" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__larger__or__equal__grp_1gad643d05f3cce01489b600ac5377e950e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_larger_or_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_larger_or_equal</name>
        <qualifiedname>CGAL::lexicographically_xy_larger_or_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__smaller__grp_1gab4ac1479fab3f0e58debc845316a52e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_smaller</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_smaller</name>
        <qualifiedname>CGAL::lexicographically_xy_smaller</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15769" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xy__smaller__or__equal__grp_1ga44153edeb60da6f895ce5342f277f630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xy_smaller_or_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xy_smaller_or_equal</name>
        <qualifiedname>CGAL::lexicographically_xy_smaller_or_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xyz__smaller__grp_1ga8bf93a0885a3a693c401cd229a52c633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xyz_smaller</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xyz_smaller</name>
        <qualifiedname>CGAL::lexicographically_xyz_smaller</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15793" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lexicographically__xyz__smaller__or__equal__grp_1ga4ca673bb805f17d7f3b597e94108a113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::lexicographically_xyz_smaller_or_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>lexicographically_xyz_smaller_or_equal</name>
        <qualifiedname>CGAL::lexicographically_xyz_smaller_or_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__max__vertex__grp_1ga46562d115720a01049f3dbb778929fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::max_vertex</definition>
        <argsstring>(const CGAL::Iso_rectangle_2&lt; Kernel &gt; &amp;ir)</argsstring>
        <name>max_vertex</name>
        <qualifiedname>CGAL::max_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__rectangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_rectangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__max__vertex__grp_1ga1410c073d65e5c67b159934754c9ed45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::max_vertex</definition>
        <argsstring>(const CGAL::Iso_cuboid_3&lt; Kernel &gt; &amp;ic)</argsstring>
        <name>max_vertex</name>
        <qualifiedname>CGAL::max_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1ga6b971827bb460dd0611c932a7dd287f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15836" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1ga0b2a925018adf872b8afe39fdbc9915f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15843" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1gaaa348ce932c82135def586ad3fdee373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15850" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__midpoint__grp_1gab705ff35cc397db7b95b2bc1d35a8b18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::midpoint</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>midpoint</name>
        <qualifiedname>CGAL::midpoint</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15857" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__min__vertex__grp_1gabd1b13ccd9cf230613dceed55f2918ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::min_vertex</definition>
        <argsstring>(const CGAL::Iso_rectangle_2&lt; Kernel &gt; &amp;ir)</argsstring>
        <name>min_vertex</name>
        <qualifiedname>CGAL::min_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__rectangle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_rectangle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__min__vertex__grp_1ga69d8c57f6f04c0e84bf7cbd404747b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::min_vertex</definition>
        <argsstring>(const CGAL::Iso_cuboid_3&lt; Kernel &gt; &amp;ic)</argsstring>
        <name>min_vertex</name>
        <qualifiedname>CGAL::min_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Iso_cuboid_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15876" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__normal__grp_1gafe43c91d0ec7130cb673402cf8227dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::normal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>normal</name>
        <qualifiedname>CGAL::normal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15888" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga91d9866cfde916ba70e5dbc596176d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1gaecb33819c6e8259cec78c457a7650383" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15907" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga0a65d09ea2af5f9bcfececb9aba9ca35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orientation__grp_1ga565faf2582847419e36f177af821011e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::orientation</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v, const CGAL::Vector_3&lt; Kernel &gt; &amp;w)</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::orientation</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orthogonal__vector__grp_1ga94c6b113c3d1dcd196c4e83eeb153941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::orthogonal_vector</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;p)</argsstring>
        <name>orthogonal_vector</name>
        <qualifiedname>CGAL::orthogonal_vector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15933" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__orthogonal__vector__grp_1ga1698efc20e2a9ada89118ec3fe887777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::orthogonal_vector</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>orthogonal_vector</name>
        <qualifiedname>CGAL::orthogonal_vector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15940" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gaf8b045ed5b2d7e892f6371ff6093ce5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15952" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga40204dc3851914ada523ba7a02033ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Ray_2&lt; Kernel &gt; &amp;r1, const CGAL::Ray_2&lt; Kernel &gt; &amp;r2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15959" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gae0d355e2a6bfdabee4f756eb8ba6b99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gaeb6bfe961d6a3c29470b828000437695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Line_3&lt; Kernel &gt; &amp;l1, const CGAL::Line_3&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15973" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga55cbad9fbbb52748d75a1272184207b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h1, const CGAL::Plane_3&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15980" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1gae16f0e8fffcdff942d0a2e8a8fda7d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Ray_3&lt; Kernel &gt; &amp;r1, const CGAL::Ray_3&lt; Kernel &gt; &amp;r2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15987" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__parallel__grp_1ga99661a71ebf67dc44fdbd2011177ae01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::parallel</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s1, const CGAL::Segment_3&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>parallel</name>
        <qualifiedname>CGAL::parallel</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="15994" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__radical__plane__grp_1ga054555e8e0fcb48fa7bdf1b98e05ee99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::radical_plane</definition>
        <argsstring>(const CGAL::Sphere_3&lt; Kernel &gt; &amp;s1, const CGAL::Sphere_3&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>radical_plane</name>
        <qualifiedname>CGAL::radical_plane</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Sphere__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Sphere_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16006" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__radical__line__grp_1ga520538c23b92629f7967beea3e1bb691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::radical_line</definition>
        <argsstring>(const CGAL::Circle_2&lt; Kernel &gt; &amp;c1, const CGAL::Circle_2&lt; Kernel &gt; &amp;c2)</argsstring>
        <name>radical_line</name>
        <qualifiedname>CGAL::radical_line</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Circle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Circle_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16018" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__rational__rotation__approximation__grp_1gac7990dcba1e282368c6140c0afae456b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::rational_rotation_approximation</definition>
        <argsstring>(const RingNumberType &amp;dirx, const RingNumberType &amp;diry, RingNumberType &amp;sin_num, RingNumberType &amp;cos_num, RingNumberType &amp;denom, const RingNumberType &amp;eps_num, const RingNumberType &amp;eps_den)</argsstring>
        <name>rational_rotation_approximation</name>
        <qualifiedname>CGAL::rational_rotation_approximation</qualifiedname>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>dirx</declname>
        </param>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>diry</declname>
        </param>
        <param>
          <type><ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>sin_num</declname>
        </param>
        <param>
          <type><ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>cos_num</declname>
        </param>
        <param>
          <type><ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>denom</declname>
        </param>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>eps_num</declname>
        </param>
        <param>
          <type>const <ref refid="classRingNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RingNumberType</ref> &amp;</type>
          <declname>eps_den</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16030" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__right__turn__grp_1ga0ad6e42d5e16269b43122503521f447a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::right_turn</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>right_turn</name>
        <qualifiedname>CGAL::right_turn</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16042" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__scalar__product__grp_1gacab514ee2b6517d8a0b0fe4cc0a28295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::scalar_product</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;u, const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>scalar_product</name>
        <qualifiedname>CGAL::scalar_product</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__scalar__product__grp_1ga4f960db92fe46468f8ba3377f69f64bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::scalar_product</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;u, const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>scalar_product</name>
        <qualifiedname>CGAL::scalar_product</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__circle__grp_1ga0e5c29a7810ca3cc1d92e3854ee9bf00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_circle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_circle</name>
        <qualifiedname>CGAL::side_of_bounded_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16073" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__circle__grp_1ga1a28c423cc75775dd0799f80700506c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_circle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_circle</name>
        <qualifiedname>CGAL::side_of_bounded_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16080" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__sphere__grp_1gac0b860dea5e5b831e810ed5a25fad802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_sphere</name>
        <qualifiedname>CGAL::side_of_bounded_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16092" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__sphere__grp_1gaa23c2a763ef75f120f43ee5db09f7fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_sphere</name>
        <qualifiedname>CGAL::side_of_bounded_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16099" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__bounded__sphere__grp_1ga5e7dc3dd99618777cdef9d6a823822fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::side_of_bounded_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>side_of_bounded_sphere</name>
        <qualifiedname>CGAL::side_of_bounded_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__oriented__circle__grp_1gaa1ff7e181e3ba191d405fe716e02ba38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::side_of_oriented_circle</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r, const CGAL::Point_2&lt; Kernel &gt; &amp;test)</argsstring>
        <name>side_of_oriented_circle</name>
        <qualifiedname>CGAL::side_of_oriented_circle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__side__of__oriented__sphere__grp_1ga3b3afd1f878c2269e34bbd4e49a85317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::side_of_oriented_sphere</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s, const CGAL::Point_3&lt; Kernel &gt; &amp;test)</argsstring>
        <name>side_of_oriented_sphere</name>
        <qualifiedname>CGAL::side_of_oriented_sphere</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__area__grp_1ga4a78403d9db87ffea0efec851fea117c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::squared_area</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>squared_area</name>
        <qualifiedname>CGAL::squared_area</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__distance__grp_1ga1ff73525660a052564d33fbdd61a4f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::squared_distance</definition>
        <argsstring>(Type1&lt; Kernel &gt; obj1, Type2&lt; Kernel &gt; obj2)</argsstring>
        <name>squared_distance</name>
        <qualifiedname>CGAL::squared_distance</qualifiedname>
        <param>
          <type>Type1&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj1</declname>
        </param>
        <param>
          <type>Type2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
          <declname>obj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1ga087e4ab1508d37f963b7a21bfae183fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1ga64edbde8622fec7f5af6338018d3d56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1ga900e29278394948952f59de7ff163b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__length__grp_1gaad156e1cc780af1d39f05b346bf22fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_length</definition>
        <argsstring>(const CGAL::Segment_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>squared_length</name>
        <qualifiedname>CGAL::squared_length</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Segment_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1ga3145805e8a5b1bac1b103c3bbb52d1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gaba7777a559d3fbd8adcbe4a4dd983ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gab253118245ae039b575d17bfe9ab42c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gab3c9f8a3d059e67d623e1e1e36ed3896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1ga5967e2435b1310bd11faed446e0c8184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1gabb7bff11b3e660e7817ff903db61f28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__squared__radius__grp_1ga35e79cbee82e910f786783e6b35fed4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FT</type>
        <definition>FT CGAL::squared_radius</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p)</argsstring>
        <name>squared_radius</name>
        <qualifiedname>CGAL::squared_radius</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__unit__normal__grp_1ga2dd531ada431e654de186b792ad28c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt;</type>
        <definition>CGAL::Vector_3&lt; Kernel &gt; CGAL::unit_normal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>unit_normal</name>
        <qualifiedname>CGAL::unit_normal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__volume__grp_1ga4ba6790576ca34b8421e120ec7562d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::volume</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p0, const CGAL::Point_3&lt; Kernel &gt; &amp;p1, const CGAL::Point_3&lt; Kernel &gt; &amp;p2, const CGAL::Point_3&lt; Kernel &gt; &amp;p3)</argsstring>
        <name>volume</name>
        <qualifiedname>CGAL::volume</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__x__equal__grp_1gab4f8fb5007b5a620bfb127f2ba322bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::x_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>x_equal</name>
        <qualifiedname>CGAL::x_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__x__equal__grp_1ga7517cf957b48bad706d7a871de9d0927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::x_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>x_equal</name>
        <qualifiedname>CGAL::x_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__y__equal__grp_1ga9d8eace6afac8a35cacd81966adbc51d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::y_equal</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>y_equal</name>
        <qualifiedname>CGAL::y_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__y__equal__grp_1gacc77baaaac56b1344fd43f6082f4a11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::y_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>y_equal</name>
        <qualifiedname>CGAL::y_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__z__equal__grp_1ga70c2660284fdacf56fa7f399895ec9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::z_equal</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>z_equal</name>
        <qualifiedname>CGAL::z_equal</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__global__function_1gafc40016b26f9b699ae6f4230735062b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga84351c7e66be00efccd4ab1a61070469" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Comparison_result</ref></type>
        <definition>Comparison_result CGAL::compare_angle</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;a, const CGAL::Point_3&lt; Kernel &gt; &amp;b, const CGAL::Point_3&lt; Kernel &gt; &amp;c, const Kernel::FT &amp;cosine)</argsstring>
        <name>compare_angle</name>
        <qualifiedname>CGAL::compare_angle</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>cosine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="16923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__enums_1gac3993cbddb0f5186b19ad7ef8338a89e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::enum_cast</definition>
        <argsstring>(const U &amp;u)</argsstring>
        <name>enum_cast</name>
        <qualifiedname>CGAL::enum_cast</qualifiedname>
        <param>
          <type>const U &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__enums_1gad0a8110cb95f76bac65649bfe58c650b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref></type>
        <definition>Oriented_side CGAL::opposite</definition>
        <argsstring>(const Oriented_side &amp;o)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>const <ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__enums_1ga30e66263975bfc9a72730cba0c25367c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref></type>
        <definition>Bounded_side CGAL::opposite</definition>
        <argsstring>(const Bounded_side &amp;o)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>const <ref refid="group__kernel__enums_1gaf6030e89dadcc1f45369b0cdc5d9e111" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bounded_side</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga86c0a5f5428e9ca692074e51df997643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_2&lt; Homogeneous&lt; RT &gt; &gt; CGAL::cartesian_to_homogeneous</definition>
        <argsstring>(const Point_2&lt; Cartesian&lt; RT &gt; &gt; &amp;cp)</argsstring>
        <name>cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga117e6839956d495d8558318f8c592113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_3&lt; Homogeneous&lt; RT &gt; &gt; CGAL::cartesian_to_homogeneous</definition>
        <argsstring>(const Point_3&lt; Cartesian&lt; RT &gt; &gt; &amp;cp)</argsstring>
        <name>cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gaad0850326fc64ce9885a8befad7f2e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; FT &gt; &gt;</type>
        <definition>Point_2&lt; Cartesian&lt; FT &gt; &gt; CGAL::homogeneous_to_cartesian</definition>
        <argsstring>(const Point_2&lt; Homogeneous&lt; FT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; FT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga5368409e52451a22241b3c955f6bccf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; FT &gt; &gt;</type>
        <definition>Point_3&lt; Cartesian&lt; FT &gt; &gt; CGAL::homogeneous_to_cartesian</definition>
        <argsstring>(const Point_3&lt; Homogeneous&lt; FT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; FT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gae84de091ced0db5b730c830fead99865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt;</type>
        <definition>Point_2&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; CGAL::homogeneous_to_quotient_cartesian</definition>
        <argsstring>(const Point_2&lt; Homogeneous&lt; RT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_quotient_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_quotient_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gaaf08becb34e99c17015c255ad5e3faf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt;</type>
        <definition>Point_3&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; CGAL::homogeneous_to_quotient_cartesian</definition>
        <argsstring>(const Point_3&lt; Homogeneous&lt; RT &gt; &gt; &amp;hp)</argsstring>
        <name>homogeneous_to_quotient_cartesian</name>
        <qualifiedname>CGAL::homogeneous_to_quotient_cartesian</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt; &amp;</type>
          <declname>hp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1gab091304585e78321766f754440cb4e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_2&lt; Homogeneous&lt; RT &gt; &gt; CGAL::quotient_cartesian_to_homogeneous</definition>
        <argsstring>(const Point_2&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;cp)</argsstring>
        <name>quotient_cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::quotient_cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__kernel__conversion_1ga60e8d4ef9422c54ddb56491a18d290a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Homogeneous" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Homogeneous</ref>&lt; RT &gt; &gt;</type>
        <definition>Point_3&lt; Homogeneous&lt; RT &gt; &gt; CGAL::quotient_cartesian_to_homogeneous</definition>
        <argsstring>(const Point_3&lt; Cartesian&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;cp)</argsstring>
        <name>quotient_cartesian_to_homogeneous</name>
        <qualifiedname>CGAL::quotient_cartesian_to_homogeneous</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_3</ref>&lt; <ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt; Quotient&lt; RT &gt; &gt; &gt; &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="17250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__STLAlgos_1ga2f3822e4faf8eca315ef0f49c373d05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref>, <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref> &gt;</type>
        <definition>std::pair&lt; ForwardIterator, ForwardIterator &gt; CGAL::min_max_element</definition>
        <argsstring>(ForwardIterator first, ForwardIterator last)</argsstring>
        <name>min_max_element</name>
        <qualifiedname>CGAL::min_max_element</qualifiedname>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__STLAlgos_1gaf404b198e27ef4018bc5185c9e7da751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref>, <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref> &gt;</type>
        <definition>std::pair&lt; ForwardIterator, ForwardIterator &gt; CGAL::min_max_element</definition>
        <argsstring>(ForwardIterator first, ForwardIterator last, CompareMin comp_min, CompareMax comp_max)</argsstring>
        <name>min_max_element</name>
        <qualifiedname>CGAL::min_max_element</qualifiedname>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>CompareMin</type>
          <declname>comp_min</declname>
        </param>
        <param>
          <type>CompareMax</type>
          <declname>comp_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4527" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionRef_1ga08aa4fa93a53622eae19f823e8e141df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; T, N &gt;</type>
        <definition>std::array&lt; T, N &gt; CGAL::make_array</definition>
        <argsstring>(const T &amp;...)</argsstring>
        <name>make_array</name>
        <qualifiedname>CGAL::make_array</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__CompactContainer_1ga8377419c541b788f98a962e1d7ed8df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CC_safe_handle</ref>&lt; CC_iterator &gt;</type>
        <definition>CC_safe_handle&lt; CC_iterator &gt; CGAL::make_cc_safe_handle</definition>
        <argsstring>(CC_iterator iterator)</argsstring>
        <name>make_cc_safe_handle</name>
        <qualifiedname>CGAL::make_cc_safe_handle</qualifiedname>
        <param>
          <type>CC_iterator</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__projectionobjects_1gaa343b4e41668290985efff5def93ca7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Compare__to__less" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compare_to_less</ref>&lt; F &gt;</type>
        <definition>Compare_to_less&lt; F &gt; CGAL::compare_to_less</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>compare_to_less</name>
        <qualifiedname>CGAL::compare_to_less</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac87cfb03dd80e388d2fe53af9e53e9ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; T &gt;</type>
        <definition>Iterator_range&lt; T &gt; CGAL::make_range</definition>
        <argsstring>(const T &amp;b, const T &amp;e)</argsstring>
        <name>make_range</name>
        <qualifiedname>CGAL::make_range</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4555" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a20aeec74989e860c5f20c11a844aad53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::range_begin</definition>
        <argsstring>(Iterator_range&lt; T &gt; &amp;x)</argsstring>
        <name>range_begin</name>
        <qualifiedname>CGAL::range_begin</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1acd0d74e5e80884f3c33b663e1e576435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::range_end</definition>
        <argsstring>(Iterator_range&lt; T &gt; &amp;x)</argsstring>
        <name>range_end</name>
        <qualifiedname>CGAL::range_end</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af0be841eaa3070123a308353961d2695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::range_begin</definition>
        <argsstring>(const Iterator_range&lt; T &gt; &amp;x)</argsstring>
        <name>range_begin</name>
        <qualifiedname>CGAL::range_begin</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a97c1af46c1e40a2f68495e0947e681b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T CGAL::range_end</definition>
        <argsstring>(const Iterator_range&lt; T &gt; &amp;x)</argsstring>
        <name>range_end</name>
        <qualifiedname>CGAL::range_end</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1gaf17f67aed4fb6c658ec7cb3f96f9d838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
        <definition>Failure_function CGAL::set_error_handler</definition>
        <argsstring>(Failure_function handler)</argsstring>
        <name>set_error_handler</name>
        <qualifiedname>CGAL::set_error_handler</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1ga7bf05b83505d915fb23cb23337b34c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
        <definition>Failure_function CGAL::set_warning_handler</definition>
        <argsstring>(Failure_function handler)</argsstring>
        <name>set_warning_handler</name>
        <qualifiedname>CGAL::set_warning_handler</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1ga57511207f5935f17b3264e2d03124027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
        <definition>Failure_behaviour CGAL::set_error_behaviour</definition>
        <argsstring>(Failure_behaviour eb)</argsstring>
        <name>set_error_behaviour</name>
        <qualifiedname>CGAL::set_error_behaviour</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
          <declname>eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1gaeb4e85bca7bfc12e7fd086bf36a39a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
        <definition>Failure_behaviour CGAL::set_warning_behaviour</definition>
        <argsstring>(Failure_behaviour eb)</argsstring>
        <name>set_warning_behaviour</name>
        <qualifiedname>CGAL::set_warning_behaviour</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
          <declname>eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__STLAlgos_1ga2f3822e4faf8eca315ef0f49c373d05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref>, <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref> &gt;</type>
        <definition>std::pair&lt; ForwardIterator, ForwardIterator &gt; CGAL::min_max_element</definition>
        <argsstring>(ForwardIterator first, ForwardIterator last)</argsstring>
        <name>min_max_element</name>
        <qualifiedname>CGAL::min_max_element</qualifiedname>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4710" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__STLAlgos_1gaf404b198e27ef4018bc5185c9e7da751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref>, <ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref> &gt;</type>
        <definition>std::pair&lt; ForwardIterator, ForwardIterator &gt; CGAL::min_max_element</definition>
        <argsstring>(ForwardIterator first, ForwardIterator last, CompareMin comp_min, CompareMax comp_max)</argsstring>
        <name>min_max_element</name>
        <qualifiedname>CGAL::min_max_element</qualifiedname>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></type>
          <declname>last</declname>
        </param>
        <param>
          <type>CompareMin</type>
          <declname>comp_min</declname>
        </param>
        <param>
          <type>CompareMax</type>
          <declname>comp_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4717" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__CompactContainer_1ga8377419c541b788f98a962e1d7ed8df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1CC__safe__handle" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CC_safe_handle</ref>&lt; CC_iterator &gt;</type>
        <definition>CC_safe_handle&lt; CC_iterator &gt; CGAL::make_cc_safe_handle</definition>
        <argsstring>(CC_iterator iterator)</argsstring>
        <name>make_cc_safe_handle</name>
        <qualifiedname>CGAL::make_cc_safe_handle</qualifiedname>
        <param>
          <type>CC_iterator</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4749" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__projectionobjects_1gaa343b4e41668290985efff5def93ca7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Compare__to__less" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compare_to_less</ref>&lt; F &gt;</type>
        <definition>Compare_to_less&lt; F &gt; CGAL::compare_to_less</definition>
        <argsstring>(const F &amp;f)</argsstring>
        <name>compare_to_less</name>
        <qualifiedname>CGAL::compare_to_less</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionRef_1ga08aa4fa93a53622eae19f823e8e141df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; T, N &gt;</type>
        <definition>std::array&lt; T, N &gt; CGAL::make_array</definition>
        <argsstring>(const T &amp;...)</argsstring>
        <name>make_array</name>
        <qualifiedname>CGAL::make_array</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4865" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1gaf17f67aed4fb6c658ec7cb3f96f9d838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
        <definition>Failure_function CGAL::set_error_handler</definition>
        <argsstring>(Failure_function handler)</argsstring>
        <name>set_error_handler</name>
        <qualifiedname>CGAL::set_error_handler</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1ga7bf05b83505d915fb23cb23337b34c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
        <definition>Failure_function CGAL::set_warning_handler</definition>
        <argsstring>(Failure_function handler)</argsstring>
        <name>set_warning_handler</name>
        <qualifiedname>CGAL::set_warning_handler</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1ga22c85e11e31ba1f9954022947822983d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_function</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="4998" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1ga57511207f5935f17b3264e2d03124027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
        <definition>Failure_behaviour CGAL::set_error_behaviour</definition>
        <argsstring>(Failure_behaviour eb)</argsstring>
        <name>set_error_behaviour</name>
        <qualifiedname>CGAL::set_error_behaviour</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
          <declname>eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="5005" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSTLExtensionAssertions_1gaeb4e85bca7bfc12e7fd086bf36a39a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
        <definition>Failure_behaviour CGAL::set_warning_behaviour</definition>
        <argsstring>(Failure_behaviour eb)</argsstring>
        <name>set_warning_behaviour</name>
        <qualifiedname>CGAL::set_warning_behaviour</qualifiedname>
        <param>
          <type><ref refid="group__PkgSTLExtensionAssertions_1gac5eee7bb7edcc41dd3251042c5934dee" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Failure_behaviour</ref></type>
          <declname>eb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="5012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga1d5106cf8be16adb4c4dc8b1ec3a5a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::abs</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>abs</name>
        <qualifiedname>CGAL::abs</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga0397c01d0ea2364b92e98141e221e9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::compare</definition>
        <argsstring>(const NT &amp;x, const NT &amp;y)</argsstring>
        <name>compare</name>
        <qualifiedname>CGAL::compare</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1437" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gae246e686f794e878361621e6d4898b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::div</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>div</name>
        <qualifiedname>CGAL::div</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga3445213fb9bc055253f5c346ce1693f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::div_mod</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y, result_type &amp;q, result_type &amp;r)</argsstring>
        <name>div_mod</name>
        <qualifiedname>CGAL::div_mod</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>result_type &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>result_type &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gade2b63594fb6827c33c0dcd73b4c7cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::gcd</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>gcd</name>
        <qualifiedname>CGAL::gcd</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga59e55b9e023c50ddb15c89fae4b68387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::integral_division</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>integral_division</name>
        <qualifiedname>CGAL::integral_division</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga3152b245b3c1c2fccd78e1dc27942598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::inverse</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>inverse</name>
        <qualifiedname>CGAL::inverse</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gab752a78af2e16a42c5bd8c09fafeb585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_negative</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_negative</name>
        <qualifiedname>CGAL::is_negative</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gab57640546cf6cf7e56d37a652927a6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_one</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_one</name>
        <qualifiedname>CGAL::is_one</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gabbfc28149479e41f56111ffe692c07d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_positive</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_positive</name>
        <qualifiedname>CGAL::is_positive</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga9e2d81a5ae3384b07b0f5848e8ae7bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_square</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_square</name>
        <qualifiedname>CGAL::is_square</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga890f40c3e1aa8708d1e1fb72fdfd7834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_square</definition>
        <argsstring>(const NT &amp;x, NT &amp;y)</argsstring>
        <name>is_square</name>
        <qualifiedname>CGAL::is_square</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>NT &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga997aad1528e7e744e54a807caa2be56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_zero</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_zero</name>
        <qualifiedname>CGAL::is_zero</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gabac14fc6cb4f556c19958b60f3305b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::kth_root</definition>
        <argsstring>(int k, const NT &amp;x)</argsstring>
        <name>kth_root</name>
        <qualifiedname>CGAL::kth_root</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gac6bc445c0fc83ed997549ce869b7bae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::mod</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>mod</name>
        <qualifiedname>CGAL::mod</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga975ad8b8b91cd67463c6c2be863d16a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::root_of</definition>
        <argsstring>(int k, InputIterator begin, InputIterator end)</argsstring>
        <name>root_of</name>
        <qualifiedname>CGAL::root_of</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1535" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gaf3d75d272a29458960987a8f248ec636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::sign</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>sign</name>
        <qualifiedname>CGAL::sign</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga5339b0f11fdc9babbc5ca0b33f4a982c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::simplify</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>simplify</name>
        <qualifiedname>CGAL::simplify</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gab922269072ee9ee99ba8c541418b2e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::sqrt</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>sqrt</name>
        <qualifiedname>CGAL::sqrt</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga07001b5ddc5c43096c811c91a306be9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::square</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>square</name>
        <qualifiedname>CGAL::square</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga1f1bcd74fce34fd532445590bbda5cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::to_double</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>to_double</name>
        <qualifiedname>CGAL::to_double</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga45f5e8d23f5dea2bc433436cb062e2b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; CGAL::to_interval</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>to_interval</name>
        <qualifiedname>CGAL::to_interval</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1577" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga46969193a368780228dd0855cdc424b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::unit_part</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>unit_part</name>
        <qualifiedname>CGAL::unit_part</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga1d5106cf8be16adb4c4dc8b1ec3a5a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::abs</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>abs</name>
        <qualifiedname>CGAL::abs</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga0397c01d0ea2364b92e98141e221e9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::compare</definition>
        <argsstring>(const NT &amp;x, const NT &amp;y)</argsstring>
        <name>compare</name>
        <qualifiedname>CGAL::compare</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gae246e686f794e878361621e6d4898b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::div</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>div</name>
        <qualifiedname>CGAL::div</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1642" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga3445213fb9bc055253f5c346ce1693f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::div_mod</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y, result_type &amp;q, result_type &amp;r)</argsstring>
        <name>div_mod</name>
        <qualifiedname>CGAL::div_mod</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>result_type &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>result_type &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gade2b63594fb6827c33c0dcd73b4c7cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::gcd</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>gcd</name>
        <qualifiedname>CGAL::gcd</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga59e55b9e023c50ddb15c89fae4b68387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::integral_division</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>integral_division</name>
        <qualifiedname>CGAL::integral_division</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga3152b245b3c1c2fccd78e1dc27942598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::inverse</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>inverse</name>
        <qualifiedname>CGAL::inverse</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gab752a78af2e16a42c5bd8c09fafeb585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_negative</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_negative</name>
        <qualifiedname>CGAL::is_negative</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gab57640546cf6cf7e56d37a652927a6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_one</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_one</name>
        <qualifiedname>CGAL::is_one</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gabbfc28149479e41f56111ffe692c07d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_positive</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_positive</name>
        <qualifiedname>CGAL::is_positive</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga9e2d81a5ae3384b07b0f5848e8ae7bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_square</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_square</name>
        <qualifiedname>CGAL::is_square</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga890f40c3e1aa8708d1e1fb72fdfd7834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_square</definition>
        <argsstring>(const NT &amp;x, NT &amp;y)</argsstring>
        <name>is_square</name>
        <qualifiedname>CGAL::is_square</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>NT &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga997aad1528e7e744e54a807caa2be56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::is_zero</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>is_zero</name>
        <qualifiedname>CGAL::is_zero</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gabac14fc6cb4f556c19958b60f3305b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::kth_root</definition>
        <argsstring>(int k, const NT &amp;x)</argsstring>
        <name>kth_root</name>
        <qualifiedname>CGAL::kth_root</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gac6bc445c0fc83ed997549ce869b7bae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::mod</definition>
        <argsstring>(const NT1 &amp;x, const NT2 &amp;y)</argsstring>
        <name>mod</name>
        <qualifiedname>CGAL::mod</qualifiedname>
        <param>
          <type>const NT1 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const NT2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga975ad8b8b91cd67463c6c2be863d16a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::root_of</definition>
        <argsstring>(int k, InputIterator begin, InputIterator end)</argsstring>
        <name>root_of</name>
        <qualifiedname>CGAL::root_of</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gaf3d75d272a29458960987a8f248ec636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result_type</type>
        <definition>result_type CGAL::sign</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>sign</name>
        <qualifiedname>CGAL::sign</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga5339b0f11fdc9babbc5ca0b33f4a982c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::simplify</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>simplify</name>
        <qualifiedname>CGAL::simplify</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1747" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1gab922269072ee9ee99ba8c541418b2e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::sqrt</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>sqrt</name>
        <qualifiedname>CGAL::sqrt</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1754" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga07001b5ddc5c43096c811c91a306be9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::square</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>square</name>
        <qualifiedname>CGAL::square</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1761" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga1f1bcd74fce34fd532445590bbda5cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CGAL::to_double</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>to_double</name>
        <qualifiedname>CGAL::to_double</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1768" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga45f5e8d23f5dea2bc433436cb062e2b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; CGAL::to_interval</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>to_interval</name>
        <qualifiedname>CGAL::to_interval</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgAlgebraicFoundationsRef_1ga46969193a368780228dd0855cdc424b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::unit_part</definition>
        <argsstring>(const NT &amp;x)</argsstring>
        <name>unit_part</name>
        <qualifiedname>CGAL::unit_part</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga7cbd5c6db884f5a4aace399c337d31b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_circulator</definition>
        <argsstring>(const C &amp;c)</argsstring>
        <name>Assert_circulator</name>
        <qualifiedname>CGAL::Assert_circulator</qualifiedname>
        <param>
          <type>const C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga28a51d41a222f90c19b75bc6f5e1155f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_iterator</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>Assert_iterator</name>
        <qualifiedname>CGAL::Assert_iterator</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="477" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga9bfcd5e48c98a1ccc7b74f8e8f302730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_circulator_or_iterator</definition>
        <argsstring>(const IC &amp;i)</argsstring>
        <name>Assert_circulator_or_iterator</name>
        <qualifiedname>CGAL::Assert_circulator_or_iterator</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1gae03ebcb9a583408d6db5f9cc3b11ebe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_input_category</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>Assert_input_category</name>
        <qualifiedname>CGAL::Assert_input_category</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1gaa60474dae8730bf824f506cc75eb845d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_output_category</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>Assert_output_category</name>
        <qualifiedname>CGAL::Assert_output_category</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1gab791ef74a8a4c15fd0b99080c1e9b632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_forward_category</definition>
        <argsstring>(const IC &amp;ic)</argsstring>
        <name>Assert_forward_category</name>
        <qualifiedname>CGAL::Assert_forward_category</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga11d32256668de73db038afb63080da9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_bidirectional_category</definition>
        <argsstring>(const IC &amp;ic)</argsstring>
        <name>Assert_bidirectional_category</name>
        <qualifiedname>CGAL::Assert_bidirectional_category</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga8c5ac1c87cd7c3d6a98816354eac5031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_random_access_category</definition>
        <argsstring>(const IC &amp;ic)</argsstring>
        <name>Assert_random_access_category</name>
        <qualifiedname>CGAL::Assert_random_access_category</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gaa7e7be37f74469fd362a65b9263f290f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C::difference_type</type>
        <definition>C::difference_type CGAL::circulator_distance</definition>
        <argsstring>(C c, C d)</argsstring>
        <name>circulator_distance</name>
        <qualifiedname>CGAL::circulator_distance</qualifiedname>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <param>
          <type>C</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1ga2d7bfa21e8eb046b8ae90104aa4fcce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C::size_type</type>
        <definition>C::size_type CGAL::circulator_size</definition>
        <argsstring>(C c)</argsstring>
        <name>circulator_size</name>
        <qualifiedname>CGAL::circulator_size</qualifiedname>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gaf4e8c8285d91a1d8acd582191da0f255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::is_empty_range</definition>
        <argsstring>(const IC &amp;i, const IC &amp;j)</argsstring>
        <name>is_empty_range</name>
        <qualifiedname>CGAL::is_empty_range</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const IC &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gadaabb38d2411a4370d963a07c55ea3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator_traits&lt; IC &gt;::difference_type</type>
        <definition>iterator_traits&lt; IC &gt;::difference_type CGAL::iterator_distance</definition>
        <argsstring>(IC ic1, IC ic2)</argsstring>
        <name>iterator_distance</name>
        <qualifiedname>CGAL::iterator_distance</qualifiedname>
        <param>
          <type>IC</type>
          <declname>ic1</declname>
        </param>
        <param>
          <type>IC</type>
          <declname>ic2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gaa16b4ad8f12d7ba8afdaae7da609c900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Iterator__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Iterator_tag</ref></type>
        <definition>Iterator_tag CGAL::query_circulator_or_iterator</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>query_circulator_or_iterator</name>
        <qualifiedname>CGAL::query_circulator_or_iterator</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1ga09373fd234b3ca546f97a750e0304f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Circulator__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Circulator_tag</ref></type>
        <definition>Circulator_tag CGAL::query_circulator_or_iterator</definition>
        <argsstring>(const C &amp;c)</argsstring>
        <name>query_circulator_or_iterator</name>
        <qualifiedname>CGAL::query_circulator_or_iterator</qualifiedname>
        <param>
          <type>const C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gaa7e7be37f74469fd362a65b9263f290f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C::difference_type</type>
        <definition>C::difference_type CGAL::circulator_distance</definition>
        <argsstring>(C c, C d)</argsstring>
        <name>circulator_distance</name>
        <qualifiedname>CGAL::circulator_distance</qualifiedname>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <param>
          <type>C</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1ga2d7bfa21e8eb046b8ae90104aa4fcce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>C::size_type</type>
        <definition>C::size_type CGAL::circulator_size</definition>
        <argsstring>(C c)</argsstring>
        <name>circulator_size</name>
        <qualifiedname>CGAL::circulator_size</qualifiedname>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gaf4e8c8285d91a1d8acd582191da0f255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::is_empty_range</definition>
        <argsstring>(const IC &amp;i, const IC &amp;j)</argsstring>
        <name>is_empty_range</name>
        <qualifiedname>CGAL::is_empty_range</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const IC &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gadaabb38d2411a4370d963a07c55ea3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iterator_traits&lt; IC &gt;::difference_type</type>
        <definition>iterator_traits&lt; IC &gt;::difference_type CGAL::iterator_distance</definition>
        <argsstring>(IC ic1, IC ic2)</argsstring>
        <name>iterator_distance</name>
        <qualifiedname>CGAL::iterator_distance</qualifiedname>
        <param>
          <type>IC</type>
          <declname>ic1</declname>
        </param>
        <param>
          <type>IC</type>
          <declname>ic2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1gaa16b4ad8f12d7ba8afdaae7da609c900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Iterator__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Iterator_tag</ref></type>
        <definition>Iterator_tag CGAL::query_circulator_or_iterator</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>query_circulator_or_iterator</name>
        <qualifiedname>CGAL::query_circulator_or_iterator</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsFunctions_1ga09373fd234b3ca546f97a750e0304f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Circulator__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Circulator_tag</ref></type>
        <definition>Circulator_tag CGAL::query_circulator_or_iterator</definition>
        <argsstring>(const C &amp;c)</argsstring>
        <name>query_circulator_or_iterator</name>
        <qualifiedname>CGAL::query_circulator_or_iterator</qualifiedname>
        <param>
          <type>const C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga7cbd5c6db884f5a4aace399c337d31b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_circulator</definition>
        <argsstring>(const C &amp;c)</argsstring>
        <name>Assert_circulator</name>
        <qualifiedname>CGAL::Assert_circulator</qualifiedname>
        <param>
          <type>const C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga28a51d41a222f90c19b75bc6f5e1155f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_iterator</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>Assert_iterator</name>
        <qualifiedname>CGAL::Assert_iterator</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga9bfcd5e48c98a1ccc7b74f8e8f302730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_circulator_or_iterator</definition>
        <argsstring>(const IC &amp;i)</argsstring>
        <name>Assert_circulator_or_iterator</name>
        <qualifiedname>CGAL::Assert_circulator_or_iterator</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="691" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1gae03ebcb9a583408d6db5f9cc3b11ebe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_input_category</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>Assert_input_category</name>
        <qualifiedname>CGAL::Assert_input_category</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1gaa60474dae8730bf824f506cc75eb845d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_output_category</definition>
        <argsstring>(const I &amp;i)</argsstring>
        <name>Assert_output_category</name>
        <qualifiedname>CGAL::Assert_output_category</qualifiedname>
        <param>
          <type>const I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1gab791ef74a8a4c15fd0b99080c1e9b632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_forward_category</definition>
        <argsstring>(const IC &amp;ic)</argsstring>
        <name>Assert_forward_category</name>
        <qualifiedname>CGAL::Assert_forward_category</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga11d32256668de73db038afb63080da9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_bidirectional_category</definition>
        <argsstring>(const IC &amp;ic)</argsstring>
        <name>Assert_bidirectional_category</name>
        <qualifiedname>CGAL::Assert_bidirectional_category</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgHandlesAndCirculatorsAssert_1ga8c5ac1c87cd7c3d6a98816354eac5031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Assert_random_access_category</definition>
        <argsstring>(const IC &amp;ic)</argsstring>
        <name>Assert_random_access_category</name>
        <qualifiedname>CGAL::Assert_random_access_category</qualifiedname>
        <param>
          <type>const IC &amp;</type>
          <declname>ic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__IOstreamOperators_1gab63c7e66d05c61b2cafb1f85fd8bb3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, Class c)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__IOstreamOperators_1ga2e62094cfede6ee53227479cd7250883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, Class c)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2PointLocation_1ga278df8e4d85dcb6bf3dfa35e251a706e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::locate</definition>
        <argsstring>(const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator begin, InputIterator end, OutputIterator oi)</argsstring>
        <name>locate</name>
        <qualifiedname>CGAL::locate</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga339cdba93f54001be303595689002396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_2&lt; GeomTraitsA, TopTraitsA &gt; &amp;arr1, const Arrangement_2&lt; GeomTraitsB, TopTraitsB &gt; &amp;arr2, Arrangement_2&lt; GeomTraitsRes, TopTraitsRes &gt; &amp;arr_res, OverlayTraits &amp;ovl_tr)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeomTraitsA, TopTraitsA &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeomTraitsB, TopTraitsB &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeomTraitsRes, TopTraitsRes &gt; &amp;</type>
          <declname>arr_res</declname>
        </param>
        <param>
          <type><ref refid="classOverlayTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">OverlayTraits</ref> &amp;</type>
          <declname>ovl_tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gaddb9e44b14b27e4cf0c7bb26b27d8518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_with_history_2&lt; Traits, Dcel1 &gt; &amp;arr1, const Arrangement_with_history_2&lt; Traits, Dcel2 &gt; &amp;arr2, Arrangement_with_history_2&lt; Traits, ResDcel &gt; &amp;res, OverlayTraits &amp;ovl_tr)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel1 &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel2 &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, ResDcel &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="classOverlayTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">OverlayTraits</ref> &amp;</type>
          <declname>ovl_tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga6250573eaa94af687154326513c2cd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::decompose</definition>
        <argsstring>(const Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, OutputIterator oi)</argsstring>
        <name>decompose</name>
        <qualifiedname>CGAL::decompose</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10333" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Halfedge_handle</type>
        <definition>Arrangement_2&lt; Traits, Dcel &gt;::Halfedge_handle CGAL::insert_non_intersecting_curve</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_non_intersecting_curve</name>
        <qualifiedname>CGAL::insert_non_intersecting_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10340" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gad4aa37a4e938747028690579fb703d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert_non_intersecting_curves</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert_non_intersecting_curves</name>
        <qualifiedname>CGAL::insert_non_intersecting_curves</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gabfaca749e7d8c9547c143032a0e9df08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Vertex_handle</type>
        <definition>Arrangement_2&lt; Traits, Dcel &gt;::Vertex_handle CGAL::insert_point</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::Point_2 &amp;p, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_point</name>
        <qualifiedname>CGAL::insert_point</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gabcb9bc6c5859edf3fbc1390e60e32a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::is_valid</definition>
        <argsstring>(const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::is_valid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gad41fab113e4ec35768bbcdfc6f3c54c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Face_handle</type>
        <definition>Arrangement_2&lt; Traits, Dcel &gt;::Face_handle CGAL::remove_edge</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, typename Arrangement_2&lt; Traits, Dcel &gt;::Halfedge_handle e)</argsstring>
        <name>remove_edge</name>
        <qualifiedname>CGAL::remove_edge</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Halfedge_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gacbb4f22a59c77fb06a9d544cbbb04778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::remove_vertex</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, typename Arrangement_2&lt; Traits, Dcel &gt;::Vertex_handle v)</argsstring>
        <name>remove_vertex</name>
        <qualifiedname>CGAL::remove_vertex</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Vertex_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga7598937d11570bdedd5f3b6491065940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gad2c812247ce5c1dd592c0e0be74a1fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle</type>
        <definition>Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle CGAL::insert_non_intersecting_curve</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_non_intersecting_curve</name>
        <qualifiedname>CGAL::insert_non_intersecting_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gab168a4f4aa766c5bd670d82f4793f16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert_non_intersecting_curves</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert_non_intersecting_curves</name>
        <qualifiedname>CGAL::insert_non_intersecting_curves</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga20598ef738aed142f32617212dc861d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle</type>
        <definition>Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle CGAL::insert_point</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::Point_2 &amp;p, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_point</name>
        <qualifiedname>CGAL::insert_point</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gafd685214e9dcdfe2186b4d9b7f76f37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::is_valid</definition>
        <argsstring>(const Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr)</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::is_valid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gaaa3cb37bae2483e238ede133951e3088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Face_handle</type>
        <definition>Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Face_handle CGAL::remove_edge</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, typename Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle e)</argsstring>
        <name>remove_edge</name>
        <qualifiedname>CGAL::remove_edge</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga5eca39557780532185639e02ce4ecf83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::remove_vertex</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, typename Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle v)</argsstring>
        <name>remove_vertex</name>
        <qualifiedname>CGAL::remove_vertex</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga52ccca744c113ea53ae30cdf6c70b295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::zone</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename GeometryTraits::X_monotone_curve_2 &amp;c, OutputIterator oi, const PointLocation &amp;pl)</argsstring>
        <name>zone</name>
        <qualifiedname>CGAL::zone</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename GeometryTraits::X_monotone_curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gab94ab51b036c862501bc06a8fa48e3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle</type>
        <definition>Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::Curve_2 &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga92e366673e866d93370d61a828f8e5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gaa323bd67be0dc7cc326eb4f26653e326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size CGAL::remove_curve</definition>
        <argsstring>(Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, typename Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle ch)</argsstring>
        <name>remove_curve</name>
        <qualifiedname>CGAL::remove_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0a415adfb14fd0faf921688779d2eb08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits1 &gt; &amp;arr1, const Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits12 &gt; &amp;arr2, Arrangement_on_surface_with_history_2&lt; GeometryTraits, ResTopologyTraits &gt; &amp;res, OverlayTraits &amp;ovl_tr)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits1 &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits12 &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, ResTopologyTraits &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="classOverlayTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">OverlayTraits</ref> &amp;</type>
          <declname>ovl_tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a327e4c4a4e23a7ebc37c1f6ef31ad1c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits1 &gt; &amp;arr1, const Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits2 &gt; &amp;arr2, Arrangement_on_surface_with_history_2&lt; GeometryTraits, ResTopologyTraits &gt; &amp;res)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits1 &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits2 &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, ResTopologyTraits &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga99926abedcbe0fad8a78df4e9393f6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt;::Curve_handle</type>
        <definition>Arrangement_with_history_2&lt; Traits, Dcel &gt;::Curve_handle CGAL::insert</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::Curve_2 &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga744ea4ef5e40e521af139e106b6480f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga9a27533ff4ade0c60978812e517b89d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size CGAL::remove_curve</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, typename Arrangement_with_history_2&lt; Traits, Dcel &gt;::Curve_handle ch)</argsstring>
        <name>remove_curve</name>
        <qualifiedname>CGAL::remove_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt;::Curve_handle</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a64122d076561fdda2cb8851ec93c2b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_with_history_2&lt; Traits, Dcel1 &gt; &amp;arr1, const Arrangement_with_history_2&lt; Traits, Dcel2 &gt; &amp;arr2, Arrangement_with_history_2&lt; Traits, ResDcel &gt; &amp;res)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel1 &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel2 &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, ResDcel &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1gaf71524fb5b1c9bc6751bed9b26516e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1ga901897b505970cac1e7a79e89c7a1d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1ga3eef5a7d0496ce7652139aeef47ce8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10515" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1ga9a5cd565bc752a7fec6d99e8cee1db28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__left__shift_1ga8b30fa13c4f865df66cf6a14718240e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__right__shift_1ga153c183e5eeb01e5fda67ae0e391aa23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Arrangement_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__left__shift_1ga8c49cd589cbb3b01c45a976fe2c98e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__right__shift_1gaee7da9524b44916bd7b4dc75594b5c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gaf7d5aac2640c2a706f8c5e6adc8a7e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gaa4baa0868abeacbece3ff3a0a7d9d2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, typename Arr_point_location_result&lt; Arrangement_2&lt; Traits, Dcel &gt; &gt;::type obj)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_point_location_result</ref>&lt; <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &gt;::type</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga25a2ae72727ec4c0680d20477bab7a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gae2a4543bc562996f3d38832a95d52c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gaedfedb7d7a927c18cdc3b68aa31ec8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, typename Arr_point_location_result&lt; Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &gt;::type obj)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_point_location_result</ref>&lt; <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &gt;::type</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gac3bf533850fb20111cead96b11f162bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__left__shift_1ga8b30fa13c4f865df66cf6a14718240e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__left__shift_1ga8c49cd589cbb3b01c45a976fe2c98e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__right__shift_1ga153c183e5eeb01e5fda67ae0e391aa23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Arrangement_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2op__right__shift_1gaee7da9524b44916bd7b4dc75594b5c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2PointLocation_1ga278df8e4d85dcb6bf3dfa35e251a706e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::locate</definition>
        <argsstring>(const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator begin, InputIterator end, OutputIterator oi)</argsstring>
        <name>locate</name>
        <qualifiedname>CGAL::locate</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10957" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga339cdba93f54001be303595689002396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_2&lt; GeomTraitsA, TopTraitsA &gt; &amp;arr1, const Arrangement_2&lt; GeomTraitsB, TopTraitsB &gt; &amp;arr2, Arrangement_2&lt; GeomTraitsRes, TopTraitsRes &gt; &amp;arr_res, OverlayTraits &amp;ovl_tr)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeomTraitsA, TopTraitsA &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeomTraitsB, TopTraitsB &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeomTraitsRes, TopTraitsRes &gt; &amp;</type>
          <declname>arr_res</declname>
        </param>
        <param>
          <type><ref refid="classOverlayTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">OverlayTraits</ref> &amp;</type>
          <declname>ovl_tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10977" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gaddb9e44b14b27e4cf0c7bb26b27d8518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::overlay</definition>
        <argsstring>(const Arrangement_with_history_2&lt; Traits, Dcel1 &gt; &amp;arr1, const Arrangement_with_history_2&lt; Traits, Dcel2 &gt; &amp;arr2, Arrangement_with_history_2&lt; Traits, ResDcel &gt; &amp;res, OverlayTraits &amp;ovl_tr)</argsstring>
        <name>overlay</name>
        <qualifiedname>CGAL::overlay</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel1 &gt; &amp;</type>
          <declname>arr1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel2 &gt; &amp;</type>
          <declname>arr2</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, ResDcel &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type><ref refid="classOverlayTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">OverlayTraits</ref> &amp;</type>
          <declname>ovl_tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10984" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga6250573eaa94af687154326513c2cd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::decompose</definition>
        <argsstring>(const Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, OutputIterator oi)</argsstring>
        <name>decompose</name>
        <qualifiedname>CGAL::decompose</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Halfedge_handle</type>
        <definition>Arrangement_2&lt; Traits, Dcel &gt;::Halfedge_handle CGAL::insert_non_intersecting_curve</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_non_intersecting_curve</name>
        <qualifiedname>CGAL::insert_non_intersecting_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="10998" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gad4aa37a4e938747028690579fb703d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert_non_intersecting_curves</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert_non_intersecting_curves</name>
        <qualifiedname>CGAL::insert_non_intersecting_curves</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11005" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gabfaca749e7d8c9547c143032a0e9df08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Vertex_handle</type>
        <definition>Arrangement_2&lt; Traits, Dcel &gt;::Vertex_handle CGAL::insert_point</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::Point_2 &amp;p, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_point</name>
        <qualifiedname>CGAL::insert_point</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gabcb9bc6c5859edf3fbc1390e60e32a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::is_valid</definition>
        <argsstring>(const Arrangement_2&lt; Traits, Dcel &gt; &amp;arr)</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::is_valid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11019" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gad41fab113e4ec35768bbcdfc6f3c54c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Face_handle</type>
        <definition>Arrangement_2&lt; Traits, Dcel &gt;::Face_handle CGAL::remove_edge</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, typename Arrangement_2&lt; Traits, Dcel &gt;::Halfedge_handle e)</argsstring>
        <name>remove_edge</name>
        <qualifiedname>CGAL::remove_edge</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Halfedge_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11026" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gacbb4f22a59c77fb06a9d544cbbb04778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::remove_vertex</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, typename Arrangement_2&lt; Traits, Dcel &gt;::Vertex_handle v)</argsstring>
        <name>remove_vertex</name>
        <qualifiedname>CGAL::remove_vertex</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt;::Vertex_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11033" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga7598937d11570bdedd5f3b6491065940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11040" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gad2c812247ce5c1dd592c0e0be74a1fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle</type>
        <definition>Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle CGAL::insert_non_intersecting_curve</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_non_intersecting_curve</name>
        <qualifiedname>CGAL::insert_non_intersecting_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gab168a4f4aa766c5bd670d82f4793f16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert_non_intersecting_curves</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert_non_intersecting_curves</name>
        <qualifiedname>CGAL::insert_non_intersecting_curves</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga20598ef738aed142f32617212dc861d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle</type>
        <definition>Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle CGAL::insert_point</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::Point_2 &amp;p, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert_point</name>
        <qualifiedname>CGAL::insert_point</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gafd685214e9dcdfe2186b4d9b7f76f37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::is_valid</definition>
        <argsstring>(const Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr)</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::is_valid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11068" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gaaa3cb37bae2483e238ede133951e3088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Face_handle</type>
        <definition>Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Face_handle CGAL::remove_edge</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, typename Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle e)</argsstring>
        <name>remove_edge</name>
        <qualifiedname>CGAL::remove_edge</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Halfedge_handle</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11075" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga5eca39557780532185639e02ce4ecf83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::remove_vertex</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, typename Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle v)</argsstring>
        <name>remove_vertex</name>
        <qualifiedname>CGAL::remove_vertex</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Vertex_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11082" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga52ccca744c113ea53ae30cdf6c70b295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::zone</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename GeometryTraits::X_monotone_curve_2 &amp;c, OutputIterator oi, const PointLocation &amp;pl)</argsstring>
        <name>zone</name>
        <qualifiedname>CGAL::zone</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename GeometryTraits::X_monotone_curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1gaa323bd67be0dc7cc326eb4f26653e326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size CGAL::remove_curve</definition>
        <argsstring>(Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, typename Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle ch)</argsstring>
        <name>remove_curve</name>
        <qualifiedname>CGAL::remove_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Funcs_1ga9a27533ff4ade0c60978812e517b89d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size CGAL::remove_curve</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, typename Arrangement_with_history_2&lt; Traits, Dcel &gt;::Curve_handle ch)</argsstring>
        <name>remove_curve</name>
        <qualifiedname>CGAL::remove_curve</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>typename <ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt;::Curve_handle</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1gaf71524fb5b1c9bc6751bed9b26516e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1ga901897b505970cac1e7a79e89c7a1d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1ga3eef5a7d0496ce7652139aeef47ce8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Draw_1ga9a5cd565bc752a7fec6d99e8cee1db28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Arrangement_2&lt; GeometryTraits_2, Dcel &gt; &amp;arr, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; GeometryTraits_2, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gab94ab51b036c862501bc06a8fa48e3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle</type>
        <definition>Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt;::Curve_handle CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::Curve_2 &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga92e366673e866d93370d61a828f8e5e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_with_history_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_with_history_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga99926abedcbe0fad8a78df4e9393f6f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt;::Curve_handle</type>
        <definition>Arrangement_with_history_2&lt; Traits, Dcel &gt;::Curve_handle CGAL::insert</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::Curve_2 &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::Curve_2 &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga744ea4ef5e40e521af139e106b6480f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_with_history_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__with__history__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_with_history_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gaf7d5aac2640c2a706f8c5e6adc8a7e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gaa4baa0868abeacbece3ff3a0a7d9d2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, typename Arr_point_location_result&lt; Arrangement_2&lt; Traits, Dcel &gt; &gt;::type obj)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_point_location_result</ref>&lt; <ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &gt;::type</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1ga25a2ae72727ec4c0680d20477bab7a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_2&lt; Traits, Dcel &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_2</ref>&lt; Traits, Dcel &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gae2a4543bc562996f3d38832a95d52c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const Curve &amp;c, const PointLocation &amp;pl=walk_pl)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const Curve &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const PointLocation &amp;</type>
          <declname>pl</declname>
          <defval>walk_pl</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gaedfedb7d7a927c18cdc3b68aa31ec8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, const typename Traits::X_monotone_curve_2 &amp;xc, typename Arr_point_location_result&lt; Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &gt;::type obj)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type>const typename Traits::X_monotone_curve_2 &amp;</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arr_point_location_result</ref>&lt; <ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &gt;::type</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgArrangementOnSurface2Insert_1gac3bf533850fb20111cead96b11f162bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::insert</definition>
        <argsstring>(Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt; &amp;arr, InputIterator first, InputIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::insert</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arrangement__on__surface__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">Arrangement_on_surface_2</ref>&lt; GeometryTraits, TopologyTraits &gt; &amp;</type>
          <declname>arr</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="11211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1ga56a8df4559b043b885be909514e6069f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const P &amp;p, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1918" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1gabd190ae8e99ec09b3222cf48e7423476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const P &amp;p)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1925" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1ga0cd9860fd91978ad7f95d1f802cde68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const P &amp;p, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1gab8a72ab4d5af412ba0a0a4e82dcc0903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const P &amp;p, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1ga56a8df4559b043b885be909514e6069f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const P &amp;p, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="2008" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1gabd190ae8e99ec09b3222cf48e7423476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const P &amp;p)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="2015" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1ga0cd9860fd91978ad7f95d1f802cde68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const P &amp;p, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="2022" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPolyhedron_1gab8a72ab4d5af412ba0a0a4e82dcc0903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const P &amp;p, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="2029" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawConstrainedTriangulation2_1gaa8ce0931d83c1728d860109afa4b2661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const CT2 &amp;ct2, InDomainPMap ipm)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const CT2 &amp;</type>
          <declname>ct2</declname>
        </param>
        <param>
          <type>InDomainPMap</type>
          <declname>ipm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3013" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawConstrainedTriangulation2_1gab61ec32dbb931e808ac62d324531c838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const CT2 &amp;ct2, InDomainPMap ipm, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const CT2 &amp;</type>
          <declname>ct2</declname>
        </param>
        <param>
          <type>InDomainPMap</type>
          <declname>ipm</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3020" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1gaaae9847caff7054677faf3573497d9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const T2 &amp;at2, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3027" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1ga5b2aa57d37e1b52c7f4a3a879fd40dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const T2 &amp;at2)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3034" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1ga3b2995676eace30ef57c873bff34aa18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const T2 &amp;at2, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3041" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1ga6604e04e2c8f8feba81132711c3e628a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const T2 &amp;at2, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3048" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgTriangulation2Miscellaneous_1gabe989734ed8d720d4385900d50b3c9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::mark_domain_in_triangulation</definition>
        <argsstring>(CT &amp;ct, InDomainPmap ipm)</argsstring>
        <name>mark_domain_in_triangulation</name>
        <qualifiedname>CGAL::mark_domain_in_triangulation</qualifiedname>
        <param>
          <type>CT &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>InDomainPmap</type>
          <declname>ipm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgTriangulation2Miscellaneous_1ga0409755d0eb89100810230443a85e7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::mark_domain_in_triangulation</definition>
        <argsstring>(CT &amp;ct)</argsstring>
        <name>mark_domain_in_triangulation</name>
        <qualifiedname>CGAL::mark_domain_in_triangulation</qualifiedname>
        <param>
          <type>CT &amp;</type>
          <declname>ct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3062" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgTriangulation2Miscellaneous_1gabe989734ed8d720d4385900d50b3c9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::mark_domain_in_triangulation</definition>
        <argsstring>(CT &amp;ct, InDomainPmap ipm)</argsstring>
        <name>mark_domain_in_triangulation</name>
        <qualifiedname>CGAL::mark_domain_in_triangulation</qualifiedname>
        <param>
          <type>CT &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>InDomainPmap</type>
          <declname>ipm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgTriangulation2Miscellaneous_1ga0409755d0eb89100810230443a85e7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::mark_domain_in_triangulation</definition>
        <argsstring>(CT &amp;ct)</argsstring>
        <name>mark_domain_in_triangulation</name>
        <qualifiedname>CGAL::mark_domain_in_triangulation</qualifiedname>
        <param>
          <type>CT &amp;</type>
          <declname>ct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1gaaae9847caff7054677faf3573497d9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const T2 &amp;at2, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1ga5b2aa57d37e1b52c7f4a3a879fd40dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const T2 &amp;at2)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1ga3b2995676eace30ef57c873bff34aa18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const T2 &amp;at2, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation2_1ga6604e04e2c8f8feba81132711c3e628a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const T2 &amp;at2, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const T2 &amp;</type>
          <declname>at2</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawConstrainedTriangulation2_1gaa8ce0931d83c1728d860109afa4b2661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const CT2 &amp;ct2, InDomainPMap ipm)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const CT2 &amp;</type>
          <declname>ct2</declname>
        </param>
        <param>
          <type>InDomainPMap</type>
          <declname>ipm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawConstrainedTriangulation2_1gab61ec32dbb931e808ac62d324531c838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const CT2 &amp;ct2, InDomainPMap ipm, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const CT2 &amp;</type>
          <declname>ct2</declname>
        </param>
        <param>
          <type>InDomainPMap</type>
          <declname>ipm</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="3192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1gaa741f5463c01ec92df3d7dd61f569997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_mesh</definition>
        <argsstring>(Surface_mesh&lt; K &gt; &amp;sm, const std::string &amp;filename)</argsstring>
        <name>read_mesh</name>
        <qualifiedname>CGAL::read_mesh</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; K &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga34db73ce1c76b70e97bcef45daf63468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_mesh</definition>
        <argsstring>(const Surface_mesh&lt; K &gt; &amp;mesh, const std::string &amp;filename)</argsstring>
        <name>write_mesh</name>
        <qualifiedname>CGAL::write_mesh</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; K &gt; &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="859" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga074846b1612ec952cc6ad57975564cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::read_3mf</definition>
        <argsstring>(const std::string &amp;filename, std::vector&lt; CGAL::Surface_mesh&lt; Point &gt; &gt; &amp;output)</argsstring>
        <name>read_3mf</name>
        <qualifiedname>CGAL::read_3mf</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">CGAL::Surface_mesh</ref>&lt; Point &gt; &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1gaffda0544539042a79d5fe015be459d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; Point &gt; &amp;sm, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="873" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1gaa8f94deb76d33c72c6ba63b58d99a60b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(Surface_mesh&lt; Point &gt; &amp;sm, const std::string &amp;filename)</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="880" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga46f0f9274f5d334e9178f00ce1924b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; Point &gt; &amp;sm, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_off</name>
        <qualifiedname>CGAL::write_off</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga2da725b7362c02a75e73b30c6abffec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(const Surface_mesh&lt; Point &gt; &amp;sm, const std::string &amp;filename)</argsstring>
        <name>write_off</name>
        <qualifiedname>CGAL::write_off</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="894" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga9555a1a7a4f9eb3ed770295fbea8e7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_ply</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm, std::string &amp;comments)</argsstring>
        <name>read_ply</name>
        <qualifiedname>CGAL::read_ply</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="901" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga60b24a48452f9f67050e4b7701841666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_ply</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm, const std::string &amp;comments)</argsstring>
        <name>write_ply</name>
        <qualifiedname>CGAL::write_ply</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a90ce11a4b0470569450447cded345217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_ply</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm)</argsstring>
        <name>write_ply</name>
        <qualifiedname>CGAL::write_ply</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="915" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1gaa741f5463c01ec92df3d7dd61f569997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_mesh</definition>
        <argsstring>(Surface_mesh&lt; K &gt; &amp;sm, const std::string &amp;filename)</argsstring>
        <name>read_mesh</name>
        <qualifiedname>CGAL::read_mesh</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; K &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1094" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga34db73ce1c76b70e97bcef45daf63468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_mesh</definition>
        <argsstring>(const Surface_mesh&lt; K &gt; &amp;mesh, const std::string &amp;filename)</argsstring>
        <name>write_mesh</name>
        <qualifiedname>CGAL::write_mesh</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; K &gt; &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga074846b1612ec952cc6ad57975564cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::read_3mf</definition>
        <argsstring>(const std::string &amp;filename, std::vector&lt; CGAL::Surface_mesh&lt; Point &gt; &gt; &amp;output)</argsstring>
        <name>read_3mf</name>
        <qualifiedname>CGAL::read_3mf</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">CGAL::Surface_mesh</ref>&lt; Point &gt; &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1gaffda0544539042a79d5fe015be459d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; Point &gt; &amp;sm, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1gaa8f94deb76d33c72c6ba63b58d99a60b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(Surface_mesh&lt; Point &gt; &amp;sm, const std::string &amp;filename)</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga46f0f9274f5d334e9178f00ce1924b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; Point &gt; &amp;sm, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_off</name>
        <qualifiedname>CGAL::write_off</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga2da725b7362c02a75e73b30c6abffec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(const Surface_mesh&lt; Point &gt; &amp;sm, const std::string &amp;filename)</argsstring>
        <name>write_off</name>
        <qualifiedname>CGAL::write_off</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; Point &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga9555a1a7a4f9eb3ed770295fbea8e7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::read_ply</definition>
        <argsstring>(std::istream &amp;is, Surface_mesh&lt; P &gt; &amp;sm, std::string &amp;comments)</argsstring>
        <name>read_ply</name>
        <qualifiedname>CGAL::read_ply</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshIOFuncDeprecated_1ga60b24a48452f9f67050e4b7701841666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::write_ply</definition>
        <argsstring>(std::ostream &amp;os, const Surface_mesh&lt; P &gt; &amp;sm, const std::string &amp;comments)</argsstring>
        <name>write_ply</name>
        <qualifiedname>CGAL::write_ply</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Surface__mesh" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">Surface_mesh</ref>&lt; P &gt; &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshSegmentationRef_1ga455877137a269a61c1b980609adeac78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; CGAL::sdf_values</definition>
        <argsstring>(const TriangleMesh &amp;triangle_mesh, SDFPropertyMap sdf_values_map, double cone_angle=2.0/3.0 *CGAL_PI, std::size_t number_of_rays=25, bool postprocess=true, PointPropertyMap ppmap=PointPropertyMap(), GeomTraits traits=GeomTraits())</argsstring>
        <name>sdf_values</name>
        <qualifiedname>CGAL::sdf_values</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>triangle_mesh</declname>
        </param>
        <param>
          <type>SDFPropertyMap</type>
          <declname>sdf_values_map</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cone_angle</declname>
          <defval>2.0/3.0 *CGAL_PI</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>number_of_rays</declname>
          <defval>25</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>postprocess</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>PointPropertyMap</type>
          <declname>ppmap</declname>
          <defval>PointPropertyMap()</defval>
        </param>
        <param>
          <type>GeomTraits</type>
          <declname>traits</declname>
          <defval>GeomTraits()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshSegmentationRef_1gaf57d1108ef1f1a6315e5e406006a4a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; CGAL::sdf_values_postprocessing</definition>
        <argsstring>(const TriangleMesh &amp;triangle_mesh, SDFPropertyMap sdf_values_map)</argsstring>
        <name>sdf_values_postprocessing</name>
        <qualifiedname>CGAL::sdf_values_postprocessing</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>triangle_mesh</declname>
        </param>
        <param>
          <type>SDFPropertyMap</type>
          <declname>sdf_values_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshSegmentationRef_1ga8a429857a748922d0e8460619db69764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::segmentation_from_sdf_values</definition>
        <argsstring>(const TriangleMesh &amp;triangle_mesh, SDFPropertyMap sdf_values_map, SegmentPropertyMap segment_ids, std::size_t number_of_clusters=5, double smoothing_lambda=0.26, bool output_cluster_ids=false, PointPropertyMap ppmap=PointPropertyMap(), GeomTraits traits=GeomTraits())</argsstring>
        <name>segmentation_from_sdf_values</name>
        <qualifiedname>CGAL::segmentation_from_sdf_values</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>triangle_mesh</declname>
        </param>
        <param>
          <type>SDFPropertyMap</type>
          <declname>sdf_values_map</declname>
        </param>
        <param>
          <type>SegmentPropertyMap</type>
          <declname>segment_ids</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>number_of_clusters</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>smoothing_lambda</declname>
          <defval>0.26</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>output_cluster_ids</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>PointPropertyMap</type>
          <declname>ppmap</declname>
          <defval>PointPropertyMap()</defval>
        </param>
        <param>
          <type>GeomTraits</type>
          <declname>traits</declname>
          <defval>GeomTraits()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMeshSegmentationRef_1gabc864f396347009726b858434c6d8659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::segmentation_via_sdf_values</definition>
        <argsstring>(const TriangleMesh &amp;triangle_mesh, SegmentPropertyMap segment_ids, double cone_angle=2.0/3.0 *CGAL_PI, std::size_t number_of_rays=25, std::size_t number_of_clusters=5, double smoothing_lambda=0.26, bool output_cluster_ids=false, PointPropertyMap ppmap=PointPropertyMap(), GeomTraits traits=GeomTraits())</argsstring>
        <name>segmentation_via_sdf_values</name>
        <qualifiedname>CGAL::segmentation_via_sdf_values</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>triangle_mesh</declname>
        </param>
        <param>
          <type>SegmentPropertyMap</type>
          <declname>segment_ids</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cone_angle</declname>
          <defval>2.0/3.0 *CGAL_PI</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>number_of_rays</declname>
          <defval>25</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>number_of_clusters</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>double</type>
          <declname>smoothing_lambda</declname>
          <defval>0.26</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>output_cluster_ids</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>PointPropertyMap</type>
          <declname>ppmap</declname>
          <defval>PointPropertyMap()</defval>
        </param>
        <param>
          <type>GeomTraits</type>
          <declname>traits</declname>
          <defval>GeomTraits()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga16f8a084348ef67f5eb40c9814027c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::type</type>
        <definition>Pointer_property_map&lt; T &gt;::type CGAL::make_property_map</definition>
        <argsstring>(T *pointer)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>T *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="782" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1gad8eb46280f9084db1a94afb1092fdf93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::type</type>
        <definition>Pointer_property_map&lt; T &gt;::type CGAL::make_property_map</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga3675362a4ad242d34a4dc1d82ce83166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::const_type</type>
        <definition>Pointer_property_map&lt; T &gt;::const_type CGAL::make_property_map</definition>
        <argsstring>(const T *pointer)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga7f1e06594bb1876219f0e75b9e927f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::const_type</type>
        <definition>Pointer_property_map&lt; T &gt;::const_type CGAL::make_property_map</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="803" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1gaf7a2974fc5912a38644ff304d161ff7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Boolean__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Boolean_property_map</ref>&lt; Set &gt;</type>
        <definition>Boolean_property_map&lt; Set &gt; CGAL::make_boolean_property_map</definition>
        <argsstring>(Set &amp;set_)</argsstring>
        <name>make_boolean_property_map</name>
        <qualifiedname>CGAL::make_boolean_property_map</qualifiedname>
        <param>
          <type>Set &amp;</type>
          <declname>set_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga43a4531a4fc62a3a4bc458413df32f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Cartesian__converter__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Cartesian_converter_property_map</ref>&lt; GeomObject, Vpm &gt;</type>
        <definition>Cartesian_converter_property_map&lt; GeomObject, Vpm &gt; CGAL::make_cartesian_converter_property_map</definition>
        <argsstring>(Vpm vpm)</argsstring>
        <name>make_cartesian_converter_property_map</name>
        <qualifiedname>CGAL::make_cartesian_converter_property_map</qualifiedname>
        <param>
          <type>Vpm</type>
          <declname>vpm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga16f8a084348ef67f5eb40c9814027c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::type</type>
        <definition>Pointer_property_map&lt; T &gt;::type CGAL::make_property_map</definition>
        <argsstring>(T *pointer)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>T *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="841" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1gad8eb46280f9084db1a94afb1092fdf93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::type</type>
        <definition>Pointer_property_map&lt; T &gt;::type CGAL::make_property_map</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="848" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga3675362a4ad242d34a4dc1d82ce83166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::const_type</type>
        <definition>Pointer_property_map&lt; T &gt;::const_type CGAL::make_property_map</definition>
        <argsstring>(const T *pointer)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>const T *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="855" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga7f1e06594bb1876219f0e75b9e927f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Pointer__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Pointer_property_map</ref>&lt; T &gt;::const_type</type>
        <definition>Pointer_property_map&lt; T &gt;::const_type CGAL::make_property_map</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>make_property_map</name>
        <qualifiedname>CGAL::make_property_map</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="862" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1gaf7a2974fc5912a38644ff304d161ff7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Boolean__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Boolean_property_map</ref>&lt; Set &gt;</type>
        <definition>Boolean_property_map&lt; Set &gt; CGAL::make_boolean_property_map</definition>
        <argsstring>(Set &amp;set_)</argsstring>
        <name>make_boolean_property_map</name>
        <qualifiedname>CGAL::make_boolean_property_map</qualifiedname>
        <param>
          <type>Set &amp;</type>
          <declname>set_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPropertyMapRef_1ga43a4531a4fc62a3a4bc458413df32f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCGAL_1_1Cartesian__converter__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">Cartesian_converter_property_map</ref>&lt; GeomObject, Vpm &gt;</type>
        <definition>Cartesian_converter_property_map&lt; GeomObject, Vpm &gt; CGAL::make_cartesian_converter_property_map</definition>
        <argsstring>(Vpm vpm)</argsstring>
        <name>make_cartesian_converter_property_map</name>
        <qualifiedname>CGAL::make_cartesian_converter_property_map</qualifiedname>
        <param>
          <type>Vpm</type>
          <declname>vpm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="876" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1ga2e47f1a21e5b35af36c7ef665c66e848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::convert_nef_polyhedron_to_polygon_mesh</definition>
        <argsstring>(const Nef_polyhedron &amp;nef, Polygon_mesh &amp;pm, bool triangulate_all_faces=false)</argsstring>
        <name>convert_nef_polyhedron_to_polygon_mesh</name>
        <qualifiedname>CGAL::convert_nef_polyhedron_to_polygon_mesh</qualifiedname>
        <param>
          <type>const Nef_polyhedron &amp;</type>
          <declname>nef</declname>
        </param>
        <param>
          <type>Polygon_mesh &amp;</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>triangulate_all_faces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1ga28a9eb4da0cd6153f0c16f7f9eaf6665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::convert_nef_polyhedron_to_polygon_soup</definition>
        <argsstring>(const Nef_polyhedron &amp;nef, PointRange &amp;points, PolygonRange &amp;polygons, bool triangulate_all_faces=false)</argsstring>
        <name>convert_nef_polyhedron_to_polygon_soup</name>
        <qualifiedname>CGAL::convert_nef_polyhedron_to_polygon_soup</qualifiedname>
        <param>
          <type>const Nef_polyhedron &amp;</type>
          <declname>nef</declname>
        </param>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>polygons</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>triangulate_all_faces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1ga388ae4e24548eeebc4c6a18132025825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const NP3 &amp;np3, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1gaa725304fbbb238131d901f514c2426a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const NP3 &amp;np3)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1ga0f7f1d95c312e85658472b80f50af160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const NP3 &amp;np3, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1ga3652a7cfbeadeb51cfd857dcb9e4c8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const NP3 &amp;np3, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1gaf35d6aeb83886b4c84068aad3a2e66d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, CGAL::Nef_polyhedron_3&lt; Traits &gt; &amp;N)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">CGAL::Nef_polyhedron_3</ref>&lt; Traits &gt; &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1ga1a2f710b0de656d242dfecc2cfbdb28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, CGAL::Nef_polyhedron_3&lt; Traits &gt; &amp;N)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">CGAL::Nef_polyhedron_3</ref>&lt; Traits &gt; &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1gaeb31b20d2824c500c4a12e284667dfce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::OFF_to_nef_3</definition>
        <argsstring>(std::istream &amp;in, Nef_polyhedron_3 &amp;N)</argsstring>
        <name>OFF_to_nef_3</name>
        <qualifiedname>CGAL::OFF_to_nef_3</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">Nef_polyhedron_3</ref> &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1586" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1ga2e47f1a21e5b35af36c7ef665c66e848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::convert_nef_polyhedron_to_polygon_mesh</definition>
        <argsstring>(const Nef_polyhedron &amp;nef, Polygon_mesh &amp;pm, bool triangulate_all_faces=false)</argsstring>
        <name>convert_nef_polyhedron_to_polygon_mesh</name>
        <qualifiedname>CGAL::convert_nef_polyhedron_to_polygon_mesh</qualifiedname>
        <param>
          <type>const Nef_polyhedron &amp;</type>
          <declname>nef</declname>
        </param>
        <param>
          <type>Polygon_mesh &amp;</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>triangulate_all_faces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1616" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1ga28a9eb4da0cd6153f0c16f7f9eaf6665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::convert_nef_polyhedron_to_polygon_soup</definition>
        <argsstring>(const Nef_polyhedron &amp;nef, PointRange &amp;points, PolygonRange &amp;polygons, bool triangulate_all_faces=false)</argsstring>
        <name>convert_nef_polyhedron_to_polygon_soup</name>
        <qualifiedname>CGAL::convert_nef_polyhedron_to_polygon_soup</qualifiedname>
        <param>
          <type>const Nef_polyhedron &amp;</type>
          <declname>nef</declname>
        </param>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>polygons</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>triangulate_all_faces</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1gaf35d6aeb83886b4c84068aad3a2e66d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, CGAL::Nef_polyhedron_3&lt; Traits &gt; &amp;N)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">CGAL::Nef_polyhedron_3</ref>&lt; Traits &gt; &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1ga1a2f710b0de656d242dfecc2cfbdb28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, CGAL::Nef_polyhedron_3&lt; Traits &gt; &amp;N)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">CGAL::Nef_polyhedron_3</ref>&lt; Traits &gt; &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1637" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgNef3IOFunctions_1gaeb31b20d2824c500c4a12e284667dfce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::OFF_to_nef_3</definition>
        <argsstring>(std::istream &amp;in, Nef_polyhedron_3 &amp;N)</argsstring>
        <name>OFF_to_nef_3</name>
        <qualifiedname>CGAL::OFF_to_nef_3</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Nef__polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Nef_3.tag">Nef_polyhedron_3</ref> &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1ga388ae4e24548eeebc4c6a18132025825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const NP3 &amp;np3, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1gaa725304fbbb238131d901f514c2426a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const NP3 &amp;np3)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1ga0f7f1d95c312e85658472b80f50af160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const NP3 &amp;np3, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawNef3_1ga3652a7cfbeadeb51cfd857dcb9e4c8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const NP3 &amp;np3, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const NP3 &amp;</type>
          <declname>np3</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1gaf1430ae5975d4186d8a9a873959826fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const LCC &amp;lcc, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1fc5d07bdb1b32251fe1def6e80d1821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const LCC &amp;lcc)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1967f19a555c5385cc33992d52e8b65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const LCC &amp;lcc, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1d761a370cf0b53d0e1fd212592ed699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const LCC &amp;lcc, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1ga2e694849af5a899bb8545ff7ea8ab2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_plane_graph</definition>
        <argsstring>(LCC &amp;lcc, std::istream &amp;ais)</argsstring>
        <name>import_from_plane_graph</name>
        <qualifiedname>CGAL::import_from_plane_graph</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>std::istream &amp;</type>
          <declname>ais</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexOperations_1gae7e4a92836175268e7b31a99d3a73cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Vector</type>
        <definition>LCC::Vector CGAL::compute_normal_of_cell_0</definition>
        <argsstring>(const LCC &amp;lcc, typename LCC::Dart_const_descriptor d)</argsstring>
        <name>compute_normal_of_cell_0</name>
        <qualifiedname>CGAL::compute_normal_of_cell_0</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>typename LCC::Dart_const_descriptor</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="634" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexOperations_1gae78fd3d505c8ea4c80980c13b7391cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Vector</type>
        <definition>LCC::Vector CGAL::compute_normal_of_cell_2</definition>
        <argsstring>(const LCC &amp;lcc, typename LCC::Dart_const_descriptor d)</argsstring>
        <name>compute_normal_of_cell_2</name>
        <qualifiedname>CGAL::compute_normal_of_cell_2</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>typename LCC::Dart_const_descriptor</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1gab7a03aa3f1e7e1ff6d15a31e34abb432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_polyhedron_3</definition>
        <argsstring>(LCC &amp;lcc, const Polyhedron &amp;apoly)</argsstring>
        <name>import_from_polyhedron_3</name>
        <qualifiedname>CGAL::import_from_polyhedron_3</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>apoly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1ga75b167e60b6cf3adbe8026256bee47ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_triangulation_3</definition>
        <argsstring>(LCC &amp;lcc, const Triangulation_ &amp;atr)</argsstring>
        <name>import_from_triangulation_3</name>
        <qualifiedname>CGAL::import_from_triangulation_3</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const Triangulation_ &amp;</type>
          <declname>atr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1ga2e694849af5a899bb8545ff7ea8ab2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_plane_graph</definition>
        <argsstring>(LCC &amp;lcc, std::istream &amp;ais)</argsstring>
        <name>import_from_plane_graph</name>
        <qualifiedname>CGAL::import_from_plane_graph</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>std::istream &amp;</type>
          <declname>ais</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1gab7a03aa3f1e7e1ff6d15a31e34abb432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_polyhedron_3</definition>
        <argsstring>(LCC &amp;lcc, const Polyhedron &amp;apoly)</argsstring>
        <name>import_from_polyhedron_3</name>
        <qualifiedname>CGAL::import_from_polyhedron_3</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>apoly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1ga75b167e60b6cf3adbe8026256bee47ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_triangulation_3</definition>
        <argsstring>(LCC &amp;lcc, const Triangulation_ &amp;atr)</argsstring>
        <name>import_from_triangulation_3</name>
        <qualifiedname>CGAL::import_from_triangulation_3</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const Triangulation_ &amp;</type>
          <declname>atr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexOperations_1gae7e4a92836175268e7b31a99d3a73cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Vector</type>
        <definition>LCC::Vector CGAL::compute_normal_of_cell_0</definition>
        <argsstring>(const LCC &amp;lcc, typename LCC::Dart_const_descriptor d)</argsstring>
        <name>compute_normal_of_cell_0</name>
        <qualifiedname>CGAL::compute_normal_of_cell_0</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>typename LCC::Dart_const_descriptor</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexOperations_1gae78fd3d505c8ea4c80980c13b7391cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LCC::Vector</type>
        <definition>LCC::Vector CGAL::compute_normal_of_cell_2</definition>
        <argsstring>(const LCC &amp;lcc, typename LCC::Dart_const_descriptor d)</argsstring>
        <name>compute_normal_of_cell_2</name>
        <qualifiedname>CGAL::compute_normal_of_cell_2</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>typename LCC::Dart_const_descriptor</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="731" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1gaf1430ae5975d4186d8a9a873959826fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const LCC &amp;lcc, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="743" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1fc5d07bdb1b32251fe1def6e80d1821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const LCC &amp;lcc)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="750" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1967f19a555c5385cc33992d52e8b65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const LCC &amp;lcc, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1d761a370cf0b53d0e1fd212592ed699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const LCC &amp;lcc, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BGLGraphExternalIndices_1ga0660924a1aa87e8be5cccbc261e931c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HalfedgeDS_with_id</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_halfedgeds_items_id</definition>
        <argsstring>(Polyhedron_with_id &amp;P)</argsstring>
        <name>set_halfedgeds_items_id</name>
        <qualifiedname>CGAL::set_halfedgeds_items_id</qualifiedname>
        <param>
          <type>Polyhedron_with_id &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>Given a <computeroutput><ref refid="classCGAL_1_1Polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyhedron.tag">CGAL::Polyhedron_3</ref></computeroutput>, for each simplex type (vertex, halfedge, facet) associates an index from 0 to the number of simplices minus 1 to each simplex of <computeroutput>hds</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>All simplex types must provide an <computeroutput>id()</computeroutput> method return a reference to a variable that can be assigned a <computeroutput>std::size_t</computeroutput>. An item class suited for this use is <computeroutput><ref refid="classCGAL_1_1Polyhedron__items__with__id__3" kindref="compound">CGAL::Polyhedron_items_with_id_3</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedron_items_with_id_3.h" line="76" column="6" declfile="CGAL/Polyhedron_items_with_id_3.h" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__BGLGraphExternalIndices_1ga1a22cf8bdde32fcdf1a4a78966eed630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Triangulation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_triangulation_ids</definition>
        <argsstring>(Triangulation &amp;tr)</argsstring>
        <name>set_triangulation_ids</name>
        <qualifiedname>CGAL::set_triangulation_ids</qualifiedname>
        <param>
          <type>Triangulation &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>This function initializes vertex, edge, and face indices of the triangulation <computeroutput>tr</computeroutput> and must be called prior to using <computeroutput>tr</computeroutput> as a BGL graph in an algorithm that requires vertex, halfedge, edge, or face indices. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Triangulation</parametername>
</parameternamelist>
<parameterdescription>
<para>a 2D triangulation of CGAL, whose combinatorial data structure has been initialized with the vertex and face classes <computeroutput><ref refid="classCGAL_1_1Triangulation__vertex__base__with__id__2" kindref="compound">Triangulation_vertex_base_with_id_2</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Triangulation__face__base__with__id__2" kindref="compound">Triangulation_face_base_with_id_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>the <ref refid="packages_1PkgTriangulation2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">2D Triangulations</ref> package </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_face_base_with_id_2.h" line="59" column="6" declfile="CGAL/Triangulation_face_base_with_id_2.h" declline="59" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga3675a081c929f2eeee6d61b1b566a75d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Halfedge__around__source__iterator" kindref="compound">Halfedge_around_source_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Halfedge_around_source_iterator&lt; Graph &gt; &gt; CGAL::halfedges_around_source</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>halfedges_around_source</name>
        <qualifiedname>CGAL::halfedges_around_source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all halfedges with vertex <computeroutput>source(h,g)</computeroutput> as source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="772" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="772" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga73b7bf276082f2ffc8e77ad9dab5bfc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Halfedge__around__source__iterator" kindref="compound">Halfedge_around_source_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Halfedge_around_source_iterator&lt; Graph &gt; &gt; CGAL::halfedges_around_source</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor v, const Graph &amp;g)</argsstring>
        <name>halfedges_around_source</name>
        <qualifiedname>CGAL::halfedges_around_source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all halfedges with vertex <computeroutput>v</computeroutput> as source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="784" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="784" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga295060a50555471eab7f24addbb9bb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Halfedge__around__target__iterator" kindref="compound">Halfedge_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Halfedge_around_target_iterator&lt; Graph &gt; &gt; CGAL::halfedges_around_target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>halfedges_around_target</name>
        <qualifiedname>CGAL::halfedges_around_target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all halfedges with vertex <computeroutput>target(h,g)</computeroutput> as target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="795" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="795" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga0d31ecafc7eb5c2454d6ed7034e60c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Halfedge__around__target__iterator" kindref="compound">Halfedge_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Halfedge_around_target_iterator&lt; Graph &gt; &gt; CGAL::halfedges_around_target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor v, const Graph &amp;g)</argsstring>
        <name>halfedges_around_target</name>
        <qualifiedname>CGAL::halfedges_around_target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all halfedges with vertex <computeroutput>v</computeroutput> as target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="807" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="807" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1gaf157993cd9a52470eb96b12bcc0b67ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Halfedge__around__face__iterator" kindref="compound">Halfedge_around_face_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Halfedge_around_face_iterator&lt; Graph &gt; &gt; CGAL::halfedges_around_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>halfedges_around_face</name>
        <qualifiedname>CGAL::halfedges_around_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all halfedges incident to the same face or border as <computeroutput>h</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="818" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="818" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga551e06d4affaea4bbca26e0bc6caaa80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Face__around__target__iterator" kindref="compound">Face_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Face_around_target_iterator&lt; Graph &gt; &gt; CGAL::faces_around_target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>faces_around_target</name>
        <qualifiedname>CGAL::faces_around_target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all faces around vertex <computeroutput>target(h,g)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="922" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="922" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga090f3972124e2903cb6eb75f8030b057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Face__around__face__iterator" kindref="compound">Face_around_face_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Face_around_face_iterator&lt; Graph &gt; &gt; CGAL::faces_around_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>faces_around_face</name>
        <qualifiedname>CGAL::faces_around_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all edge-adjacent faces to the same face <computeroutput>face(h,g)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="934" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="934" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a9b01adf0906bdc1ba42752ce5fed0c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; Opposite_edge_around_face_iterator&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Opposite_edge_around_face_iterator&lt; Graph &gt; &gt; CGAL::opposite_edges_around_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>opposite_edges_around_face</name>
        <qualifiedname>CGAL::opposite_edges_around_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1074" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1074" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa0fbda551f36564465fb6de9fd84ad3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; Edge_around_face_iterator&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Edge_around_face_iterator&lt; Graph &gt; &gt; CGAL::edges_around_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>edges_around_face</name>
        <qualifiedname>CGAL::edges_around_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1109" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1109" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a02c8d629d402387935149cee8ec48216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Vertex__around__target__iterator" kindref="compound">Vertex_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Vertex_around_target_iterator&lt; Graph &gt; &gt; CGAL::adjacent_vertices</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>adjacent_vertices</name>
        <qualifiedname>CGAL::adjacent_vertices</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1223" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1223" bodyend="1227"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a892b5167773da432483b4882b965d2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Vertex__around__target__iterator" kindref="compound">Vertex_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Vertex_around_target_iterator&lt; Graph &gt; &gt; CGAL::adjacent_vertices</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor v, const Graph &amp;g)</argsstring>
        <name>adjacent_vertices</name>
        <qualifiedname>CGAL::adjacent_vertices</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1232" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1232" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1ga477bd0c7c02e1d9096d18a61e38a3b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Vertex__around__target__iterator" kindref="compound">Vertex_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Vertex_around_target_iterator&lt; Graph &gt; &gt; CGAL::vertices_around_target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>vertices_around_target</name>
        <qualifiedname>CGAL::vertices_around_target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all vertices adjacent to the vertex <computeroutput>target(h,g)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1244" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1244" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a3c2d5a33c1c6f0b0f06ecd0030d1b545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Vertex__around__target__iterator" kindref="compound">Vertex_around_target_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Vertex_around_target_iterator&lt; Graph &gt; &gt; CGAL::vertices_around_target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor v, const Graph &amp;g)</argsstring>
        <name>vertices_around_target</name>
        <qualifiedname>CGAL::vertices_around_target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1252" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1252" bodyend="1256"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIterators_1gabbe82508d78c7c81bf76c2f0dcfd5c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Vertex__around__face__iterator" kindref="compound">Vertex_around_face_iterator</ref>&lt; Graph &gt; &gt;</type>
        <definition>Iterator_range&lt; Vertex_around_face_iterator&lt; Graph &gt; &gt; CGAL::vertices_around_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g)</argsstring>
        <name>vertices_around_face</name>
        <qualifiedname>CGAL::vertices_around_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns an iterator range over all vertices adjacent to the face <computeroutput>face(h,g)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/iterator.h" line="1263" column="1" bodyfile="CGAL/boost/graph/iterator.h" bodystart="1263" bodyend="1267"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gad93e429ad24efeaddeb836c437e719ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_border</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_border</name>
        <qualifiedname>CGAL::is_border</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the halfedge <computeroutput>hd</computeroutput> is on a border. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="33" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga63695419c5ce7f68949ff2fb4f42d733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_border_edge</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_border_edge</name>
        <qualifiedname>CGAL::is_border_edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the halfedge <computeroutput>hd</computeroutput> or the opposite halfedge is on a border. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="43" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga2888ba1a3d27fda8f16d03e9ab4738df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_border</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::edge_descriptor ed, const FaceGraph &amp;g)</argsstring>
        <name>is_border</name>
        <qualifiedname>CGAL::is_border</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::edge_descriptor</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the edge <computeroutput>e</computeroutput> is on a border. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="53" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga66ab82934ac7d8286bbe7e532a03e734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor &gt;</type>
        <definition>std::optional&lt; typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor &gt; CGAL::is_border</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::vertex_descriptor vd, const FaceGraph &amp;g)</argsstring>
        <name>is_border</name>
        <qualifiedname>CGAL::is_border</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::vertex_descriptor</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns a halfedge which is on a border and whose target vertex is <computeroutput>vd</computeroutput>, if such a halfedge exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="64" column="1" bodyfile="CGAL/boost/graph/helpers.h" bodystart="64" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad7389bbb66b20a4278ebadcfe00c99c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_vertex_descriptor</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor v, const Graph &amp;g, const bool verb=false)</argsstring>
        <name>is_valid_vertex_descriptor</name>
        <qualifiedname>CGAL::is_valid_vertex_descriptor</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="276" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="276" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a7a8bf0fb87bae2bf046ab6c503cd2156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_halfedge_descriptor</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor h, const Graph &amp;g, const bool verb=false)</argsstring>
        <name>is_valid_halfedge_descriptor</name>
        <qualifiedname>CGAL::is_valid_halfedge_descriptor</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="284" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="284" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2bfb4fc582d8285086bcdc5efa851aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_edge_descriptor</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::edge_descriptor e, const Graph &amp;g, const bool verb=false)</argsstring>
        <name>is_valid_edge_descriptor</name>
        <qualifiedname>CGAL::is_valid_edge_descriptor</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="292" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a7d26e091954b2933e63b2ff85c1e58a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_face_descriptor</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::face_descriptor f, const Graph &amp;g, const bool verb=false)</argsstring>
        <name>is_valid_face_descriptor</name>
        <qualifiedname>CGAL::is_valid_face_descriptor</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="300" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="300" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga23e1d67dfacb0c3b659da32854f9026b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_halfedge_graph</definition>
        <argsstring>(const Graph &amp;g, bool verb=false)</argsstring>
        <name>is_valid_halfedge_graph</name>
        <qualifiedname>CGAL::is_valid_halfedge_graph</qualifiedname>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>checks the integrity of the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The graph <computeroutput>g</computeroutput> is valid if it follows the rules of the <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput> concept and all of its associations are reciprocal (for example, <computeroutput>prev(next(h, g), g)</computeroutput> must be <computeroutput>h</computeroutput>, and <computeroutput>next(prev(h, g), g)</computeroutput> must be <computeroutput>h</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verb</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, the details of the check will be written in the standard output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>g</computeroutput> is valid, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="324" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="324" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gacac247cab38c34fc569ca8679b5939e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_face_graph</definition>
        <argsstring>(const FaceGraph &amp;g, bool verb=false)</argsstring>
        <name>is_valid_face_graph</name>
        <qualifiedname>CGAL::is_valid_face_graph</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>checks the integrity of the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The graph <computeroutput>g</computeroutput> is a valid face graph if it is a valid halfedge graph, and if it follows the rules of the <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> concept and all of its associations are reciprocal (for example, <computeroutput>face(halfedge(f,g),g)</computeroutput> must be <computeroutput>f</computeroutput>).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verb</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, the details of the check will be written in the standard output</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>g</computeroutput> is valid, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga23e1d67dfacb0c3b659da32854f9026b" kindref="member">is_valid_halfedge_graph()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="438" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="438" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gafa3bc673513c8750321bf062afd5e6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Mesh</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid_polygon_mesh</definition>
        <argsstring>(const Mesh &amp;g, bool verb=false)</argsstring>
        <name>is_valid_polygon_mesh</name>
        <qualifiedname>CGAL::is_valid_polygon_mesh</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verb</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>checks the integrity of the mesh <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The mesh <computeroutput>g</computeroutput> is a valid polygon mesh if it is a valid face graph and if it follows the rules defined in <ref refid="index_1PMPDef" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon_mesh_processing.tag">PolygonMesh</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the <computeroutput>Mesh</computeroutput> to test </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verb</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, the details of the check will be written in the standard output</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> and <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound">HalfedgeListGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>g</computeroutput> is valid, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gacac247cab38c34fc569ca8679b5939e9" kindref="member">is_valid_face_graph()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga23e1d67dfacb0c3b659da32854f9026b" kindref="member">is_valid_halfedge_graph()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="530" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="530" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gae04c8044cf1eee6a84baa5b79ab99fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_closed</definition>
        <argsstring>(const FaceGraph &amp;g)</argsstring>
        <name>is_closed</name>
        <qualifiedname>CGAL::is_closed</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if there are no border edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="571" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="571" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gadcd0f7717f833115030b951974837b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_bivalent</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_bivalent</name>
        <qualifiedname>CGAL::is_bivalent</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the target of <computeroutput>hd</computeroutput> has exactly two incident edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="587" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="587" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga7216689879e9ee4d0143054f2bbaf09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_bivalent_mesh</definition>
        <argsstring>(const FaceGraph &amp;g)</argsstring>
        <name>is_bivalent_mesh</name>
        <qualifiedname>CGAL::is_bivalent_mesh</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if all vertices have exactly two incident edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="599" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="599" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga6c1acedeffc27f41b2959b517f843ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_trivalent</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_trivalent</name>
        <qualifiedname>CGAL::is_trivalent</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the target of <computeroutput>hd</computeroutput> has exactly three incident edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="618" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="618" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga1472e0db19a5232f6ce14287c30eb521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_trivalent_mesh</definition>
        <argsstring>(const FaceGraph &amp;g)</argsstring>
        <name>is_trivalent_mesh</name>
        <qualifiedname>CGAL::is_trivalent_mesh</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if all vertices have exactly three incident edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="631" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="631" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga0aeb3a6e6504032a485af3390dcec998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_isolated_triangle</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_isolated_triangle</name>
        <qualifiedname>CGAL::is_isolated_triangle</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the connected component denoted by <computeroutput>hd</computeroutput> is a triangle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>g</computeroutput> must be valid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="651" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="651" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gaa552f609541c09f6d38ce92c19cd60c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_triangle</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_triangle</name>
        <qualifiedname>CGAL::is_triangle</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the face denoted by <computeroutput>hd</computeroutput> is a triangle, that is it has three incident halfedges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="672" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="672" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga11883d231eec1b58f37efe4acedd9588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_triangle_mesh</definition>
        <argsstring>(const FaceGraph &amp;g)</argsstring>
        <name>is_triangle_mesh</name>
        <qualifiedname>CGAL::is_triangle_mesh</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if all faces are triangles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="685" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="685" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga36ed1d044899aaeb9dc0e745b5a3d2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_isolated_quad</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_isolated_quad</name>
        <qualifiedname>CGAL::is_isolated_quad</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the connected component denoted by <computeroutput>hd</computeroutput> is a quadrilateral. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="701" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="701" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gaefeddba3015a9723bfcacb904709bad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_quad</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_quad</name>
        <qualifiedname>CGAL::is_quad</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the face denoted by <computeroutput>hd</computeroutput> is a quad, that is it has four incident halfedges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="723" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="723" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga092f99b04e99633136d6534e7bb76b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_quad_mesh</definition>
        <argsstring>(const FaceGraph &amp;g)</argsstring>
        <name>is_quad_mesh</name>
        <qualifiedname>CGAL::is_quad_mesh</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if all faces are quadrilaterals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="736" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="736" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gab737aaa204a6bdb8d18b00403f9d35d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_tetrahedron</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_tetrahedron</name>
        <qualifiedname>CGAL::is_tetrahedron</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the connected component denoted by <computeroutput>hd</computeroutput> is a tetrahedron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="753" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="753" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga6c6e5a51ae08d56082eb4b0667d673d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_hexahedron</definition>
        <argsstring>(typename boost::graph_traits&lt; FaceGraph &gt;::halfedge_descriptor hd, const FaceGraph &amp;g)</argsstring>
        <name>is_hexahedron</name>
        <qualifiedname>CGAL::is_hexahedron</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &gt;::halfedge_descriptor</type>
          <declname>hd</declname>
        </param>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the connected component denoted by <computeroutput>hd</computeroutput> is a hexahedron. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="799" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="799" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gac7e199820c95ed1fc6ab536750749358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::remove_all_elements</definition>
        <argsstring>(FaceGraph &amp;g)</argsstring>
        <name>remove_all_elements</name>
        <qualifiedname>CGAL::remove_all_elements</qualifiedname>
        <param>
          <type><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>removes all vertices, faces and halfedges from a graph. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls <ref refid="classMutableHalfedgeGraph" kindref="compound"><computeroutput>remove_vertex()</computeroutput></ref>, <ref refid="classMutableHalfedgeGraph" kindref="compound"><computeroutput>remove_edge()</computeroutput></ref>, and <ref refid="classMutableFaceGraph" kindref="compound"><computeroutput>remove_face()</computeroutput></ref>, for each vertex, edge, and face.</para>
<para>Note that some graphs have a specialized version of this function to improve complexity.</para>
<para><simplesect kind="warning"><para>This function does not perform anything more than what is advertised above. It is up to the user to e.g. clean garbage or remove internal property maps (if relevant, and desired).</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classMutableHalfedgeGraph" kindref="compound">MutableHalfedgeGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound">MutableFaceGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph whose elements will be removed</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member">CGAL::clear()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="966" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="966" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::clear</definition>
        <argsstring>(FaceGraph &amp;g)</argsstring>
        <name>clear</name>
        <qualifiedname>CGAL::clear</qualifiedname>
        <param>
          <type><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>removes all vertices, faces and halfedges from a graph. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls <ref refid="classMutableHalfedgeGraph" kindref="compound"><computeroutput>remove_vertex()</computeroutput></ref>, <ref refid="classMutableHalfedgeGraph" kindref="compound"><computeroutput>remove_edge()</computeroutput></ref>, and <ref refid="classMutableFaceGraph" kindref="compound"><computeroutput>remove_face()</computeroutput></ref>, for each vertex, edge, and face.</para>
<para>If the graph has a member function <computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member">clear()</ref></computeroutput>, it will be called instead.</para>
<para><simplesect kind="warning"><para>If it exists, the <computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member">clear()</ref></computeroutput> function of a graph might do more than simply remove elements. For example, <computeroutput><ref refid="classCGAL_1_1Surface__mesh_1a247d4ad3e6b106ae22e5306203812642" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">CGAL::Surface_mesh::clear()</ref></computeroutput> collects garbage and removes <emphasis>all</emphasis> property maps added by a call to <computeroutput><ref refid="classCGAL_1_1Surface__mesh_1aaff08db9680674e0a16803b77721a356" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh.tag">CGAL::Surface_mesh::add_property_map()</ref></computeroutput> for all simplex types.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classMutableHalfedgeGraph" kindref="compound">MutableHalfedgeGraph</ref></computeroutput> and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound">MutableFaceGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph to clear</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgBGLHelperFct_1gac7e199820c95ed1fc6ab536750749358" kindref="member">CGAL::remove_all_elements()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="1022" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="1022" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gab6e6f18e6de73b9f85e38d0b56145172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_empty</definition>
        <argsstring>(const FaceGraph &amp;g)</argsstring>
        <name>is_empty</name>
        <qualifiedname>CGAL::is_empty</qualifiedname>
        <param>
          <type>const <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>checks whether the graph is empty, by checking that it does not contain any vertex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph to test </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="1042" column="6" bodyfile="CGAL/boost/graph/helpers.h" bodystart="1042" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1gab5c1a0409ff3646eafff7876c22a5063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int CGAL::vertex_index_in_face</definition>
        <argsstring>(const typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor vd, const typename boost::graph_traits&lt; Graph &gt;::face_descriptor fd, const Graph &amp;g)</argsstring>
        <name>vertex_index_in_face</name>
        <qualifiedname>CGAL::vertex_index_in_face</qualifiedname>
        <param>
          <type>const typename boost::graph_traits&lt; Graph &gt;::vertex_descriptor</type>
          <declname>vd</declname>
        </param>
        <param>
          <type>const typename boost::graph_traits&lt; Graph &gt;::face_descriptor</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns the number of calls to <computeroutput>next()</computeroutput> one has to apply to the halfedge <computeroutput>hd</computeroutput> for <computeroutput>source(hd, mesh) == vd</computeroutput> to be true, starting from <computeroutput>hd = halfedge(fd, tm)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vd</parametername>
</parameternamelist>
<parameterdescription>
<para>a vertex of <computeroutput>g</computeroutput> whose index is sought </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>a face of <computeroutput>g</computeroutput> in which the index of <computeroutput>vd</computeroutput> is sought </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>a mesh of type <computeroutput>Graph</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>vd</computeroutput> is a vertex of <computeroutput>fd</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="1060" column="5" bodyfile="CGAL/boost/graph/helpers.h" bodystart="1060" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga65e7cd124577e1c470043a117fb397b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int CGAL::halfedge_index_in_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor he, const Graph &amp;g)</argsstring>
        <name>halfedge_index_in_face</name>
        <qualifiedname>CGAL::halfedge_index_in_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
          <declname>he</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>returns the number of calls to <computeroutput>next(hd, tm)</computeroutput> one has to apply to <computeroutput>hd</computeroutput> for <computeroutput>hd == he</computeroutput> to be true, starting from <computeroutput>hd = halfedge(face(he, tm), tm)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>he</parametername>
</parameternamelist>
<parameterdescription>
<para>a halfedge of <computeroutput>g</computeroutput> whose index in <computeroutput>face(he, tm)</computeroutput> is sought </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>an object of type <computeroutput>Graph</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/helpers.h" line="1102" column="5" bodyfile="CGAL/boost/graph/helpers.h" bodystart="1102" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga6dcbca9acf39adeb33c108a72e6ec8f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_triangle</definition>
        <argsstring>(const P &amp;p0, const P &amp;p1, const P &amp;p2, Graph &amp;g)</argsstring>
        <name>make_triangle</name>
        <qualifiedname>CGAL::make_triangle</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>creates an isolated triangle with its vertices initialized to <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput> and <computeroutput>p2</computeroutput>, and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the non-border halfedge that has the target vertex associated with <computeroutput>p0</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="130" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="130" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1gaede06151e15cc96f95dd8ef1f226bea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_quad</definition>
        <argsstring>(const P &amp;p0, const P &amp;p1, const P &amp;p2, const P &amp;p3, Graph &amp;g)</argsstring>
        <name>make_quad</name>
        <qualifiedname>CGAL::make_quad</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>creates an isolated quad with its vertices initialized to <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput>, and <computeroutput>p3</computeroutput>, and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the non-border halfedge that has the target vertex associated with <computeroutput>p0</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="260" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="260" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga12fa3e202c24740dade5764e3ea80c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_hexahedron</definition>
        <argsstring>(const P &amp;p0, const P &amp;p1, const P &amp;p2, const P &amp;p3, const P &amp;p4, const P &amp;p5, const P &amp;p6, const P &amp;p7, Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>make_hexahedron</name>
        <qualifiedname>CGAL::make_hexahedron</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p5</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p6</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p7</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>creates an isolated hexahedron with its vertices initialized to <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput>, ... , and <computeroutput>p7</computeroutput>, and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><image type="html" name="hexahedron.png"></image>
 <image type="latex" name="hexahedron.png"></image>
 <simplesect kind="return"><para>the halfedge that has the target vertex associated with <computeroutput>p0</computeroutput>, in the face with the vertices with the points <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput>, and <computeroutput>p3</computeroutput> (or <computeroutput>p0</computeroutput>, <computeroutput>p2</computeroutput> and <computeroutput>p3</computeroutput> when <computeroutput>do_not_triangulate</computeroutput> is set to <computeroutput>false</computeroutput>).</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below <variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>do_not_triangulate_faces</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a Boolean used to specify whether the hexadron&apos;s faces should be triangulated or not. The default value is <computeroutput>true</computeroutput>, and faces are not triangulated. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>true </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="307" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="307" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga92872c1eb0251f9c4d6d7019b0586797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IsoCuboid</type>
          </param>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_hexahedron</definition>
        <argsstring>(const IsoCuboid &amp;c, Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>make_hexahedron</name>
        <qualifiedname>CGAL::make_hexahedron</qualifiedname>
        <param>
          <type>const IsoCuboid &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>creates an isolated hexahedron equivalent to <computeroutput>c</computeroutput>, and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the halfedge that has the target vertex associated with <computeroutput>c.min()</computeroutput>, aligned with x-axis, in the bottom face of the cuboid.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IsoCuboid</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>IsoCuboid_3</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound">MutableFaceGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the iso-cuboid describing the geometry of the hexahedron </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph to which the hexahedron will be appended </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below <variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>do_not_triangulate_faces</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a Boolean used to specify whether the hexadron&apos;s faces should be triangulated or not. The default value is <computeroutput>true</computeroutput>, and faces are not triangulated. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>true </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of a geometric traits class model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="415" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="415" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga92116dc89384a0b8d565e2411f1c173a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_tetrahedron</definition>
        <argsstring>(const P &amp;p0, const P &amp;p1, const P &amp;p2, const P &amp;p3, Graph &amp;g)</argsstring>
        <name>make_tetrahedron</name>
        <qualifiedname>CGAL::make_tetrahedron</qualifiedname>
        <param>
          <type>const P &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>creates an isolated tetrahedron with its vertices initialized to <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput>, <computeroutput>p2</computeroutput>, and <computeroutput>p3</computeroutput>, and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><image type="html" name="tetrahedron.png"></image>
 <image type="latex" name="tetrahedron.png"></image>
 <simplesect kind="return"><para>the halfedge that has the target vertex associated with <computeroutput>p0</computeroutput>, in the face with the vertices with the points <computeroutput>p0</computeroutput>, <computeroutput>p1</computeroutput>, and <computeroutput>p2</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="440" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="440" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1gad2ffc4e4967671c9ebe31b7810788ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_regular_prism</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertices_size_type nb_vertices, Graph &amp;g, const P &amp;base_center=P(0, 0, 0), typename CGAL::Kernel_traits&lt; P &gt;::Kernel::FT height=1.0, typename CGAL::Kernel_traits&lt; P &gt;::Kernel::FT radius=1.0, bool is_closed=true)</argsstring>
        <name>make_regular_prism</name>
        <qualifiedname>CGAL::make_regular_prism</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
          <declname>nb_vertices</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>base_center</declname>
          <defval>P(0, 0, 0)</defval>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; P &gt;::Kernel::FT</type>
          <declname>height</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; P &gt;::Kernel::FT</type>
          <declname>radius</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>is_closed</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>creates a triangulated regular prism, outward oriented, having <computeroutput>nb_vertices</computeroutput> vertices in each of its bases and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>center</computeroutput> is (0, 0, 0), then the first point of the prism is (<computeroutput>radius</computeroutput>, <computeroutput>height</computeroutput>, 0)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nb_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of vertices per base. It must be greater than or equal to 3. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph in which the regular prism will be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base_center</parametername>
</parameternamelist>
<parameterdescription>
<para>the center of the circle in which the lower base is inscribed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance between the two bases. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>the radius of the circles in which the bases are inscribed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_closed</parametername>
</parameternamelist>
<parameterdescription>
<para>determines if the bases must be created or not. If <computeroutput>is_closed</computeroutput> is <computeroutput>true</computeroutput>, <computeroutput>center</computeroutput> is a vertex.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the halfedge that has the target vertex associated with the first point in the first face. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="546" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="546" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga29d336aae02fb8e7b33b30e3e50f8856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_pyramid</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertices_size_type nb_vertices, Graph &amp;g, const P &amp;base_center=P(0, 0, 0), typename CGAL::Kernel_traits&lt; P &gt;::Kernel::FT height=1.0, typename CGAL::Kernel_traits&lt; P &gt;::Kernel::FT radius=1.0, bool is_closed=true)</argsstring>
        <name>make_pyramid</name>
        <qualifiedname>CGAL::make_pyramid</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
          <declname>nb_vertices</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>base_center</declname>
          <defval>P(0, 0, 0)</defval>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; P &gt;::Kernel::FT</type>
          <declname>height</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; P &gt;::Kernel::FT</type>
          <declname>radius</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>is_closed</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>creates a pyramid, outward oriented, having <computeroutput>nb_vertices</computeroutput> vertices in its base and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>center</computeroutput> is <computeroutput>(0, 0, 0)</computeroutput>, then the first point of the base is <computeroutput>(radius, 0, 0)</computeroutput></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nb_vertices</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of vertices in the base. It must be greater than or equal to 3. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph in which the pyramid will be created </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base_center</parametername>
</parameternamelist>
<parameterdescription>
<para>the center of the circle in which the base is inscribed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the distance between the base and the apex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>the radius of the circle in which the base is inscribed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_closed</parametername>
</parameternamelist>
<parameterdescription>
<para>determines if the base must be created or not. If <computeroutput>is_closed</computeroutput> is <computeroutput>true</computeroutput>, <computeroutput>center</computeroutput> is a vertex.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the halfedge that has the target vertex associated with the apex point in the first face. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="645" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="645" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga03d4d6b1b7cb4ef6c460487240e6bb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_icosahedron</definition>
        <argsstring>(Graph &amp;g, const P &amp;center=P(0, 0, 0), typename CGAL::Kernel_traits&lt; P &gt;::Kernel::FT radius=1)</argsstring>
        <name>make_icosahedron</name>
        <qualifiedname>CGAL::make_icosahedron</qualifiedname>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const P &amp;</type>
          <declname>center</declname>
          <defval>P(0, 0, 0)</defval>
        </param>
        <param>
          <type>typename <ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt; P &gt;::Kernel::FT</type>
          <declname>radius</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>creates an icosahedron, outward oriented, centered in <computeroutput>center</computeroutput> and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph in which the icosahedron will be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>the center of the sphere in which the icosahedron is inscribed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius</parametername>
</parameternamelist>
<parameterdescription>
<para>the radius of the sphere in which the icosahedron is inscribed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the halfedge that has the target vertex associated with the first point in the first face. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="729" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="729" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLGeneratorFct_1ga021bca7693efee1d05492ee52583793a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class CoordinateFunctor</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_grid</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertices_size_type i, typename boost::graph_traits&lt; Graph &gt;::vertices_size_type j, Graph &amp;g, const CoordinateFunctor &amp;calculator, bool triangulated=false)</argsstring>
        <name>make_grid</name>
        <qualifiedname>CGAL::make_grid</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
          <declname>i</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
          <declname>j</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const CoordinateFunctor &amp;</type>
          <declname>calculator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>triangulated</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>creates a row major ordered grid with <computeroutput>i</computeroutput> cells along the width and <computeroutput>j</computeroutput> cells along the height and adds it to the graph <computeroutput>g</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>An internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>Graph</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of cells along the width. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of cells along the height. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph in which the grid will be created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>calculator</parametername>
</parameternamelist>
<parameterdescription>
<para>the functor that will assign coordinates to the grid vertices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>triangulated</parametername>
</parameternamelist>
<parameterdescription>
<para>decides if a cell is composed of one quad or two triangles. If <computeroutput>triangulated</computeroutput> is <computeroutput>true</computeroutput>, the diagonal of each cell is oriented from (0,0) to (1,1) in the cell coordinates.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CoordinateFunctor</parametername>
</parameternamelist>
<parameterdescription>
<para>a function object providing: <computeroutput>Point_3 operator()(size_type I, size_type J)</computeroutput>, with <computeroutput>Point_3</computeroutput> being the value_type of the internal property_map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> and outputs an object of type <computeroutput>boost::property_traits&lt;boost::property_map&lt;Graph,<ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref>&gt;::type&gt;::value_type</computeroutput>. It will be called with arguments (<computeroutput>w</computeroutput>, <computeroutput>h</computeroutput>), with <computeroutput>w</computeroutput> in [0..<computeroutput>i</computeroutput>] and <computeroutput>h</computeroutput> in [0..<computeroutput>j</computeroutput>].<linebreak/>
 Default: a point with positive integer coordinates (<computeroutput>w</computeroutput>, <computeroutput>h</computeroutput>, 0), with <computeroutput>w</computeroutput> in [0..<computeroutput>i</computeroutput>] and <computeroutput>h</computeroutput> in [0..<computeroutput>j</computeroutput>]</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the non-border non-diagonal halfedge that has the target vertex associated with the first point of the grid (default is (0,0,0) ). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="837" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="837" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa9031cd05317cf1dc091a98008ccd071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedge_descriptor CGAL::make_grid</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph &gt;::vertices_size_type w, typename boost::graph_traits&lt; Graph &gt;::vertices_size_type h, Graph &amp;g, bool triangulated=false)</argsstring>
        <name>make_grid</name>
        <qualifiedname>CGAL::make_grid</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
          <declname>w</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
          <declname>h</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>triangulated</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/generators.h" line="894" column="1" bodyfile="CGAL/boost/graph/generators.h" bodystart="894" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga569fe26f889e5e4eed27746ac921651b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FaceRange</type>
          </param>
          <param>
            <type>class <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
          <param>
            <type>class IsFaceSelectedPMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::expand_face_selection</definition>
        <argsstring>(const FaceRange &amp;selection, FaceGraph &amp;fg, unsigned int k, IsFaceSelectedPMap is_selected, OutputIterator out)</argsstring>
        <name>expand_face_selection</name>
        <qualifiedname>CGAL::expand_face_selection</qualifiedname>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>IsFaceSelectedPMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>augments a selection with faces of <computeroutput>fg</computeroutput> that are adjacent to a face in <computeroutput>selection</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This process is applied <computeroutput>k</computeroutput> times considering all faces added in the previous steps. Two faces are said to be adjacent if they share a vertex or an edge. Each new face added in the selection is added exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of face descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsFaceSelectedPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;<ref refid="classFaceGraph" kindref="compound">FaceGraph</ref>&gt;::face_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting face descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial selection of faces that will be expanded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the selected faces. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times the expansion procedure is iteratively applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if a face is part of the selection. It is updated by the function to accommodate new faces added to the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>new faces added to the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="309" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="309" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1gadeff090826a857c141251ce28bbe1f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FaceRange</type>
          </param>
          <param>
            <type>class <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
          <param>
            <type>class IsFaceSelectedPMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::reduce_face_selection</definition>
        <argsstring>(const FaceRange &amp;selection, FaceGraph &amp;fg, unsigned int k, IsFaceSelectedPMap is_selected, OutputIterator out)</argsstring>
        <name>reduce_face_selection</name>
        <qualifiedname>CGAL::reduce_face_selection</qualifiedname>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>IsFaceSelectedPMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>diminishes a selection of faces from faces adjacent to a non-selected face. </para>
        </briefdescription>
        <detaileddescription>
<para>This process is applied <computeroutput>k</computeroutput> times considering all faces removed in the previous steps. Two faces are said to be adjacent if they share a vertex or an edge. Each face removed from the selection is added exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of face descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsFaceSelectedPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;<ref refid="classFaceGraph" kindref="compound">FaceGraph</ref>&gt;::face_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting face descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial selection of faces that will be expanded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the selected faces. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times the reduction procedure is iteratively applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if a face is part of the selection. It is updated by the function to accommodate faces removed from the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>faces removed from the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>update is-selected attribute and output iterator</para>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="378" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="378" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1gab638686b319f3b902c199d4b79df84e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename IsSelectedMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::regularize_face_selection_borders</definition>
        <argsstring>(TriangleMesh &amp;mesh, IsSelectedMap is_selected, double weight, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>regularize_face_selection_borders</name>
        <qualifiedname>CGAL::regularize_face_selection_borders</qualifiedname>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>IsSelectedMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type>double</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>regularizes a selection in order to minimize the length of the border of the selection. </para>
        </briefdescription>
        <detaileddescription>
<para>The alpha expansion algorithm is used (see <computeroutput><ref refid="group__PkgBGLPartition_1gac0ae8f45718c0eb9b70ebddd5008515b" kindref="member">CGAL::alpha_expansion_graphcut()</ref></computeroutput>) using the length of the edge between two faces as the edge cost and the initial selected/unselected property of a face as the face cost.</para>
<para>If <computeroutput>prevent_unselection</computeroutput> is set to <computeroutput>true</computeroutput>, the cost of unselecting a face is set to infinity, which forces the regularization to only select new faces and ensures that the regularization keeps all selected faces.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsSelectedMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of named parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh containing the selected faces.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if a face is part of the selection. It is updated by the function to accommodate faces added or removed from the selection.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the tradeoff between data fidelity and regularity, ranging from 0 (no regularization at all, selection is left unaltered) to 1 (maximum regularization, usually selects or unselects everything so that the length of the border of the selection is 0)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>tm</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, tm)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>face_index_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating to each face of <computeroutput>tm</computeroutput> a unique index between <computeroutput>0</computeroutput> and <computeroutput>num_faces(tm) - 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>std::size_t</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>an automatically indexed internal map </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>prevent_unselection</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>Boolean used to indicate if selection can be only expanded or if it can also be shrunk. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>bool</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>The geometric traits class must be compatible with the vertex point type. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of a geometric traits class </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a CGAL <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> deduced from the point type, using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>The geometric traits class must be compatible with the vertex point type. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="503" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="503" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga8c925a29d68613319c31772123755ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HalfedgeRange</type>
          </param>
          <param>
            <type>class <ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::select_incident_faces</definition>
        <argsstring>(const HalfedgeRange &amp;hedges, FaceGraph &amp;fg, OutputIterator out)</argsstring>
        <name>select_incident_faces</name>
        <qualifiedname>CGAL::select_incident_faces</qualifiedname>
        <param>
          <type>const HalfedgeRange &amp;</type>
          <declname>hedges</declname>
        </param>
        <param>
          <type><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Discovers and puts in <computeroutput>out</computeroutput> all faces incident to the target vertex of a halfedge in <computeroutput>hedges</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Faces are put exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>HalfedgeRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of halfedge descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting face descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hedges</parametername>
</parameternamelist>
<parameterdescription>
<para>the range a halfedge descriptors consider during the face selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the input halfedges. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>faces added to the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="714" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="714" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga6f6dd8a92c358a06592b9d481bf7bd74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EdgeRange</type>
          </param>
          <param>
            <type>class <ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></type>
          </param>
          <param>
            <type>class IsEdgeSelectedPMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::expand_edge_selection</definition>
        <argsstring>(const EdgeRange &amp;selection, HalfedgeGraph &amp;fg, unsigned int k, IsEdgeSelectedPMap is_selected, OutputIterator out)</argsstring>
        <name>expand_edge_selection</name>
        <qualifiedname>CGAL::expand_edge_selection</qualifiedname>
        <param>
          <type>const EdgeRange &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>IsEdgeSelectedPMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>augments a selection with edges of <computeroutput>fg</computeroutput> that are adjacent to an edge in <computeroutput>selection</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This process is applied <computeroutput>k</computeroutput> times considering all edges added in the previous steps. Two edges are said to be adjacent if they are incident to the same face or vertex. Each new edge added in the selection is added exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>EdgeRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of edge descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsEdgeSelectedPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;<ref refid="classFaceGraph" kindref="compound">FaceGraph</ref>&gt;::edge_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting edge descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial selection of edges that will be expanded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the selected edges. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times the expansion procedure is iteratively applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if an edge is part of the selection. It is updated by the function to accommodate new edges added to the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>new edges added to the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="763" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="763" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga0fed4caaddf3fef51b37a64b42ba5fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class EdgeRange</type>
          </param>
          <param>
            <type>class <ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></type>
          </param>
          <param>
            <type>class IsEdgeSelectedPMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::reduce_edge_selection</definition>
        <argsstring>(const EdgeRange &amp;selection, HalfedgeGraph &amp;fg, unsigned int k, IsEdgeSelectedPMap is_selected, OutputIterator out)</argsstring>
        <name>reduce_edge_selection</name>
        <qualifiedname>CGAL::reduce_edge_selection</qualifiedname>
        <param>
          <type>const EdgeRange &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>IsEdgeSelectedPMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>diminishes a selection of edges from edges adjacent to a non-selected edge. </para>
        </briefdescription>
        <detaileddescription>
<para>This process is applied <computeroutput>k</computeroutput> times considering all edges removed in the previous steps. Two edges are said to be adjacent if they are incident to the same face or vertex. Each edge removed from the selection is added exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>EdgeRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of edge descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsEdgeSelectedPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;<ref refid="classFaceGraph" kindref="compound">FaceGraph</ref>&gt;::edge_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting edge descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial selection of edges that will be reduced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the selected edges. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times the reduction procedure is iteratively applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if an edge is part of the selection. It is updated by the function to accommodate edges removed from the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>edges removed from the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="829" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="829" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga49398c78507f5664b740439a92ca746b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VertexRange</type>
          </param>
          <param>
            <type>class <ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></type>
          </param>
          <param>
            <type>class IsVertexSelectedPMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::expand_vertex_selection</definition>
        <argsstring>(const VertexRange &amp;selection, HalfedgeGraph &amp;fg, unsigned int k, IsVertexSelectedPMap is_selected, OutputIterator out)</argsstring>
        <name>expand_vertex_selection</name>
        <qualifiedname>CGAL::expand_vertex_selection</qualifiedname>
        <param>
          <type>const VertexRange &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>IsVertexSelectedPMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>augments a selection with vertices of <computeroutput>fg</computeroutput> that are adjacent to a vertex in <computeroutput>selection</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This process is applied <computeroutput>k</computeroutput> times considering all vertices added in the previous steps. Two vertices are said to be adjacent if they are part of the same face. Each new vertex added in the selection is added exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VertexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of vertex descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsVertexSelectedPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;<ref refid="classFaceGraph" kindref="compound">FaceGraph</ref>&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting vertex descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial selection of vertices that will be expanded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the selected vertices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times the expansion procedure is iteratively applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if a vertex is part of the selection. It is updated by the function to accommodate new vertices added to the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>new vertices added to the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="916" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="916" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga569127b818c04bfca7a5a5bca5b0bc24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class VertexRange</type>
          </param>
          <param>
            <type>class <ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref></type>
          </param>
          <param>
            <type>class IsVertexSelectedPMap</type>
          </param>
          <param>
            <type>class <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::reduce_vertex_selection</definition>
        <argsstring>(const VertexRange &amp;selection, HalfedgeGraph &amp;fg, unsigned int k, IsVertexSelectedPMap is_selected, OutputIterator out)</argsstring>
        <name>reduce_vertex_selection</name>
        <qualifiedname>CGAL::reduce_vertex_selection</qualifiedname>
        <param>
          <type>const VertexRange &amp;</type>
          <declname>selection</declname>
        </param>
        <param>
          <type><ref refid="classHalfedgeGraph" kindref="compound">HalfedgeGraph</ref> &amp;</type>
          <declname>fg</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>IsVertexSelectedPMap</type>
          <declname>is_selected</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>diminishes a selection of vertices from vertices adjacent to a non-selected vertex. </para>
        </briefdescription>
        <detaileddescription>
<para>This process is applied <computeroutput>k</computeroutput> times considering all vertices removed in the previous steps. Two vertices are said to be adjacent if they are part of the same face. Each vertex removed from the selection is added exactly once in <computeroutput>out</computeroutput>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VertexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of vertex descriptors, model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsVertexSelectedPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;<ref refid="classFaceGraph" kindref="compound">FaceGraph</ref>&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator accepting vertex descriptors. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>selection</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial selection of vertices that will be reduced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fg</parametername>
</parameternamelist>
<parameterdescription>
<para>the graph containing the selected vertices. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of times the reduction procedure is iteratively applied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if a vertex is part of the selection. It is updated by the function to accommodate vertices removed from the selection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>vertices removed from the selection are added exactly once in <computeroutput>out</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="970" column="1" bodyfile="CGAL/boost/graph/selection.h" bodystart="970" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLSelectionFct_1ga6f8d338df28c24bbf93677f24f7bcbbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class FaceRange</type>
          </param>
          <param>
            <type>class IsSelectedMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::expand_face_selection_for_removal</definition>
        <argsstring>(const FaceRange &amp;faces_to_be_deleted, TriangleMesh &amp;tm, IsSelectedMap is_selected)</argsstring>
        <name>expand_face_selection_for_removal</name>
        <qualifiedname>CGAL::expand_face_selection_for_removal</qualifiedname>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>faces_to_be_deleted</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>IsSelectedMap</type>
          <declname>is_selected</declname>
        </param>
        <briefdescription>
<para>Expands a selection of faces so that their removal does not create any non manifold vertex. </para>
        </briefdescription>
        <detaileddescription>
<para>For each vertex that is incident to a selected face, we turn around that vertex and check if there is exactly one set of consecutive selected faces. If not, additional faces around that vertex are selected to match this condition.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceGraph" kindref="compound">FaceGraph</ref></computeroutput> that is triangulated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput>, with an iterator type model of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsSelectedMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput> as key and <computeroutput>bool</computeroutput> as value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>faces_to_be_deleted</parametername>
</parameternamelist>
<parameterdescription>
<para>the range of selected faces. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_selected</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map containing the selected-or-not status of each face of <computeroutput>tm</computeroutput>. It must associate <computeroutput>true</computeroutput> to each face of <computeroutput>faces_to_be_deleted</computeroutput> and <computeroutput>false</computeroutput> to any other face of <computeroutput>tm</computeroutput>. It will be modified if the face selection must be expanded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="1032" column="6" bodyfile="CGAL/boost/graph/selection.h" bodystart="1032" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa7c14d5bd3f2d0cab46d865db477a3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolygonMesh</type>
          </param>
          <param>
            <type>class FaceRange</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int CGAL::euler_characteristic_of_selection</definition>
        <argsstring>(const FaceRange &amp;face_selection, PolygonMesh &amp;pm)</argsstring>
        <name>euler_characteristic_of_selection</name>
        <qualifiedname>CGAL::euler_characteristic_of_selection</qualifiedname>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>face_selection</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="1126" column="5" bodyfile="CGAL/boost/graph/selection.h" bodystart="1126" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af76f94db0c86f30c62eaa026ca17e76e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PolygonMesh</type>
          </param>
          <param>
            <type>class FaceRange</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_selection_a_topological_disk</definition>
        <argsstring>(const FaceRange &amp;face_selection, PolygonMesh &amp;pm)</argsstring>
        <name>is_selection_a_topological_disk</name>
        <qualifiedname>CGAL::is_selection_a_topological_disk</qualifiedname>
        <param>
          <type>const FaceRange &amp;</type>
          <declname>face_selection</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>pm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/selection.h" line="1149" column="6" bodyfile="CGAL/boost/graph/selection.h" bodystart="1149" bodyend="1153"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLPartition_1ga99ea6bf193f1194db5e523e713c82fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename Visitor</type>
          </param>
          <param>
            <type>typename IsTerminal</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::split_graph_into_polylines</definition>
        <argsstring>(const Graph &amp;graph, Visitor &amp;polyline_visitor, IsTerminal is_terminal)</argsstring>
        <name>split_graph_into_polylines</name>
        <qualifiedname>CGAL::split_graph_into_polylines</qualifiedname>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>Visitor &amp;</type>
          <declname>polyline_visitor</declname>
        </param>
        <param>
          <type>IsTerminal</type>
          <declname>is_terminal</declname>
        </param>
        <briefdescription>
<para>splits into polylines the graph <computeroutput>g</computeroutput> at vertices of degree greater than 2 and at vertices for which <computeroutput>is_terminal(v,graph)==true</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The polylines are reported using a visitor. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Graph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the <computeroutput>boost</computeroutput> concepts <computeroutput><ref refid="classVertexListGraph" kindref="compound">VertexListGraph</ref></computeroutput> and <computeroutput><ref refid="classEdgeListGraph" kindref="compound">EdgeListGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>a class that provides:<itemizedlist>
<listitem><para><computeroutput>void start_new_polyline()</computeroutput> called when starting the description of a polyline.</para>
</listitem><listitem><para><computeroutput>void add_node(typename boost::graph_traits&lt;Graph&gt;::vertex_descriptor v)</computeroutput> called for each vertex <computeroutput>v</computeroutput> of the polyline currently described. If the polyline is closed this function will be called twice for the first vertex of the cycle picked (once after calling <computeroutput>start_new_polyline()</computeroutput> and once before the call to <computeroutput>end_polyline()</computeroutput>.</para>
</listitem><listitem><para><computeroutput>void end_polyline()</computeroutput> called when the description of a polyline is finished. </para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IsTerminal</parametername>
</parameternamelist>
<parameterdescription>
<para>A functor providing <computeroutput>bool operator()(boost::graph_traits&lt;Graph&gt;::vertex_descriptor v, const Graph&amp; g) const</computeroutput> returning true if the vertex <computeroutput>v</computeroutput> of degree 2 is a polyline endpoint and false otherwise.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
An overload without <computeroutput>is_terminal</computeroutput> is provided if no vertices but those of degree different from 2 are polyline endpoints.</para>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Document the version with four parameters </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/split_graph_into_polylines.h" line="233" column="1" bodyfile="CGAL/boost/graph/split_graph_into_polylines.h" bodystart="233" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a9493a8d35af13cd3cfe99101887806ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename Visitor</type>
          </param>
          <param>
            <type>typename IsTerminal</type>
          </param>
          <param>
            <type>typename LessForVertexDescriptors</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::split_graph_into_polylines</definition>
        <argsstring>(const Graph &amp;graph, Visitor &amp;polyline_visitor, IsTerminal is_terminal, LessForVertexDescriptors less)</argsstring>
        <name>split_graph_into_polylines</name>
        <qualifiedname>CGAL::split_graph_into_polylines</qualifiedname>
        <param>
          <type>const Graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>Visitor &amp;</type>
          <declname>polyline_visitor</declname>
        </param>
        <param>
          <type>IsTerminal</type>
          <declname>is_terminal</declname>
        </param>
        <param>
          <type>LessForVertexDescriptors</type>
          <declname>less</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/split_graph_into_polylines.h" line="247" column="1" bodyfile="CGAL/boost/graph/split_graph_into_polylines.h" bodystart="247" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLHelperFct_1ga2682fb7d5f4ff4eb65607ae4118e31bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SourceMesh</type>
          </param>
          <param>
            <type>typename TargetMesh</type>
          </param>
          <param>
            <type>typename NamedParameters1</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
          <param>
            <type>typename NamedParameters2</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::copy_face_graph</definition>
        <argsstring>(const SourceMesh &amp;sm, TargetMesh &amp;tm, const NamedParameters1 &amp;np1=parameters::default_values(), const NamedParameters2 &amp;np2=parameters::default_values())</argsstring>
        <name>copy_face_graph</name>
        <qualifiedname>CGAL::copy_face_graph</qualifiedname>
        <param>
          <type>const SourceMesh &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>TargetMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters1 &amp;</type>
          <declname>np1</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <param>
          <type>const NamedParameters2 &amp;</type>
          <declname>np2</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>copies a source model of <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> into a target model of a <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>OutputIterators</computeroutput> can be provided to produce a mapping between source and target elements. The target graph is not cleared.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SourceMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput>. The descriptor types <computeroutput>boost::graph_traits&lt;SourceMesh&gt;::vertex_descriptor</computeroutput> and <computeroutput>boost::graph_traits&lt;SourceMesh&gt;::face_descriptor</computeroutput> must be models of <computeroutput><ref refid="classHashable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Hashable</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TargetMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classFaceListGraph" kindref="compound">FaceListGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters1</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters2</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
The types <computeroutput>sm_vertex_descriptor</computeroutput> and <computeroutput>sm_face_descriptor</computeroutput> must be models of the concept <computeroutput><ref refid="classHashable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Hashable</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>the source mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the target mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np1</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="7" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>sm</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;SourceMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, sm)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>SourceMesh</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_to_vertex_output_iterator</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> containing the pairs source-vertex, target-vertex. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;</computeroutput>boost::graph_traits&lt;SourceMesh&gt;::vertex_descriptor, <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::vertex_descriptor&gt;</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Emptyset__iterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Emptyset_iterator</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is given, then <computeroutput>vertex_to_vertex_map</computeroutput> cannot be used. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>halfedge_to_halfedge_output_iterator</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> containing the pairs source-halfedge, target-halfedge. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;</computeroutput>boost::graph_traits&lt;SourceMesh&gt;::halfedge_descriptor, <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::halfedge_descriptor&gt;</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Emptyset__iterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Emptyset_iterator</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is given, then <computeroutput>halfedge_to_halfedge_map</computeroutput> cannot be used. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>face_to_face_output_iterator</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> containing the pairs source-face, target-face. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> accepting <computeroutput>std::pair&lt;</computeroutput>boost::graph_traits&lt;SourceMesh&gt;::face_descriptor, <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::face_descriptor&gt;</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Emptyset__iterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Emptyset_iterator</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is given, then <computeroutput>face_to_face_map</computeroutput> cannot be used. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_to_vertex_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map storing for each vertex of a source mesh the corresponding vertex of another mesh </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;SourceMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::vertex_descriptor</computeroutput> as value type. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>unused </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>A typical use case is mapping the vertices from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2682fb7d5f4ff4eb65607ae4118e31bc" kindref="member">copy_face_graph()</ref></computeroutput> operation. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>halfedge_to_halfedge_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map storing for each halfedge of a source mesh the corresponding halfedge of another mesh </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;SourceMesh&gt;::halfedge_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::halfedge_descriptor</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>unused </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>A typical use case is mapping the halfedges from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2682fb7d5f4ff4eb65607ae4118e31bc" kindref="member">copy_face_graph()</ref></computeroutput>operation. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>face_to_face_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map storing for each face of a source mesh the corresponding face of another mesh </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;SourceMesh&gt;::face_descriptor</computeroutput> as key type and <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::face_descriptor</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>unused </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>A typical use case is mapping the faces from a source mesh to its copy&apos;s after a <computeroutput><ref refid="group__PkgBGLHelperFct_1ga2682fb7d5f4ff4eb65607ae4118e31bc" kindref="member">copy_face_graph()</ref></computeroutput> operation </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np2</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>tm</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TargetMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, tm)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>TargetMesh</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para>The points from <computeroutput>sm</computeroutput> to <computeroutput>tm</computeroutput> are converted using <computeroutput><ref refid="classCGAL_1_1Cartesian__converter" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Cartesian_converter</ref>&lt;SourceKernel, TargetKernel&gt;</computeroutput>. <computeroutput>SourceKernel</computeroutput> and <computeroutput>TargetKernel</computeroutput> are deduced using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> from the value types of the vertex point maps.</para>
<para>Other properties are not copied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/copy_face_graph.h" line="328" column="6" bodyfile="CGAL/boost/graph/copy_face_graph.h" bodystart="328" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1adf972240d47d85841ec3a1420386184d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator==</definition>
        <argsstring>(const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;lhs, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;rhs)</argsstring>
        <name>operator==</name>
        <qualifiedname>CGAL::operator==</qualifiedname>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="51" column="6" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a08b66cc9d2648ea29bd4003b94c706b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator!=</definition>
        <argsstring>(const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;lhs, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;rhs)</argsstring>
        <name>operator!=</name>
        <qualifiedname>CGAL::operator!=</qualifiedname>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="59" column="6" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab9225dbd01a33bdc9b992962e09bc81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator&lt;</definition>
        <argsstring>(const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;lhs, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>CGAL::operator&lt;</qualifiedname>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="66" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad8fae7d56d5adebff58defb99d24408a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator&gt;</definition>
        <argsstring>(const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;lhs, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>CGAL::operator&gt;</qualifiedname>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="74" column="6" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a61be159cc5897425b55e2af2532eae5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator&lt;=</definition>
        <argsstring>(const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;lhs, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>CGAL::operator&lt;=</qualifiedname>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="82" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a350dacdda83b86607db1ea05d1bae757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator&gt;=</definition>
        <argsstring>(const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;lhs, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>CGAL::operator&gt;=</qualifiedname>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="90" column="6" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="90" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a89540afc7ee9e958fc5bdcfd927828bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Gwdwg_descriptor&lt; Graph, Descriptor &gt; &amp;gd)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Gwdwg_descriptor&lt; Graph, <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &gt; &amp;</type>
          <declname>gd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="99" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab2159bf097c9a3cbfd24dc0bbcca8ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::in_same_graph</definition>
        <argsstring>(const T1 &amp;t1, const T2 &amp;t2)</argsstring>
        <name>in_same_graph</name>
        <qualifiedname>CGAL::in_same_graph</qualifiedname>
        <param>
          <type>const T1 &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="235" column="6" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2c005884b6a385abbfe87b54d345c571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::vertices_size_type CGAL::num_vertices</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>num_vertices</name>
        <qualifiedname>CGAL::num_vertices</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="242" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad9b55be37b464d8aafabad0011a67c87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::edges_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::edges_size_type CGAL::num_edges</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>num_edges</name>
        <qualifiedname>CGAL::num_edges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="249" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aca7a413dd8bee992b0864319e051e92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>degree</name>
        <qualifiedname>CGAL::degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="256" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="256" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a564cb95ac1dbcdc830b2b4a0cd2ad94b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::out_degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>out_degree</name>
        <qualifiedname>CGAL::out_degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="265" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="265" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a142c070076ec9eff0a9a76528b565116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::in_degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>in_degree</name>
        <qualifiedname>CGAL::in_degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="274" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="274" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ae3398ca69d242f97d62fe92a7331d851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor CGAL::source</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor e, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="283" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="283" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a7550c2b34f2c6dfe5ef0c239931553c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor CGAL::target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor e, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="293" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="293" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a38d381605e1d8811678910b2062abf13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor, bool &gt;</type>
        <definition>std::pair&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor, bool &gt; CGAL::edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor u, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>edge</name>
        <qualifiedname>CGAL::edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="303" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="303" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a7486252001cdd3635b8d85193b6dfe5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_iterator &gt; CGAL::vertices</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::vertices</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="320" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="320" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af636998e177919e549200783db5bc7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_iterator &gt; CGAL::edges</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>edges</name>
        <qualifiedname>CGAL::edges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="330" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="330" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a9fe86ad9e634aa45a8e6f380d02b5750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::out_edge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::out_edge_iterator &gt; CGAL::out_edges</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>out_edges</name>
        <qualifiedname>CGAL::out_edges</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="340" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="340" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad32e0d661a49b338a70b1b436545ddf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::in_edge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::in_edge_iterator &gt; CGAL::in_edges</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>in_edges</name>
        <qualifiedname>CGAL::in_edges</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="352" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="352" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a1852c463aa1f067bd394d57dab44abfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor CGAL::add_vertex</definition>
        <argsstring>(Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>add_vertex</name>
        <qualifiedname>CGAL::add_vertex</qualifiedname>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="368" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="368" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a24c7b8c582e3028ba3d0351b9ece5d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor CGAL::add_vertex</definition>
        <argsstring>(const typename boost::graph_traits&lt; Graph &gt;::vertex_property_type &amp;p, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>add_vertex</name>
        <qualifiedname>CGAL::add_vertex</qualifiedname>
        <param>
          <type>const typename boost::graph_traits&lt; Graph &gt;::vertex_property_type &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="377" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="377" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a630c3aae437bb79d71a5751940425491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::remove_vertex</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>remove_vertex</name>
        <qualifiedname>CGAL::remove_vertex</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="387" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="387" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1adf09c2ea7542b7fda75c45ead6b4a63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::reserve</definition>
        <argsstring>(Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertices_size_type nv, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edges_size_type ne, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::faces_size_type nf)</argsstring>
        <name>reserve</name>
        <qualifiedname>CGAL::reserve</qualifiedname>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertices_size_type</type>
          <declname>nv</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edges_size_type</type>
          <declname>ne</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::faces_size_type</type>
          <declname>nf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="396" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="396" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa7e823555d15f4a7c2ed865ec5088472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor CGAL::add_edge</definition>
        <argsstring>(Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>add_edge</name>
        <qualifiedname>CGAL::add_edge</qualifiedname>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="406" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="406" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1adaa8107fd557de2fa412df33c04bc82b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::remove_edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor e, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>remove_edge</name>
        <qualifiedname>CGAL::remove_edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="414" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="414" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab9fef11d91a4d21f79cafb6fe60d8f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h1, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>set_target</name>
        <qualifiedname>CGAL::set_target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="423" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="423" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af2493230fff5f00145982e642cdc4bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_next</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h1, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h2, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>set_next</name>
        <qualifiedname>CGAL::set_next</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h2</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="434" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="434" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0c5e1e70424627d9694d4e96c97a767e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor CGAL::add_face</definition>
        <argsstring>(Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>add_face</name>
        <qualifiedname>CGAL::add_face</qualifiedname>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="448" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="448" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a3df29e48589e492404c359f6c30bf2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor CGAL::add_face</definition>
        <argsstring>(InputIterator begin, InputIterator end, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>add_face</name>
        <qualifiedname>CGAL::add_face</qualifiedname>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="457" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="457" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a29c6220e6fb2b47deae6aab659211a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::remove_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor f, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>remove_face</name>
        <qualifiedname>CGAL::remove_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="475" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="475" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a8007d556384f4c5dee4253622f9d963d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor f, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>set_face</name>
        <qualifiedname>CGAL::set_face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="484" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="484" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2aa3afeb2f2cab740a481cd1b768b62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor f, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>set_halfedge</name>
        <qualifiedname>CGAL::set_halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="495" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="495" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a249dcbff29a3e17b1fb03b3dc00d6981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>set_halfedge</name>
        <qualifiedname>CGAL::set_halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="506" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="506" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a5c5ac2eaed9f812acb39f18cb34ebca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor CGAL::edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>edge</name>
        <qualifiedname>CGAL::edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="520" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="520" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0476b8bad8e6cebacddaad6d11d7e0e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::edge_descriptor e, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="530" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="530" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa2d2b889fc4c826bd020777794073291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="540" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="540" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a130538f96add9bf95a7b936edc2f5a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor, bool &gt;</type>
        <definition>std::pair&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor, bool &gt; CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor u, typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor v, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="551" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="551" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0952f00d28fe2ef4a1d979e62b80eb05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor CGAL::opposite</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="567" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="567" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac15e8a2c47991686fb7f3a1c7eff7d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor CGAL::source</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="577" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="577" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a707c3bdc99978c352a7f27546dc5f91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::vertex_descriptor CGAL::target</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="587" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="587" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a76c8a82eba0a41aee5dc5d3fc7e41a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor CGAL::next</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>next</name>
        <qualifiedname>CGAL::next</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="597" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a00c00f47a086d7bb974f9969b7cb62aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor CGAL::prev</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>prev</name>
        <qualifiedname>CGAL::prev</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="607" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="607" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ae6b22973b4eb77cb9aa725712c629b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_iterator &gt; CGAL::halfedges</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>halfedges</name>
        <qualifiedname>CGAL::halfedges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="621" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="621" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ae14d0b8a9ed204744c54ae602701ca67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::halfedges_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::halfedges_size_type CGAL::num_halfedges</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>num_halfedges</name>
        <qualifiedname>CGAL::num_halfedges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="632" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="632" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a60e8c38ec2cb72e717b80ac4e2eb00a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor CGAL::face</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor h, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>face</name>
        <qualifiedname>CGAL::face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="640" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="640" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a21e994da3b1a1c5bc0c51e819bff4f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_descriptor f, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="650" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="650" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a91b5609db906f0cba37379cbdea7b3f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &gt;::face_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Graph_with_descriptor_with_graph&lt; Graph &gt; &gt;::face_iterator &gt; CGAL::faces</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>faces</name>
        <qualifiedname>CGAL::faces</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="661" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="661" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a4f845e0207c878a7f04aaae55338a4b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::vertices_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::vertices_size_type CGAL::num_faces</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>num_faces</name>
        <qualifiedname>CGAL::num_faces</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="673" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="673" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac7091509066a44737110a4436557b38d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::is_valid</definition>
        <argsstring>(const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w, bool verbose=false)</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::is_valid</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="680" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="680" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a3b8b460b1cff67ea6c5f5779aaf2e635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Graph__with__descriptor__with__graph__property__map" kindref="compound">Graph_with_descriptor_with_graph_property_map</ref>&lt; Graph, typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;</type>
        <definition>Graph_with_descriptor_with_graph_property_map&lt; Graph, typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt; CGAL::get</definition>
        <argsstring>(PropertyTag ptag, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="786" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="786" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2f6f2f8377122d4f9905e96fa26e2194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
          <param>
            <type>class <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>boost::property_traits&lt; typenameboost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type</type>
        <definition>boost::property_traits&lt; typenameboost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type CGAL::get</definition>
        <argsstring>(PropertyTag ptag, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w, const Descriptor &amp;d)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="796" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="796" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ae68a0a24736b735a04b8bd5df66846c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
          <param>
            <type>class <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::put</definition>
        <argsstring>(PropertyTag ptag, const Graph_with_descriptor_with_graph&lt; Graph &gt; &amp;w, const Descriptor &amp;d, typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type &amp;v)</argsstring>
        <name>put</name>
        <qualifiedname>CGAL::put</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Graph__with__descriptor__with__graph" kindref="compound">Graph_with_descriptor_with_graph</ref>&lt; Graph &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const <ref refid="classDescriptor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Descriptor</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="805" column="1" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="805" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af35a8f81409a0f9dbe764912d0de5042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class D</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::hash_value</definition>
        <argsstring>(CGAL::Gwdwg_descriptor&lt; G, D &gt; d)</argsstring>
        <name>hash_value</name>
        <qualifiedname>CGAL::hash_value</qualifiedname>
        <param>
          <type>CGAL::Gwdwg_descriptor&lt; G, D &gt;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" line="814" column="13" bodyfile="CGAL/boost/graph/Graph_with_descriptor_with_graph.h" bodystart="814" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad7e4d2e6bdff33aec71612fff56462d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type</type>
        <definition>Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type CGAL::num_vertices</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>num_vertices</name>
        <qualifiedname>CGAL::num_vertices</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="773" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="773" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a4d56c43d6c7ca737dcfb28584e02f7c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type</type>
        <definition>Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type CGAL::num_edges</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>num_edges</name>
        <qualifiedname>CGAL::num_edges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="783" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="783" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a8a61e1bf90da1ee81b90c22b8ee4a934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>degree</name>
        <qualifiedname>CGAL::degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="793" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="793" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a019183ffbc6b8a0a1ee62c14196d8855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_descriptor f, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>degree</name>
        <qualifiedname>CGAL::degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="814" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="814" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa1d540518593eda396b42c5c01fbf2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::out_degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>out_degree</name>
        <qualifiedname>CGAL::out_degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="825" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="825" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af6676abe56f5b055995a39a5532a513e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; Graph &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Graph &gt;::degree_size_type CGAL::in_degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>in_degree</name>
        <qualifiedname>CGAL::in_degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="838" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="838" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1abbe127369e627bc3a2f1134b74a19c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor CGAL::source</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor e, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="851" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="851" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac0a9e7f6be107d3a58a15b70ae1f5376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor CGAL::target</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor e, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="863" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="863" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0926ce3f3e10b47632c3671a72f05200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor, bool &gt;</type>
        <definition>std::pair&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor, bool &gt; CGAL::edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor u, typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>edge</name>
        <qualifiedname>CGAL::edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="875" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="875" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a159d64ab02fb5eaeff044164a321d073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_iterator &gt; CGAL::vertices</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::vertices</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="891" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="891" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a90af1a80268d978107e176be9ac63340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_iterator &gt; CGAL::edges</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>edges</name>
        <qualifiedname>CGAL::edges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="908" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="908" bodyend="918"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a84e1c760893233cfc5ac8a45e9789637" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::out_edge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::out_edge_iterator &gt; CGAL::out_edges</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>out_edges</name>
        <qualifiedname>CGAL::out_edges</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="925" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="925" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0f1a0c6494ce408170a37d5248c188f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::in_edge_iterator &gt;</type>
        <definition>CGAL::Iterator_range&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::in_edge_iterator &gt; CGAL::in_edges</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>in_edges</name>
        <qualifiedname>CGAL::in_edges</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="944" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="944" bodyend="956"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1add9e7572a84ce8b17641f9b63042e30a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor CGAL::edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>edge</name>
        <qualifiedname>CGAL::edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="966" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="966" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1afadd88fc52654da8d4851669e9198e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor e, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="978" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="978" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ae776d3156676db1962c56871e790fd0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="990" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="990" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af8b0157640b7e05ab32459808d925267" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor, bool &gt;</type>
        <definition>std::pair&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor, bool &gt; CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor u, typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor v, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1011" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1011" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a487573b3a27c9b8c2fb70fc41c07ee33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor CGAL::opposite</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1026" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1026" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a5d5c1316ed99bfc8bd42305b497cda3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor CGAL::source</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1038" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1038" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a5d7a9493eca9519e7ecdfb087bde951c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::vertex_descriptor CGAL::target</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1050" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1050" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1acd7d00f233af9a815db7d63fd5f8814e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor CGAL::next</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>next</name>
        <qualifiedname>CGAL::next</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1062" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1062" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa707c638a807df63feea7135026ac1df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor CGAL::prev</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>prev</name>
        <qualifiedname>CGAL::prev</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1087" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1087" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aff4018876dbb2e215c9ae21ce3fccfea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_iterator &gt; CGAL::halfedges</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>halfedges</name>
        <qualifiedname>CGAL::halfedges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1116" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1116" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a00924525d2ac367ff50d7b4fc0236a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type</type>
        <definition>Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type CGAL::num_halfedges</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>num_halfedges</name>
        <qualifiedname>CGAL::num_halfedges</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1134" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1134" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1acd2b34b99a72ec3018e8026b85ea45ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_descriptor CGAL::face</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor h, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>face</name>
        <qualifiedname>CGAL::face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1145" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1145" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a419ae85879e2f24b01a7f61b2292214b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_descriptor f, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1162" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1162" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a95b780500b239ed3ac90063fca2b4fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &gt;::face_iterator &gt; CGAL::faces</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>faces</name>
        <qualifiedname>CGAL::faces</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1175" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1175" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab530343cf77a23914d6c9a6159a9d145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type</type>
        <definition>Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;::size_type CGAL::num_faces</definition>
        <argsstring>(const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>num_faces</name>
        <qualifiedname>CGAL::num_faces</qualifiedname>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1194" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1194" bodyend="1197"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a7cc65293587669eed006ec97e16a3091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; Graph, PropertyTag &gt;::const_type</type>
        <definition>boost::property_map&lt; Graph, PropertyTag &gt;::const_type CGAL::get</definition>
        <argsstring>(PropertyTag ptag, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1205" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1205" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a27d7992c9a559361c1d2447a0de2ff62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; Graph, PropertyTag &gt;::type</type>
        <definition>boost::property_map&lt; Graph, PropertyTag &gt;::type CGAL::get</definition>
        <argsstring>(PropertyTag ptag, Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1216" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1216" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a3fac29cf71d2cdb6530533284a7c9abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
        </templateparamlist>
        <type>boost::property_traits&lt; typenameboost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type</type>
        <definition>boost::property_traits&lt; typenameboost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type CGAL::get</definition>
        <argsstring>(PropertyTag ptag, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w, const typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::key_type &amp;k)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1257" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1257" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ae491748066e931782b19e9d3314f2878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
          <param>
            <type>class PropertyTag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::put</definition>
        <argsstring>(PropertyTag ptag, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w, const typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::key_type &amp;k, typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type &amp;v)</argsstring>
        <name>put</name>
        <qualifiedname>CGAL::put</qualifiedname>
        <param>
          <type>PropertyTag</type>
          <declname>ptag</declname>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::key_type &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>typename boost::property_traits&lt; typename boost::property_map&lt; Graph, PropertyTag &gt;::type &gt;::value_type &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1271" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1271" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab99a4e82e89c7aea29d9d19398e97ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::face_index_t &gt;::const_type</type>
        <definition>boost::property_map&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::face_index_t &gt;::const_type CGAL::get</definition>
        <argsstring>(boost::face_index_t, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::face_index_t</type>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1360" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1360" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a4ea20a962f679d339a04da540656b10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::vertex_index_t &gt;::const_type</type>
        <definition>boost::property_map&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::vertex_index_t &gt;::const_type CGAL::get</definition>
        <argsstring>(boost::vertex_index_t, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::vertex_index_t</type>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1367" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1367" bodyend="1370"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab1a2f8b7ad545e28ea8d56f6e45e4695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::halfedge_index_t &gt;::const_type</type>
        <definition>boost::property_map&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::halfedge_index_t &gt;::const_type CGAL::get</definition>
        <argsstring>(boost::halfedge_index_t, const Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::halfedge_index_t</type>
        </param>
        <param>
          <type>const <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1374" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1374" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa1d0f2acdb4543248a9d91a293287cb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::face_index_t &gt;::type</type>
        <definition>boost::property_map&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::face_index_t &gt;::type CGAL::get</definition>
        <argsstring>(boost::face_index_t, Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::face_index_t</type>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1382" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1382" bodyend="1385"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aef3dfc607e2d6fa9455152217cd79fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::vertex_index_t &gt;::type</type>
        <definition>boost::property_map&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::vertex_index_t &gt;::type CGAL::get</definition>
        <argsstring>(boost::vertex_index_t, Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::vertex_index_t</type>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1389" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1389" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1abbb88d012d93481654cdd0b36f06a69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Graph</type>
          </param>
          <param>
            <type>typename FIMap</type>
          </param>
          <param>
            <type>typename VIMap</type>
          </param>
          <param>
            <type>typename HIMap</type>
          </param>
        </templateparamlist>
        <type>boost::property_map&lt; <ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::halfedge_index_t &gt;::type</type>
        <definition>boost::property_map&lt; Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt;, boost::halfedge_index_t &gt;::type CGAL::get</definition>
        <argsstring>(boost::halfedge_index_t, Face_filtered_graph&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;w)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::halfedge_index_t</type>
        </param>
        <param>
          <type><ref refid="structCGAL_1_1Face__filtered__graph" kindref="compound">Face_filtered_graph</ref>&lt; Graph, FIMap, VIMap, HIMap &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Face_filtered_graph.h" line="1396" column="1" bodyfile="CGAL/boost/graph/Face_filtered_graph.h" bodystart="1396" bodyend="1399"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af147eb5b45f4f2fdc87551275d4d5c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename Key</type>
          </param>
        </templateparamlist>
        <type>boost::property_map_value&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt;, boost::vertex_index_t &gt;::type</type>
        <definition>boost::property_map_value&lt; Dual&lt; P &gt;, boost::vertex_index_t &gt;::type CGAL::get</definition>
        <argsstring>(boost::vertex_index_t, const Dual&lt; P &gt; &amp;dual, const Key &amp;k)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::vertex_index_t</type>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="220" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a002ed3eb0f2e9ddd9b4c6522832d75f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
          <param>
            <type>typename Key</type>
          </param>
        </templateparamlist>
        <type>boost::property_map_value&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt;, boost::face_index_t &gt;::type</type>
        <definition>boost::property_map_value&lt; Dual&lt; P &gt;, boost::face_index_t &gt;::type CGAL::get</definition>
        <argsstring>(boost::face_index_t, const Dual&lt; P &gt; &amp;dual, const Key &amp;k)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::face_index_t</type>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="227" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2b5b7a231116a8dc983a6547412d3470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::internal::Dual_vertex_index_pmap&lt; P &gt;</type>
        <definition>boost::internal::Dual_vertex_index_pmap&lt; P &gt; CGAL::get</definition>
        <argsstring>(boost::vertex_index_t, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::vertex_index_t</type>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="234" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2cbb461d3708ca1126998f0542b471b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::internal::Dual_face_index_pmap&lt; P &gt;</type>
        <definition>boost::internal::Dual_face_index_pmap&lt; P &gt; CGAL::get</definition>
        <argsstring>(boost::face_index_t, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>get</name>
        <qualifiedname>CGAL::get</qualifiedname>
        <param>
          <type>boost::face_index_t</type>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="241" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a143bbae5c79639d97f43aad93e72a6a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &gt;::vertices_size_type</type>
        <definition>boost::graph_traits&lt; CGAL::Dual&lt; P &gt; &gt;::vertices_size_type CGAL::num_vertices</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>num_vertices</name>
        <qualifiedname>CGAL::num_vertices</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="248" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a384192f012badc2d1bde3f0d74db0f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &gt;::edges_size_type</type>
        <definition>boost::graph_traits&lt; CGAL::Dual&lt; P &gt; &gt;::edges_size_type CGAL::num_edges</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>num_edges</name>
        <qualifiedname>CGAL::num_edges</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="255" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a17ca01b073e8029c0f45ae2b203ddb10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &gt;::halfedges_size_type</type>
        <definition>boost::graph_traits&lt; CGAL::Dual&lt; P &gt; &gt;::halfedges_size_type CGAL::num_halfedges</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>num_halfedges</name>
        <qualifiedname>CGAL::num_halfedges</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="262" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a70443c709716c98735ea1ea3406013eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &gt;::faces_size_type</type>
        <definition>boost::graph_traits&lt; CGAL::Dual&lt; P &gt; &gt;::faces_size_type CGAL::num_faces</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>num_faces</name>
        <qualifiedname>CGAL::num_faces</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="269" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac2749f94842235bcb9cd8ec055bb4450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_iterator &gt; CGAL::vertices</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::vertices</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="276" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a57dbb3b2a3765fa8d8606354f745dead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::face_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::face_iterator &gt; CGAL::faces</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>faces</name>
        <qualifiedname>CGAL::faces</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="283" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a7b8f3236c54b28cf8fe25a1114bc9edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_iterator &gt; CGAL::halfedges</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>halfedges</name>
        <qualifiedname>CGAL::halfedges</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="290" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a80849beaa7fe53d7313deb7bae8dd1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::edge_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::edge_iterator &gt; CGAL::edges</definition>
        <argsstring>(const CGAL::Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>edges</name>
        <qualifiedname>CGAL::edges</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">CGAL::Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="297" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af6f544e8a016712bda533edc74ad89a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::edge_descriptor, bool &gt;</type>
        <definition>std::pair&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::edge_descriptor, bool &gt; CGAL::edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor u, typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>edge</name>
        <qualifiedname>CGAL::edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="304" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="304" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a86e1eed074de828043b60538e51fec0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::edge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::edge_descriptor CGAL::edge</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>edge</name>
        <qualifiedname>CGAL::edge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="319" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="319" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac0c0bf00b04a796ae1444c6212026366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor CGAL::source</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="327" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="327" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a8e8adbd2ea863dc9898054b18bcd94bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor CGAL::target</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="336" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="336" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aeef774449e02dc29d5a3810735f52f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor CGAL::source</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::edge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::source</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::edge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="346" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a25c786faf7e75586dd9cd570e77dfb05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor CGAL::target</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::edge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::target</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::edge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="355" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="355" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a339f91993e24e78071828a7fc5300835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="364" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a951dcdc17d5c3f9ea69a169d9f8721f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::face_descriptor f, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::face_descriptor</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="373" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="373" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a15497d75c07bc3b52f790c33ddefc301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::edge_descriptor e, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::edge_descriptor</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="381" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af9ae99e3caefb1b18c8637909ec16144" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor, bool &gt;</type>
        <definition>std::pair&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor, bool &gt; CGAL::halfedge</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor u, typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>halfedge</name>
        <qualifiedname>CGAL::halfedge</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="389" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="389" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1af34378555373c69d0b849f2958ae567a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::face_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::face_descriptor CGAL::face</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>face</name>
        <qualifiedname>CGAL::face</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="404" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="404" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a196886d012d8c881d23c065ccfe69db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor CGAL::opposite</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::opposite</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="413" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="413" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a5499da2f253211a426847b26c31d9213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor CGAL::next</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>next</name>
        <qualifiedname>CGAL::next</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="421" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="421" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab36a15267b2803293ef7bc9d461c5bb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor CGAL::prev</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::halfedge_descriptor h, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>prev</name>
        <qualifiedname>CGAL::prev</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::halfedge_descriptor</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="430" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="430" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ac73e6582bcc1be5d4d3f5ae3366a70fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::out_edge_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::out_edge_iterator &gt; CGAL::out_edges</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>out_edges</name>
        <qualifiedname>CGAL::out_edges</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="439" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="439" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0dbd61897d42618b939c380bd4398b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::in_edge_iterator &gt;</type>
        <definition>Iterator_range&lt; typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::in_edge_iterator &gt; CGAL::in_edges</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>in_edges</name>
        <qualifiedname>CGAL::in_edges</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="448" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="448" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aaee790f4a1ddb15d70d817856590cf79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::degree_size_type CGAL::out_degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>out_degree</name>
        <qualifiedname>CGAL::out_degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="457" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="457" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a000ccc1ad44585804d5d90e2c37826c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::degree_size_type</type>
        <definition>boost::graph_traits&lt; Dual&lt; P &gt; &gt;::degree_size_type CGAL::in_degree</definition>
        <argsstring>(typename boost::graph_traits&lt; Dual&lt; P &gt; &gt;::vertex_descriptor v, const Dual&lt; P &gt; &amp;dual)</argsstring>
        <name>in_degree</name>
        <qualifiedname>CGAL::in_degree</qualifiedname>
        <param>
          <type>typename boost::graph_traits&lt; <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &gt;::vertex_descriptor</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Dual" kindref="compound">Dual</ref>&lt; P &gt; &amp;</type>
          <declname>dual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/Dual.h" line="466" column="1" bodyfile="CGAL/boost/graph/Dual.h" bodystart="466" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFctDeprecated_1ga57572d046d6cf2455f74c94c9573ee09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(std::istream &amp;is, Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.3, <computeroutput><ref refid="group__PkgStreamSupportIoFuncsOFF_1ga7396bef8d41fe287d52d19ddbb83a3e4" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::read_OFF()</ref></computeroutput> should be used instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/OFF.h" line="258" column="7" bodyfile="CGAL/boost/graph/IO/OFF.h" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFctDeprecated_1ga382b858c3f029ac72d03e5b70663db6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(const char *fname, Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.3, <computeroutput><ref refid="group__PkgStreamSupportIoFuncsOFF_1ga7396bef8d41fe287d52d19ddbb83a3e4" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::read_OFF()</ref></computeroutput> should be used instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/OFF.h" line="269" column="7" bodyfile="CGAL/boost/graph/IO/OFF.h" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab7e2bea483094f2bc2f47e4344619fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_off</definition>
        <argsstring>(const std::string &amp;fname, Graph &amp;g)</argsstring>
        <name>read_off</name>
        <qualifiedname>CGAL::read_off</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Graph &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/OFF.h" line="274" column="7" bodyfile="CGAL/boost/graph/IO/OFF.h" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFctDeprecated_1ga3cf109df96aa2f604d007ab7ac41d1dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(std::ostream &amp;os, const Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_off</name>
        <qualifiedname>CGAL::write_off</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.3, <computeroutput><ref refid="group__PkgStreamSupportIoFuncsOFF_1ga9682021a1047600910151826eaa75a5b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::write_OFF()</ref></computeroutput> should be used instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/OFF.h" line="464" column="7" bodyfile="CGAL/boost/graph/IO/OFF.h" bodystart="464" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFctDeprecated_1gad89556470b08deb158c20526ccdaa069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_off</definition>
        <argsstring>(const char *fname, const Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_off</name>
        <qualifiedname>CGAL::write_off</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.3, <computeroutput><ref refid="group__PkgStreamSupportIoFuncsOFF_1ga9682021a1047600910151826eaa75a5b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::write_OFF()</ref></computeroutput> should be used instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/OFF.h" line="475" column="7" bodyfile="CGAL/boost/graph/IO/OFF.h" bodystart="475" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFctDeprecated_1gaf330d668dfb89f38cbf3c27c298a5e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_vtp</definition>
        <argsstring>(std::ostream &amp;os, const Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_vtp</name>
        <qualifiedname>CGAL::write_vtp</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.3, <computeroutput><ref refid="group__PkgStreamSupportIoFuncsVTK_1ga7915b06d84ee93206fded645d238a722" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::write_VTP()</ref></computeroutput> should be used instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/VTK.h" line="540" column="7" bodyfile="CGAL/boost/graph/IO/VTK.h" bodystart="540" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLIOFctDeprecated_1ga0ab5404e4eeb4ec0b53ef0a8f8c76b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Graph</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_wrl</definition>
        <argsstring>(std::ostream &amp;os, const Graph &amp;g, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_wrl</name>
        <qualifiedname>CGAL::write_wrl</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const Graph &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated since CGAL 5.3, <computeroutput><ref refid="group__PkgBGLIoFuncsWRL_1ga7d5bd98fc59e8d8ff894fe1f50c24ef7" kindref="member">CGAL::IO::write_WRL()</ref></computeroutput> should be used instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/IO/WRL.h" line="122" column="7" bodyfile="CGAL/boost/graph/IO/WRL.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgBGLPartition_1gac0ae8f45718c0eb9b70ebddd5008515b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputGraph</type>
          </param>
          <param>
            <type>typename EdgeCostMap</type>
          </param>
          <param>
            <type>typename VertexLabelCostMap</type>
          </param>
          <param>
            <type>typename VertexLabelMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::alpha_expansion_graphcut</definition>
        <argsstring>(const InputGraph &amp;input_graph, EdgeCostMap edge_cost_map, VertexLabelCostMap vertex_label_cost_map, VertexLabelMap vertex_label_map, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>alpha_expansion_graphcut</name>
        <qualifiedname>CGAL::alpha_expansion_graphcut</qualifiedname>
        <param>
          <type>const InputGraph &amp;</type>
          <declname>input_graph</declname>
        </param>
        <param>
          <type>EdgeCostMap</type>
          <declname>edge_cost_map</declname>
        </param>
        <param>
          <type>VertexLabelCostMap</type>
          <declname>vertex_label_cost_map</declname>
        </param>
        <param>
          <type>VertexLabelMap</type>
          <declname>vertex_label_map</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>regularizes a partition of a graph into <computeroutput>n</computeroutput> labels using the alpha expansion algorithm <ref refid="citelist_1CITEREF_Boykov2001FastApproximate" kindref="member">[1]</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>For a graph <formula id="9">$(V,E)$</formula>, this function computes a partition <computeroutput>f</computeroutput> that minimizes the following cost function:</para>
<para><formula id="17">\[
\mathrm{C}(f) = \sum_{\{v0,v1\} \in E} C_E(v0,v1) + \sum_{v \in V} C_V(f_v)
\]</formula></para>
<para>where <formula id="11">$C_E(v0,v1)$</formula> is the edge cost of assigning a different label to <formula id="12">$v0$</formula> and <formula id="13">$v1$</formula>, and <formula id="14">$C_V(f_v)$</formula> is the vertex cost of assigning the label <formula id="15">$f$</formula> to the vertex <formula id="16">$v$</formula>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputGraph</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classVertexAndEdgeListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">VertexAndEdgeListGraph</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>EdgeCostMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;InputGraph&gt;::edge_descriptor</computeroutput> as key and <computeroutput>double</computeroutput> as value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexLabelCostMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;InputGraph&gt;::vertex_descriptor</computeroutput> as key and <computeroutput>std::vector&lt;double&gt;</computeroutput> as value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VertexLabelMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;InputGraph&gt;::vertex_descriptor</computeroutput> as key and <computeroutput>std::size_t</computeroutput> as value</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of named parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_graph</parametername>
</parameternamelist>
<parameterdescription>
<para>the input graph.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>edge_cost_map</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map providing the weight of each edge.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_label_map</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map providing the label of each vertex. This map will be updated by the algorithm with the regularized version of the partition.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vertex_label_cost_map</parametername>
</parameternamelist>
<parameterdescription>
<para>a property map providing, for each vertex, an <computeroutput>std::vector</computeroutput> containing the cost of this vertex to belong to each label. Each <computeroutput>std::vector</computeroutput> should have the same size <computeroutput>n</computeroutput> (which is the number of labels), each label being indexed from <computeroutput>0</computeroutput> to <computeroutput>n-1</computeroutput>. For example, <computeroutput>get(vertex_label_cost_map,
vd)[label_idx]</computeroutput> returns the cost of vertex <computeroutput>vd</computeroutput> to belong to the label <computeroutput>label_idx</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_index_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating to each vertex of <computeroutput>input_graph</computeroutput> a unique index between <computeroutput>0</computeroutput> and <computeroutput>num_vertices(input_graph) - 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;InputGraph&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>std::size_t</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>an automatically indexed internal map </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is not passed, internal machinery will create and initialize a face index property map, either using the internal property map if it exists or using an external map. The latter might result in - slightly - worsened performance in case of non-constant complexity for index access. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>implementation_tag</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a tag used to select which implementation of the alpha expansion should be used. Available implementation tags are:<itemizedlist>
<listitem><para><computeroutput>CGAL::Alpha_expansion_boost_adjacency_list</computeroutput></para>
</listitem><listitem><para><computeroutput>CGAL::Alpha_expansion_boost_compressed_sparse_row_tag</computeroutput></para>
</listitem><listitem><para><computeroutput>CGAL::Alpha_expansion_MaxFlow_tag</computeroutput> </para>
</listitem></itemizedlist>
</para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>CGAL::Alpha_expansion_boost_adjacency_list</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="note"><para>The <computeroutput>MaxFlow</computeroutput> implementation is provided by the <ref refid="group__PkgSurfaceMeshSegmentationRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesh_segmentation.tag">Triangulated Surface Mesh Segmentation Reference</ref> under GPL license. The header <computeroutput>&lt;CGAL/boost/graph/Alpha_expansion_MaxFlow_tag.h&gt;</computeroutput> must be included if users want to use this implementation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/alpha_expansion_graphcut.h" line="521" column="8" bodyfile="CGAL/boost/graph/alpha_expansion_graphcut.h" bodystart="521" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a96a87a97b2a9c281a7f0e59b9aab01ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputGraph</type>
          </param>
          <param>
            <type>typename EdgeCostMap</type>
          </param>
          <param>
            <type>typename VertexLabelCostMap</type>
          </param>
          <param>
            <type>typename VertexLabelMap</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CGAL::min_cut</definition>
        <argsstring>(const InputGraph &amp;input_graph, EdgeCostMap edge_cost_map, VertexLabelCostMap vertex_label_cost_map, VertexLabelMap vertex_label_map, const NamedParameters &amp;np)</argsstring>
        <name>min_cut</name>
        <qualifiedname>CGAL::min_cut</qualifiedname>
        <param>
          <type>const InputGraph &amp;</type>
          <declname>input_graph</declname>
        </param>
        <param>
          <type>EdgeCostMap</type>
          <declname>edge_cost_map</declname>
        </param>
        <param>
          <type>VertexLabelCostMap</type>
          <declname>vertex_label_cost_map</declname>
        </param>
        <param>
          <type>VertexLabelMap</type>
          <declname>vertex_label_map</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/boost/graph/alpha_expansion_graphcut.h" line="682" column="12" bodyfile="CGAL/boost/graph/alpha_expansion_graphcut.h" bodystart="682" bodyend="813"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="namespaceCGAL" kindref="compound">CGAL</ref> Namespace. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag" line="353" column="1"/>
  </compounddef>
</doxygen>
