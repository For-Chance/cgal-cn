<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL_1_1Surface__mesh__approximation" kind="namespace" language="C++">
    <compoundname>CGAL::Surface_mesh_approximation</compoundname>
    <innerclass refid="classCGAL_1_1Surface__mesh__approximation_1_1L21__metric__plane__proxy" prot="public">CGAL::Surface_mesh_approximation::L21_metric_plane_proxy</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__approximation_1_1L2__metric__plane__proxy" prot="public">CGAL::Surface_mesh_approximation::L2_metric_plane_proxy</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__PkgTSMARef_1gaf2c6637c1a37e64d0a50ec9981f1e0a1" prot="public" static="no" strong="no">
        <type></type>
        <name>Verbose_level</name>
        <qualifiedname>CGAL::Surface_mesh_approximation::Verbose_level</qualifiedname>
        <enumvalue id="group__PkgTSMARef_1ggaf2c6637c1a37e64d0a50ec9981f1e0a1a7daee775a5374e7ebe7e0a890f339d07" prot="public">
          <name>SILENT</name>
          <briefdescription>
<para>Silent. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgTSMARef_1ggaf2c6637c1a37e64d0a50ec9981f1e0a1aebfaff0d43e06852ca2b6a1a2b8e9603" prot="public">
          <name>MAIN_STEPS</name>
          <briefdescription>
<para>Main steps. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgTSMARef_1ggaf2c6637c1a37e64d0a50ec9981f1e0a1a702fbb1a63b533e4f3afdbca53f16e86" prot="public">
          <name>VERBOSE</name>
          <briefdescription>
<para>Verbose. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Verbose level enumeration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_approximation/approximate_triangle_mesh.h" line="37" column="1" bodyfile="CGAL/Surface_mesh_approximation/approximate_triangle_mesh.h" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgTSMARef_1ga7455c45cae40d0da3f590267cc92f23e" prot="public" static="no" strong="no">
        <type></type>
        <name>Seeding_method</name>
        <qualifiedname>CGAL::Surface_mesh_approximation::Seeding_method</qualifiedname>
        <enumvalue id="group__PkgTSMARef_1gga7455c45cae40d0da3f590267cc92f23ea00552e1c6a6e16fc41135c53fb8d5ff9" prot="public">
          <name>RANDOM</name>
          <briefdescription>
<para>Random seeding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgTSMARef_1gga7455c45cae40d0da3f590267cc92f23ea26318c48b8ee65751d644e552e12412f" prot="public">
          <name>INCREMENTAL</name>
          <briefdescription>
<para>Incremental seeding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgTSMARef_1gga7455c45cae40d0da3f590267cc92f23eaffbab2672269c2302e67726a725ae396" prot="public">
          <name>HIERARCHICAL</name>
          <briefdescription>
<para>Hierarchical seeding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Seeding method enumeration for Variational Shape Approximation algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Variational_shape_approximation.h" line="64" column="1" bodyfile="CGAL/Variational_shape_approximation.h" bodystart="64" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgTSMARef_1ga4bd463b1bad91654f253895861d37dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TriangleMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_approximation::approximate_triangle_mesh</definition>
        <argsstring>(const TriangleMesh &amp;tm, const NamedParameters &amp;np)</argsstring>
        <name>approximate_triangle_mesh</name>
        <qualifiedname>CGAL::Surface_mesh_approximation::approximate_triangle_mesh</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>approximates the input mesh with plane proxies. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the Variational Shape Approximation algorithm described in <ref refid="citelist_1CITEREF_cgal:cad-vsa-04" kindref="member">[1]</ref> to approximate a triangle surface mesh, with indexed triangles as output.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>triangle surface mesh to be approximated </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the indexed triangles represent a 2-manifold, oriented surface mesh, and <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<variablelist>
<varlistentry><term>Approximation Named Parameters</term></varlistentry>
<listitem><para><table rows="8" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of a geometric traits class </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a CGAL <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> deduced from the point type, using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>Exact constructions kernels are not supported by this function. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>tm</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>Point_3</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>boost::get(CGAL::vertex_point, tm)</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If this parameter is omitted, an internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref></computeroutput> must be available in <computeroutput>TriangleMesh</computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>verbose_level</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the verbose level </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput><ref refid="group__PkgTSMARef_1gaf2c6637c1a37e64d0a50ec9981f1e0a1" kindref="member">CGAL::Surface_mesh_approximation::Verbose_level</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="group__PkgTSMARef_1ggaf2c6637c1a37e64d0a50ec9981f1e0a1a7daee775a5374e7ebe7e0a890f339d07" kindref="member">CGAL::Surface_mesh_approximation::SILENT</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>seeding_method</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the selection of seeding method </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput><ref refid="group__PkgTSMARef_1ga7455c45cae40d0da3f590267cc92f23e" kindref="member">CGAL::Surface_mesh_approximation::Seeding_method</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="group__PkgTSMARef_1gga7455c45cae40d0da3f590267cc92f23eaffbab2672269c2302e67726a725ae396" kindref="member">CGAL::Surface_mesh_approximation::HIERARCHICAL</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>max_number_of_proxies</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the maximum number of proxies used to approximate the input mesh </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>std::size_t</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>num_faces(tm) / 3</computeroutput>, used when <computeroutput>min_error_drop</computeroutput> is also not provided </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>min_error_drop</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the minimum error drop of the approximation, expressed as the ratio between two iterations of proxy addition </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>geom_traits::FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>0.1</computeroutput>, used when <computeroutput>max_number_of_proxies</computeroutput> is also not provided </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>number_of_relaxations</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the number of relaxation iterations interleaved within seeding </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>std::size_t</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>5</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>number_of_iterations</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the number of partitioning and fitting iterations after seeding </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>std::size_t</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>std::min(std::max(number_of_faces / max_number_of_proxies, 20), 60)</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Meshing Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>subdivision_ratio</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the chord subdivision ratio threshold to the chord length or average edge length </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>geom_traits::FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>5.0</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>relative_to_chord</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, the <computeroutput>subdivision_ratio</computeroutput> is the ratio of the furthest vertex distance to the chord length, otherwise is the average edge length </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>Boolean</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>with_dihedral_angle</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, the <computeroutput>subdivision_ratio</computeroutput> is weighted by dihedral angle </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>Boolean</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>optimize_anchor_location</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, optimize the anchor locations </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>Boolean</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>pca_plane</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, use PCA plane fitting, otherwise use the default area averaged plane parameters </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>Boolean</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Output Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>face_proxy_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map to output the proxy index of each face of the input polygon mesh </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classWritablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">WritablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::face_descriptor</computeroutput> as key and <computeroutput>std::size_t</computeroutput> as value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>no output operation is performed </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>A proxy is a set of connected faces which are placed under the same proxy patch (see <ref refid="index_1fig__iterations" kindref="member">fig__iterations</ref>) </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>The proxy-ids are contiguous in range <computeroutput>[0, number_of_proxies - 1]</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>proxies</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> to put proxies in </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> with <computeroutput>CGAL::Surface_mesh_approximation::L21_metric_vector_proxy_no_area_weighting::Proxy</computeroutput> value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>no output operation is performed </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>anchors</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> to put anchor points in </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> with <computeroutput>geom_traits::Point_3</computeroutput> value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>no output operation is performed </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>triangles</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> to put indexed triangles in </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> with <computeroutput>std::array&lt;std::size_t, 3&gt;</computeroutput> value type </para>
</listitem>
<listitem>
<para><bold>Default: </bold>no output operation is performed </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Surface_mesh_approximation/approximate_triangle_mesh.h" line="180" column="6" bodyfile="CGAL/Surface_mesh_approximation/approximate_triangle_mesh.h" bodystart="180" bodyend="302"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Surface_mesh_approximation/approximate_triangle_mesh.h" line="33" column="1"/>
  </compounddef>
</doxygen>
