<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Shape_regularization::Segments::Angle_regularization_2</compoundname>
    <includes local="no">CGAL/Shape_regularization/Segments/Angle_regularization_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename GeomTraits</type>
      </param>
      <param>
        <type>typename InputRange</type>
      </param>
      <param>
        <type>typename SegmentMap</type>
        <defval><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref>&lt;typename GeomTraits::Segment_2&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" prot="public" static="no">
        <type>GeomTraits::FT</type>
        <definition>typedef GeomTraits::FT CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::FT</qualifiedname>
        <briefdescription>
<para>Number type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="68" column="37" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1aa74545ed45a18b2a807e4c4645ca770d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::Angle_regularization_2</definition>
        <argsstring>(InputRange &amp;input_range, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>Angle_regularization_2</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::Angle_regularization_2</qualifiedname>
        <param>
          <type>InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>initializes all internal data structures. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_range</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of 2D segments to be regularized</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below; this parameter can be omitted, the default values are then used</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>maximum_angle</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>maximum allowed angle deviation in degrees of a segment from its initial orientation </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>GeomTraits::FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>25 degrees </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>segment_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of <computeroutput>SegmentMap</computeroutput> that maps an item from <computeroutput>input_range</computeroutput> to <computeroutput>GeomTraits::Segment_2</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>SegmentMap()</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="pre"><para>input_range.size() &gt;= 2 </para>
</simplesect>
<simplesect kind="pre"><para>maximum_angle &gt;= 0 &amp;&amp; maximum_angle &lt;= 90 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="119" column="5" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="119" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a973f865ac9b75042b31ec29d88f2b606" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::add_group</definition>
        <argsstring>(const IndexRange &amp;index_range)</argsstring>
        <name>add_group</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::add_group</qualifiedname>
        <param>
          <type>const IndexRange &amp;</type>
          <declname>index_range</declname>
        </param>
        <briefdescription>
<para>inserts a group of segments from <computeroutput>input_range</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Each group of segments is provided as a collection of their indices and only segments within the group are being regularized that is no relationships between segments from different groups are taken into account.</para>
<para>The user must not use this method until he has meaningful groups of segments (see more in the user manual). By default, all segments are inserted as a group.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IndexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> whose value type is <computeroutput>std::size_t</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index_range</parametername>
</parameternamelist>
<parameterdescription>
<para>a const range of segment indices</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>index_range.size() &gt;= 2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="160" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="160" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a024a82b6ec049e436213c2d398a9f90c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref></type>
        <definition>FT CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::target</definition>
        <argsstring>(const std::size_t i, const std::size_t j) const</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::target</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>calculates the target value between 2 segments, which are direct neighbors to each other. </para>
        </briefdescription>
        <detaileddescription>
<para>The target value is the angle difference between initial orientations of two segments <computeroutput>i</computeroutput> and <computeroutput>j</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the first segment</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the second segment</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>i &gt;= 0 &amp;&amp; i &lt; input_range.size() </para>
</simplesect>
<simplesect kind="pre"><para>j &gt;= 0 &amp;&amp; j &lt; input_range.size() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="194" column="8" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="194" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a66f8cc4671e36e234337cc101a01631e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref></type>
        <definition>const FT CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::bound</definition>
        <argsstring>(const std::size_t) const</argsstring>
        <name>bound</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::bound</qualifiedname>
        <param>
          <type>const std::size_t</type>
        </param>
        <briefdescription>
<para>returns <computeroutput>maximum_angle</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="216" column="14" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ae5d5052019f262dd2a9b66aa1e535cd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::update</definition>
        <argsstring>(const std::vector&lt; FT &gt; &amp;solution)</argsstring>
        <name>update</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::update</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref> &gt; &amp;</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
<para>applies new orientations computed by the <computeroutput><ref refid="classQuadraticProgramTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">QuadraticProgramTraits</ref></computeroutput> to the initial segments. </para>
        </briefdescription>
        <detaileddescription>
<para>Number of values in <computeroutput>solution</computeroutput> equals to the number n of segments being regularized + the number m of neighbor pairs between these segments. Each of n values is an angle that is added to the initial segment orientation.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector with angles in degrees</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>solution.size() &gt;= 1 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="233" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="233" bodyend="267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Groups</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a1e7b7ad8e66396e6f6be90d4d80324ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIterator</type>
          </param>
        </templateparamlist>
        <type>OutIterator</type>
        <definition>OutIterator CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::parallel_groups</definition>
        <argsstring>(OutIterator groups) const</argsstring>
        <name>parallel_groups</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::parallel_groups</qualifiedname>
        <param>
          <type>OutIterator</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
<para>creates groups of indices, where each group represents parallel segments. </para>
        </briefdescription>
        <detaileddescription>
<para>This method calls <computeroutput><ref refid="group__PkgShapeRegularizationRefSegments_1gac72eca9b32b73a3713edffd2da5609f2" kindref="member">Segments::parallel_groups()</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts elements of type <computeroutput>std::vector&lt;std::size_t&gt;</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>groups</parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator with groups of segment indices </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="286" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a9df8c71ce4b613af1cea6978fc007b1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutIterator</type>
          </param>
        </templateparamlist>
        <type>OutIterator</type>
        <definition>OutIterator CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::orthogonal_groups</definition>
        <argsstring>(OutIterator groups) const</argsstring>
        <name>orthogonal_groups</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::orthogonal_groups</qualifiedname>
        <param>
          <type>OutIterator</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
<para>creates groups of indices, where each group represents orthogonal segments. </para>
        </briefdescription>
        <detaileddescription>
<para>This method calls <computeroutput><ref refid="group__PkgShapeRegularizationRefSegments_1ga7fe1c4b39b16dee49ba9c41dc3c0b0f8" kindref="member">Segments::orthogonal_groups()</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts elements of type <computeroutput>std::vector&lt;std::size_t&gt;</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>groups</parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator with groups of segment indices </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="307" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="307" bodyend="314"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ac2c6ea02c7027d99f0252eade569b97d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::number_of_modified_segments</definition>
        <argsstring>() const</argsstring>
        <name>number_of_modified_segments</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::number_of_modified_segments</qualifiedname>
        <briefdescription>
<para>returns the number of modified segments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="324" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="324" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory Management</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a8d9885cecfe6a314db18832f1be97aca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::clear</qualifiedname>
        <briefdescription>
<para>clears all internal data structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="336" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="336" bodyend="343"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab44ab53e433959649748da6440539998" prot="private" static="no" mutable="no">
        <type>Input_range &amp;</type>
        <definition>Input_range&amp; CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_input_range</definition>
        <argsstring></argsstring>
        <name>m_input_range</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_input_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="355" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ae72c14c8f0292ea6a953b26e13e4f534" prot="private" static="no" mutable="no">
        <type>const Segment_map</type>
        <definition>const Segment_map CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_segment_map</definition>
        <argsstring></argsstring>
        <name>m_segment_map</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_segment_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="356" column="23" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a88289d5b2d3a2c6be7432cbcc0d40e04" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref></type>
        <definition>FT CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_max_angle</definition>
        <argsstring></argsstring>
        <name>m_max_angle</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_max_angle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="358" column="8" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a9b6558596a2f0231964b4be0bca22e5d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Segment_wrapper_2 &gt;</type>
        <definition>std::vector&lt;Segment_wrapper_2&gt; CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_wraps</definition>
        <argsstring></argsstring>
        <name>m_wraps</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_wraps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="359" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a31d9fdacab0a1eb08e839306bed27004" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_num_modified_segments</definition>
        <argsstring></argsstring>
        <name>m_num_modified_segments</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_num_modified_segments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="361" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a9287188c506d13c9d9c83f99e7e6b3d2" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_num_groups</definition>
        <argsstring></argsstring>
        <name>m_num_groups</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_num_groups</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="362" column="17" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a8870b385f65db8a92a28f4e963aff02b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_is_first_call</definition>
        <argsstring></argsstring>
        <name>m_is_first_call</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::m_is_first_call</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="363" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a0639c12a2b221e5312cb515a3e814541" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::create_unique_group</definition>
        <argsstring>()</argsstring>
        <name>create_unique_group</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::create_unique_group</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="365" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="365" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a91717fffcd6914534e9d7b118844e82e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::update_segment_data</definition>
        <argsstring>(const IndexRange &amp;index_range)</argsstring>
        <name>update_segment_data</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::update_segment_data</qualifiedname>
        <param>
          <type>const IndexRange &amp;</type>
          <declname>index_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="380" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="380" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a5c7136f3502a3f214fba87e2884b66f3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::update_wrappers</definition>
        <argsstring>(const IndexRange &amp;index_range)</argsstring>
        <name>update_wrappers</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::update_wrappers</qualifiedname>
        <param>
          <type>const IndexRange &amp;</type>
          <declname>index_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="394" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="394" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a99b4b626bf8c942c12d4dcb0b134176d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Angle_regularization_2&lt; GeomTraits, InputRange, SegmentMap &gt;::orient_segment</definition>
        <argsstring>(const Direction_2 &amp;direction, const FT a, const FT b, const FT c, const Segment_wrapper_2 &amp;wrap, Segment_2 &amp;modified) const</argsstring>
        <name>orient_segment</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Angle_regularization_2::orient_segment</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Direction__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Direction_2</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" kindref="member">FT</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>const Segment_wrapper_2 &amp;</type>
          <declname>wrap</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Segment_2</ref> &amp;</type>
          <declname>modified</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="404" column="10" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="404" bodyend="428"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An angle-based regularization type for 2D segments that reinforces parallelism and orthogonality relationships. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SegmentMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> whose key type is the value type of the input range and value type is <computeroutput>GeomTraits::Segment_2</computeroutput>. The default is <computeroutput><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref>&lt;typename GeomTraits::Segment_2&gt;</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1RegularizationType" kindref="compound">RegularizationType</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" line="55" column="3" bodyfile="CGAL/Shape_regularization/Segments/Angle_regularization_2.h" bodystart="55" bodyend="429"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a973f865ac9b75042b31ec29d88f2b606" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>add_group</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1aa74545ed45a18b2a807e4c4645ca770d" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>Angle_regularization_2</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a66f8cc4671e36e234337cc101a01631e" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>bound</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a8d9885cecfe6a314db18832f1be97aca" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a0639c12a2b221e5312cb515a3e814541" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>create_unique_group</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab37f949ba865b5fa7724e7c9c6d76a6f" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ab44ab53e433959649748da6440539998" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_input_range</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a8870b385f65db8a92a28f4e963aff02b" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_is_first_call</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a88289d5b2d3a2c6be7432cbcc0d40e04" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_max_angle</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a9287188c506d13c9d9c83f99e7e6b3d2" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_num_groups</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a31d9fdacab0a1eb08e839306bed27004" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_num_modified_segments</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ae72c14c8f0292ea6a953b26e13e4f534" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_segment_map</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a9b6558596a2f0231964b4be0bca22e5d" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>m_wraps</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ac2c6ea02c7027d99f0252eade569b97d" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>number_of_modified_segments</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a99b4b626bf8c942c12d4dcb0b134176d" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>orient_segment</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a9df8c71ce4b613af1cea6978fc007b1d" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>orthogonal_groups</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a1e7b7ad8e66396e6f6be90d4d80324ef" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>parallel_groups</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a024a82b6ec049e436213c2d398a9f90c" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>target</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1ae5d5052019f262dd2a9b66aa1e535cd3" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>update</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a91717fffcd6914534e9d7b118844e82e" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>update_segment_data</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Angle__regularization__2_1a5c7136f3502a3f214fba87e2884b66f3" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Angle_regularization_2</scope><name>update_wrappers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
