<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</compoundname>
    <includes local="no">CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename GeomTraits</type>
      </param>
      <param>
        <type>typename InputRange</type>
      </param>
      <param>
        <type>typename SegmentMap</type>
        <defval><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref>&lt;typename GeomTraits::Segment_2&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1af7753169ad5c7a29744dee3fc8a3adf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::Delaunay_neighbor_query_2</definition>
        <argsstring>(const InputRange &amp;input_range, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>Delaunay_neighbor_query_2</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::Delaunay_neighbor_query_2</qualifiedname>
        <param>
          <type>const InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval><ref refid="group__PkgSTLExtensionRef_1gaac7f54fe7abb7321d8d755683eaafaf2" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">parameters::default_values</ref>()</defval>
        </param>
        <briefdescription>
<para>initializes all internal data structures. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_range</parametername>
</parameternamelist>
<parameterdescription>
<para>a const range of 2D segments</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below; this parameter can be omitted, the default values are then used</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>segment_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of <computeroutput>SegmentMap</computeroutput> that maps an item from <computeroutput>input_range</computeroutput> to <computeroutput>GeomTraits::Segment_2</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>SegmentMap()</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="pre"><para>input_range.size() &gt;= 2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="109" column="5" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="109" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1aaffd7eb2871e03b6e0d3cc997b440661" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::add_group</definition>
        <argsstring>(const IndexRange &amp;index_range)</argsstring>
        <name>add_group</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::add_group</qualifiedname>
        <param>
          <type>const IndexRange &amp;</type>
          <declname>index_range</declname>
        </param>
        <briefdescription>
<para>inserts a group of segments from <computeroutput>input_range</computeroutput> and finds their neighbors within the group. </para>
        </briefdescription>
        <detaileddescription>
<para>Each group of segments is provided as a collection of their indices and only neighbors of segments within the group are computed that is no relationships between segments from different groups are taken into account.</para>
<para>The user must not use this method until he has meaningful groups of segments (see more in the user manual). By default, all segments are inserted as a group.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IndexRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> whose value type is <computeroutput>std::size_t</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index_range</parametername>
</parameternamelist>
<parameterdescription>
<para>a const range of segment indices</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>index_range.size() &gt;= 2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="140" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="140" bodyend="154"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a1f14a246334ddd6671263490f8e16844" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::operator()</definition>
        <argsstring>(const std::size_t query_index, std::vector&lt; std::size_t &gt; &amp;neighbors) const</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::operator()</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>query_index</declname>
        </param>
        <param>
          <type>std::vector&lt; std::size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <briefdescription>
<para>fills in a vector with indices of segments, which are direct neighbors of the query segment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>query_index</parametername>
</parameternamelist>
<parameterdescription>
<para>an index of the query segment</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neighbors</parametername>
</parameternamelist>
<parameterdescription>
<para>indices of segments, which are direct neighbors of the query segment</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>query_index &gt;= 0 &amp;&amp; query_index &lt; input_range.size() </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="173" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="173" bodyend="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Memory Management</header>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1ab7105c1bb1955af67381c789fdd6524e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::clear</qualifiedname>
        <briefdescription>
<para>clears all internal data structures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="192" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="192" bodyend="198"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1ae7f19d39372b644af5667e5a22e3799f" prot="private" static="no" mutable="no">
        <type>const Input_range &amp;</type>
        <definition>const Input_range&amp; CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_input_range</definition>
        <argsstring></argsstring>
        <name>m_input_range</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::m_input_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="235" column="23" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1af5112aebc29cac2e795c05c1e77db4ee" prot="private" static="no" mutable="no">
        <type>const Segment_map</type>
        <definition>const Segment_map CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_segment_map</definition>
        <argsstring></argsstring>
        <name>m_segment_map</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::m_segment_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="236" column="23" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a9de36f4e33f3022a712e7103d9c9f12f" prot="private" static="no" mutable="no">
        <type>Delaunay_triangulation</type>
        <definition>Delaunay_triangulation CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_delaunay</definition>
        <argsstring></argsstring>
        <name>m_delaunay</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::m_delaunay</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="238" column="28" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a8f4a29d4365d186eacc14ddf54cd1fce" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Indices &gt;</type>
        <definition>std::vector&lt;Indices&gt; CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_groups</definition>
        <argsstring></argsstring>
        <name>m_groups</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::m_groups</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="239" column="17" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a51b49cddf8ffc47b0918c20cdf370656" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_num_groups</definition>
        <argsstring></argsstring>
        <name>m_num_groups</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::m_num_groups</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="240" column="17" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1aafe273a1eacda97db93ea9e5e25d03c7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::m_is_first_call</definition>
        <argsstring></argsstring>
        <name>m_is_first_call</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::m_is_first_call</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="241" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a77ab896421064d9b1292bce8c64bcde5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::create_unique_group</definition>
        <argsstring>()</argsstring>
        <name>create_unique_group</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::create_unique_group</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="243" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="243" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a3759668e21e6db9a033069a9af732a6c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::build_delaunay_triangulation</definition>
        <argsstring>(const IndexRange &amp;index_range)</argsstring>
        <name>build_delaunay_triangulation</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::build_delaunay_triangulation</qualifiedname>
        <param>
          <type>const IndexRange &amp;</type>
          <declname>index_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="259" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="259" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a4f3f5af6e28f24edca462881ab00898e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::add_neighbors</definition>
        <argsstring>()</argsstring>
        <name>add_neighbors</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::add_neighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="276" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="276" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a9fce646a54b07e910dbc66aea1029958" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::build_graph_of_neighbors</definition>
        <argsstring>(std::set&lt; Size_pair &gt; &amp;graph) const</argsstring>
        <name>build_graph_of_neighbors</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::build_graph_of_neighbors</qualifiedname>
        <param>
          <type>std::set&lt; Size_pair &gt; &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="304" column="10" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="304" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1aeef78196edb8138b0757b931f9fe3753" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref></type>
        <definition>const Point_2 CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2&lt; GeomTraits, InputRange, SegmentMap &gt;::get_midpoint</definition>
        <argsstring>(const std::size_t seg_index) const</argsstring>
        <name>get_midpoint</name>
        <qualifiedname>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2::get_midpoint</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>seg_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="324" column="19" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="324" bodyend="333"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A neighbor query based on a Delaunay triangulation, which enables to find the nearest neighbors in a set of <computeroutput>GeomTraits::Segment_2</computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>This class finds indices of the nearest neighbors of a query segment in a set of 2D segments.</para>
<para>The class first creates a Delaunay triangulation whose vertices are center points of the input segments and then enables to return for each query segment indices of the segments whose center points form the one-ring neighborhood of the corresponding query vertex in the triangulation.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> whose iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SegmentMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the <computeroutput>InputRange</computeroutput> and value type is <computeroutput>GeomTraits::Segment_2</computeroutput>. The default is <computeroutput><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref>&lt;typename GeomTraits::Segment_2&gt;</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1NeighborQuery" kindref="compound">NeighborQuery</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" line="61" column="3" bodyfile="CGAL/Shape_regularization/Segments/Delaunay_neighbor_query_2.h" bodystart="61" bodyend="334"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1aaffd7eb2871e03b6e0d3cc997b440661" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>add_group</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a4f3f5af6e28f24edca462881ab00898e" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>add_neighbors</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a3759668e21e6db9a033069a9af732a6c" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>build_delaunay_triangulation</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a9fce646a54b07e910dbc66aea1029958" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>build_graph_of_neighbors</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1ab7105c1bb1955af67381c789fdd6524e" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a77ab896421064d9b1292bce8c64bcde5" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>create_unique_group</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1af7753169ad5c7a29744dee3fc8a3adf8" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>Delaunay_neighbor_query_2</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1aeef78196edb8138b0757b931f9fe3753" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>get_midpoint</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a9de36f4e33f3022a712e7103d9c9f12f" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>m_delaunay</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a8f4a29d4365d186eacc14ddf54cd1fce" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>m_groups</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1ae7f19d39372b644af5667e5a22e3799f" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>m_input_range</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1aafe273a1eacda97db93ea9e5e25d03c7" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>m_is_first_call</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a51b49cddf8ffc47b0918c20cdf370656" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>m_num_groups</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1af5112aebc29cac2e795c05c1e77db4ee" prot="private" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>m_segment_map</name></member>
      <member refid="classCGAL_1_1Shape__regularization_1_1Segments_1_1Delaunay__neighbor__query__2_1a1f14a246334ddd6671263490f8e16844" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::Segments::Delaunay_neighbor_query_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
