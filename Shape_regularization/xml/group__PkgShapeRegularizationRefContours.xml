<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgShapeRegularizationRefContours" kind="group">
    <compoundname>PkgShapeRegularizationRefContours</compoundname>
    <title>Contours</title>
    <innerclass refid="classCGAL_1_1Shape__regularization_1_1Contours_1_1Longest__direction__2" prot="public">CGAL::Shape_regularization::Contours::Longest_direction_2</innerclass>
    <innerclass refid="classCGAL_1_1Shape__regularization_1_1Contours_1_1Multiple__directions__2" prot="public">CGAL::Shape_regularization::Contours::Multiple_directions_2</innerclass>
    <innerclass refid="classCGAL_1_1Shape__regularization_1_1Contours_1_1User__defined__directions__2" prot="public">CGAL::Shape_regularization::Contours::User_defined_directions_2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgShapeRegularizationRefContours_1ga7e2f3e7e76c52a3acef42a0d413a17c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputRange</type>
          </param>
          <param>
            <type>typename ContDirections</type>
          </param>
          <param>
            <type>typename OutIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>OutIterator</type>
        <definition>OutIterator CGAL::Shape_regularization::Contours::regularize_closed_contour</definition>
        <argsstring>(const InputRange &amp;input_range, const ContDirections &amp;directions, OutIterator contour, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>regularize_closed_contour</name>
        <qualifiedname>CGAL::Shape_regularization::Contours::regularize_closed_contour</qualifiedname>
        <param>
          <type>const InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>const ContDirections &amp;</type>
          <declname>directions</declname>
        </param>
        <param>
          <type>OutIterator</type>
          <declname>contour</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>regularizes closed contours. </para>
        </briefdescription>
        <detaileddescription>
<para>Given a set of ordered 2D points connected by segments, which form a closed contour, this function enables to reinforce three types of regularities among consecutive edges of this contour:<itemizedlist>
<listitem><para><emphasis>Parallelism</emphasis>: contour edges, which are detected as near parallel, are made exactly parallel.</para>
</listitem><listitem><para><emphasis>Orthogonality</emphasis>: contour edges, which are detected as near orthogonal, are made exactly orthogonal.</para>
</listitem><listitem><para><emphasis>Collinearity</emphasis>: parallel contour edges, which are detected as near collinear, are made exactly collinear.</para>
</listitem></itemizedlist>
</para>
<para>The principal directions of the contour are provided via the concept <computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1ContourDirections" kindref="compound">ContourDirections</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> whose iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ContDirections</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1ContourDirections" kindref="compound">ContourDirections</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts points of type <computeroutput>GeomTraits::Point_2</computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_range</parametername>
</parameternamelist>
<parameterdescription>
<para>a const range of ordered points, which form a contour</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>directions</parametername>
</parameternamelist>
<parameterdescription>
<para>estimated contour directions towards which the contour edges are oriented</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contour</parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator with points of the regularized contour</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below; this parameter can be omitted, the default values are then used</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>maximum_offset</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>maximum allowed orthogonal distance between two parallel and consecutive contour edges such that they are considered to be collinear </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>GeomTraits::FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.5 unit length </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map that maps an item from <computeroutput>input_range</computeroutput> to <computeroutput>GeomTraits::Point_2</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the input range and value type is <computeroutput>GeomTraits::Point_2</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of geometric traits class </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a <ref refid="namespaceCGAL" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL</ref> <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> deduced from the point type, using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para>an output iterator to the element in the destination range, one past the last contour vertex stored</para>
</simplesect>
<simplesect kind="pre"><para>input_range.size() &gt;= 3 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/regularize_contours.h" line="119" column="15" bodyfile="CGAL/Shape_regularization/regularize_contours.h" bodystart="119" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgShapeRegularizationRefContours_1gab7cdbc7adcfeb23d7e01152ac63b9c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputRange</type>
          </param>
          <param>
            <type>typename OutIterator</type>
          </param>
        </templateparamlist>
        <type>OutIterator</type>
        <definition>OutIterator CGAL::Shape_regularization::Contours::regularize_closed_contour</definition>
        <argsstring>(const InputRange &amp;input_range, OutIterator contour)</argsstring>
        <name>regularize_closed_contour</name>
        <qualifiedname>CGAL::Shape_regularization::Contours::regularize_closed_contour</qualifiedname>
        <param>
          <type>const InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>OutIterator</type>
          <declname>contour</declname>
        </param>
        <briefdescription>
<para>regularizes closed contours. </para>
        </briefdescription>
        <detaileddescription>
<para>This function regularizes a closed contour with respect to the longest edge of this contour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/regularize_contours.h" line="155" column="15" bodyfile="CGAL/Shape_regularization/regularize_contours.h" bodystart="155" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgShapeRegularizationRefContours_1gae860b28fa0fde23f6f6540f483b4ecff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputRange</type>
          </param>
          <param>
            <type>typename ContDirections</type>
          </param>
          <param>
            <type>typename OutIterator</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>OutIterator</type>
        <definition>OutIterator CGAL::Shape_regularization::Contours::regularize_open_contour</definition>
        <argsstring>(const InputRange &amp;input_range, const ContDirections &amp;directions, OutIterator contour, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>regularize_open_contour</name>
        <qualifiedname>CGAL::Shape_regularization::Contours::regularize_open_contour</qualifiedname>
        <param>
          <type>const InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>const ContDirections &amp;</type>
          <declname>directions</declname>
        </param>
        <param>
          <type>OutIterator</type>
          <declname>contour</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>regularizes open contours. </para>
        </briefdescription>
        <detaileddescription>
<para>Given a set of ordered 2D points connected by segments, which form an open contour, this function enables to reinforce three types of regularities among consecutive edges of this contour:<itemizedlist>
<listitem><para><emphasis>Parallelism</emphasis>: contour edges, which are detected as near parallel, are made exactly parallel.</para>
</listitem><listitem><para><emphasis>Orthogonality</emphasis>: contour edges, which are detected as near orthogonal, are made exactly orthogonal.</para>
</listitem><listitem><para><emphasis>Collinearity</emphasis>: parallel contour edges, which are detected as near collinear, are made exactly collinear.</para>
</listitem></itemizedlist>
</para>
<para>The principal directions of the contour are provided via the concept <computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1ContourDirections" kindref="compound">ContourDirections</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput> whose iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ContDirections</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1ContourDirections" kindref="compound">ContourDirections</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></computeroutput> that accepts points of type <computeroutput>GeomTraits::Point_2</computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_range</parametername>
</parameternamelist>
<parameterdescription>
<para>a const range of ordered points, which form a contour</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>directions</parametername>
</parameternamelist>
<parameterdescription>
<para>estimated contour directions towards which the contour edges are oriented</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contour</parametername>
</parameternamelist>
<parameterdescription>
<para>an output iterator with points of the regularized contour</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below; this parameter can be omitted, the default values are then used</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="3" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>maximum_offset</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>maximum allowed orthogonal distance between two parallel and consecutive contour edges such that they are considered to be collinear </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>GeomTraits::FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.5 unit length </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map that maps an item from <computeroutput>input_range</computeroutput> to <computeroutput>GeomTraits::Point_2</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the input range and value type is <computeroutput>GeomTraits::Point_2</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput><ref refid="structCGAL_1_1Identity__property__map" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Property_map.tag">CGAL::Identity_property_map</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of geometric traits class </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a <ref refid="namespaceCGAL" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL</ref> <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> deduced from the point type, using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para>an output iterator to the element in the destination range, one past the last contour vertex stored</para>
</simplesect>
<simplesect kind="pre"><para>input_range.size() &gt;= 2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/regularize_contours.h" line="242" column="15" bodyfile="CGAL/Shape_regularization/regularize_contours.h" bodystart="242" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgShapeRegularizationRefContours_1ga2dda0da8c03e78e2dc1dd1355c85892c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputRange</type>
          </param>
          <param>
            <type>typename OutIterator</type>
          </param>
        </templateparamlist>
        <type>OutIterator</type>
        <definition>OutIterator CGAL::Shape_regularization::Contours::regularize_open_contour</definition>
        <argsstring>(const InputRange &amp;input_range, OutIterator contour)</argsstring>
        <name>regularize_open_contour</name>
        <qualifiedname>CGAL::Shape_regularization::Contours::regularize_open_contour</qualifiedname>
        <param>
          <type>const InputRange &amp;</type>
          <declname>input_range</declname>
        </param>
        <param>
          <type>OutIterator</type>
          <declname>contour</declname>
        </param>
        <briefdescription>
<para>regularizes open contours. </para>
        </briefdescription>
        <detaileddescription>
<para>This function regularizes an open contour with respect to the longest edge of this contour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Shape_regularization/regularize_contours.h" line="278" column="15" bodyfile="CGAL/Shape_regularization/regularize_contours.h" bodystart="278" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Models and functions that can be used when regularizing contours. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
