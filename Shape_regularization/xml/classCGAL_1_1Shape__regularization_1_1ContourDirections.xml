<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Shape__regularization_1_1ContourDirections" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Shape_regularization::ContourDirections</compoundname>
    <includes local="no">Concepts/ContourDirections.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Shape__regularization_1_1ContourDirections_1a07f23b0d134d1dfb32158f485aab15b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Shape_regularization::ContourDirections::orient</definition>
        <argsstring>(const std::size_t query_index, Segment_2 &amp;segment)</argsstring>
        <name>orient</name>
        <qualifiedname>CGAL::Shape_regularization::ContourDirections::orient</qualifiedname>
        <param>
          <type>const std::size_t</type>
          <declname>query_index</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Segment_2</ref> &amp;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>orients a given <computeroutput>segment</computeroutput> with the index <computeroutput>query_index</computeroutput> towards the best-fit direction of the contour. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/ContourDirections.h" line="27" column="8" bodyfile="Concepts/ContourDirections.h" bodystart="27" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>We assume that each contour has one or several principal directions. By implementing a model of this concept, the user sets such directions and provides a way to orient contour edges towards these directions. All contour regularization functions in this package are parameterized by this concept. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1Contours_1_1Longest__direction__2" kindref="compound">Contours::Longest_direction_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1Contours_1_1Multiple__directions__2" kindref="compound">Contours::Multiple_directions_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__regularization_1_1Contours_1_1User__defined__directions__2" kindref="compound">Contours::User_defined_directions_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/ContourDirections.h" line="19" column="1" bodyfile="Concepts/ContourDirections.h" bodystart="19" bodyend="32"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Shape__regularization_1_1ContourDirections_1a07f23b0d134d1dfb32158f485aab15b8" prot="public" virt="non-virtual"><scope>CGAL::Shape_regularization::ContourDirections</scope><name>orient</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
