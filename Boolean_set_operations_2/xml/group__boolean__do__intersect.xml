<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__boolean__do__intersect" kind="group">
    <compoundname>boolean_do_intersect</compoundname>
    <title>Polygon Intersection Testing Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__boolean__do__intersect_1ga908af873a4b13a618bdc045c8365c2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="744" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="744" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga7c6fd3409aae6c84fa5ffe022cb41e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to general polygons, bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="762" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="762" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gac0dd819320a2f80900e07809e2eb3e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="773" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="773" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga59e69e186188ee951ae092c66b0fa697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to a general polygon and a general polygon with holes, respectively, bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="792" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="792" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga101934ce0a053b5d309ac6e2bcf070a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="803" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="803" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga9f18568668ac51d487a9284e282f6c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to a general polygon with holes and a general polygon, respectively, bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="822" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="822" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga98915fb1374be1cb82744952e0c7fbfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons with holes intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="833" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="833" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga409ec40beeadbf237fb3e041585abdcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>determines whether two polygons with holes intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to general polygon with holes , bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="851" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="851" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gab6d7fc757dc3503ea034f37db7aee5b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="864" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="864" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gabb7cb2710314cc30f9a6a22cf8f6e53d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="877" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="877" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga229ca9bbee66a870d022e31f5941dea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="889" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="889" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga1e9c3901f9c7e3168b8bfdb09d01fdc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons with holes intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="900" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="900" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga04fab69fdfe2f3578bcbc62996adc04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(InputIterator begin, InputIterator end)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Given a range of polygons or a range of polygons with holes (respectively a range of general polygons or a range of general polygons with holes) determines whether the open polygons (respectively general polygons) in the range have a common point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the input range. Its value type is either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>) or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the input range. Its value type is either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>) or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the pairwise intersections of all open polygons or polygons with holes (respectively general polygons or general polygons with holes) in the range [*begin,*end) overlap, and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="918" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="918" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga84c826277e41f444dc4f32818bbbd178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(InputIterator begin, InputIterator end, UsePolylines=Tag_true())</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>Given a range of polygons or a range of polygons with holes (respectively a range of general polygons or a range of general polygons with holes) determines whether the open polygons (respectively general polygons) in the range have a common point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of the polygons in the input range are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, the input polygons are converted to general polygon with holes , bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the input range. Its value type is either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>) or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the input range. Its value type is either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>) or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the pairwise intersections of all open polygons or polygons with holes (respectively general polygons or general polygons with holes) in the range [*begin,*end) overlap, and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="944" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="944" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga1bd35113abd947ac462b5d338ffcc0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator1</type>
          </param>
          <param>
            <type>typename InputIterator2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>InputIterator1</type>
          <declname>begin1</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>end1</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>begin2</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>end2</declname>
        </param>
        <briefdescription>
<para>Given a range of polygons (respectively general polygons) and a range of polygons with holes (respectively general polygons with holes) determines whether the open polygons (respectively general polygons) in the two ranges have a common point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the 1st input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end1</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the 1st input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin2</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the 2nd input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end2</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the 2nd input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the pairwise intersections of all open polygons (respectively general polygons) and polygons with holes (respectively general polygons with holes) in the ranges [*begin1,*end1) and [*begin2,*end2), respectively, overlap, and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="964" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="964" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gabddfb44123eb80d6ddee4e3cf18d39ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator1</type>
          </param>
          <param>
            <type>typename InputIterator2</type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, UsePolylines=Tag_true())</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>InputIterator1</type>
          <declname>begin1</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>end1</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>begin2</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>end2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>Given a range of polygons (respectively general polygons) and a range of polygons with holes (respectively general polygons with holes) determines whether the open polygons (respectively general polygons) in the two ranges have a common point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of the polygons in the input ranges are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, the input polygons are converted to general polygon with holes , bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the 1st input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end1</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the 1st input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin2</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the 2nd input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end2</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the 2nd input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the pairwise intersections of all open polygons (respectively general polygons) and polygons with holes (respectively general polygons with holes) in the ranges [*begin1,*end1) and [*begin2,*end2), respectively, overlap, and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="994" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="994" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gad003aabaa07bd93090ca827785a0f8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1009" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1009" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gaa3476c1ad65cd3c742a52a9b5574499b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1022" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1022" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga8255959915dc17b5064c14641d768ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1036" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1036" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga581533d4c15b23cc9ce7dfa7eec6bc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two polygons with holes intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1049" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1049" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga8b09dbbe610821a4a186f6d4de9a7f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1064" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1064" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga62509b4d07bd4c9f686f0400e8d923b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1080" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="1080" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gafba2c15fe9d73648b10bcafa60886a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1096" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="1096" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1ga7b0c4d2c7905afcf08a97577b18012eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>determines whether two general polygons with holes intersect in their interior. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interior and <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1111" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1111" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gaa7cd339cba1f0c8eb0d337fe9f98790b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(InputIterator begin, InputIterator end, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>Given a range of polygons or a range of polygons with holes (respectively a range of general polygons or a range of general polygons with holes) determines whether the open polygons (respectively general polygons) in the range have a common point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the input range. Its value type is either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>) or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the input range. Its value type is either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>) or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the pairwise intersections of all open polygons or polygons with holes (respectively general polygons or general polygons with holes) in the range [*begin,*end) overlap, and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1132" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1132" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__do__intersect_1gab4896fefa1edd0bdd518623cd7696754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator1</type>
          </param>
          <param>
            <type>typename InputIterator2</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::do_intersect</definition>
        <argsstring>(InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, const GpsTraits &amp;traits)</argsstring>
        <name>do_intersect</name>
        <qualifiedname>CGAL::do_intersect</qualifiedname>
        <param>
          <type>InputIterator1</type>
          <declname>begin1</declname>
        </param>
        <param>
          <type>InputIterator1</type>
          <declname>end1</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>begin2</declname>
        </param>
        <param>
          <type>InputIterator2</type>
          <declname>end2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>Given a range of polygons (respectively general polygons) and a range of polygons with holes (respectively general polygons with holes) determines whether the open polygons (respectively general polygons) in the two ranges have a common point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the 1st input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end1</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the 1st input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin2</parametername>
</parameternamelist>
<parameterdescription>
<para>the first iterator of the 2nd input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end2</parametername>
</parameternamelist>
<parameterdescription>
<para>the past-the-end iterator of the 2nd input range. Its value type is <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> (respectively <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the pairwise intersections of all open polygons (respectively general polygons) and polygons with holes (respectively general polygons with holes) in the ranges [*begin1,*end1) and [*begin2,*end2), respectively, overlap, and <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="1153" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="1153" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><anchor id="group__boolean__do__intersect_1ref_bso_do_intersect"/></para>
    </briefdescription>
    <detaileddescription>
<para>There are several overloaded function templates called <computeroutput><ref refid="group__do__intersect__linear__grp_1ga9514a218a097ac392d21775368d3dd0d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">do_intersect()</ref></computeroutput> that determine whether the interior of two or more polygons intersect.</para>
<para>A function template in this group that accepts two input polygons has one of the following signatures: <table rows="3" cols="2"><row>
<entry thead="no" align="right"><para><bold>1.1.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(const Type1&amp; pgn1, const Type2&amp; pgn2, UsePolylines = <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true()</ref>);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>1.2.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(const Type1&amp; pgn1, const Type2&amp; pgn2);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold> 2.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(const Type1&amp; pgn1, const Type2&amp; pgn2, const GpsTraits&amp; traits);</computeroutput> </para>
</entry></row>
</table>
</para>
<para>There are also function templates that accept one or two ranges of input polygons: <table rows="6" cols="2"><row>
<entry thead="no" align="right"><para><bold>3.1.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(<ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref> begin, <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref> end, UsePolylines = <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true()</ref>);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>3.2.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool <ref refid="group__boolean__do__intersect_1ga04fab69fdfe2f3578bcbc62996adc04e" kindref="member">do_intersect(InputIterator begin, InputIterator end)</ref>;</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold> 4.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(<ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref> begin, <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref> end, const GpsTraits&amp; traits);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>5.1.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, UsePolylines = <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true()</ref>);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>5.2.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool <ref refid="group__boolean__do__intersect_1ga1bd35113abd947ac462b5d338ffcc0ae" kindref="member">do_intersect(InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2)</ref>;</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold> 6.</bold></para>
</entry><entry thead="no"><para><computeroutput>bool do_intersect(InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, const GpsTraits&amp; traits);</computeroutput> </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundary of the input polygons are treated as a cyclic sequence of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequence of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, the input polygons are converted to general polygons bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, the input polygons are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>The types <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> of the parameters of <computeroutput>InputIterator1::value_type</computeroutput> and <computeroutput>InputIterator2::value_type</computeroutput> must be convertible to the types specified in a row in the table below, respectively.</para>
</listitem><listitem><para>The types that apply to signatures (<bold>1.1.</bold>) and (<bold>5.1.</bold>) above are restricted to those listed in rows <bold>1<ndash/>4</bold> in the table below.</para>
</listitem><listitem><para>The types that apply to signatures (<bold>1.2.</bold>) and (<bold>5.2.</bold>) above are restricted to those listed in rows <bold>5<ndash/>8</bold> in the table below.</para>
</listitem><listitem><para>The type of <computeroutput>InputIterator::value_type</computeroutput> in (<bold>3.1.</bold>) above must be convertible to either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput>.</para>
</listitem><listitem><para>The type of <computeroutput>InputIterator::value_type</computeroutput> in (<bold>3.2.</bold>) above must be convertible to either <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>.</para>
</listitem></itemizedlist>
</para>
<para> <table rows="9" cols="3"><row>
<entry thead="yes"><para><nonbreakablespace/></para>
</entry><entry thead="yes"><para><computeroutput>Type1</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>Type2</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>1</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>2</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>3</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>4</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>5</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>6</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>7</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>8</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygons. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(end</parametername>
<parametername>begin)</parametername>
</parameternamelist>
<parameterdescription>
<para>a range of input polygons. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(end1</parametername>
<parametername>begin1)</parametername>
</parameternamelist>
<parameterdescription>
<para>the first range of input polygons. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>(end2</parametername>
<parametername>begin2)</parametername>
</parameternamelist>
<parameterdescription>
<para>the second range of input polygons. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional traits object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__boolean__complement" kindref="compound"><computeroutput>CGAL::complement()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__intersection" kindref="compound"><computeroutput>CGAL::intersection()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__join" kindref="compound"><computeroutput>CGAL::join()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__difference" kindref="compound"><computeroutput>CGAL::difference()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__symmetric__difference" kindref="compound"><computeroutput>CGAL::symmetric_difference()</computeroutput> </ref> </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
