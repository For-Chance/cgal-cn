<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__boolean__complement" kind="group">
    <compoundname>boolean_complement</compoundname>
    <title>Complement Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__boolean__complement_1ga45629253bda87736f21251bfee532665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::complement</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn, Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;res)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>computes the complement of a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting complement of <computeroutput>pgn</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="68" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1gae5b22437518e5cce7d23b93d9971187b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::complement</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn, Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;res, UsePolylines=Tag_true())</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>computes the complement of a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundary of <computeroutput>pgn</computeroutput> is treated as a cyclic sequence of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequence of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn</computeroutput> is converted to a general polygon bounded by polylines before the operation is actually performed. Then, the resulting general polygon with holes is converted back to a standard polygon. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn</computeroutput> is used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting complement of <computeroutput>pgn</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="85" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="85" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga76f005a9be0986ddb28009efabef5ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::complement</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn, General_polygon_with_holes_2&lt; General_polygon_2&lt; Arr_traits &gt; &gt; &amp;res)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>General_polygon_with_holes_2&lt; General_polygon_2&lt; Arr_traits &gt; &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
<para>computes the complement of a general polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the complement of <computeroutput>pgn</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="97" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="97" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga067ea834c072d8c3fdcd4b752861310f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::complement</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn, OutputIterator oi)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
<para>computes the complement of a polygon with holes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oi</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator for the result. Its dereference type must be convertible to <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the past-the-end iterator of the output container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="108" column="16" declfile="CGAL/Boolean_set_operations_2.h" declline="108" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga0c53208fd8a6c0b277d32f26488e1686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Traits</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::complement</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn, OutputIterator oi, UsePolylines=Tag_true())</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>computes the complement of a polygon with holes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn</computeroutput> is treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn</computeroutput> is converted to a general polygon with holes bounded by polylines before the operation is actually performed. Then, the resulting general polygons with holes are converted back to a standard polygon with holes. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn</computeroutput> is used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oi</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator for the result. Its dereference type must be convertible to <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the past-the-end iterator of the output container. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="128" column="16" declfile="CGAL/Boolean_set_operations_2.h" declline="128" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga3b61c1555b4a63aac0c695d2dd357b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::complement</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn, OutputIterator oi)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <briefdescription>
<para>computes the complement of a general polygon with holes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oi</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator for the result. Its dereference type must be convertible to <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref>&lt;&lt;<ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref>&lt;<ref refid="namespaceArrTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">ArrTraits</ref>&gt;&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the past-the-end iterator of the output container. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="143" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="143" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga9600ad166a38cfc4be070d35041ff5e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::complement</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn, Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;res, const GpsTraits &amp;traits)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the complement of a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting complement of <computeroutput>pgn</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="155" column="6" declfile="CGAL/Boolean_set_operations_2.h" declline="155" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1gac1a470ea0e369a9a5f7bf0911edc86d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::complement</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn, General_polygon_with_holes_2&lt; General_polygon_2&lt; Arr_traits &gt; &gt; &amp;res, const GpsTraits &amp;traits)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>General_polygon_with_holes_2&lt; General_polygon_2&lt; Arr_traits &gt; &gt; &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the complement of a general polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting complement of <computeroutput>pgn</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="169" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="169" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga26b69b2b88a637d3e0ea01bd5087e0f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::complement</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn, OutputIterator oi, const GpsTraits &amp;traits)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the complement of a polygon with holes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oi</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator for the result. Its dereference type must be convertible to <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref>&lt;<ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref>&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the past-the-end iterator of the output container. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="184" column="16" declfile="CGAL/Boolean_set_operations_2.h" declline="184" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__complement_1ga1fba4bb395af1556b59cc6d2f6d1c2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
          <param>
            <type>typename OutputIterato</type>
          </param>
          <param>
            <type>typename GpsTraitsr</type>
          </param>
        </templateparamlist>
        <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
        <definition>OutputIterator CGAL::complement</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn, OutputIterator oi, const GpsTraits &amp;traits)</argsstring>
        <name>complement</name>
        <qualifiedname>CGAL::complement</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref></type>
          <declname>oi</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the complement of the general polygon with holes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oi</parametername>
</parameternamelist>
<parameterdescription>
<para>the output iterator for the result. Its dereference type must be convertible to <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref>&lt;&lt;<ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref>&lt;<ref refid="namespaceArrTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">ArrTraits</ref>&gt;&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the past-the-end iterator of the output container. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="200" column="16" declfile="CGAL/Boolean_set_operations_2.h" declline="200" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><anchor id="group__boolean__complement_1ref_bso_complement"/></para>
    </briefdescription>
    <detaileddescription>
<para>There are several overloaded function templates called <computeroutput><ref refid="group__boolean__complement_1ga45629253bda87736f21251bfee532665" kindref="member">complement()</ref></computeroutput> that compute the <emphasis>complement</emphasis> of a given polygon <computeroutput>pgn</computeroutput>. Depending on the type of the polygon <computeroutput>pgn</computeroutput> the complement is either a single (general) polygon with holes, or several (general) poylgons with holes. In the latter case the <computeroutput><ref refid="group__boolean__complement_1ga45629253bda87736f21251bfee532665" kindref="member">complement()</ref></computeroutput> function template inserts the resulting poylgons with holes into a container via an output iterator.</para>
<para>A function template in this group has one of the following signatures: <table rows="3" cols="2"><row>
<entry thead="no" align="right"><para><bold>1.1.</bold></para>
</entry><entry thead="no"><para><computeroutput>void complement(const Type1&amp; pgn, Type2&amp; res, UsePolylines = <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true()</ref>);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>1.2.</bold></para>
</entry><entry thead="no"><para><computeroutput>void complement(const Type1&amp; pgn, Type2&amp; res);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>2.</bold></para>
</entry><entry thead="no"><para><computeroutput>void complement(const Type1&amp; pgn, Type2&amp; res, const GpsTraits&amp; traits);</computeroutput> </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundary of the input polygon is treated as a cyclic sequence of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequence of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, the input polygon is converted to a general polygon bounded by polylines before the operation is actually performed. Then, the resulting general polygon with holes is converted back to a standard polygon. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, the input polygon is used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>The types <computeroutput>Type</computeroutput> and <computeroutput>Type2</computeroutput> of the parameters must be convertible to the types specified in a row in the table below, respectively.</para>
</listitem><listitem><para>The types that apply to signature (<bold>1.1.</bold>) above are restricted to those listed in rows <bold>1</bold> and <bold>2</bold> in the table below.</para>
</listitem><listitem><para>The types that apply to signature (<bold>1.2.</bold>) above are restricted to those listed in rows <bold>3</bold> and <bold>4</bold> in the table below.</para>
</listitem></itemizedlist>
</para>
<para> <table rows="5" cols="3"><row>
<entry thead="yes"><para><nonbreakablespace/></para>
</entry><entry thead="yes"><para><computeroutput>Type1</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>Type2</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>1</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>2</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>3</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>4</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional traits object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__boolean__do__intersect" kindref="compound"><computeroutput>CGAL::do_intersect()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__intersection" kindref="compound"><computeroutput>CGAL::intersection()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__join" kindref="compound"><computeroutput>CGAL::join()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__difference" kindref="compound"><computeroutput>CGAL::difference()</computeroutput> </ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__boolean__symmetric__difference" kindref="compound"><computeroutput>CGAL::symmetric_difference()</computeroutput> </ref> </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
