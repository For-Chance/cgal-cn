<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__boolean__oriented__side" kind="group">
    <compoundname>boolean_oriented_side</compoundname>
    <title>Oriented Side Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__boolean__oriented__side_1gac6162f4d4e8db605d73b5fdb38dbf9e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2460" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2460" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gadeda62937eaafcd77aa01d28e319e60d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to a general polygons bounded by polylines before the operation is actually performed. Then, the resulting general polygons with holes are converted back to standard polygons with holes. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2478" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2478" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gaf7907ce485fcbdf49cee892c05eb6ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2488" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2488" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga55460de2f3036bc89af6b01c8658790b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to a general polygon and a general polygon with holes, respectively, bounded by polylines before the operation is actually performed. Then, the resulting general polygons with holes are converted back to standard polygons with holes. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2507" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2507" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gad9c557e1648d40716b9abde027708784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2516" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2516" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga0f7634119a856871d3fc2d3ffbce3811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to a general polygon with holes and a general polygon, respectively, bounded by polylines before the operation is actually performed. Then, the resulting general polygons with holes are converted back to standard polygons with holes. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2534" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2534" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga958dd0458d5f10aa115ff69688b58848" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2544" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2544" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga81ab5ed55a78dfd3d0aa42373a08aba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename UsePolylines</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, UsePolylines=Tag_true())</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>UsePolylines</type>
          <defval>Tag_true()</defval>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as a cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are converted to general polygons with holes, bounded by polylines before the operation is actually performed. Then, the resulting general polygons with holes are converted back to standard polygons with holes. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2563" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2563" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gaf1330835f3c52d47697cc3e5eb60ee92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>1st the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2574" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2574" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga61106129c24f66f7e77547bc7ed3e009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2585" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2585" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga510d42f9b3c2736653b79e2279464d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2596" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2596" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gace74c04b0a13a369d1ab9182ab347fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn2)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2604" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2604" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gae16559a048d2b5a5221543a28556eb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2616" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2616" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gafa9dd6e6e93e33359608e7e5d3ff541a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2627" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2627" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga67a05fc6cb5ca5629abfe9462102924d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2638" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2638" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga5a00674bf0c793634b856cfb623a5457" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn1, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2649" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2649" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gad5c3fff7a78ae422dd323fcaf0410f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2663" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2663" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga6c70fe5e7e2893bea79e627812b64739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_2&lt; ArrTraits &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2678" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2678" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga330c1a320871c1a88fefc3ae6d1810e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;pgn1, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; General_polygon_2&lt; ArrTraits &gt; &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2693" column="1" declfile="CGAL/Boolean_set_operations_2.h" declline="2693" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gaf97662919e95a45f6ec2033a8a392ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn1, const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn2, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn1</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn2</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of two polygons. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1st input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the 2nd input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2704" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2704" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga587095916b470ab34916aa43a8ef9046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2715" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2715" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gaaaadc38264b92e390f5cd17c89630d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2723" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2723" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gab672810feef2a815ff6d20fd8904008c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2733" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2733" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga74f660d057ea4c67a1ea6dc12fd141c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2741" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2741" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga1de1de1aa06e694353f797bb5d2c0485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const Polygon_2&lt; Kernel, Container &gt; &amp;pgn, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2753" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2753" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1gaf7df014dbc4407da83d2a6bb35097f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>typename <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;pgn, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2764" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2764" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga177523e3bce988fed922d1feb537a8c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ArrTraits</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const General_polygon_2&lt; ArrTraits &gt; &amp;pgn, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const General_polygon_2&lt; ArrTraits &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ArrTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2777" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2777" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__boolean__oriented__side_1ga6b0ce2a27bfb03f037590c03666805fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
          <param>
            <type>typename GpsTraits</type>
          </param>
        </templateparamlist>
        <type>Oriented_side</type>
        <definition>Oriented_side CGAL::oriented_side</definition>
        <argsstring>(const Point_2 &amp;p, const General_polygon_with_holes_2&lt; Polygon &gt; &amp;pgn, const GpsTraits &amp;traits)</argsstring>
        <name>oriented_side</name>
        <qualifiedname>CGAL::oriented_side</qualifiedname>
        <param>
          <type>const Point_2 &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const General_polygon_with_holes_2&lt; Polygon &gt; &amp;</type>
          <declname>pgn</declname>
        </param>
        <param>
          <type>const GpsTraits &amp;</type>
          <declname>traits</declname>
        </param>
        <briefdescription>
<para>computes the relative position of a point and a polygon. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>a traits object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>GpsTraits</computeroutput> must be a model of the concept <computeroutput><ref refid="classGeneralPolygonSetTraits__2" kindref="compound">GeneralPolygonSetTraits_2</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Boolean_set_operations_2.h" line="2788" column="15" declfile="CGAL/Boolean_set_operations_2.h" declline="2788" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><anchor id="group__boolean__oriented__side_1ref_bso_oriented_side"/></para>
    </briefdescription>
    <detaileddescription>
<para>There are several overloaded function templates called <computeroutput><ref refid="group__kernel__enums_1ga5006dd2552d97fa577d81bd819c0f979" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Oriented_side()</ref></computeroutput> that compute the relative position of either (i) two polygons or (ii) a point and a polygon. This group of function templates is divided into two subgroups.</para>
<para><bold>Oriented Side of two Polygons</bold><linebreak/>
</para>
<para>Every function template in the first subgroup accepts two polygons <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput>. It returns <computeroutput>ON_POSITIVE_SIDE</computeroutput> if the two given polygons <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect in their interiors, <computeroutput>ON_NEGATIVE_SIDE</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> do not intersect at all, and <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput> if <computeroutput>pgn1</computeroutput> and <computeroutput>pgn2</computeroutput> intersect only in their boundaries.</para>
<para>A function template in this subgroup has one of the two following signatures: <table rows="3" cols="2"><row>
<entry thead="no" align="right"><para><bold>1.1.</bold></para>
</entry><entry thead="no"><para><computeroutput>Oriented_side oriented_side(const Type1&amp; pgn1, const Type2&amp; pgn2, UsePolylines = <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true()</ref>);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>1.2.</bold></para>
</entry><entry thead="no"><para><computeroutput>Oriented_side oriented_side(const Type1&amp; pgn1, const Type2&amp; pgn2);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>2.</bold></para>
</entry><entry thead="no"><para><computeroutput>Oriented_side oriented_side(const Type1&amp; pgn1, const Type2&amp; pgn2, const GpsTraits&amp; traits);</computeroutput> </para>
</entry></row>
</table>
</para>
<para><bold>Oriented Side of a Point and a Polygon</bold><linebreak/>
</para>
<para>The functions in the second group accept a point <computeroutput>p</computeroutput> and a polygon <computeroutput>pgn</computeroutput>. Each function in this group returns <computeroutput>ON_POSITIVE_SIDE</computeroutput> if the point <computeroutput>p</computeroutput> is in the interior of <computeroutput>pgn</computeroutput>, <computeroutput>ON_NEGATIVE_SIDE</computeroutput> if <computeroutput>p</computeroutput> is in the exterior of <computeroutput>pgn</computeroutput>, and <computeroutput>ON_ORIENTED_BOUNDARY</computeroutput> if <computeroutput>p</computeroutput> is on the boundary of <computeroutput>pgn</computeroutput>.</para>
<para>A function in this subgroup has one of the following signatures: <table rows="3" cols="2"><row>
<entry thead="no" align="right"><para><bold>3.1.</bold></para>
</entry><entry thead="no"><para><computeroutput>Oriented_side oriented_side(const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&amp; p, const Type&amp; pgn, UsePolylines = <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true()</ref>);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold>3.2.</bold></para>
</entry><entry thead="no"><para><computeroutput>Oriented_side oriented_side(const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&amp; p, const Type&amp; pgn);</computeroutput> </para>
</entry></row>
<row>
<entry thead="no" align="right"><para><bold> 4.</bold></para>
</entry><entry thead="no"><para><computeroutput>Oriented_side oriented_side(const <ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Point_2</ref>&amp; p, const Type&amp; pgn, const GpsTraits&amp; traits);</computeroutput> </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>UsePolylines</parametername>
</parameternamelist>
<parameterdescription>
<para>determines whether the boundaries of the input polygons are treated as cyclic sequences of single ( <formula id="34">$x$</formula>-monotone) segments or as cyclic sequences of ( <formula id="34">$x$</formula>-monotone) polylines. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></computeroutput>, which is the default, the input polygons are converted to general polygons bounded by polylines before the operation is actually performed. If substituted with <computeroutput><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></computeroutput>, the input polygons are used as is. Refer to <ref refid="index_1bso_ssectraits_sel" kindref="member">Traits Selection</ref> for more information.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<itemizedlist>
<listitem><para>The types <computeroutput>Type1</computeroutput> and <computeroutput>Type2</computeroutput> of the parameters must be convertible to the types specified in a row in the following table, respectively.</para>
</listitem><listitem><para>The types that apply to signature (<bold>1.1.</bold>) above are restricted to those listed in rows <bold>1<ndash/>4</bold> in the table below.</para>
</listitem><listitem><para>The types that apply to signature (<bold>1.2.</bold>) above are restricted to those listed in rows <bold>5<ndash/>8</bold> in the table below.</para>
</listitem></itemizedlist>
</para>
<para> <table rows="9" cols="3"><row>
<entry thead="yes"><para><nonbreakablespace/></para>
</entry><entry thead="yes"><para>Type1 </para>
</entry><entry thead="yes"><para>Type2 </para>
</entry></row>
<row>
<entry thead="no"><para><bold>1</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>2</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>3</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>4</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>5</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>6</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>7</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><bold>8</bold></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput></para>
</entry><entry thead="no" valign="middle"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput> </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para>In (<bold>3.1.</bold>) <computeroutput>Type</computeroutput> must be convertible to either <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref></computeroutput>.</para>
</listitem><listitem><para>In (<bold>3.2.</bold>) <computeroutput>Type</computeroutput> must be convertible to either <computeroutput><ref refid="classCGAL_1_1General__polygon__2" kindref="compound">General_polygon_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">General_polygon_with_holes_2</ref></computeroutput>.</para>
</listitem><listitem><para>In (<bold>4.</bold>) <computeroutput>Type</computeroutput> must be convertible to any of the four types above.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the input point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygon. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pgn1</parametername>
<parametername>pgn2</parametername>
</parameternamelist>
<parameterdescription>
<para>the input polygons. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>traits</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional traits object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__boolean__do__intersect" kindref="compound"><computeroutput>CGAL::do_intersect()</computeroutput> </ref> </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
