<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1ConstructRay__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::ConstructRay_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1ConstructRay__3_1a25471f1d37e126060e250376580c3041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Ray__3" kindref="compound">Kernel::Ray_3</ref></type>
        <definition>Kernel::Ray_3 Kernel::ConstructRay_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructRay_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a ray with source <computeroutput>p</computeroutput> and passing through point <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="6356" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructRay__3_1ae3eb5d2d7d88616daf256f2bcc5b07d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Ray__3" kindref="compound">Kernel::Ray_3</ref></type>
        <definition>Kernel::Ray_3 Kernel::ConstructRay_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Vector_3 &amp;v)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructRay_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Vector__3" kindref="compound">Kernel::Vector_3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>introduces a ray with source <computeroutput>p</computeroutput> and with the direction given by <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="6363" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructRay__3_1aeb16d1dcdab03fe8aabdbe8108c44d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Ray__3" kindref="compound">Kernel::Ray_3</ref></type>
        <definition>Kernel::Ray_3 Kernel::ConstructRay_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Direction_3 &amp;d)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructRay_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Direction__3" kindref="compound">Kernel::Direction_3</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>introduces a ray with source <computeroutput>p</computeroutput> and with direction <computeroutput>d</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="6370" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructRay__3_1a9041513992451e945d62c9e44be86112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Ray__3" kindref="compound">Kernel::Ray_3</ref></type>
        <definition>Kernel::Ray_3 Kernel::ConstructRay_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Line_3 &amp;l)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructRay_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Line__3" kindref="compound">Kernel::Line_3</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>introduces a ray with source <computeroutput>p</computeroutput> and with the same direction as <computeroutput>l</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="6377" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound">CGAL::Ray_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="6345" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="6345" bodyend="6382"/>
    <listofallmembers>
      <member refid="classKernel_1_1ConstructRay__3_1a25471f1d37e126060e250376580c3041" prot="public" virt="non-virtual"><scope>Kernel::ConstructRay_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructRay__3_1ae3eb5d2d7d88616daf256f2bcc5b07d7" prot="public" virt="non-virtual"><scope>Kernel::ConstructRay_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructRay__3_1aeb16d1dcdab03fe8aabdbe8108c44d32" prot="public" virt="non-virtual"><scope>Kernel::ConstructRay_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructRay__3_1a9041513992451e945d62c9e44be86112" prot="public" virt="non-virtual"><scope>Kernel::ConstructRay_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
