<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCGAL_1_1Filtered__kernel" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Filtered_kernel</compoundname>
    <includes local="no">CGAL/Filtered_kernel.h</includes>
    <templateparamlist>
      <param>
        <type>typename CK</type>
      </param>
      <param>
        <type>bool</type>
        <declname>UseStaticFilters</declname>
        <defname>UseStaticFilters</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="structCGAL_1_1Filtered__kernel_1a30aad0394da1283eb3d2ac87f0aa36df" prot="public" static="no">
        <type>EK</type>
        <definition>typedef EK CGAL::Filtered_kernel&lt; CK, UseStaticFilters &gt;::Exact_kernel</definition>
        <argsstring></argsstring>
        <name>Exact_kernel</name>
        <qualifiedname>CGAL::Filtered_kernel::Exact_kernel</qualifiedname>
        <briefdescription>
<para>The type of the exact kernel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Filtered_kernel.h" line="104" column="12" bodyfile="CGAL/Filtered_kernel.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structCGAL_1_1Filtered__kernel_1ae72cbb94616fe734950bcbf8b087bfba" prot="public" static="no">
        <type>FK</type>
        <definition>typedef FK CGAL::Filtered_kernel&lt; CK, UseStaticFilters &gt;::Approximate_kernel</definition>
        <argsstring></argsstring>
        <name>Approximate_kernel</name>
        <qualifiedname>CGAL::Filtered_kernel::Approximate_kernel</qualifiedname>
        <briefdescription>
<para>The type of the approximate &quot;filtering&quot; kernel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Filtered_kernel.h" line="109" column="12" bodyfile="CGAL/Filtered_kernel.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constants</header>
      <memberdef kind="variable" id="structCGAL_1_1Filtered__kernel_1a0203e552b521b48dd3e511e5af124a7b" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool CGAL::Filtered_kernel&lt; CK, UseStaticFilters &gt;::Has_static_filters</definition>
        <argsstring></argsstring>
        <name>Has_static_filters</name>
        <qualifiedname>CGAL::Filtered_kernel::Has_static_filters</qualifiedname>
        <briefdescription>
<para>A Boolean value corresponding to the second template argument. </para>
        </briefdescription>
        <detaileddescription>
<para>Tells whether static filters are provided. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Filtered_kernel.h" line="120" column="19" bodyfile="CGAL/Filtered_kernel.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="structCGAL_1_1Filtered__kernel" kindref="compound">Filtered_kernel</ref></computeroutput> is a kernel that uses a filtering technique based on interval arithmetic form to achieve exact and efficient predicates. </para>
    </briefdescription>
    <detaileddescription>
<para>It is based on <ref refid="citelist_1CITEREF_cgal:bbp-iayed-01" kindref="member">[1]</ref>. In addition, a few selected important predicates are implemented using the formally proved, semi-static, filtering techniques from <ref refid="citelist_1CITEREF_cgal:mp-fcafg-05" kindref="member">[4]</ref>.</para>
<para>The geometric constructions are exactly those of the kernel <computeroutput>CK</computeroutput>, which means that they are not necessarily exact.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CK</parametername>
</parameternamelist>
<parameterdescription>
<para>the &quot;Construction Kernel&quot;, namely the kernel from which are taken the types of the geometric objects as well as the geometric constructions.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UseStaticFilters</parametername>
</parameternamelist>
<parameterdescription>
<para>a Boolean value which activates or not an additional layer of semi-static filters. It defaults to <computeroutput>true</computeroutput> (activated), unless the <computeroutput>CGAL_NO_STATIC_FILTERS</computeroutput> macro is defined. This option is mostly for debugging and testing, there should be no production use for deactivating static filters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classKernel" kindref="compound">Kernel</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><bold>Example</bold><linebreak/>
</para>
<para>The following example shows how to produce a kernel whose geometric objects and constructions are those of <computeroutput><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">Simple_cartesian</ref>&lt;double&gt;</computeroutput> but the predicates are exact.</para>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Simple_cartesian.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Filtered_kernel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Simple__cartesian" kindref="compound">CGAL::Simple_cartesian&lt;double&gt;</ref><sp/>CK;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structCGAL_1_1Filtered__kernel" kindref="compound">CGAL::Filtered_kernel&lt;CK&gt;</ref><sp/>K;</highlight></codeline>
</programlisting></para>
<para><bold>Implementation</bold><linebreak/>
</para>
<para>The implementation uses <computeroutput><ref refid="classCGAL_1_1Filtered__predicate" kindref="compound">CGAL::Filtered_predicate</ref>&lt;EP, FP, C2E, C2F&gt;</computeroutput> over each predicate of the kernel traits interface. Additionally, faster static filters may be used for a few selected critical predicates. </para>
    </detaileddescription>
    <location file="CGAL/Filtered_kernel.h" line="96" column="1" bodyfile="CGAL/Filtered_kernel.h" bodystart="96" bodyend="124"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Filtered__kernel_1ae72cbb94616fe734950bcbf8b087bfba" prot="public" virt="non-virtual"><scope>CGAL::Filtered_kernel</scope><name>Approximate_kernel</name></member>
      <member refid="structCGAL_1_1Filtered__kernel_1a30aad0394da1283eb3d2ac87f0aa36df" prot="public" virt="non-virtual"><scope>CGAL::Filtered_kernel</scope><name>Exact_kernel</name></member>
      <member refid="structCGAL_1_1Filtered__kernel_1a0203e552b521b48dd3e511e5af124a7b" prot="public" virt="non-virtual"><scope>CGAL::Filtered_kernel</scope><name>Has_static_filters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
