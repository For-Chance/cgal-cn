<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1HasOn__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::HasOn_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1a3e045b4b4e9d7d7509285c047793b7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Circle_3 &amp;c, const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Circle__3" kindref="compound">Kernel::Circle_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> lies on <computeroutput>c</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8461" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1ae4bb7458bbc06eae0b66c3f759383641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Line_3 &amp;l, const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Line__3" kindref="compound">Kernel::Line_3</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> lies on <computeroutput>l</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8467" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1a2fd2e8f39e040d6103262654d97ef1ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Ray_3 &amp;r, const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Ray__3" kindref="compound">Kernel::Ray_3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> lies on <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8473" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1aaa9462bbfe01f162d21359ab744e910d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Segment_3 &amp;s, const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Segment__3" kindref="compound">Kernel::Segment_3</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> lies on <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8479" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1a81614d85aa609ec6a282cf0bbebb48ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Plane_3 &amp;pl, const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref> &amp;</type>
          <declname>pl</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> lies on <computeroutput>pl</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8485" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1a7342749b4d33bd15d4dd309a26f7b8a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Plane_3 &amp;pl, const Kernel::Line_3 &amp;l)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref> &amp;</type>
          <declname>pl</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Line__3" kindref="compound">Kernel::Line_3</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>l</computeroutput> lies on <computeroutput>pl</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8491" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1a151e1848d8dd2bb056872b6d7ef6ecdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Plane_3 &amp;pl, const Kernel::Circle_3 &amp;c)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref> &amp;</type>
          <declname>pl</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Circle__3" kindref="compound">Kernel::Circle_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>c</computeroutput> lies on <computeroutput>pl</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8497" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1afc33d5b0386c2b72d365ddc9b4297fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Sphere_3 &amp;s, const Kernel::Point_3 &amp;c)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Sphere__3" kindref="compound">Kernel::Sphere_3</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>c</computeroutput> lies on <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8503" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1aedbeef9a5bf64bc0d0ec656df98067e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Sphere_3 &amp;s, const Kernel::Circle_3 &amp;c)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Sphere__3" kindref="compound">Kernel::Sphere_3</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Circle__3" kindref="compound">Kernel::Circle_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>c</computeroutput> lies on <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8509" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1HasOn__3_1ace46b50f7294499722f854af7ff2de6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::HasOn_3::operator()</definition>
        <argsstring>(const Kernel::Triangle_3 &amp;t, const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::HasOn_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Triangle__3" kindref="compound">Kernel::Triangle_3</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns true iff <computeroutput>p</computeroutput> lies on <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="8515" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">CGAL::Circle_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Line__3" kindref="compound">CGAL::Line_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound">CGAL::Ray_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Segment__3" kindref="compound">CGAL::Segment_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound">CGAL::Sphere_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangle__3" kindref="compound">CGAL::Triangle_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="8451" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="8451" bodyend="8520"/>
    <listofallmembers>
      <member refid="classKernel_1_1HasOn__3_1a3e045b4b4e9d7d7509285c047793b7f2" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1ae4bb7458bbc06eae0b66c3f759383641" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1a2fd2e8f39e040d6103262654d97ef1ff" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1aaa9462bbfe01f162d21359ab744e910d" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1a81614d85aa609ec6a282cf0bbebb48ae" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1a7342749b4d33bd15d4dd309a26f7b8a7" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1a151e1848d8dd2bb056872b6d7ef6ecdc" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1afc33d5b0386c2b72d365ddc9b4297fea" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1aedbeef9a5bf64bc0d0ec656df98067e3" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1HasOn__3_1ace46b50f7294499722f854af7ff2de6a" prot="public" virt="non-virtual"><scope>Kernel::HasOn_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
