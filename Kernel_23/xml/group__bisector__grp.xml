<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__bisector__grp" kind="group">
    <compoundname>bisector_grp</compoundname>
    <title>CGAL::bisector()</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bisector__grp_1gae2f18028215b4f35e25f2b976c7fbe18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>constructs the bisector line of the two points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The bisector is oriented in such a way that <computeroutput>p</computeroutput> lies on its positive side. <simplesect kind="pre"><para><computeroutput>p != q</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="347" column="14" declfile="CGAL/Kernel/global_functions.h" declline="347" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1ga6ab4118cb8d778c1a71baab68fee9ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Line_2&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>constructs the bisector of the two lines <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>In the general case, the bisector has the direction of the vector which is the sum of the normalized directions of the two lines, and which passes through the intersection of <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. If <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> are parallel, then the bisector is defined as the line which has the same direction as <computeroutput>l1</computeroutput>, and which is at the same distance from <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. If <computeroutput>Kernel::FT</computeroutput> is not a model of <computeroutput><ref refid="classFieldWithSqrt" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">FieldWithSqrt</ref></computeroutput> an approximation of the square root will be used in this function, impacting the exactness of the result even with an (exact) multiprecision number type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="364" column="14" declfile="CGAL/Kernel/global_functions.h" declline="364" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1gabbd6e8a906a35af72bb4c3cd9db0af97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>constructs the bisector plane of the two points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The bisector is oriented in such a way that <computeroutput>p</computeroutput> lies on its positive side. <simplesect kind="pre"><para><computeroutput>p != q</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="373" column="15" declfile="CGAL/Kernel/global_functions.h" declline="373" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group__bisector__grp_1ga65430282124195ea4ab11ca496e8d641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Plane_3&lt; Kernel &gt; CGAL::bisector</definition>
        <argsstring>(const CGAL::Plane_3&lt; Kernel &gt; &amp;h1, const CGAL::Plane_3&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>bisector</name>
        <qualifiedname>CGAL::bisector</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Plane__3" kindref="compound">CGAL::Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>constructs the bisector of the two planes <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>In the general case, the bisector has a normal vector which has the same direction as the sum of the normalized normal vectors of the two planes, and passes through the intersection of <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. If <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are parallel, then the bisector is defined as the plane which has the same oriented normal vector as <computeroutput>l1</computeroutput>, and which is at the same distance from <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. If <computeroutput>Kernel::FT</computeroutput> is not a model of <computeroutput><ref refid="classFieldWithSqrt" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">FieldWithSqrt</ref></computeroutput> an approximation of the square root will be used in this function, impacting the exactness of the result even with an (exact) multiprecision number type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="390" column="15" declfile="CGAL/Kernel/global_functions.h" declline="390" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
