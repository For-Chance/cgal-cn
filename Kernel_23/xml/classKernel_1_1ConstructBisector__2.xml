<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1ConstructBisector__2" kind="class" language="C++" prot="public">
    <compoundname>Kernel::ConstructBisector_2</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1ConstructBisector__2_1ac63c11941c834d2fa34cedfd142cff0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Line__2" kindref="compound">Kernel::Line_2</ref></type>
        <definition>Kernel::Line_2 Kernel::ConstructBisector_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;p, const Kernel::Point_2 &amp;q)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructBisector_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>constructs the bisector of <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The bisector is oriented in such a way that <computeroutput>p</computeroutput> lies on its positive side. <simplesect kind="pre"><para><computeroutput>p != q</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3933" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructBisector__2_1a879267dfb97a5e44f3b7ec3411d867cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Line__2" kindref="compound">Kernel::Line_2</ref></type>
        <definition>Kernel::Line_2 Kernel::ConstructBisector_2::operator()</definition>
        <argsstring>(const Kernel::Line_2 &amp;l1, const Kernel::Line_2 &amp;l2)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructBisector_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Line__2" kindref="compound">Kernel::Line_2</ref> &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Line__2" kindref="compound">Kernel::Line_2</ref> &amp;</type>
          <declname>l2</declname>
        </param>
        <briefdescription>
<para>constructs the bisector of the two lines <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>In the general case, the bisector has the direction of the vector which is the sum of the normalized directions of the two lines, and which passes through the intersection of <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. If <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> are parallel, then the bisector is defined as the line which has the same direction as <computeroutput>l1</computeroutput>, and which is at the same distance from <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3945" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__bisector__grp" kindref="compound">CGAL::bisector()</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="3921" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="3921" bodyend="3950"/>
    <listofallmembers>
      <member refid="classKernel_1_1ConstructBisector__2_1ac63c11941c834d2fa34cedfd142cff0c" prot="public" virt="non-virtual"><scope>Kernel::ConstructBisector_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructBisector__2_1a879267dfb97a5e44f3b7ec3411d867cd" prot="public" virt="non-virtual"><scope>Kernel::ConstructBisector_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
