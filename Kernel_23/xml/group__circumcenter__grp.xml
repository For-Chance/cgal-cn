<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__circumcenter__grp" kind="group">
    <compoundname>circumcenter_grp</compoundname>
    <title>CGAL::circumcenter()</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__circumcenter__grp_1ga37a20bf6fba404c8478839b79f7d86fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>compute the center of the smallest circle passing through the points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: this is the same as <computeroutput>CGAL::midpoint(p, q)</computeroutput> but is provided for homogeneity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="472" column="1" declfile="CGAL/Kernel/global_functions.h" declline="472" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga428547debb4b2a1e5f9add7eac6a0252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Point_2&lt; Kernel &gt; &amp;q, const CGAL::Point_2&lt; Kernel &gt; &amp;r)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>compute the center of the circle passing through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="481" column="1" declfile="CGAL/Kernel/global_functions.h" declline="481" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga79c902e4193136b21f1f34f41ec3758b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_2&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Triangle_2&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__2" kindref="compound">CGAL::Triangle_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>compute the center of the circle passing through the vertices of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>t</computeroutput> is not degenerate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="491" column="1" declfile="CGAL/Kernel/global_functions.h" declline="491" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gae7e2f5c2113dfcaacdac1c48731ec4ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>compute the center of the smallest sphere passing through the points <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: this is the same as <computeroutput>CGAL::midpoint(p, q)</computeroutput> but is provided for homogeneity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="500" column="1" declfile="CGAL/Kernel/global_functions.h" declline="500" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaf9d9a943d799c9ecc1ceb2621ce8d338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>compute the center of the circle passing through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="509" column="1" declfile="CGAL/Kernel/global_functions.h" declline="509" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaf09cd6ac1f6e2244165fd14e5649b720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Triangle_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound">CGAL::Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>compute the center of the circle passing through the vertices of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>t</computeroutput> is not degenerate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="519" column="1" declfile="CGAL/Kernel/global_functions.h" declline="519" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1gaab15ebb35f4455debe3884c419838ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Point_3&lt; Kernel &gt; &amp;p, const CGAL::Point_3&lt; Kernel &gt; &amp;q, const CGAL::Point_3&lt; Kernel &gt; &amp;r, const CGAL::Point_3&lt; Kernel &gt; &amp;s)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>compute the center of the sphere passing through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput>, and <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput>, and <computeroutput>s</computeroutput> are not coplanar. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="527" column="1" declfile="CGAL/Kernel/global_functions.h" declline="527" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__circumcenter__grp_1ga9528d43c5ab5ea4145e97709a1e33187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">CGAL::Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>CGAL::Point_3&lt; Kernel &gt; CGAL::circumcenter</definition>
        <argsstring>(const CGAL::Tetrahedron_3&lt; Kernel &gt; &amp;t)</argsstring>
        <name>circumcenter</name>
        <qualifiedname>CGAL::circumcenter</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Tetrahedron__3" kindref="compound">CGAL::Tetrahedron_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>compute the center of the sphere passing through the vertices of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>t</computeroutput> is not degenerate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="538" column="1" declfile="CGAL/Kernel/global_functions.h" declline="538" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
