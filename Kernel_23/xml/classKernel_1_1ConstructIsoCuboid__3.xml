<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1ConstructIsoCuboid__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::ConstructIsoCuboid_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1ConstructIsoCuboid__3_1a5e899102c5dc46d9e5a261b36563be18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::Iso_cuboid_3</type>
        <definition>Kernel::Iso_cuboid_3 Kernel::ConstructIsoCuboid_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructIsoCuboid_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid with diagonal opposite vertices <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput> such that <computeroutput>p</computeroutput> is the lexicographically smallest point in the cuboid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4743" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructIsoCuboid__3_1af7f96b399b80313a4686cfae55e571ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::Iso_cuboid_3</type>
        <definition>Kernel::Iso_cuboid_3 Kernel::ConstructIsoCuboid_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q, int)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructIsoCuboid_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid with diagonal opposite vertices <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>int</computeroutput> argument value is only used to distinguish the two overloaded functions. <simplesect kind="pre"><para><computeroutput>p.x()&lt;=q.x()</computeroutput>, <computeroutput>p.y()&lt;=q.y()</computeroutput> and <computeroutput>p.z()&lt;=q.z()</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4752" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructIsoCuboid__3_1aa4a8f50bd462fb2f5527f5cc81072d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::Iso_cuboid_3</type>
        <definition>Kernel::Iso_cuboid_3 Kernel::ConstructIsoCuboid_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;left, const Kernel::Point_3 &amp;right, const Kernel::Point_3 &amp;bottom, const Kernel::Point_3 &amp;top, const Kernel::Point_3 &amp;far, const Kernel::Point_3 &amp;close)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructIsoCuboid_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>far</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>close</declname>
        </param>
        <briefdescription>
<para>introduces an iso-oriented cuboid <computeroutput>fo</computeroutput> whose minimal <formula id="44">$ x$</formula> coordinate is the one of <computeroutput>left</computeroutput>, the maximal <formula id="44">$ x$</formula> coordinate is the one of <computeroutput>right</computeroutput>, the minimal <formula id="48">$ y$</formula> coordinate is the one of <computeroutput>bottom</computeroutput>, the maximal <formula id="48">$ y$</formula> coordinate is the one of <computeroutput>top</computeroutput>, the minimal <formula id="49">$ z$</formula> coordinate is the one of <computeroutput>far</computeroutput>, the maximal <formula id="49">$ z$</formula> coordinate is the one of <computeroutput>close</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4766" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Iso__cuboid__3" kindref="compound">CGAL::Iso_cuboid_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="4731" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="4731" bodyend="4775"/>
    <listofallmembers>
      <member refid="classKernel_1_1ConstructIsoCuboid__3_1a5e899102c5dc46d9e5a261b36563be18" prot="public" virt="non-virtual"><scope>Kernel::ConstructIsoCuboid_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructIsoCuboid__3_1af7f96b399b80313a4686cfae55e571ea" prot="public" virt="non-virtual"><scope>Kernel::ConstructIsoCuboid_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructIsoCuboid__3_1aa4a8f50bd462fb2f5527f5cc81072d35" prot="public" virt="non-virtual"><scope>Kernel::ConstructIsoCuboid_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
