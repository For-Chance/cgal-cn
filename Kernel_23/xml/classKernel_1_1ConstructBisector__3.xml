<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1ConstructBisector__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::ConstructBisector_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1ConstructBisector__3_1a86b47d0de509eebc84c7f08dedb6cc2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref></type>
        <definition>Kernel::Plane_3 Kernel::ConstructBisector_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructBisector_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>constructs the bisector plane of <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The bisector is oriented in such a way that <computeroutput>p</computeroutput> lies on its positive side. <simplesect kind="pre"><para><computeroutput>p != q</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3974" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructBisector__3_1a1f58b405683701835560351f1e891afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref></type>
        <definition>Kernel::Plane_3 Kernel::ConstructBisector_3::operator()</definition>
        <argsstring>(const Kernel::Plane_3 &amp;h1, const Kernel::Plane_3 &amp;h2)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructBisector_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Plane__3" kindref="compound">Kernel::Plane_3</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>constructs the bisector of the two planes <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>In the general case, the bisector has a normal vector which has the same direction as the sum of the normalized normal vectors of the two planes, and passes through the intersection of <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. If <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are parallel, then the bisector is defined as the plane which has the same oriented normal vector as <computeroutput>h1</computeroutput>, and which is at the same distance from <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3986" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__bisector__grp" kindref="compound">CGAL::bisector()</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="3961" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="3961" bodyend="3992"/>
    <listofallmembers>
      <member refid="classKernel_1_1ConstructBisector__3_1a86b47d0de509eebc84c7f08dedb6cc2a" prot="public" virt="non-virtual"><scope>Kernel::ConstructBisector_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructBisector__3_1a1f58b405683701835560351f1e891afe" prot="public" virt="non-virtual"><scope>Kernel::ConstructBisector_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
