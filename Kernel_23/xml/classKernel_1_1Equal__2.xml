<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1Equal__2" kind="class" language="C++" prot="public">
    <compoundname>Kernel::Equal_2</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide the following operations.</para>
<para>For each of them, it returns <computeroutput>true</computeroutput> iff <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> are equal. </para>
</description>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1a2d8fd0770587c2b3a38738968d39900d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Point_2 &amp;x, const Kernel::Point_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7799" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1ab3f1fcdd4db8a24272f2554c9d11bb87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Vector_2 &amp;x, const Kernel::Vector_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Vector__2" kindref="compound">Kernel::Vector_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Vector__2" kindref="compound">Kernel::Vector_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7805" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1a4182955999ada0612389e4c261945130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Direction_2 &amp;x, const Kernel::Direction_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Direction__2" kindref="compound">Kernel::Direction_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Direction__2" kindref="compound">Kernel::Direction_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7811" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1a1e95d9b277d246dd3beaa3186164bd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Line_2 &amp;x, const Kernel::Line_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Line__2" kindref="compound">Kernel::Line_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Line__2" kindref="compound">Kernel::Line_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7817" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1adeb7bf5778b72df36e8b8efb9a3c16a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Ray_2 &amp;x, const Kernel::Ray_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Ray__2" kindref="compound">Kernel::Ray_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Ray__2" kindref="compound">Kernel::Ray_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7823" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1ab480b7a287645a11c209adbdcf0ca31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Segment_2 &amp;x, const Kernel::Segment_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Segment__2" kindref="compound">Kernel::Segment_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Segment__2" kindref="compound">Kernel::Segment_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7829" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1a4031555fb327fbc38a919782644a0230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Circle_2 &amp;x, const Kernel::Circle_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7835" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1a04fcc68d3eca46e61a78b04962bbfe14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Triangle_2 &amp;x, const Kernel::Triangle_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Triangle__2" kindref="compound">Kernel::Triangle_2</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Triangle__2" kindref="compound">Kernel::Triangle_2</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7841" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1Equal__2_1afd9c6b2c1da3ef5742dc03894a68ff58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Kernel::Equal_2::operator()</definition>
        <argsstring>(const Kernel::Iso_rectangle_2 &amp;x, const Kernel::Iso_rectangle_2 &amp;y)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::Equal_2::operator()</qualifiedname>
        <param>
          <type>const Kernel::Iso_rectangle_2 &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Kernel::Iso_rectangle_2 &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="7847" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circle__2" kindref="compound">CGAL::Circle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Direction__2" kindref="compound">CGAL::Direction_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Iso__rectangle__2" kindref="compound">CGAL::Iso_rectangle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Ray__2" kindref="compound">CGAL::Ray_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Segment__2" kindref="compound">CGAL::Segment_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangle__2" kindref="compound">CGAL::Triangle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Vector__2" kindref="compound">CGAL::Vector_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="7788" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="7788" bodyend="7852"/>
    <listofallmembers>
      <member refid="classKernel_1_1Equal__2_1a2d8fd0770587c2b3a38738968d39900d" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1ab3f1fcdd4db8a24272f2554c9d11bb87" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1a4182955999ada0612389e4c261945130" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1a1e95d9b277d246dd3beaa3186164bd95" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1adeb7bf5778b72df36e8b8efb9a3c16a9" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1ab480b7a287645a11c209adbdcf0ca31a" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1a4031555fb327fbc38a919782644a0230" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1a04fcc68d3eca46e61a78b04962bbfe14" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1Equal__2_1afd9c6b2c1da3ef5742dc03894a68ff58" prot="public" virt="non-virtual"><scope>Kernel::Equal_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
