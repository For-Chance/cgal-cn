<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Triangle__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangle_3</compoundname>
    <includes local="no">CGAL/Triangle_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1afdbaa1d6cb37fc9ead83e0df947a8e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Triangle_3&lt; Kernel &gt;::Triangle_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q, const Point_3&lt; Kernel &gt; &amp;r)</argsstring>
        <name>Triangle_3</name>
        <qualifiedname>CGAL::Triangle_3::Triangle_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>introduces a triangle <computeroutput>t</computeroutput> with vertices <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Exactness</term></varlistentry>
<listitem><para>This construction is trivial and therefore always exact in <computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound">Exact_predicates_inexact_constructions_kernel</ref></computeroutput>.</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="25" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1ae43e3a54e93515b2132f7f7398f1b5c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangle_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Triangle_3&lt; Kernel &gt; &amp;t2) const</argsstring>
        <name>operator==</name>
        <qualifiedname>CGAL::Triangle_3::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Test for equality: two triangles <computeroutput>t1</computeroutput> and <computeroutput>t2</computeroutput> are equal, iff there exists a cyclic permutation of the vertices of <computeroutput>t2</computeroutput>, such that they are equal to the vertices of <computeroutput>t1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="39" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1ac5f2aef4e4a72b0842e987761bd62aa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangle_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Triangle_3&lt; Kernel &gt; &amp;t2) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>CGAL::Triangle_3::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="44" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1a284729f483cb913b82c95228c3a9b3b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt; Kernel &gt; CGAL::Triangle_3&lt; Kernel &gt;::vertex</definition>
        <argsstring>(int i) const</argsstring>
        <name>vertex</name>
        <qualifiedname>CGAL::Triangle_3::vertex</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the i&apos;th vertex modulo 3 of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Exactness</term></varlistentry>
<listitem><para>This construction is trivial and therefore always exact in <computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound">Exact_predicates_inexact_constructions_kernel</ref></computeroutput>.</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="50" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1abd870d17250fc3b8b6602f570c13102f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt; Kernel &gt; CGAL::Triangle_3&lt; Kernel &gt;::operator[]</definition>
        <argsstring>(int i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>CGAL::Triangle_3::operator[]</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>vertex(int i)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Exactness</term></varlistentry>
<listitem><para>This construction is trivial and therefore always exact in <computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound">Exact_predicates_inexact_constructions_kernel</ref></computeroutput>.</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="56" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1aa7474f31c2d932b89d4cbed08ead8c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Plane__3" kindref="compound">Plane_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Plane_3&lt; Kernel &gt; CGAL::Triangle_3&lt; Kernel &gt;::supporting_plane</definition>
        <argsstring>()</argsstring>
        <name>supporting_plane</name>
        <qualifiedname>CGAL::Triangle_3::supporting_plane</qualifiedname>
        <briefdescription>
<para>returns the supporting plane of <computeroutput>t</computeroutput>, with same orientation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="62" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Predicates</header>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1ae758d9c6afaf9f8cdcb891112217b425" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangle_3&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <qualifiedname>CGAL::Triangle_3::is_degenerate</qualifiedname>
        <briefdescription>
<para><computeroutput>t</computeroutput> is degenerate if its vertices are collinear. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="72" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1a9a44d2c09ad7019d75319485586d9b3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Triangle_3&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on</name>
        <qualifiedname>CGAL::Triangle_3::has_on</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>A point is on <computeroutput>t</computeroutput>, if it is on a vertex, an edge or the face of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="78" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Miscellaneous</header>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1ad8d67a5a793d6041a78e09d2bf456d9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT CGAL::Triangle_3&lt; Kernel &gt;::squared_area</definition>
        <argsstring>() const</argsstring>
        <name>squared_area</name>
        <qualifiedname>CGAL::Triangle_3::squared_area</qualifiedname>
        <briefdescription>
<para>returns a square of the area of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="88" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1ac08d19415006fd6c1cfc67db7172967f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Bbox__3" kindref="compound">Bbox_3</ref></type>
        <definition>Bbox_3 CGAL::Triangle_3&lt; Kernel &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>CGAL::Triangle_3::bbox</qualifiedname>
        <briefdescription>
<para>returns a bounding box containing <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Exactness</term></varlistentry>
<listitem><para>This construction is trivial and therefore always exact in <computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound">Exact_predicates_inexact_constructions_kernel</ref></computeroutput>.</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="94" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangle__3_1a9cba1f49edc2a7cb667309fa35cb773e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Triangle_3&lt; Kernel &gt; CGAL::Triangle_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;at) const</argsstring>
        <name>transform</name>
        <qualifiedname>CGAL::Triangle_3::transform</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>at</declname>
        </param>
        <briefdescription>
<para>returns the triangle obtained by applying <computeroutput>at</computeroutput> on the three vertices of <computeroutput>t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangle_3.h" line="100" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>t</computeroutput> of the class <computeroutput><ref refid="classCGAL_1_1Triangle__3" kindref="compound">Triangle_3</ref></computeroutput> is a triangle in the three-dimensional Euclidean space <formula id="30">$ \E^3$</formula>. </para>
    </briefdescription>
    <detaileddescription>
<para>As the triangle is not a full-dimensional object there is only a test whether a point lies on the triangle or not.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classKernel_1_1Triangle__3" kindref="compound">Kernel::Triangle_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/Triangle_3.h" line="15" column="1" bodyfile="CGAL/Triangle_3.h" bodystart="15" bodyend="104"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Triangle__3_1ac08d19415006fd6c1cfc67db7172967f" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Triangle__3_1a9a44d2c09ad7019d75319485586d9b3e" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Triangle__3_1ae758d9c6afaf9f8cdcb891112217b425" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Triangle__3_1ac5f2aef4e4a72b0842e987761bd62aa7" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Triangle__3_1ae43e3a54e93515b2132f7f7398f1b5c8" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Triangle__3_1abd870d17250fc3b8b6602f570c13102f" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Triangle__3_1ad8d67a5a793d6041a78e09d2bf456d9e" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>squared_area</name></member>
      <member refid="classCGAL_1_1Triangle__3_1aa7474f31c2d932b89d4cbed08ead8c1a" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>supporting_plane</name></member>
      <member refid="classCGAL_1_1Triangle__3_1a9cba1f49edc2a7cb667309fa35cb773e" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>transform</name></member>
      <member refid="classCGAL_1_1Triangle__3_1afdbaa1d6cb37fc9ead83e0df947a8e18" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>Triangle_3</name></member>
      <member refid="classCGAL_1_1Triangle__3_1a284729f483cb913b82c95228c3a9b3b6" prot="public" virt="non-virtual"><scope>CGAL::Triangle_3</scope><name>vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
