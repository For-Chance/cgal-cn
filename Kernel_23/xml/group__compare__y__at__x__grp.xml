<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__compare__y__at__x__grp" kind="group">
    <compoundname>compare_y_at_x_grp</compoundname>
    <title>CGAL::compare_y_at_x()</title>
      <sectiondef kind="user-defined">
      <header>With the 2D Circular Kernel</header>
      <description><para>See <ref refid="index_1Chapter_2D_Circular_Geometry_Kernel" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">2D Circular Geometry Kernel</ref>.</para>
<para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/global_functions_circular_kernel_2.h&gt;</highlight></codeline>
</programlisting> </para>
</description>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga31c617e3d8655fb3578f0bc9682f18e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCircularKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Circular_arc_2&lt; CircularKernel &gt; &amp;a)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CGAL::Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CGAL::Circular_arc_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Same as above, for a point and a circular arc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1402" column="1" declfile="CGAL/Kernel/global_functions.h" declline="1402" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gae97031deffe68932300f80df4e2ff259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classCircularKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Circular_arc_point_2&lt; CircularKernel &gt; &amp;p, const CGAL::Line_arc_2&lt; CircularKernel &gt; &amp;a)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Circular__arc__point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CGAL::Circular_arc_point_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__arc__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CGAL::Line_arc_2</ref>&lt; <ref refid="classCircularKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circular_kernel_2.tag">CircularKernel</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Same as above, for a point and a line segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1408" column="1" declfile="CGAL/Kernel/global_functions.h" declline="1408" declcolumn="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga0570b8a2164c4f3923053d63b24b4f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>compares the <formula id="48">$ y$</formula>-coordinates of <computeroutput>p</computeroutput> and the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See Figure <ref refid="group__compare__y__at__x__grp_1figcompareyatx" kindref="member">figcompareyatx</ref> (d).</para>
<para><simplesect kind="pre"><para><computeroutput>h</computeroutput> is not vertical. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1323" column="19" declfile="CGAL/Kernel/global_functions.h" declline="1323" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga7b7f2a9e506760f69854b5dce9ab275c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>compares the <formula id="48">$ y$</formula>-coordinates of the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h1</computeroutput> and on <computeroutput>h2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See Figure <ref refid="group__compare__y__at__x__grp_1figcompareyatx" kindref="member">figcompareyatx</ref> (e).</para>
<para><simplesect kind="pre"><para><computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are not vertical. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1334" column="19" declfile="CGAL/Kernel/global_functions.h" declline="1334" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gaf2f8b7114e12573f676e8e0302e54500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Let <computeroutput>p</computeroutput> be the <computeroutput>intersection</computeroutput> of lines <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compares the <formula id="48">$ y$</formula>-coordinates of <computeroutput>p</computeroutput> and the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h</computeroutput> See Figure <ref refid="group__compare__y__at__x__grp_1figcompareyatx" kindref="member">figcompareyatx</ref> (f).</para>
<para><simplesect kind="pre"><para><computeroutput>l1</computeroutput>, <computeroutput>l2</computeroutput> intersect and <computeroutput>h</computeroutput> is not vertical. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1348" column="19" declfile="CGAL/Kernel/global_functions.h" declline="1348" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1gaff3351d5c7507c74b3e48e8b1e4c3a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Line_2&lt; Kernel &gt; &amp;l1, const CGAL::Line_2&lt; Kernel &gt; &amp;l2, const CGAL::Line_2&lt; Kernel &gt; &amp;h1, const CGAL::Line_2&lt; Kernel &gt; &amp;h2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__2" kindref="compound">CGAL::Line_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
<para>Let <computeroutput>p</computeroutput> be the <computeroutput>intersection</computeroutput> of lines <computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compares the <formula id="48">$ y$</formula>-coordinates of the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>h1</computeroutput> and on <computeroutput>h2</computeroutput>. See Figure <ref refid="group__compare__y__at__x__grp_1figcompareyatx" kindref="member">figcompareyatx</ref> (g). <simplesect kind="pre"><para><computeroutput>l1</computeroutput> and <computeroutput>l2</computeroutput> intersect; <computeroutput>h1</computeroutput> and <computeroutput>h2</computeroutput> are not vertical. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1360" column="19" declfile="CGAL/Kernel/global_functions.h" declline="1360" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga05b0ffd47157a5f59142243b13961edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Segment_2&lt; Kernel &gt; &amp;s)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>compares the <formula id="48">$ y$</formula>-coordinates of <computeroutput>p</computeroutput> and the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s</computeroutput> is vertical, then return <computeroutput><ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469a5f224784e56ca565837a5d6d268fe078" kindref="member">CGAL::EQUAL</ref></computeroutput> when <computeroutput>p</computeroutput> lies on <computeroutput>s</computeroutput>, <computeroutput><ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab925c6b1ff8cd0bdea7f31fe18d3c38b" kindref="member">CGAL::SMALLER</ref></computeroutput> when <computeroutput>p</computeroutput> lies under {s}, and <computeroutput><ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab25bdbfd193e9ea35187a4f46e7d6fcd" kindref="member">CGAL::LARGER</ref></computeroutput> otherwise. <simplesect kind="pre"><para><computeroutput>p</computeroutput> is within the x range of <computeroutput>s</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1373" column="19" declfile="CGAL/Kernel/global_functions.h" declline="1373" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__compare__y__at__x__grp_1ga93fab9114bbea4402fc7c26825347fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
          </param>
        </templateparamlist>
        <type>Comparison_result</type>
        <definition>Comparison_result CGAL::compare_y_at_x</definition>
        <argsstring>(const CGAL::Point_2&lt; Kernel &gt; &amp;p, const CGAL::Segment_2&lt; Kernel &gt; &amp;s1, const CGAL::Segment_2&lt; Kernel &gt; &amp;s2)</argsstring>
        <name>compare_y_at_x</name>
        <qualifiedname>CGAL::compare_y_at_x</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__2" kindref="compound">CGAL::Point_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Segment__2" kindref="compound">CGAL::Segment_2</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>compares the <formula id="48">$ y$</formula>-coordinates of the vertical projection of <computeroutput>p</computeroutput> on <computeroutput>s1</computeroutput> and on <computeroutput>s2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>s1</computeroutput> or <computeroutput>s2</computeroutput> is vertical, then return <computeroutput><ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469a5f224784e56ca565837a5d6d268fe078" kindref="member">CGAL::EQUAL</ref></computeroutput> if they intersect, otherwise return <computeroutput><ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab925c6b1ff8cd0bdea7f31fe18d3c38b" kindref="member">CGAL::SMALLER</ref></computeroutput> if <computeroutput>s1</computeroutput> lies below <computeroutput>s2</computeroutput>, and return <computeroutput><ref refid="group__kernel__enums_1gga84351c7e66be00efccd4ab1a61070469ab25bdbfd193e9ea35187a4f46e7d6fcd" kindref="member">CGAL::LARGER</ref></computeroutput> otherwise. <simplesect kind="pre"><para><computeroutput>p</computeroutput> is within the x range of <computeroutput>s1</computeroutput> and <computeroutput>s2</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Kernel/global_functions.h" line="1385" column="19" declfile="CGAL/Kernel/global_functions.h" declline="1385" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><anchor id="group__compare__y__at__x__grp_1figcompareyatx"/></para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="compare2.png"></image>
 <image type="latex" name="compare2.png"></image>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__compare__xy__grp" kindref="compound">CGAL::compare_xy()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__compare__xyz__grp" kindref="compound">CGAL::compare_xyz()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__compare__x__grp" kindref="compound">CGAL::compare_x()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__compare__y__grp" kindref="compound">CGAL::compare_y()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__compare__yx__grp" kindref="compound">CGAL::compare_yx()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__compare__x__at__y__grp" kindref="compound">CGAL::compare_x_at_y()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__compare__z__grp" kindref="compound">CGAL::compare_z()</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
