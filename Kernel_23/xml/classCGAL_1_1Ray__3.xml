<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Ray__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Ray_3</compoundname>
    <includes local="no">CGAL/Ray_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename <ref refid="classKernel" kindref="compound">Kernel</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1ad87728c7cb3783376d75652b3febf27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_3&lt; Kernel &gt;::Ray_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Point_3&lt; Kernel &gt; &amp;q)</argsstring>
        <name>Ray_3</name>
        <qualifiedname>CGAL::Ray_3::Ray_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> with source <computeroutput>p</computeroutput> and passing through point <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Exactness</term></varlistentry>
<listitem><para>This construction is trivial and therefore always exact in <computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound">Exact_predicates_inexact_constructions_kernel</ref></computeroutput>.</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1aa26023c27cde978cff525affa8da308f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_3&lt; Kernel &gt;::Ray_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Direction_3&lt; Kernel &gt; &amp;d)</argsstring>
        <name>Ray_3</name>
        <qualifiedname>CGAL::Ray_3::Ray_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Direction__3" kindref="compound">Direction_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> with source <computeroutput>p</computeroutput> and with direction <computeroutput>d</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a5036bfb2e228eb0304fe95964c1b7f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_3&lt; Kernel &gt;::Ray_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>Ray_3</name>
        <qualifiedname>CGAL::Ray_3::Ray_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> with source <computeroutput>p</computeroutput> and with a direction given by <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1af69e29056c9c4c8fd3733e559da4688f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Ray_3&lt; Kernel &gt;::Ray_3</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p, const Line_3&lt; Kernel &gt; &amp;l)</argsstring>
        <name>Ray_3</name>
        <qualifiedname>CGAL::Ray_3::Ray_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>introduces a ray <computeroutput>r</computeroutput> starting at source <computeroutput>p</computeroutput> with the same direction as <computeroutput>l</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="43" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a6ac835de1b9ed9970deadcca273fdc10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_3&lt; Kernel &gt;::operator==</definition>
        <argsstring>(const Ray_3&lt; Kernel &gt; &amp;h) const</argsstring>
        <name>operator==</name>
        <qualifiedname>CGAL::Ray_3::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Test for equality: two rays are equal, iff they have the same source and the same direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="54" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a451d81857ac8ecf6973dac405b08882b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_3&lt; Kernel &gt;::operator!=</definition>
        <argsstring>(const Ray_3&lt; Kernel &gt; &amp;h) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>CGAL::Ray_3::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
<para>Test for inequality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="59" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a2f4257b21f4380f6f4bf064dfeed8e3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::source</definition>
        <argsstring>() const</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::Ray_3::source</qualifiedname>
        <briefdescription>
<para>returns the source of <computeroutput>r</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
<para><variablelist>
<varlistentry><term>Exactness</term></varlistentry>
<listitem><para>This construction is trivial and therefore always exact in <computeroutput><ref refid="classCGAL_1_1Exact__predicates__inexact__constructions__kernel" kindref="compound">Exact_predicates_inexact_constructions_kernel</ref></computeroutput>.</para>
</listitem>
</variablelist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="65" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1ab24a9a573e39ae892ac57e5bc2a68454" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Point_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::point</definition>
        <argsstring>(const Kernel::FT i) const</argsstring>
        <name>point</name>
        <qualifiedname>CGAL::Ray_3::point</qualifiedname>
        <param>
          <type>const Kernel::FT</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns a point on <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>point(0)</computeroutput> is the source. <computeroutput>point(i)</computeroutput>, with <computeroutput>i&gt;0</computeroutput>, is different from the source. <simplesect kind="pre"><para><computeroutput>i &gt;= 0</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="72" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a09826a4a168ebff952498da8de953878" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Direction__3" kindref="compound">Direction_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Direction_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::direction</definition>
        <argsstring>() const</argsstring>
        <name>direction</name>
        <qualifiedname>CGAL::Ray_3::direction</qualifiedname>
        <briefdescription>
<para>returns the direction of <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="77" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a93e74fb8845f6f438dcbacef18c8292b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Vector__3" kindref="compound">Vector_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::to_vector</definition>
        <argsstring>() const</argsstring>
        <name>to_vector</name>
        <qualifiedname>CGAL::Ray_3::to_vector</qualifiedname>
        <briefdescription>
<para>returns a vector giving the direction of <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1aafde41299e8eca5e3140d7f5fb22a295" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Line__3" kindref="compound">Line_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Line_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::supporting_line</definition>
        <argsstring>() const</argsstring>
        <name>supporting_line</name>
        <qualifiedname>CGAL::Ray_3::supporting_line</qualifiedname>
        <briefdescription>
<para>returns the line supporting <computeroutput>r</computeroutput> which has the same direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="87" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a93cc0fb0120ebf55e60cf7dfe32d2249" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Ray_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::opposite</definition>
        <argsstring>() const</argsstring>
        <name>opposite</name>
        <qualifiedname>CGAL::Ray_3::opposite</qualifiedname>
        <briefdescription>
<para>returns the ray with the same source and the opposite direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="92" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1adf2a4f6281ae7dfabc3c7f2c3b9bef7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_3&lt; Kernel &gt;::is_degenerate</definition>
        <argsstring>() const</argsstring>
        <name>is_degenerate</name>
        <qualifiedname>CGAL::Ray_3::is_degenerate</qualifiedname>
        <briefdescription>
<para>ray <computeroutput>r</computeroutput> is degenerate, if the source and the second defining point fall together (that is if the direction is degenerate). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="98" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1a48ccadbd918c1f5b45febdfb776b82ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Ray_3&lt; Kernel &gt;::has_on</definition>
        <argsstring>(const Point_3&lt; Kernel &gt; &amp;p) const</argsstring>
        <name>has_on</name>
        <qualifiedname>CGAL::Ray_3::has_on</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__3" kindref="compound">Point_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>A point is on <computeroutput>r</computeroutput>, iff it is equal to the source of <computeroutput>r</computeroutput>, or if it is in the interior of <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="104" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Ray__3_1ae2ec5ef680f9ac7b2af68622c5538d91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Ray_3&lt; Kernel &gt; CGAL::Ray_3&lt; Kernel &gt;::transform</definition>
        <argsstring>(const Aff_transformation_3&lt; Kernel &gt; &amp;t) const</argsstring>
        <name>transform</name>
        <qualifiedname>CGAL::Ray_3::transform</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Aff__transformation__3" kindref="compound">Aff_transformation_3</ref>&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the ray obtained by applying <computeroutput>t</computeroutput> on the source and on the direction of <computeroutput>r</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ray_3.h" line="110" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <computeroutput>r</computeroutput> of the data type <computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound">Ray_3</ref></computeroutput> is a directed straight ray in the three-dimensional Euclidean space <formula id="30">$ \E^3$</formula>. </para>
    </briefdescription>
    <detaileddescription>
<para>It starts in a point called the <emphasis>source</emphasis> of <computeroutput>r</computeroutput> and it goes to infinity.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classKernel_1_1Ray__3" kindref="compound">Kernel::Ray_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/Ray_3.h" line="14" column="1" bodyfile="CGAL/Ray_3.h" bodystart="14" bodyend="114"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Ray__3_1a09826a4a168ebff952498da8de953878" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>direction</name></member>
      <member refid="classCGAL_1_1Ray__3_1a48ccadbd918c1f5b45febdfb776b82ae" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>has_on</name></member>
      <member refid="classCGAL_1_1Ray__3_1adf2a4f6281ae7dfabc3c7f2c3b9bef7f" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>is_degenerate</name></member>
      <member refid="classCGAL_1_1Ray__3_1a451d81857ac8ecf6973dac405b08882b" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>operator!=</name></member>
      <member refid="classCGAL_1_1Ray__3_1a6ac835de1b9ed9970deadcca273fdc10" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>operator==</name></member>
      <member refid="classCGAL_1_1Ray__3_1a93cc0fb0120ebf55e60cf7dfe32d2249" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>opposite</name></member>
      <member refid="classCGAL_1_1Ray__3_1ab24a9a573e39ae892ac57e5bc2a68454" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>point</name></member>
      <member refid="classCGAL_1_1Ray__3_1ad87728c7cb3783376d75652b3febf27e" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>Ray_3</name></member>
      <member refid="classCGAL_1_1Ray__3_1aa26023c27cde978cff525affa8da308f" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>Ray_3</name></member>
      <member refid="classCGAL_1_1Ray__3_1a5036bfb2e228eb0304fe95964c1b7f67" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>Ray_3</name></member>
      <member refid="classCGAL_1_1Ray__3_1af69e29056c9c4c8fd3733e559da4688f" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>Ray_3</name></member>
      <member refid="classCGAL_1_1Ray__3_1a2f4257b21f4380f6f4bf064dfeed8e3f" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>source</name></member>
      <member refid="classCGAL_1_1Ray__3_1aafde41299e8eca5e3140d7f5fb22a295" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>supporting_line</name></member>
      <member refid="classCGAL_1_1Ray__3_1a93e74fb8845f6f438dcbacef18c8292b" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>to_vector</name></member>
      <member refid="classCGAL_1_1Ray__3_1ae2ec5ef680f9ac7b2af68622c5538d91" prot="public" virt="non-virtual"><scope>CGAL::Ray_3</scope><name>transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
