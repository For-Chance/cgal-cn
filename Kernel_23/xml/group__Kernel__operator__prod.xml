<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__Kernel__operator__prod" kind="group">
    <compoundname>Kernel_operator_prod</compoundname>
    <title>CGAL::operator*</title>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga8427cff04588dc338b8acf3e1b116dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;v, const Kernel::RT &amp;s)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_2::operator*</qualifiedname>
        <param>
          <type>const Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Kernel::RT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="269" column="1" declfile="CGAL/Vector_2.h" declline="269" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gaa0ec85096033432ffbb2f9b422cdd9f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_2&lt; Kernel &gt; &amp;v, const Kernel::FT &amp;s)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_2::operator*</qualifiedname>
        <param>
          <type>const Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="276" column="1" declfile="CGAL/Vector_2.h" declline="276" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gab523b5c6e606c7cd706bc0c7c1da1c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::RT &amp;s, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_2::operator*</qualifiedname>
        <param>
          <type>const Kernel::RT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="283" column="1" declfile="CGAL/Vector_2.h" declline="283" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga53f506b04fe31f2d3b7fe51fb4fb1403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_2&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::FT &amp;s, const Vector_2&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_2::operator*</qualifiedname>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Vector_2&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_2.h" line="290" column="1" declfile="CGAL/Vector_2.h" declline="290" declcolumn="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group__Kernel__operator__prod_1ga7a0a1c5cadcf1957129f3af57b8ad0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;v, const Kernel::RT &amp;s)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_3::operator*</qualifiedname>
        <param>
          <type>const Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Kernel::RT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="275" column="1" declfile="CGAL/Vector_3.h" declline="275" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gab4c5d9764f9fcd9f0b041fd289e19af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Vector_3&lt; Kernel &gt; &amp;v, const Kernel::FT &amp;s)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_3::operator*</qualifiedname>
        <param>
          <type>const Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the right. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="282" column="1" declfile="CGAL/Vector_3.h" declline="282" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gaa09a2f90ca10bea6e225c3a6f2f3f6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::RT &amp;s, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_3::operator*</qualifiedname>
        <param>
          <type>const Kernel::RT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="289" column="1" declfile="CGAL/Vector_3.h" declline="289" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Kernel__operator__prod_1gabb1d92af360ae79c4f41376ab8f77563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt;</type>
        <definition>Vector_3&lt; Kernel &gt; operator*</definition>
        <argsstring>(const Kernel::FT &amp;s, const Vector_3&lt; Kernel &gt; &amp;v)</argsstring>
        <name>operator*</name>
        <qualifiedname>CGAL::Vector_3::operator*</qualifiedname>
        <param>
          <type>const Kernel::FT &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Vector_3&lt; <ref refid="classKernel" kindref="compound">Kernel</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Multiplication with a scalar from the left. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Vector_3.h" line="296" column="1" declfile="CGAL/Vector_3.h" declline="296" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
