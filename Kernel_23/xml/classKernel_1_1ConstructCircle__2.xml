<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1ConstructCircle__2" kind="class" language="C++" prot="public">
    <compoundname>Kernel::ConstructCircle_2</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1ConstructCircle__2_1a97d470ea5caf593dfc92542cc3bca2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></type>
        <definition>Kernel::Circle_2 Kernel::ConstructCircle_2::operator()</definition>
        <argsstring>(Kernel::Point_2 const &amp;center, Kernel::FT const &amp;squared_radius, Orientation const &amp;orientation=COUNTERCLOCKWISE)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructCircle_2::operator()</qualifiedname>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>Kernel::FT const &amp;</type>
          <declname>squared_radius</declname>
        </param>
        <param>
          <type>Orientation const &amp;</type>
          <declname>orientation</declname>
          <defval>COUNTERCLOCKWISE</defval>
        </param>
        <briefdescription>
<para>introduces a variable of type <computeroutput><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle with center <computeroutput>center</computeroutput>, squared radius <computeroutput>squared_radius</computeroutput> and orientation <computeroutput>orientation</computeroutput>. <simplesect kind="pre"><para><computeroutput>orientation != <ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput> and <computeroutput>squared_radius &gt;= 0</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4254" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructCircle__2_1aa2ff1d060daac475e31a1654f25e8f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></type>
        <definition>Kernel::Circle_2 Kernel::ConstructCircle_2::operator()</definition>
        <argsstring>(Kernel::Point_2 const &amp;p, Kernel::Point_2 const &amp;q, Kernel::Point_2 const &amp;r)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructCircle_2::operator()</qualifiedname>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>introduces a variable of type <computeroutput><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>It is initialized to the unique circle which passes through the points <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>. The orientation of the circle is the orientation of the point triple <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput>. <simplesect kind="pre"><para><computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> are not collinear. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4268" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructCircle__2_1af90827bde4f48e28ee21a96aa98511cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></type>
        <definition>Kernel::Circle_2 Kernel::ConstructCircle_2::operator()</definition>
        <argsstring>(Kernel::Point_2 const &amp;p, Kernel::Point_2 const &amp;q, Orientation const &amp;orientation=COUNTERCLOCKWISE)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructCircle_2::operator()</qualifiedname>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>Orientation const &amp;</type>
          <declname>orientation</declname>
          <defval>COUNTERCLOCKWISE</defval>
        </param>
        <briefdescription>
<para>introduces a variable of type <computeroutput><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle with diameter <computeroutput>pq</computeroutput> and orientation <computeroutput>orientation</computeroutput>. <simplesect kind="pre"><para><computeroutput>orientation != <ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4279" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ConstructCircle__2_1abf1a0e4ef57e5da5cfba0cb5dd46323b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></type>
        <definition>Kernel::Circle_2 Kernel::ConstructCircle_2::operator()</definition>
        <argsstring>(Kernel::Point_2 const &amp;center, Orientation const &amp;orientation=COUNTERCLOCKWISE)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ConstructCircle_2::operator()</qualifiedname>
        <param>
          <type><ref refid="classKernel_1_1Point__2" kindref="compound">Kernel::Point_2</ref> const &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>Orientation const &amp;</type>
          <declname>orientation</declname>
          <defval>COUNTERCLOCKWISE</defval>
        </param>
        <briefdescription>
<para>introduces a variable of type <computeroutput><ref refid="classKernel_1_1Circle__2" kindref="compound">Kernel::Circle_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>It is initialized to the circle with center <computeroutput>center</computeroutput>, squared radius zero and orientation <computeroutput>orientation</computeroutput>. <simplesect kind="pre"><para><computeroutput>orientation != <ref refid="group__kernel__enums_1ga84f760a315c4f27cb4059db8a3a1159e" kindref="member">CGAL::COLLINEAR</ref></computeroutput>. </para>
</simplesect>
<simplesect kind="post"><para>.<computeroutput>is_degenerate()</computeroutput> = <computeroutput>true</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="4292" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableTernaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableTernaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circle__2" kindref="compound">CGAL::Circle_2</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="4239" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="4239" bodyend="4299"/>
    <listofallmembers>
      <member refid="classKernel_1_1ConstructCircle__2_1a97d470ea5caf593dfc92542cc3bca2ef" prot="public" virt="non-virtual"><scope>Kernel::ConstructCircle_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructCircle__2_1aa2ff1d060daac475e31a1654f25e8f94" prot="public" virt="non-virtual"><scope>Kernel::ConstructCircle_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructCircle__2_1af90827bde4f48e28ee21a96aa98511cb" prot="public" virt="non-virtual"><scope>Kernel::ConstructCircle_2</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ConstructCircle__2_1abf1a0e4ef57e5da5cfba0cb5dd46323b" prot="public" virt="non-virtual"><scope>Kernel::ConstructCircle_2</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
