<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classKernel_1_1ComputeSquaredRadius__3" kind="class" language="C++" prot="public">
    <compoundname>Kernel::ComputeSquaredRadius_3</compoundname>
    <includes local="no">Concepts/FunctionObjectConcepts.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>A model of this concept must provide: </para>
</description>
      <memberdef kind="function" id="classKernel_1_1ComputeSquaredRadius__3_1ac605cadaafe388c7ee0399bdd05c5cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT Kernel::ComputeSquaredRadius_3::operator()</definition>
        <argsstring>(const Kernel::Sphere_3 &amp;s)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ComputeSquaredRadius_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Sphere__3" kindref="compound">Kernel::Sphere_3</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the squared radius of <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3022" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ComputeSquaredRadius__3_1ad4edaefd24ec9dad1eb2cc23bb0e8df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT Kernel::ComputeSquaredRadius_3::operator()</definition>
        <argsstring>(const Kernel::Circle_3 &amp;c)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ComputeSquaredRadius_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Circle__3" kindref="compound">Kernel::Circle_3</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>returns the squared radius of <computeroutput>c</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3027" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ComputeSquaredRadius__3_1a284c3c3b0d66abe1585a6b6093c42e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT Kernel::ComputeSquaredRadius_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q, const Kernel::Point_3 &amp;r, const Kernel::Point_3 &amp;s)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ComputeSquaredRadius_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the squared radius of the sphere passing through <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, <computeroutput>r</computeroutput> and <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>p, q, r</computeroutput> and <computeroutput>s</computeroutput> are not coplanar. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3033" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ComputeSquaredRadius__3_1abdc899e5baaa377b8fb7c66af26597bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT Kernel::ComputeSquaredRadius_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q, const Kernel::Point_3 &amp;r)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ComputeSquaredRadius_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>returns the squared radius of the sphere passing through <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput> and <computeroutput>r</computeroutput>, and whose center is in the plane defined by these three points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3042" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ComputeSquaredRadius__3_1a248284447edc1be233839a8f70379f51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT Kernel::ComputeSquaredRadius_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p, const Kernel::Point_3 &amp;q)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ComputeSquaredRadius_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns the squared radius of the smallest circle passing through <computeroutput>p</computeroutput>, and <computeroutput>q</computeroutput>, i.e. one fourth of the squared distance between <computeroutput>p</computeroutput> and <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3050" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classKernel_1_1ComputeSquaredRadius__3_1add3dc17f5adfb4737e68887a4201d404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Kernel::FT</type>
        <definition>Kernel::FT Kernel::ComputeSquaredRadius_3::operator()</definition>
        <argsstring>(const Kernel::Point_3 &amp;p)</argsstring>
        <name>operator()</name>
        <qualifiedname>Kernel::ComputeSquaredRadius_3::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classKernel_1_1Point__3" kindref="compound">Kernel::Point_3</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>returns the squared radius of the smallest circle passing through <computeroutput>p</computeroutput>, i.e. <formula id="62">$ 0$</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/FunctionObjectConcepts.h" line="3056" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableUnaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableUnaryFunction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Sphere__3" kindref="compound">CGAL::Sphere_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Circle__3" kindref="compound">CGAL::Circle_3</ref>&lt;<ref refid="classKernel" kindref="compound">Kernel</ref>&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__squared__radius__grp" kindref="compound">CGAL::squared_radius()</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/FunctionObjectConcepts.h" line="3011" column="1" bodyfile="Concepts/FunctionObjectConcepts.h" bodystart="3011" bodyend="3061"/>
    <listofallmembers>
      <member refid="classKernel_1_1ComputeSquaredRadius__3_1ac605cadaafe388c7ee0399bdd05c5cfd" prot="public" virt="non-virtual"><scope>Kernel::ComputeSquaredRadius_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ComputeSquaredRadius__3_1ad4edaefd24ec9dad1eb2cc23bb0e8df3" prot="public" virt="non-virtual"><scope>Kernel::ComputeSquaredRadius_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ComputeSquaredRadius__3_1a284c3c3b0d66abe1585a6b6093c42e7c" prot="public" virt="non-virtual"><scope>Kernel::ComputeSquaredRadius_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ComputeSquaredRadius__3_1abdc899e5baaa377b8fb7c66af26597bc" prot="public" virt="non-virtual"><scope>Kernel::ComputeSquaredRadius_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ComputeSquaredRadius__3_1a248284447edc1be233839a8f70379f51" prot="public" virt="non-virtual"><scope>Kernel::ComputeSquaredRadius_3</scope><name>operator()</name></member>
      <member refid="classKernel_1_1ComputeSquaredRadius__3_1add3dc17f5adfb4737e68887a4201d404" prot="public" virt="non-virtual"><scope>Kernel::ComputeSquaredRadius_3</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
