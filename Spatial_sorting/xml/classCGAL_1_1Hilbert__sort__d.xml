<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Hilbert__sort__d" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Hilbert_sort_d</compoundname>
    <includes local="no">CGAL/Hilbert_sort_d.h</includes>
    <templateparamlist>
      <param>
        <type>typename Traits</type>
      </param>
      <param>
        <type>typename PolicyTag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Hilbert__sort__d_1a722aee9c22b76741579e0cb0fd2367e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Hilbert_sort_d&lt; Traits, PolicyTag &gt;::Hilbert_sort_d</definition>
        <argsstring>(const Traits &amp;traits=Traits())</argsstring>
        <name>Hilbert_sort_d</name>
        <qualifiedname>CGAL::Hilbert_sort_d::Hilbert_sort_d</qualifiedname>
        <param>
          <type>const Traits &amp;</type>
          <declname>traits</declname>
          <defval>Traits()</defval>
        </param>
        <briefdescription>
<para>constructs an instance with <computeroutput>traits</computeroutput> as traits class instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Hilbert_sort_d.h" line="27" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Hilbert__sort__d_1aac8009d8fbeeb8a3baa19a7dd3a1f15e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputPointIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Hilbert_sort_d&lt; Traits, PolicyTag &gt;::operator()</definition>
        <argsstring>(InputPointIterator begin, InputPointIterator end) const</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Hilbert_sort_d::operator()</qualifiedname>
        <param>
          <type>InputPointIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputPointIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>It sorts the range <computeroutput>[begin, end)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputPointIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput> with value type <computeroutput>Traits::Point_d</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Hilbert_sort_d.h" line="39" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The function object <computeroutput><ref refid="classCGAL_1_1Hilbert__sort__d" kindref="compound">Hilbert_sort_d</ref></computeroutput> sorts iterator ranges of <computeroutput>Traits::Point_d</computeroutput> along a Hilbert curve by recursively subdividing at the median or the middle depending on the <computeroutput>PolicyTag</computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Traits</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model for <computeroutput><ref refid="classSpatialSortingTraits__d" kindref="compound">SpatialSortingTraits_d</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolicyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>is used to specify the strategy policy. Possible values are <ref refid="group__PkgSpatialSortingUtils_1gabaa92ea6b71ca7eaaf9ddf8f8d1eb1c5" kindref="member"><computeroutput>Hilbert_sort_median_policy</computeroutput> </ref> (the default policy) or <ref refid="group__PkgSpatialSortingUtils_1gab7a1539ef63348072146e101074deca1" kindref="member"><computeroutput>Hilbert_sort_middle_policy</computeroutput> </ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="CGAL/Hilbert_sort_d.h" line="18" column="1" bodyfile="CGAL/Hilbert_sort_d.h" bodystart="18" bodyend="43"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Hilbert__sort__d_1a722aee9c22b76741579e0cb0fd2367e5" prot="public" virt="non-virtual"><scope>CGAL::Hilbert_sort_d</scope><name>Hilbert_sort_d</name></member>
      <member refid="classCGAL_1_1Hilbert__sort__d_1aac8009d8fbeeb8a3baa19a7dd3a1f15e" prot="public" virt="non-virtual"><scope>CGAL::Hilbert_sort_d</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
