<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgPolygonRepairFunctions" kind="group">
    <compoundname>PkgPolygonRepairFunctions</compoundname>
    <title>Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgPolygonRepairFunctions_1gac19cf27226df0fae15e4c1b3f9065a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>class Rule</type>
            <defval>Even_odd_rule</defval>
          </param>
        </templateparamlist>
        <type>Multipolygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt;</type>
        <definition>Multipolygon_with_holes_2&lt; Kernel, Container &gt; CGAL::Polygon_repair::repair</definition>
        <argsstring>(const Polygon_2&lt; Kernel, Container &gt; &amp;p, Rule=Rule())</argsstring>
        <name>repair</name>
        <qualifiedname>CGAL::Polygon_repair::repair</qualifiedname>
        <param>
          <type>const Polygon_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Rule</type>
          <defval>Rule()</defval>
        </param>
        <briefdescription>
<para>repairs polygon <computeroutput>p</computeroutput> using the given rule </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>parameter of the input and output polygons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>parameter of the input and output polygons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rule</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput><ref refid="structCGAL_1_1Polygon__repair_1_1Even__odd__rule" kindref="compound">Even_odd_rule</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_repair/repair.h" line="46" column="27" bodyfile="CGAL/Polygon_repair/repair.h" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonRepairFunctions_1ga3426f45fb0ac2a6e3d48134b7533a617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>class Rule</type>
            <defval>Even_odd_rule</defval>
          </param>
        </templateparamlist>
        <type>Multipolygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt;</type>
        <definition>Multipolygon_with_holes_2&lt; Kernel, Container &gt; CGAL::Polygon_repair::repair</definition>
        <argsstring>(const Polygon_with_holes_2&lt; Kernel, Container &gt; &amp;p, Rule=Rule())</argsstring>
        <name>repair</name>
        <qualifiedname>CGAL::Polygon_repair::repair</qualifiedname>
        <param>
          <type>const Polygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Rule</type>
          <defval>Rule()</defval>
        </param>
        <briefdescription>
<para>repairs polygon with holes <computeroutput>p</computeroutput> using the given rule </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>parameter of the input and output polygons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>parameter of the input and output polygons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rule</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput><ref refid="structCGAL_1_1Polygon__repair_1_1Even__odd__rule" kindref="compound">Even_odd_rule</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_repair/repair.h" line="63" column="27" bodyfile="CGAL/Polygon_repair/repair.h" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolygonRepairFunctions_1ga96ccc002ad4fc14cf3b1a193d8479636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></type>
          </param>
          <param>
            <type>class <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></type>
          </param>
          <param>
            <type>class Rule</type>
            <defval>Even_odd_rule</defval>
          </param>
        </templateparamlist>
        <type>Multipolygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt;</type>
        <definition>Multipolygon_with_holes_2&lt; Kernel, Container &gt; CGAL::Polygon_repair::repair</definition>
        <argsstring>(const Multipolygon_with_holes_2&lt; Kernel, Container &gt; &amp;p, Rule=Rule())</argsstring>
        <name>repair</name>
        <qualifiedname>CGAL::Polygon_repair::repair</qualifiedname>
        <param>
          <type>const Multipolygon_with_holes_2&lt; <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>, <ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Rule</type>
          <defval>Rule()</defval>
        </param>
        <briefdescription>
<para>repairs multipolygon with holes <computeroutput>p</computeroutput> using the given rule </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>parameter of the input and output polygons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Container</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>parameter of the input and output polygons </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Rule</parametername>
</parameternamelist>
<parameterdescription>
<para>must be <computeroutput><ref refid="structCGAL_1_1Polygon__repair_1_1Even__odd__rule" kindref="compound">Even_odd_rule</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_repair/repair.h" line="80" column="27" bodyfile="CGAL/Polygon_repair/repair.h" bodystart="80" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
