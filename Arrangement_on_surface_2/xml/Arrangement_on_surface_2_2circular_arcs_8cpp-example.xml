<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="Arrangement_on_surface_2_2circular_arcs_8cpp-example" kind="example">
    <compoundname>Arrangement_on_surface_2/circular_arcs.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="Arrangement_on_surface_2/circular_arcs.cpp"><codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructing<sp/>an<sp/>arrangement<sp/>of<sp/>various<sp/>circular<sp/>arcs<sp/>and<sp/>line<sp/>segments.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/draw_arrangement_2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_circular.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_print.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::list&lt;Curve&gt;<sp/>curves;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>circle<sp/>(C1)<sp/>centered<sp/>at<sp/>the<sp/>origin<sp/>with<sp/>squared<sp/>radius<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(Circle(Rational_point(0,<sp/>0),<sp/>Number_type(2))));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>circle<sp/>(C2)<sp/>centered<sp/>at<sp/>(2,<sp/>3)<sp/>with<sp/>radius<sp/>3/2.<sp/>Note<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>radius<sp/>is<sp/>rational<sp/>we<sp/>use<sp/>a<sp/>different<sp/>curve<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Number_type<sp/>three_halves<sp/>=<sp/>Number_type(3)<sp/>/<sp/>Number_type(2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(Rational_point(2,<sp/>3),<sp/>three_halves));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>segment<sp/>(C3)<sp/>of<sp/>the<sp/>line<sp/>(y<sp/>=<sp/>x)<sp/>with<sp/>rational<sp/>endpoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Segment<sp/>s3<sp/>=<sp/>Segment(Rational_point(-2,<sp/>-2),<sp/>Rational_point(2,<sp/>2));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(s3));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>line<sp/>segment<sp/>(C4)<sp/>with<sp/>the<sp/>same<sp/>supporting<sp/>line<sp/>(y<sp/>=<sp/>x),<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>having<sp/>one<sp/>endpoint<sp/>with<sp/>irrational<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CoordNT<sp/>sqrt_15<sp/>=<sp/>CoordNT(0,<sp/>1,<sp/>15);<sp/></highlight><highlight class="comment">//<sp/>=<sp/>sqrt(15)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(s3.supporting_line(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point(3,<sp/>3),<sp/>Point(sqrt_15,<sp/>sqrt_15)));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>circular<sp/>arc<sp/>(C5)<sp/>that<sp/>is<sp/>the<sp/>upper<sp/>half<sp/>of<sp/>the<sp/>circle<sp/>centered<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(1,<sp/>1)<sp/>with<sp/>squared<sp/>radius<sp/>3.<sp/>Create<sp/>the<sp/>circle<sp/>with<sp/>clockwise<sp/>orientation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>arc<sp/>is<sp/>directed<sp/>from<sp/>(1<sp/>-<sp/>sqrt(3),<sp/>1)<sp/>to<sp/>(1<sp/>+<sp/>sqrt(3),<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Rational_point<sp/>c5(1,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Circle<sp/>circ5(c5,<sp/>3,<sp/><ref refid="group__kernel__enums_1ga5aa0906f2432d414090dd8723c10f304" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::CLOCKWISE</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CoordNT<sp/>one_minus_sqrt_3(1,<sp/>-1,<sp/>3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CoordNT<sp/>one_plus_sqrt_3(1,<sp/>1,<sp/>3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>s5(one_minus_sqrt_3,<sp/>CoordNT(1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>t5(one_plus_sqrt_3,<sp/>CoordNT(1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(circ5,<sp/>s5,<sp/>t5));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>arc<sp/>(C6)<sp/>of<sp/>the<sp/>unit<sp/>circle,<sp/>directed<sp/>clockwise<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(-1/2,<sp/>sqrt(3)/2)<sp/>to<sp/>(1/2,<sp/>sqrt(3)/2).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>supporting<sp/>circle<sp/>is<sp/>oriented<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Rational_point<sp/>c6(0,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Number_type<sp/>half<sp/>=<sp/>Number_type(1)<sp/>/<sp/>Number_type(2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CoordNT<sp/>sqrt_3_div_2(Number_type(0),<sp/>half,<sp/>3);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>s6(-half,<sp/>sqrt_3_div_2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>t6(half,<sp/>sqrt_3_div_2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(c6,<sp/>1,<sp/><ref refid="group__kernel__enums_1ga5aa0906f2432d414090dd8723c10f304" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::CLOCKWISE</ref>,<sp/>s6,<sp/>t6));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>circular<sp/>arc<sp/>(C7)<sp/>defined<sp/>by<sp/>two<sp/>endpoints<sp/>and<sp/>a<sp/>midpoint,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>having<sp/>rational<sp/>coordinates.<sp/>This<sp/>arc<sp/>is<sp/>the<sp/>upper<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>quarter<sp/>of<sp/>a<sp/>circle<sp/>centered<sp/>at<sp/>the<sp/>origin<sp/>with<sp/>radius<sp/>5.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>curves.push_back(Curve(Rational_point(0,<sp/>5),<sp/>Rational_point(3,<sp/>4),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rational_point(5,<sp/>0)));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>arrangement<sp/>of<sp/>the<sp/>curves<sp/>and<sp/>print<sp/>its<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Arrangement<sp/><sp/>arr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Insert_1gaf7d5aac2640c2a706f8c5e6adc8a7e94" kindref="member">insert</ref>(arr,<sp/>curves.begin(),<sp/>curves.end());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement_size(arr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgDrawPolygonSet2_1gac5ad1c3be15e88df46b096885a023ff4" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Boolean_set_operations_2.tag">CGAL::draw</ref>(arr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="examples.txt"/>
  </compounddef>
</doxygen>
