<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="Arrangement_on_surface_2_2observer_8cpp-example" kind="example">
    <compoundname>Arrangement_on_surface_2/observer.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="Arrangement_on_surface_2/observer.cpp"><codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>a<sp/>simple<sp/>arrangement<sp/>observer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/basic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Arr_observer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_exact_construction_segments.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_print.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>observer<sp/>that<sp/>receives<sp/>notifications<sp/>of<sp/>face<sp/>splits<sp/>and<sp/>face<sp/>mergers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">My_observer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="group__PkgArrangementOnSurface2Ref_1ga8019f986f5469920136c4b92290b7b1b" kindref="member">CGAL::Arr_observer</ref>&lt;Arrangement&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>My_observer(Arrangement&amp;<sp/>arr)<sp/>:<sp/><ref refid="namespaceCGAL" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL</ref>::<ref refid="group__PkgArrangementOnSurface2Ref_1ga8019f986f5469920136c4b92290b7b1b" kindref="member">Arr_observer</ref>&lt;Arrangement&gt;(arr)<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>before_split_face(Face_handle,<sp/>Halfedge_handle<sp/>e)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&gt;<sp/>The<sp/>insertion<sp/>of<sp/>:<sp/><sp/>[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e-&gt;curve()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]<sp/><sp/>causes<sp/>a<sp/>face<sp/>to<sp/>split.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>before_merge_face(Face_handle,<sp/>Face_handle,<sp/>Halfedge_handle<sp/>e)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&gt;<sp/>The<sp/>removal<sp/>of<sp/>:<sp/><sp/>[<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e-&gt;curve()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>]<sp/><sp/>causes<sp/>two<sp/>faces<sp/>to<sp/>merge.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>arrangement<sp/>containing<sp/>one<sp/>diamond-shaped<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Arrangement<sp/>arr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>My_observer<sp/>obs(arr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" kindref="member">insert_non_intersecting_curve</ref>(arr,<sp/>Segment(Point(-1,<sp/>0),<sp/>Point(0,<sp/>1)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" kindref="member">insert_non_intersecting_curve</ref>(arr,<sp/>Segment(Point(0,<sp/>1),<sp/>Point(1,<sp/>0)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" kindref="member">insert_non_intersecting_curve</ref>(arr,<sp/>Segment(Point(1,<sp/>0),<sp/>Point(0,<sp/>-1)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" kindref="member">insert_non_intersecting_curve</ref>(arr,<sp/>Segment(Point(0,<sp/>-1),<sp/>Point(-1,<sp/>0)));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>vertical<sp/>segment<sp/>dividing<sp/>the<sp/>diamond<sp/>into<sp/>two,<sp/>and<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>horizontal<sp/>segment<sp/>further<sp/>dividing<sp/>the<sp/>diamond<sp/>into<sp/>four.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Segment<sp/>s_v(Point(0,<sp/>-1),<sp/>Point(0,<sp/>1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e_v<sp/>=<sp/><ref refid="group__PkgArrangementOnSurface2Funcs_1ga9dd10a3efed93328acef4e4bcb175df9" kindref="member">insert_non_intersecting_curve</ref>(arr,<sp/>s_v);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Insert_1gaf7d5aac2640c2a706f8c5e6adc8a7e94" kindref="member">insert</ref>(arr,<sp/>Segment(Point(-1,<sp/>0),<sp/>Point(1,<sp/>0)));<sp/></highlight><highlight class="comment">/*<sp/>\label{lst:observer:insertion}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement_size(arr);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>remove<sp/>a<sp/>portion<sp/>of<sp/>the<sp/>vertical<sp/>segment.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgArrangementOnSurface2Funcs_1gad41fab113e4ec35768bbcdfc6f3c54c4" kindref="member">remove_edge</ref>(arr,<sp/>e_v);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>observer<sp/>will<sp/>make<sp/>a<sp/>notification</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement_size(arr);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="examples.txt"/>
  </compounddef>
</doxygen>
