<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCGAL_1_1Arr__contracted__side__tag" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Arr_contracted_side_tag</compoundname>
    <includes local="no">CGAL/Arr_tags.h</includes>
    <briefdescription>
<para>This type tag is used to indicate that a side of the parameter space, either left, right, bottom, or top, is contracted, and curves that approach this side might be inserted into the arrangement. </para>
    </briefdescription>
    <detaileddescription>
<para>More precisely, when this condition occurs at the left, right, bottom, or top side, then the corresponding categories, namely, <computeroutput>Left_side_category</computeroutput>, <computeroutput>Right_side_category</computeroutput>, <computeroutput>Bottom_side_category</computeroutput>, and <computeroutput>Top_side_category</computeroutput>, nested in every geometry traits class, must be convertible to the type <computeroutput><ref refid="structCGAL_1_1Arr__contracted__side__tag" kindref="compound">Arr_contracted_side_tag</ref></computeroutput>. For example, the <computeroutput>Bottom_side_category</computeroutput> and <computeroutput>Top_side_category</computeroutput> category types, nested in every model of the <computeroutput><ref refid="classArrangementSphericalBoundaryTraits__2" kindref="compound">ArrangementSphericalBoundaryTraits_2</ref> concept</computeroutput> (such as any instance of the <computeroutput><ref refid="classCGAL_1_1Arr__geodesic__arc__on__sphere__traits__2" kindref="compound">Arr_geodesic_arc_on_sphere_traits_2</ref></computeroutput> class template) must be convertible to <computeroutput><ref refid="structCGAL_1_1Arr__contracted__side__tag" kindref="compound">Arr_contracted_side_tag</ref></computeroutput></para>
<para><computeroutput><ref refid="structCGAL_1_1Arr__oblivious__side__tag" kindref="compound">Arr_oblivious_side_tag</ref></computeroutput> is an empty construct used for dispatching functions based on type of curves that induce the arrangement.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__oblivious__side__tag" kindref="compound">Arr_oblivious_side_tag</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__open__side__tag" kindref="compound">Arr_open_side_tag</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__closed__side__tag" kindref="compound">Arr_closed_side_tag</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__identified__side__tag" kindref="compound">Arr_identified_side_tag</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementOpenBoundaryTraits__2" kindref="compound">ArrangementOpenBoundaryTraits_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="CGAL/Arr_tags.h" line="108" column="1" bodyfile="CGAL/Arr_tags.h" bodystart="108" bodyend="108"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
