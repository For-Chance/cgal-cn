<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Arr__landmarks__point__location" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_landmarks_point_location</compoundname>
    <includes local="no">CGAL/Arr_landmarks_point_location.h</includes>
    <templateparamlist>
      <param>
        <type>typename Arrangement</type>
      </param>
      <param>
        <type>typename Generator</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para><anchor id="classCGAL_1_1Arr__landmarks__point__location_1arr_reflm_pl"/></para>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classCGAL_1_1Arr__landmarks__point__location" kindref="compound">Arr_landmarks_point_location</ref></computeroutput> class implements a Jump &amp; Walk algorithm, where special points, referred to as &quot;landmarks&quot;, are chosen in a preprocessing stage, their place in the arrangement is found, and they are inserted into a data-structure that enables efficient nearest-neighbor search (a Kd-tree). Given a query point, the nearest landmark is located and a &quot;walk&quot; strategy is applied from the landmark to the query point.</para>
<para>There are various strategies to select the landmark set in the arrangement, where the strategy is determined by the <computeroutput>Generator</computeroutput> template parameter. The following landmark-generator classes are available: <variablelist>
<varlistentry><term><bold><computeroutput>Arr_landmarks_vertices_generator</computeroutput> - </bold></term></varlistentry>
<listitem><para>The arrangement vertices are used as the landmarks set.</para>
<para></para>
</listitem>
<varlistentry><term><bold><computeroutput>Arr_random_landmarks_generator</computeroutput> - </bold></term></varlistentry>
<listitem><para><formula id="405">$ n$</formula> random points in the bounding box of the arrangement are chosen as the landmarks set.</para>
<para></para>
</listitem>
<varlistentry><term><bold><computeroutput>Arr_halton_landmarks_generator</computeroutput> - </bold></term></varlistentry>
<listitem><para><formula id="405">$ n$</formula> Halton points in the bounding box of the arrangement are chosen as the landmarks set.</para>
<para></para>
</listitem>
<varlistentry><term><bold><computeroutput>Arr_middle_edges_landmarks_generator</computeroutput> - </bold></term></varlistentry>
<listitem><para>The midpoint of each arrangement edge is computed, and the resulting set of points is used as the landmarks set. This generator can be applied only for arrangements of line segments.</para>
<para></para>
</listitem>
<varlistentry><term><bold><computeroutput>Arr_grid_landmarks_generator</computeroutput> - </bold></term></varlistentry>
<listitem><para>A set of <formula id="405">$ n$</formula> landmarks are chosen on a <formula id="465">$ \lceil \sqrt{n} \rceil \times \lceil \sqrt{n} \rceil$</formula> grid that covers the bounding box of the arrangement. </para>
</listitem>
</variablelist>
The <computeroutput>Arr_landmarks_vertices_generator</computeroutput> class is the default generator and used if no <computeroutput>Generator</computeroutput> parameter is specified.</para>
<para>It is recommended to use the landmarks point-location strategy when the application frequently issues point-location queries on a rather static arrangement that the changes applied to it are mainly insertions of curves and not deletions of them.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">CGAL::Arr_point_location_result</ref>&lt;Arrangement&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="CGAL/Arr_landmarks_point_location.h" line="58" column="1" bodyfile="CGAL/Arr_landmarks_point_location.h" bodystart="58" bodyend="61"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
