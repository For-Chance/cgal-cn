<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Arr__conic__traits__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_conic_traits_2</compoundname>
    <includes local="no">CGAL/Arr_conic_traits_2.h</includes>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Approximate__2" prot="public">CGAL::Arr_conic_traits_2::Approximate_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__bbox__2" prot="public">CGAL::Arr_conic_traits_2::Construct_bbox_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__curve__2" prot="public">CGAL::Arr_conic_traits_2::Construct_curve_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__x__monotone__curve__2" prot="public">CGAL::Arr_conic_traits_2::Construct_x_monotone_curve_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Curve__2" prot="public">CGAL::Arr_conic_traits_2::Curve_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Point__2" prot="public">CGAL::Arr_conic_traits_2::Point_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1Trim__2" prot="public">CGAL::Arr_conic_traits_2::Trim_2</innerclass>
    <innerclass refid="classCGAL_1_1Arr__conic__traits__2_1_1X__monotone__curve__2" prot="public">CGAL::Arr_conic_traits_2::X_monotone_curve_2</innerclass>
    <templateparamlist>
      <param>
        <type>typename RatKernel</type>
      </param>
      <param>
        <type>typename AlgKernel</type>
      </param>
      <param>
        <type>typename NtTraits</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__conic__traits__2_1a780cff469d9fa49c6179ae9ae6eefd9e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Rational</definition>
        <argsstring></argsstring>
        <name>Rational</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::Rational</qualifiedname>
        <briefdescription>
<para>the <computeroutput>NtTraits::Rational</computeroutput> type (and also the <computeroutput>RatKernel::FT</computeroutput> type). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="96" column="33" bodyfile="CGAL/Arr_conic_traits_2.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__conic__traits__2_1a7ff75e207556a864e7d7bf2b97861aa8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Algebraic</definition>
        <argsstring></argsstring>
        <name>Algebraic</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::Algebraic</qualifiedname>
        <briefdescription>
<para>the <computeroutput>NtTraits::Algebraic</computeroutput> type (and also the <computeroutput>AlgKernel::FT</computeroutput> type). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="100" column="33" bodyfile="CGAL/Arr_conic_traits_2.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Auxiliary Functor definitions, used gor, e.g., the landmarks</header>
      <description><para>point-location strategy and the drawing function. </para>
</description>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__conic__traits__2_1a4029ac5a0c0e371b669be0ea3c77033e" prot="public" static="no">
        <type>double</type>
        <definition>typedef double CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Approximate_number_type</definition>
        <argsstring></argsstring>
        <name>Approximate_number_type</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::Approximate_number_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="447" column="57" bodyfile="CGAL/Arr_conic_traits_2.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__conic__traits__2_1ae111381034004a60528c684c8dfd5413" prot="public" static="no">
        <type><ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Cartesian</ref>&lt; <ref refid="classCGAL_1_1Arr__conic__traits__2_1a4029ac5a0c0e371b669be0ea3c77033e" kindref="member">Approximate_number_type</ref> &gt;</type>
        <definition>typedef CGAL::Cartesian&lt;Approximate_number_type&gt; CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Approximate_kernel</definition>
        <argsstring></argsstring>
        <name>Approximate_kernel</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::Approximate_kernel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="448" column="32" bodyfile="CGAL/Arr_conic_traits_2.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__conic__traits__2_1ae7a6d72cf6757bbbc649862c82bab0db" prot="public" static="no">
        <type>Approximate_kernel::Point_2</type>
        <definition>typedef Approximate_kernel::Point_2 CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::Approximate_point_2</definition>
        <argsstring></argsstring>
        <name>Approximate_point_2</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::Approximate_point_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="449" column="57" bodyfile="CGAL/Arr_conic_traits_2.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Accessing Functor Objects</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__conic__traits__2_1a2d93f78f17c40db02eed007a93dee3b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__curve__2" kindref="compound">Construct_curve_2</ref></type>
        <definition>Construct_curve_2 CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::construct_curve_2_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_curve_2_object</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::construct_curve_2_object</qualifiedname>
        <briefdescription>
<para>Obtain a <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__curve__2" kindref="compound">Construct_curve_2</ref></computeroutput> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="515" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__conic__traits__2_1a83ea5b15083555c95d7972f6374e0296" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__x__monotone__curve__2" kindref="compound">Construct_x_monotone_curve_2</ref></type>
        <definition>Construct_x_monotone_curve_2 CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::construct_x_monotone_curve_2_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_x_monotone_curve_2_object</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::construct_x_monotone_curve_2_object</qualifiedname>
        <briefdescription>
<para>Obtain a <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__x__monotone__curve__2" kindref="compound">Construct_x_monotone_curve_2</ref></computeroutput> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="518" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__conic__traits__2_1afd15e5f123a92932fbcce7722e0c7de8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Construct__bbox__2" kindref="compound">Construct_bbox_2</ref></type>
        <definition>Construct_bbox_2 CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::construct_bbox_2_object</definition>
        <argsstring>() const</argsstring>
        <name>construct_bbox_2_object</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::construct_bbox_2_object</qualifiedname>
        <briefdescription>
<para>Obtain a <computeroutput><ref refid="classCGAL_1_1Bbox__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Bbox_2</ref></computeroutput> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="521" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__conic__traits__2_1a288c14c1ea81437081cee3deb1a928bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Trim__2" kindref="compound">Trim_2</ref></type>
        <definition>Trim_2 CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::trim_2_object</definition>
        <argsstring>() const</argsstring>
        <name>trim_2_object</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::trim_2_object</qualifiedname>
        <briefdescription>
<para>Obtain a <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Trim__2" kindref="compound">Trim_2</ref></computeroutput> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="524" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__conic__traits__2_1ab427b07d13ca36c6b458802a1d4e9963" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Approximate__2" kindref="compound">Approximate_2</ref></type>
        <definition>Approximate_2 CGAL::Arr_conic_traits_2&lt; RatKernel, AlgKernel, NtTraits &gt;::approximate_2_object</definition>
        <argsstring>() const</argsstring>
        <name>approximate_2_object</name>
        <qualifiedname>CGAL::Arr_conic_traits_2::approximate_2_object</qualifiedname>
        <briefdescription>
<para>Obtain an <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2_1_1Approximate__2" kindref="compound">Approximate_2</ref></computeroutput> functor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_conic_traits_2.h" line="527" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2" kindref="compound">Arr_conic_traits_2</ref></computeroutput> is a model of the <computeroutput><ref refid="classArrangementTraits__2" kindref="compound">ArrangementTraits_2</ref></computeroutput> concept and can be used to construct and maintain arrangements of bounded segments of algebraic curves of degree <formula id="64">$2$</formula> at most, also known as <emphasis>conic curves</emphasis>. </para>
    </briefdescription>
    <detaileddescription>
<para>A general conic curve <formula id="85">$C$</formula> is the locus of all points <formula id="284">$(x,y)$</formula> satisfying the equation: <formula id="435">$r x^2 + s y^2 + t x y + u x + v y + w = 0$</formula>, where:</para>
<para><itemizedlist>
<listitem>
<para>If <formula id="436">$4 r s - t^2 &gt; 0$</formula>, <formula id="437">$ C$</formula> is an ellipse. A special case occurs when <formula id="289">$r = s$</formula> and <formula id="438">$ t = 0$</formula>, when <formula id="437">$ C$</formula> becomes a circle.</para>
<para></para>
</listitem>
<listitem>
<para>If <formula id="439">$4 r s - t^2 &lt; 0$</formula>, <formula id="437">$ C$</formula> is a hyperbola.</para>
<para></para>
</listitem>
<listitem>
<para>If <formula id="440">$4 r s - t^2 = 0$</formula>, <formula id="437">$ C$</formula> is a parabola. A degenerate case occurs when <formula id="292">$r = s = t = 0$</formula>, when <formula id="437">$ C$</formula> is a line.</para>
<para></para>
</listitem>
</itemizedlist>
</para>
<para>A <emphasis>bounded conic arc</emphasis> is defined as either of the following:</para>
<para><itemizedlist>
<listitem>
<para>A full ellipse (or a circle) <formula id="437">$ C$</formula>.</para>
<para></para>
</listitem>
<listitem>
<para>The tuple <formula id="441">$ \langle C, p_s, p_t, o \rangle$</formula>, where <formula id="437">$ C$</formula> is the supporting conic curve, with the arc endpoints being <formula id="442">$ p_s$</formula> and <formula id="443">$
p_t$</formula> (the source and target points, respectively). The orientation <formula id="444">$ o$</formula> indicates whether we proceed from <formula id="442">$ p_s$</formula> to <formula id="445">$ p_t$</formula> in a clockwise or in a counterclockwise direction. Note that <formula id="437">$ C$</formula> may also correspond to a line or to pair of lines<mdash/>in this case <formula id="444">$ o$</formula> may specify a <computeroutput>COLLINEAR</computeroutput> orientation.</para>
<para></para>
</listitem>
</itemizedlist>
</para>
<para>A very useful subset of the set of conic arcs are line segments and circular arcs, as arrangements of circular arcs and line segments have some interesting applications (e.g., offsetting polygons and motion planning for a disc robot). Circular arcs and line segment are simpler objects and can be dealt with more efficiently than arbitrary arcs. Indeed, it is possible to construct conic arcs from segments and from circles. Using these constructors is highly recommended: It is more straightforward and also expedites the arrangement construction. However, in case the set of input curves contain only circular arcs and line segments, it is recommended using the <computeroutput>Arr_circle_segment_2</computeroutput> class to achieve better running times.</para>
<para>In our representation, all conic coefficients (namely <formula id="446">$r, s, t, u, v, w$</formula>) must be rational numbers. This guarantees that the coordinates of all arrangement vertices (in particular, those representing intersection points) are algebraic numbers of degree <formula id="132">$4$</formula> (a real number <formula id="271">$\alpha$</formula> is an algebraic number of degree <formula id="72">$d$</formula> if there exist a polynomial <formula id="407">$ p$</formula> with <emphasis>integer</emphasis> coefficient of degree <formula id="72">$d$</formula> such that <formula id="447">$p(\alpha) = 0$</formula>). We therefore require separate representations of the curve coefficients and the point coordinates. The <computeroutput>NtTraits</computeroutput> should be substituted by a class that defines nested <computeroutput>Integer</computeroutput>, <computeroutput>Rational</computeroutput>, and <computeroutput>Algebraic</computeroutput> number types and supports various operations on them, yielding certified computation results (for example, it can convert rational numbers to algebraic numbers and can compute roots of polynomials with integer coefficients). The other template parameters, <computeroutput>RatKernel</computeroutput> and <computeroutput>AlgKernel</computeroutput> should be geometric kernels instantiated with the <computeroutput>NtTraits::Rational</computeroutput> and <computeroutput>NtTraits::Algebraic</computeroutput> number types, respectively. It is recommended substituting the <computeroutput><ref refid="classCGAL_1_1CORE__algebraic__number__traits" kindref="compound">CORE_algebraic_number_traits</ref></computeroutput> class for the <computeroutput>NtTraits</computeroutput> parameter, and the <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt;NtTraits::Rational&gt;</computeroutput> and <computeroutput><ref refid="structCGAL_1_1Cartesian" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Cartesian</ref>&lt;NtTraits::Algebraic&gt;</computeroutput> instances for two kernel types, respectively. The number types in this case are provided by the Core library, with its ability to exactly represent simple algebraic numbers.</para>
<para>The traits class inherits its point type from <computeroutput>AlgKernel::Point_2</computeroutput>, and defines a curve and <formula id="7">$x$</formula>-monotone curve types, as detailed below.</para>
<para>While the <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2" kindref="compound">Arr_conic_traits_2</ref></computeroutput> models the concept <computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Boolean_set_operations_2.tag">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput>, the implementation of the <computeroutput>Are_mergeable_2</computeroutput> operation does not enforce the input curves to have the same direction as a precondition. Moreover, <computeroutput><ref refid="classCGAL_1_1Arr__conic__traits__2" kindref="compound">Arr_conic_traits_2</ref></computeroutput> supports the merging of curves of opposite directions.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementTraits__2" kindref="compound">ArrangementTraits_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementLandmarkTraits__2" kindref="compound">ArrangementLandmarkTraits_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementDirectionalXMonotoneTraits__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Boolean_set_operations_2.tag">ArrangementDirectionalXMonotoneTraits_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><bold>Types</bold><linebreak/>
 </para>
    </detaileddescription>
    <location file="CGAL/Arr_conic_traits_2.h" line="88" column="1" bodyfile="CGAL/Arr_conic_traits_2.h" bodystart="88" bodyend="531"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1a7ff75e207556a864e7d7bf2b97861aa8" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>Algebraic</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1ab427b07d13ca36c6b458802a1d4e9963" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>approximate_2_object</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1ae111381034004a60528c684c8dfd5413" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>Approximate_kernel</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1a4029ac5a0c0e371b669be0ea3c77033e" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>Approximate_number_type</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1ae7a6d72cf6757bbbc649862c82bab0db" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>Approximate_point_2</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1afd15e5f123a92932fbcce7722e0c7de8" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>construct_bbox_2_object</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1a2d93f78f17c40db02eed007a93dee3b1" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>construct_curve_2_object</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1a83ea5b15083555c95d7972f6374e0296" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>construct_x_monotone_curve_2_object</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1a780cff469d9fa49c6179ae9ae6eefd9e" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>Rational</name></member>
      <member refid="classCGAL_1_1Arr__conic__traits__2_1a288c14c1ea81437081cee3deb1a928bb" prot="public" virt="non-virtual"><scope>CGAL::Arr_conic_traits_2</scope><name>trim_2_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
