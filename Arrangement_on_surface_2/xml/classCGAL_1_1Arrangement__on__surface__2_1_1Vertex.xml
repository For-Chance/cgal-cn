<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arrangement_on_surface_2::Vertex</compoundname>
    <basecompoundref prot="public" virt="non-virtual">typename Dcel::Vertex</basecompoundref>
    <includes local="no">CGAL/Arrangement_on_surface_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1a01640d530a3b979816a06599372bbaee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::Vertex</definition>
        <argsstring>()</argsstring>
        <name>Vertex</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::Vertex</qualifiedname>
        <briefdescription>
<para>default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="101" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <description><para>All non-const methods listed below also have <computeroutput>const</computeroutput> counterparts that return constant handles, iterators or circulators: </para>
</description>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ad5c3177a4fd6417300001eb286c5bc9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::is_at_open_boundary</definition>
        <argsstring>() const</argsstring>
        <name>is_at_open_boundary</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::is_at_open_boundary</qualifiedname>
        <briefdescription>
<para>checks whether the vertex lies at infinity and not associated with a point with bounded coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ac7bd85bf195ed9e15b62ef591cd005a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::is_isolated</definition>
        <argsstring>() const</argsstring>
        <name>is_isolated</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::is_isolated</qualifiedname>
        <briefdescription>
<para>checks whether the vertex is isolated (i.e., has no incident edges). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ac9e62a9b86fd210c1823e4efe243a50a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2_1a5dd7fd20f6ea849e7b0adb7f4f798131" kindref="member">Size</ref></type>
        <definition>Size CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::degree</definition>
        <argsstring>() const</argsstring>
        <name>degree</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::degree</qualifiedname>
        <briefdescription>
<para>obtains the number of edges incident to <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="121" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ae8ee4823ad2d0e7a345f61c5778bc8a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2_1a3418d290f692e88e110d4bb12b2c59d9" kindref="member">Halfedge_around_vertex_circulator</ref></type>
        <definition>Halfedge_around_vertex_circulator CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::incident_halfedges</definition>
        <argsstring>()</argsstring>
        <name>incident_halfedges</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::incident_halfedges</qualifiedname>
        <briefdescription>
<para>obtains a circulator circulator that allows going over the halfedges incident to <computeroutput>v</computeroutput> (that have <computeroutput>v</computeroutput> as their target). </para>
        </briefdescription>
        <detaileddescription>
<para>The edges are traversed in a clockwise direction around <computeroutput>v</computeroutput>. <simplesect kind="pre"><para><computeroutput>v</computeroutput> is <emphasis>not</emphasis> an isolated vertex. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="128" column="39"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ae090e4bb8f2f31c020e21d94816e7335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Arrangement__on__surface__2_1a5c97d46fc76cf9ab96ceced3b795b3c9" kindref="member">Face_handle</ref></type>
        <definition>Face_handle CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::face</definition>
        <argsstring>()</argsstring>
        <name>face</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::face</qualifiedname>
        <briefdescription>
<para>obtains a handle to the face that contains <computeroutput>v</computeroutput> in its interior. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>v</computeroutput> is an isolated vertex. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="133" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ac051fe1c2c008a0aee0cd7a578d03390" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Traits::Point_2 &amp;</type>
        <definition>const Traits::Point_2 &amp; CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::point</definition>
        <argsstring>() const</argsstring>
        <name>point</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::point</qualifiedname>
        <briefdescription>
<para>obtains the point associated with the vertex. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>v</computeroutput> is not a vertex at infinity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="138" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1aa324ce50ac500bc80bf74abad4b22d78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>Arr_parameter_space CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::parameter_space_in_x</definition>
        <argsstring>() const</argsstring>
        <name>parameter_space_in_x</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::parameter_space_in_x</qualifiedname>
        <briefdescription>
<para>obtains the placement of the <formula id="211">$ x$</formula>-coordinate in the parameter space, that is, either the left boundary-side, the interior, or the right boundary-side. </para>
        </briefdescription>
        <detaileddescription>
<para>If the vertex lies on an identified vertical side, the return value is non-deterministic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="145" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1acdc784d286542020869d294adc6101eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga69d3e68aa488b8927506333b04400bdf" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Arr_parameter_space</ref></type>
        <definition>Arr_parameter_space CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex::parameter_space_in_y</definition>
        <argsstring>() const</argsstring>
        <name>parameter_space_in_y</name>
        <qualifiedname>CGAL::Arrangement_on_surface_2::Vertex::parameter_space_in_y</qualifiedname>
        <briefdescription>
<para>obtains the placement of the <formula id="419">$ y$</formula>-coordinate in the parameter space, that is, either the bottom boundary-side, the interior, or the top boundary-side. </para>
        </briefdescription>
        <detaileddescription>
<para>If the vertex lies on an identified horizontal side, the return value is non-deterministic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arrangement_on_surface_2.h" line="152" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object <formula id="503">$ v$</formula> of the class <computeroutput><ref refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex" kindref="compound">Vertex</ref></computeroutput> represents an arrangement vertex, that is a <formula id="412">$ 0$</formula>-dimensional cell, associated with a point on the ambient surface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex</label>
        <link refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>typename Dcel::Vertex</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CGAL::Arrangement_on_surface_2&lt; GeometryTraits, TopologyTraits &gt;::Vertex</label>
        <link refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>typename Dcel::Vertex</label>
      </node>
    </collaborationgraph>
    <location file="CGAL/Arrangement_on_surface_2.h" line="95" column="3" bodyfile="CGAL/Arrangement_on_surface_2.h" bodystart="95" bodyend="156"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ac9e62a9b86fd210c1823e4efe243a50a" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>degree</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ae090e4bb8f2f31c020e21d94816e7335" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>face</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ae8ee4823ad2d0e7a345f61c5778bc8a6" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>incident_halfedges</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ad5c3177a4fd6417300001eb286c5bc9f" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>is_at_open_boundary</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ac7bd85bf195ed9e15b62ef591cd005a9" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>is_isolated</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1aa324ce50ac500bc80bf74abad4b22d78" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>parameter_space_in_x</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1acdc784d286542020869d294adc6101eb" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>parameter_space_in_y</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1ac051fe1c2c008a0aee0cd7a578d03390" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>point</name></member>
      <member refid="classCGAL_1_1Arrangement__on__surface__2_1_1Vertex_1a01640d530a3b979816a06599372bbaee" prot="public" virt="non-virtual"><scope>CGAL::Arrangement_on_surface_2::Vertex</scope><name>Vertex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
