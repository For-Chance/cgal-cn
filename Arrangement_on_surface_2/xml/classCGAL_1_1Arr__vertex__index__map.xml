<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Arr__vertex__index__map" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_vertex_index_map</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Arrangement_::Observer</basecompoundref>
    <includes local="no">CGAL/Arr_vertex_index_map.h</includes>
    <templateparamlist>
      <param>
        <type>typename Arrangement_</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1a6d137c620fa5e72e66ad624dd24dc9a1" prot="public" static="no">
        <type>Arrangement_</type>
        <definition>typedef Arrangement_ CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::Arrangement_2</definition>
        <argsstring></argsstring>
        <name>Arrangement_2</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::Arrangement_2</qualifiedname>
        <briefdescription>
<para>the type of the attached arrangement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="33" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1aa802876018cafff87fddcb1b849ec43b" prot="public" static="no">
        <type>Arrangement_2::Base_aos</type>
        <definition>typedef Arrangement_2::Base_aos CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::Base_aos</definition>
        <argsstring></argsstring>
        <name>Base_aos</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::Base_aos</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="34" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1ad9753bdb648ab1b9225b748c65e4a4ec" prot="public" static="no">
        <type>boost::readable_property_map_tag</type>
        <definition>typedef boost::readable_property_map_tag CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::category</definition>
        <argsstring></argsstring>
        <name>category</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::category</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="36" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1a65075d039e87395665e92fffb1669742" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="38" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1a5b7f22d62b92757c265a84b9e31bcacd" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::reference</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="40" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1a1c9ba431858000a627a81c8de9b670ed" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Arr__vertex__index__map_1abf23bf8c82c2a4432ee838b1d9f4d766" kindref="member">Vertex_handle</ref></type>
        <definition>typedef Vertex_handle CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::key_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="42" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1abf23bf8c82c2a4432ee838b1d9f4d766" prot="public" static="no">
        <type>Base_aos::Vertex_handle</type>
        <definition>typedef Base_aos::Vertex_handle CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::Vertex_handle</definition>
        <argsstring></argsstring>
        <name>Vertex_handle</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::Vertex_handle</qualifiedname>
        <briefdescription>
<para>The vertex handle type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="46" column="57" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Arr__vertex__index__map_1a10c23dff7e8a2a6e6dd57e3e333422ae" prot="public" static="no">
        <type>Unique_hash_map&lt; <ref refid="classCGAL_1_1Arr__vertex__index__map_1abf23bf8c82c2a4432ee838b1d9f4d766" kindref="member">Vertex_handle</ref>, <ref refid="classCGAL_1_1Arr__vertex__index__map_1a65075d039e87395665e92fffb1669742" kindref="member">value_type</ref> &gt;</type>
        <definition>typedef Unique_hash_map&lt;Vertex_handle, value_type&gt; CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::Index_map</definition>
        <argsstring></argsstring>
        <name>Index_map</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::Index_map</qualifiedname>
        <briefdescription>
<para>The type of mapping of vertices to indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="50" column="30" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__vertex__index__map_1a2b0a115dc331d50187e27d6a76e9d284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::Arr_vertex_index_map</definition>
        <argsstring>()</argsstring>
        <name>Arr_vertex_index_map</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::Arr_vertex_index_map</qualifiedname>
        <briefdescription>
<para>constructs a map that is unattached to any arrangement instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="59" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__vertex__index__map_1a8f3a46c9bf70a7eb4f47990b7c6f04f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;::Arr_vertex_index_map</definition>
        <argsstring>(Base_aos &amp;arr)</argsstring>
        <name>Arr_vertex_index_map</name>
        <qualifiedname>CGAL::Arr_vertex_index_map::Arr_vertex_index_map</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Arr__vertex__index__map_1aa802876018cafff87fddcb1b849ec43b" kindref="member">Base_aos</ref> &amp;</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
<para>constructs a map and attaches it to the given arrangement <computeroutput>arr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_vertex_index_map.h" line="63" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput><ref refid="classCGAL_1_1Arr__vertex__index__map" kindref="compound">Arr_vertex_index_map</ref></computeroutput> maintains a mapping of vertex handles of an attached arrangement object to indices (of type <computeroutput>unsigned int</computeroutput>). </para>
    </briefdescription>
    <detaileddescription>
<para>This class template is a model of the concept <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput>. A mapping between vertex handles and indices enables convenient usage of property-map classes supplied by <computeroutput>boost</computeroutput>. For example, the property-map class templates <computeroutput>boost::vector_property_map</computeroutput>, which is based on <computeroutput>std::vector</computeroutput>, and <computeroutput>boost::iterator_property_map</computeroutput>, which can be used to implement a property map based on a native C++ array, require the user to supply a mapping such as <computeroutput><ref refid="classCGAL_1_1Arr__vertex__index__map" kindref="compound">Arr_vertex_index_map</ref></computeroutput>.</para>
<para>As new vertices might be inserted into the attached arrangement, and existing vertices might be removed, the notification mechanism is used to dynamically maintain the mapping of vertex handles to indices.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classAssignable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Assignable</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Arr__face__index__map" kindref="compound">Arr_face_index_map</ref>&lt;Arrangement&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Arrangement_::Observer</label>
      </node>
      <node id="1">
        <label>CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;</label>
        <link refid="classCGAL_1_1Arr__vertex__index__map"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Arrangement_::Observer</label>
      </node>
      <node id="1">
        <label>CGAL::Arr_vertex_index_map&lt; Arrangement_ &gt;</label>
        <link refid="classCGAL_1_1Arr__vertex__index__map"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Arr_vertex_index_map.h" line="25" column="3" bodyfile="CGAL/Arr_vertex_index_map.h" bodystart="25" bodyend="67"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a2b0a115dc331d50187e27d6a76e9d284" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>Arr_vertex_index_map</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a8f3a46c9bf70a7eb4f47990b7c6f04f9" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>Arr_vertex_index_map</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a6d137c620fa5e72e66ad624dd24dc9a1" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>Arrangement_2</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1aa802876018cafff87fddcb1b849ec43b" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>Base_aos</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1ad9753bdb648ab1b9225b748c65e4a4ec" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>category</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a10c23dff7e8a2a6e6dd57e3e333422ae" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>Index_map</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a1c9ba431858000a627a81c8de9b670ed" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>key_type</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a5b7f22d62b92757c265a84b9e31bcacd" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>reference</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1a65075d039e87395665e92fffb1669742" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>value_type</name></member>
      <member refid="classCGAL_1_1Arr__vertex__index__map_1abf23bf8c82c2a4432ee838b1d9f4d766" prot="public" virt="non-virtual"><scope>CGAL::Arr_vertex_index_map</scope><name>Vertex_handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
