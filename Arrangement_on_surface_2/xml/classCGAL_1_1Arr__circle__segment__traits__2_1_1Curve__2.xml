<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_circle_segment_traits_2::Curve_2</compoundname>
    <includes local="no">CGAL/Arr_circle_segment_traits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a4eb8872a865eac890ef37c56cbb234e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Segment_2 &amp;seg)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Segment_2</ref> &amp;</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
<para>constructs an curve corresponding to the line segment <computeroutput>seg</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="56" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a9fc91159740145a5f96d6d8296cf9ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Point_2 &amp;source, const typename Kernel::Point_2 &amp;target)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>constructs an curve corresponding to the line segment directed from <computeroutput>source</computeroutput> to <computeroutput>target</computeroutput>, both having rational coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a7315d4dd946c5a9db4a4dc7c9fb6e086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Line_2 &amp;line, const Point_2 &amp;source, const Point_2 &amp;target)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Line_2</ref> &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>constructs an curve corresponding to the line segment supported by the given line, directed from <computeroutput>source</computeroutput> to <computeroutput>target</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the two endpoints may have one-root coordinates.</para>
<para><simplesect kind="pre"><para>Both endpoints must lie on the given supporting line. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1af9dc512c26c27bab5bbec1a18b042de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Circle_2 &amp;circ)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Circle_2</ref> &amp;</type>
          <declname>circ</declname>
        </param>
        <briefdescription>
<para>constructs an curve corresponding to the given circle. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>circ</computeroutput> has a center point with rational coordinates and its <emphasis>squared</emphasis> radius is rational. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="78" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ada5b09eddfcfbdd4c19527f28ad2ad0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Point_2 &amp;c, const typename Kernel::FT &amp;r, Orientation orient=COUNTERCLOCKWISE)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
          <declname>orient</declname>
          <defval><ref refid="group__kernel__enums_1ga39fcfbab0b0f0ce9139ad1613e21d60d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">COUNTERCLOCKWISE</ref></defval>
        </param>
        <briefdescription>
<para>constructs an curve corresponding to a circle centered at the rational point <computeroutput>c</computeroutput> whose radius <computeroutput>r</computeroutput> is rational. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="83" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ab9682acf95430af0687274a4fcf0338e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Circle_2 &amp;circ, const Point_2 &amp;source, const Point_2 &amp;target)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Circle_2</ref> &amp;</type>
          <declname>circ</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>constructs a circular arc supported by <computeroutput>circ</computeroutput>, which has a center point with rational coordinates and whose <emphasis>squared</emphasis> radius is rational, with the given endpoints. </para>
        </briefdescription>
        <detaileddescription>
<para>The orientation of the arc is the same as the orientation of <computeroutput>circ</computeroutput>.</para>
<para><simplesect kind="pre"><para>Both endpoints must lie on the given supporting circle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="94" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1aa83a4468bb6129731bbef90236d0ec9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Point_2 &amp;c, const typename Kernel::FT &amp;r, Orientation orient, const Point_2 &amp;source, const Point_2 &amp;target)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const typename Kernel::FT &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
          <declname>orient</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>constructs a circular arc supported by a circle centered at the rational point <computeroutput>c</computeroutput> whose radius <computeroutput>r</computeroutput> is rational, directed from <computeroutput>source</computeroutput> to <computeroutput>target</computeroutput> with the given orientation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>Both endpoints must lie on the supporting circle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="103" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1aadecb29b9eb10274b8bcfc158a01f87e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::Curve_2</definition>
        <argsstring>(const typename Kernel::Point_2 &amp;source, const typename Kernel::Point_2 &amp;mid, const typename Kernel::Point_2 &amp;target)</argsstring>
        <name>Curve_2</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::Curve_2</qualifiedname>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>mid</declname>
        </param>
        <param>
          <type>const typename <ref refid="classKernel_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Point_2</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>constructs an circular arc whose endpoints are <computeroutput>source</computeroutput> and <computeroutput>target</computeroutput> that passes through <computeroutput>mid</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>All three points have rational coordinates.</para>
<para><simplesect kind="pre"><para>The three points must not be collinear. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="114" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a6b97ecaf945ca21b8f54f06e1e1077c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::is_full</definition>
        <argsstring>() const</argsstring>
        <name>is_full</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::is_full</qualifiedname>
        <briefdescription>
<para>indicates whether the curve represents a full circle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ae68e09f5f5bb8c305f5e1ced9b585179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
        <definition>const Point_2 &amp; CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::source</definition>
        <argsstring>() const</argsstring>
        <name>source</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::source</qualifiedname>
        <briefdescription>
<para>returns the source point. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>cv</computeroutput> is not a full circle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="131" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a5a1ee07a6b96caf47947b164a5785023" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Point__2" kindref="compound">Point_2</ref> &amp;</type>
        <definition>const Point_2 &amp; CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::target</definition>
        <argsstring>() const</argsstring>
        <name>target</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::target</qualifiedname>
        <briefdescription>
<para>returns the target point. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>cv</computeroutput> is not a full circle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="137" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1aed1703d80178aa887010c54cc26f0311" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__kernel__enums_1ga59bee58a806ccde81562ea315ff75525" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Orientation</ref></type>
        <definition>Orientation CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::orientation</definition>
        <argsstring>() const</argsstring>
        <name>orientation</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::orientation</qualifiedname>
        <briefdescription>
<para>returns the orientation of the curve (<computeroutput>COLLINEAR</computeroutput> in case of line segments). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="142" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1af799a7d21c46a5757ad93398b7ae3666" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::is_linear</definition>
        <argsstring>() const</argsstring>
        <name>is_linear</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::is_linear</qualifiedname>
        <briefdescription>
<para>determines whether <computeroutput>cv</computeroutput> is a line segment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a4eba41f9a9ac9c9bc3559882f3ac37f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::is_circular</definition>
        <argsstring>() const</argsstring>
        <name>is_circular</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::is_circular</qualifiedname>
        <briefdescription>
<para>determines whether <computeroutput>cv</computeroutput> is a circular arc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="150" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ac4615e4e9c222d7a9ed4222697f978d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Line__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Line_2</ref></type>
        <definition>Kernel::Line_2 CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::supporting_line</definition>
        <argsstring>() const</argsstring>
        <name>supporting_line</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::supporting_line</qualifiedname>
        <briefdescription>
<para>returns the supporting line of <computeroutput>cv</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>cv</computeroutput> is a line segment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="156" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a1521e16b2127fe14d2bb191eed16a503" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classKernel_1_1Circle__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Circle_2</ref></type>
        <definition>Kernel::Circle_2 CGAL::Arr_circle_segment_traits_2&lt; Kernel &gt;::Curve_2::supporting_circle</definition>
        <argsstring>() const</argsstring>
        <name>supporting_circle</name>
        <qualifiedname>CGAL::Arr_circle_segment_traits_2::Curve_2::supporting_circle</qualifiedname>
        <briefdescription>
<para>returns the supporting circle of <computeroutput>cv</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>cv</computeroutput> is a circular arc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Arr_circle_segment_traits_2.h" line="162" column="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <computeroutput><ref refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2" kindref="compound">Curve_2</ref></computeroutput> class nested within the traits class can represent arbitrary circular arcs, full circles and line segments and support their construction in various ways. </para>
    </briefdescription>
    <detaileddescription>
<para>The copy and default constructor as well as the assignment operator are provided. In addition, an <computeroutput>operator&lt;&lt;</computeroutput> for the curves is defined for standard output streams. </para>
    </detaileddescription>
    <location file="CGAL/Arr_circle_segment_traits_2.h" line="48" column="3" bodyfile="CGAL/Arr_circle_segment_traits_2.h" bodystart="48" bodyend="166"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a4eb8872a865eac890ef37c56cbb234e1" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a9fc91159740145a5f96d6d8296cf9ec2" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a7315d4dd946c5a9db4a4dc7c9fb6e086" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1af9dc512c26c27bab5bbec1a18b042de2" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ada5b09eddfcfbdd4c19527f28ad2ad0a" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ab9682acf95430af0687274a4fcf0338e" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1aa83a4468bb6129731bbef90236d0ec9e" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1aadecb29b9eb10274b8bcfc158a01f87e" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>Curve_2</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a4eba41f9a9ac9c9bc3559882f3ac37f8" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>is_circular</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a6b97ecaf945ca21b8f54f06e1e1077c3" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>is_full</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1af799a7d21c46a5757ad93398b7ae3666" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>is_linear</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1aed1703d80178aa887010c54cc26f0311" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>orientation</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ae68e09f5f5bb8c305f5e1ced9b585179" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>source</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a1521e16b2127fe14d2bb191eed16a503" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>supporting_circle</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1ac4615e4e9c222d7a9ed4222697f978d0" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>supporting_line</name></member>
      <member refid="classCGAL_1_1Arr__circle__segment__traits__2_1_1Curve__2_1a5a1ee07a6b96caf47947b164a5785023" prot="public" virt="non-virtual"><scope>CGAL::Arr_circle_segment_traits_2::Curve_2</scope><name>target</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
