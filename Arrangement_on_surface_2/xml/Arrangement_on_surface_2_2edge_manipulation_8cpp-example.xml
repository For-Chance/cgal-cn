<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="Arrangement_on_surface_2_2edge_manipulation_8cpp-example" kind="example">
    <compoundname>Arrangement_on_surface_2/edge_manipulation.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="Arrangement_on_surface_2/edge_manipulation.cpp"><codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>the<sp/>edge-manipulation<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_inexact_construction_segments.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arr_print.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>(a)---construct<sp/>a<sp/>rectangular<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>q1(1,<sp/>3),<sp/>q2(3,<sp/>5),<sp/>q3(5,<sp/>3),<sp/>q4(3,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Segment<sp/>s4(q1,<sp/>q2),<sp/>s1(q2,<sp/>q3),<sp/>s3(q3,<sp/>q4),<sp/>s2(q4,<sp/>q1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Arrangement<sp/>arr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e1<sp/>=<sp/>arr.insert_in_face_interior(s1,<sp/>arr.unbounded_face());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e2<sp/>=<sp/>arr.insert_in_face_interior(s2,<sp/>arr.unbounded_face());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>e2<sp/>=<sp/>e2-&gt;twin();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>wish<sp/>e2<sp/>to<sp/>be<sp/>directed<sp/>from<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.insert_at_vertices(s3,<sp/>e1-&gt;target(),<sp/>e2-&gt;source());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.insert_at_vertices(s4,<sp/>e2-&gt;target(),<sp/>e1-&gt;source());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;After<sp/>step<sp/>(a):\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement(arr);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>(b)---split<sp/>e1<sp/>and<sp/>e2<sp/>and<sp/>connect<sp/>the<sp/>split<sp/>points<sp/>with<sp/>a<sp/>segment.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Point<sp/>p1(4,4),<sp/>p2(2,2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Segment<sp/>s1_1(q2,<sp/>p1),<sp/>s1_2(p1,<sp/>q3),<sp/>s2_1(q4,<sp/>p2),<sp/>s2_2(p2,<sp/>q1),<sp/>s(p1,<sp/>p2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>e1<sp/>=<sp/>arr.split_edge(e1,<sp/>s1_1,<sp/>s1_2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>e2<sp/>=<sp/>arr.split_edge(e2,<sp/>s2_1,<sp/>s2_2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Halfedge_handle<sp/>e<sp/>=<sp/>arr.insert_at_vertices(s,<sp/>e1-&gt;target(),<sp/>e2-&gt;target());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;After<sp/>step<sp/>(b):&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement(arr);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>(c)---remove<sp/>the<sp/>edge<sp/>e<sp/>and<sp/>merge<sp/>e1<sp/>and<sp/>e2<sp/>with<sp/>their<sp/>successors.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.remove_edge(e);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.merge_edge(e1,<sp/>e1-&gt;next(),<sp/>s1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>arr.merge_edge(e2,<sp/>e2-&gt;next(),<sp/>s2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;After<sp/>step<sp/>(c):\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>print_arrangement(arr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="examples.txt"/>
  </compounddef>
</doxygen>
