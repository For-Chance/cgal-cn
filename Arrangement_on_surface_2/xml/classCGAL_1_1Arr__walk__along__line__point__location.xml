<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Arr__walk__along__line__point__location" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Arr_walk_along_line_point_location</compoundname>
    <includes local="no">CGAL/Arr_walk_along_line_point_location.h</includes>
    <templateparamlist>
      <param>
        <type>typename Arrangement</type>
      </param>
    </templateparamlist>
    <briefdescription>
<para><anchor id="classCGAL_1_1Arr__walk__along__line__point__location_1arr_refwalk_pl"/></para>
    </briefdescription>
    <detaileddescription>
<para>The <computeroutput><ref refid="classCGAL_1_1Arr__walk__along__line__point__location" kindref="compound">Arr_walk_along_line_point_location</ref></computeroutput> class implements a very simple point-location (and vertical ray-shooting) strategy that improves the naive one. The algorithm considers an imaginary vertical ray emanating from the query point, and simulates a walk along the zone of this ray, starting from the unbounded face until reaching the query point. In dense arrangements this walk can considerably reduce the number of traversed arrangement edges, with respect to the na<iumlaut/>ve algorithm.</para>
<para>The walk-along-a-line point-location object (just like the na<iumlaut/>ve one) does not use any auxiliary data structures. Thus, attaching it to an existing arrangement takes constant time, and any ongoing updates to this arrangement do not affect the point-location object. It is therefore recommended to use the &quot;walk&quot; point-location strategy for arrangements that are constantly changing, especially if the number of issued queries is not large.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classArrangementPointLocation__2" kindref="compound">ArrangementPointLocation_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classArrangementVerticalRayShoot__2" kindref="compound">ArrangementVerticalRayShoot_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Arr__point__location__result" kindref="compound">CGAL::Arr_point_location_result</ref>&lt;Arrangement&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="CGAL/Arr_walk_along_line_point_location.h" line="34" column="1" bodyfile="CGAL/Arr_walk_along_line_point_location.h" bodystart="34" bodyend="37"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
