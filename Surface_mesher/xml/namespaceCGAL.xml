<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Gray__level__image__3" prot="public">CGAL::Gray_level_image_3</innerclass>
    <innerclass refid="classCGAL_1_1Implicit__surface__3" prot="public">CGAL::Implicit_surface_3</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__cell__base__3" prot="public">CGAL::Surface_mesh_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__complex__2__in__triangulation__3" prot="public">CGAL::Surface_mesh_complex_2_in_triangulation_3</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__default__criteria__3" prot="public">CGAL::Surface_mesh_default_criteria_3</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__default__triangulation__3" prot="public">CGAL::Surface_mesh_default_triangulation_3</innerclass>
    <innerclass refid="structCGAL_1_1Surface__mesh__traits__generator__3" prot="public">CGAL::Surface_mesh_traits_generator_3</innerclass>
    <innerclass refid="classCGAL_1_1Surface__mesh__vertex__base__3" prot="public">CGAL::Surface_mesh_vertex_base_3</innerclass>
    <innernamespace refid="namespaceCGAL_1_1Surface__mesher">CGAL::Surface_mesher</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSurfaceMesher3FunctionsIO_1ga7718d4e2047939882540d89fb5f28934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::output_surface_facets_to_off</definition>
        <argsstring>(std::ostream &amp;os, const SurfaceMeshComplex_2InTriangulation_3 &amp;c2t3, int options=Surface_mesher::IO_ORIENT_SURFACE)</argsstring>
        <name>output_surface_facets_to_off</name>
        <qualifiedname>CGAL::output_surface_facets_to_off</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref> &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
          <defval><ref refid="group__PkgSurfaceMesher3FunctionsIO_1gga79944e81075ea1199fe75e255d7d3393aa1a4c5b87df4d4b7a8af2212fab14d51" kindref="member">Surface_mesher::IO_ORIENT_SURFACE</ref></defval>
        </param>
        <briefdescription>
<para>writes a manifold or non-manifold surface reconstructed by <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput> in the OFF file format. </para>
        </briefdescription>
        <detaileddescription>
<para>In case the surface is manifold the triangles can be oriented.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the <computeroutput><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the surface is manifold and orientable.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>stream in which to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c2t3</parametername>
</parameternamelist>
<parameterdescription>
<para>Input surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>an int that is the binary union of values of <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsIO_1ga79944e81075ea1199fe75e255d7d3393" kindref="member">Surface_mesher::IO_option</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the surface could be written to the stream.</para>
</simplesect>
<simplesect kind="see"><para>IOStreamOFF </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="namespaceCGAL_1ab2fbf4e1a4cf30fa19304138461623e7" kindref="member">CGAL::output_surface_facets_to_polyhedron()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Complex_2_in_triangulation_3_file_writer.h" line="28" column="6" declfile="CGAL/IO/Complex_2_in_triangulation_3_file_writer.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMesher3FunctionsIO_1ga39a105bd1817a9200ec5df208888e8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C2T3</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::facets_in_complex_2_to_triangle_mesh</definition>
        <argsstring>(const C2T3 &amp;c2t3, TriangleMesh &amp;graph)</argsstring>
        <name>facets_in_complex_2_to_triangle_mesh</name>
        <qualifiedname>CGAL::facets_in_complex_2_to_triangle_mesh</qualifiedname>
        <param>
          <type>const C2T3 &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
<para>converts a manifold surface reconstructed by <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput> to a <computeroutput>TriangleMesh</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function exports the surface as a <computeroutput>TriangleMesh</computeroutput> and appends it to <computeroutput>graph</computeroutput>. It must be manifold. For this purpose, you may call <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput> with <computeroutput>Manifold_tag</computeroutput> or <computeroutput>Manifold_with_boundary_tag</computeroutput> parameter.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C2T3</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>MutableFaceGraph</computeroutput> with an internal point property map. The point type should be compatible with the one used in <computeroutput>C2T3</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c2t3</parametername>
</parameternamelist>
<parameterdescription>
<para>a manifold instance of <computeroutput>C2T3</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>graph</parametername>
</parameternamelist>
<parameterdescription>
<para>an instance of <computeroutput>TriangleMesh</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsIO_1ga7718d4e2047939882540d89fb5f28934" kindref="member">CGAL::output_surface_facets_to_off()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/facets_in_complex_2_to_triangle_mesh.h" line="22" column="6" declfile="CGAL/IO/facets_in_complex_2_to_triangle_mesh.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ab2fbf4e1a4cf30fa19304138461623e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></type>
          </param>
          <param>
            <type>class Polyhedron</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::output_surface_facets_to_polyhedron</definition>
        <argsstring>(const SurfaceMeshComplex_2InTriangulation_3 &amp;c2t3, Polyhedron &amp;output_polyhedron)</argsstring>
        <name>output_surface_facets_to_polyhedron</name>
        <qualifiedname>CGAL::output_surface_facets_to_polyhedron</qualifiedname>
        <param>
          <type>const <ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref> &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>Polyhedron &amp;</type>
          <declname>output_polyhedron</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Gets reconstructed surface out of a <ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref> object.</para>
</xrefdescription></xrefsect></para>
<para>This variant exports the surface as a polyhedron. It requires the surface to be manifold. For this purpose, you may call <ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref> with Manifold_tag or Manifold_with_boundary_tag parameter.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername><ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of the <ref refid="classSurfaceMeshComplex__2InTriangulation__3" kindref="compound">SurfaceMeshComplex_2InTriangulation_3</ref> concept. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>an instance of CGAL::Polyhedron_3&lt;Traits&gt;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c2t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the input. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>the output.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the surface is manifold and orientable. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/output_surface_facets_to_polyhedron.h" line="18" column="19" declfile="CGAL/IO/output_surface_facets_to_polyhedron.h" declline="18" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SurfaceMeshC2T3</type>
          </param>
          <param>
            <type>class Surface</type>
          </param>
          <param>
            <type>class FacetsCriteria</type>
          </param>
          <param>
            <type>class Tag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_surface_mesh</definition>
        <argsstring>(SurfaceMeshC2T3 &amp;c2t3, Surface surface, FacetsCriteria criteria, Tag tag, int initial_number_of_points=20)</argsstring>
        <name>make_surface_mesh</name>
        <qualifiedname>CGAL::make_surface_mesh</qualifiedname>
        <param>
          <type>SurfaceMeshC2T3 &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>Surface</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>FacetsCriteria</type>
          <declname>criteria</declname>
        </param>
        <param>
          <type>Tag</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_number_of_points</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>In the first overloaded version of of <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput>, the surface type is given as template parameter (<computeroutput>Surface</computeroutput>) and the <computeroutput>surface</computeroutput> to be meshed is passed as parameter to the mesh generator. </para>
        </briefdescription>
        <detaileddescription>
<para>In that case the surface mesh generator traits type is automatically generated form the surface type by an auxiliary class called the <computeroutput><ref refid="structCGAL_1_1Surface__mesh__traits__generator__3" kindref="compound">Surface_mesh_traits_generator_3</ref></computeroutput>.</para>
<para>The first overloaded version can be used whenever the surface type either provides a nested type <computeroutput>Surface::Surface_mesher_traits_3</computeroutput> that is a model of <computeroutput><ref refid="classSurfaceMeshTraits__3" kindref="compound">SurfaceMeshTraits_3</ref></computeroutput> or is a surface type for which a specialization of the traits generator <computeroutput><ref refid="structCGAL_1_1Surface__mesh__traits__generator__3" kindref="compound">Surface_mesh_traits_generator_3</ref>&lt;Surface&gt;</computeroutput> is provided. Currently, the library provides partial specializations of <computeroutput><ref refid="structCGAL_1_1Surface__mesh__traits__generator__3" kindref="compound">Surface_mesh_traits_generator_3</ref>&lt;Surface&gt;</computeroutput> for implicit surfaces (<computeroutput><ref refid="classCGAL_1_1Implicit__surface__3" kindref="compound">Implicit_surface_3</ref>&lt;Traits, Function&gt;</computeroutput>) and gray level images (<computeroutput><ref refid="classCGAL_1_1Gray__level__image__3" kindref="compound">Gray_level_image_3</ref>&lt;FT, Point&gt;</computeroutput>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/make_surface_mesh.h" line="110" column="6" declfile="CGAL/make_surface_mesh.h" declline="110" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga6ebf84d47dd47772c1bee10efeeaa163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class SurfaceMeshC2T3</type>
          </param>
          <param>
            <type>class SurfaceMeshTraits</type>
          </param>
          <param>
            <type>class FacetsCriteria</type>
          </param>
          <param>
            <type>class Tag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::make_surface_mesh</definition>
        <argsstring>(SurfaceMeshC2T3 &amp;c2t3, SurfaceMeshTraits::Surface_3 surface, SurfaceMeshTraits traits, FacetsCriteria criteria, Tag tag, int initial_number_of_points=20)</argsstring>
        <name>make_surface_mesh</name>
        <qualifiedname>CGAL::make_surface_mesh</qualifiedname>
        <param>
          <type>SurfaceMeshC2T3 &amp;</type>
          <declname>c2t3</declname>
        </param>
        <param>
          <type>SurfaceMeshTraits::Surface_3</type>
          <declname>surface</declname>
        </param>
        <param>
          <type>SurfaceMeshTraits</type>
          <declname>traits</declname>
        </param>
        <param>
          <type>FacetsCriteria</type>
          <declname>criteria</declname>
        </param>
        <param>
          <type>Tag</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_number_of_points</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>In the second overloaded version of <computeroutput><ref refid="group__PkgSurfaceMesher3FunctionsMakeMesh_1ga7e188adef5bfadaafd08db82c8a25dc1" kindref="member">make_surface_mesh()</ref></computeroutput>, the surface mesh generator traits type is provided by the template parameter <computeroutput><ref refid="classSurfaceMeshTraits__3" kindref="compound">SurfaceMeshTraits_3</ref></computeroutput> and the surface type is obtained from this traits type. </para>
        </briefdescription>
        <detaileddescription>
<para>Both the surface and the traits are passed to the mesh generator as arguments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/make_surface_mesh.h" line="128" column="6" declfile="CGAL/make_surface_mesh.h" declline="128" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Gray_level_image_3.h" line="2" column="1"/>
  </compounddef>
</doxygen>
