<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgPolyhedronIOFunc" kind="group">
    <compoundname>PkgPolyhedronIOFunc</compoundname>
    <title>I/O Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgPolyhedronIOFunc_1gaccd9d4d15af1376dbc166eb501f28980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Traits</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool read_OFF</definition>
        <argsstring>(std::istream &amp;in, Polyhedron_3&lt; Traits &gt; &amp;P)</argsstring>
        <name>read_OFF</name>
        <qualifiedname>CGAL::Polyhedron_3::read_OFF</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Polyhedron_3&lt; Traits &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>reads a polyhedral surface in Object File Format, OFF, with file extension <computeroutput>.off</computeroutput>, from the input stream <computeroutput>in</computeroutput> and appends it to the polyhedral surface <formula id="0">$ P$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para>Only the point coordinates and facets from the input stream are used to build the polyhedral surface. Neither normal vectors nor color attributes are evaluated.</para>
<para>This function overloads the generic function <ref refid="group__PkgBGLIoFuncsOFF" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag"><computeroutput>read_OFF(std::istream&amp;, FaceGraph)</computeroutput></ref> (if no named parameters are used).</para>
<para><simplesect kind="note"><para>This function requires <computeroutput>Traits</computeroutput> to be a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> (a stronger requirement than <computeroutput><ref refid="classPolyhedronTraits__3" kindref="compound">PolyhedronTraits_3</ref></computeroutput>).</para>
</simplesect>
<bold>Implementation</bold><linebreak/>
</para>
<para>This operator is implemented using the modifier mechanism for polyhedral surfaces and the <computeroutput><ref refid="classCGAL_1_1Polyhedron__incremental__builder__3" kindref="compound">Polyhedron_incremental_builder_3</ref></computeroutput> class, which allows the construction in a single, efficient scan pass of the input and handles also all the possible flexibility of the polyhedral surface.</para>
<para><simplesect kind="note"><para>Starting with CGAL 5.2, this function will no longer set the <computeroutput>ios::badbit</computeroutput> of the input stream <computeroutput>in</computeroutput> if the file contains 0 vertices.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polyhedron__3" kindref="compound">CGAL::Polyhedron_3</ref>&lt;Traits&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polyhedron__incremental__builder__3" kindref="compound">CGAL::Polyhedron_incremental_builder_3</ref>&lt;HDS&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__PkgPolyhedronIOFunc" kindref="compound"><computeroutput>operator&lt;&lt;(std::ostream&amp;, Polyhedron_3&lt;Traits&gt;&amp;)</computeroutput></ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Polyhedron_iostream.h" line="35" column="6" declfile="CGAL/IO/Polyhedron_iostream.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolyhedronIOFunc_1ga9842e8b5cda1e38ad04aa7f80622bce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Traits</ref></type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, Polyhedron_3&lt; Traits &gt; &amp;P)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Polyhedron_3::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Polyhedron_3&lt; Traits &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>calls <ref refid="group__PkgPolyhedronIOFunc_1gaccd9d4d15af1376dbc166eb501f28980" kindref="member"><computeroutput>read_OFF(in, P)</computeroutput> </ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Polyhedron_iostream.h" line="51" column="14" declfile="CGAL/IO/Polyhedron_iostream.h" declline="51" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolyhedronIOFunc_1ga408af896e2203af605059494e620cb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Traits</ref></type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool write_OFF</definition>
        <argsstring>(std::ostream &amp;out, const Polyhedron_3&lt; Traits &gt; &amp;P)</argsstring>
        <name>write_OFF</name>
        <qualifiedname>CGAL::Polyhedron_3::write_OFF</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const Polyhedron_3&lt; Traits &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>writes the polyhedral surface <formula id="1">$P$</formula> to the output stream <computeroutput>out</computeroutput> using the Object File Format, OFF, with file extension <computeroutput>.off</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The output is in ASCII format. From the polyhedral surface, only the point coordinates and facets are written. Neither normal vectors nor color attributes are used.</para>
<para>For <computeroutput>OFF</computeroutput> an ASCII and a binary format exist. The format can be selected with the CGAL modifiers for streams, <computeroutput>set_ascii_mode()</computeroutput> and <computeroutput>set_binary_mode()</computeroutput> respectively. The modifier <computeroutput>set_pretty_mode()</computeroutput> can be used to allow for (a few) structuring comments in the output. Otherwise, the output would be free of comments. The default for writing is ASCII without comments.</para>
<para>This function overloads the generic function <ref refid="group__PkgBGLIoFuncsOFF" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag"><computeroutput>write_OFF(std::istream&amp;,FaceGraph)</computeroutput> </ref> (if no named parameters are used).</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polyhedron__3" kindref="compound">CGAL::Polyhedron_3</ref>&lt;Traits&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polyhedron__incremental__builder__3" kindref="compound">CGAL::Polyhedron_incremental_builder_3</ref>&lt;HDS&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="group__PkgPolyhedronIOFunc" kindref="compound"><computeroutput>operator&gt;&gt;(std::istream&amp; in, Polyhedron_3&lt;Traits&gt;&amp; P)</computeroutput> </ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Polyhedron_iostream.h" line="78" column="6" declfile="CGAL/IO/Polyhedron_iostream.h" declline="78" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPolyhedronIOFunc_1ga0672e8be92f0b71fe624525f80f850d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class <ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Traits</ref></type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Polyhedron_3&lt; Traits &gt; &amp;P)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Polyhedron_3::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const Polyhedron_3&lt; Traits &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
<para>calls <ref refid="group__PkgPolyhedronIOFunc_1ga408af896e2203af605059494e620cb64" kindref="member"><computeroutput>write_OFF(out, P)</computeroutput> </ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/Polyhedron_iostream.h" line="94" column="1" declfile="CGAL/IO/Polyhedron_iostream.h" declline="94" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
