<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgSMDS3IOFunctions" kind="group">
    <compoundname>PkgSMDS3IOFunctions</compoundname>
    <title>Input/Output Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgSMDS3IOFunctions_1ga2a63991512cf9f678cf2b778029b676b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C3T3</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::save_binary_file</definition>
        <argsstring>(std::ostream &amp;os, const C3T3 &amp;c3t3)</argsstring>
        <name>save_binary_file</name>
        <qualifiedname>CGAL::IO::save_binary_file</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const C3T3 &amp;</type>
          <declname>c3t3</declname>
        </param>
        <briefdescription>
<para>outputs a mesh complex to the <ref refid="namespaceCGAL" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL</ref> binary file format (<computeroutput>.binary.cgal</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C3T3</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of mesh complex, model of <computeroutput><ref refid="classMeshComplex__3InTriangulation__3" kindref="compound">MeshComplex_3InTriangulation_3</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream, opened in binary mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c3t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh complex</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgSMDS3IOFunctions_1ga70a7457e4559e0012c16aa164b61a4e1" kindref="member">CGAL::IO::load_binary_file()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/File_binary_mesh_3.h" line="41" column="1" bodyfile="CGAL/IO/File_binary_mesh_3.h" bodystart="41" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSMDS3IOFunctions_1ga70a7457e4559e0012c16aa164b61a4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C3T3</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::load_binary_file</definition>
        <argsstring>(std::istream &amp;is, C3T3 &amp;c3t3)</argsstring>
        <name>load_binary_file</name>
        <qualifiedname>CGAL::IO::load_binary_file</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>C3T3 &amp;</type>
          <declname>c3t3</declname>
        </param>
        <briefdescription>
<para>loads a mesh complex from a file written in <ref refid="namespaceCGAL" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL</ref> binary file format (<computeroutput>.binary.cgal</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>C3T3</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of mesh complex, model of <computeroutput><ref refid="classMeshComplex__3InTriangulation__3" kindref="compound">MeshComplex_3InTriangulation_3</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream, opened in binary mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c3t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh complex</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgSMDS3IOFunctions_1ga2a63991512cf9f678cf2b778029b676b" kindref="member">CGAL::IO::save_binary_file()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/File_binary_mesh_3.h" line="74" column="6" bodyfile="CGAL/IO/File_binary_mesh_3.h" bodystart="74" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSMDS3IOFunctions_1ga55df56987c898c68bdc456da6dc0335f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C3T3</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::IO::output_to_medit</definition>
        <argsstring>(std::ostream &amp;os, const C3T3 &amp;c3t3, bool rebind, bool show_patches)</argsstring>
        <name>output_to_medit</name>
        <qualifiedname>CGAL::IO::output_to_medit</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const C3T3 &amp;</type>
          <declname>c3t3</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rebind</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>show_patches</declname>
        </param>
        <briefdescription>
<para>outputs a mesh complex to the medit (<computeroutput>.mesh</computeroutput>) file format. See <ref refid="citelist_1CITEREF_frey:inria-00069921" kindref="member">[1]</ref> for a comprehensive description of this file format. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function is deprecated. Users should instead use <computeroutput><ref refid="group__PkgSMDS3IOFunctions_1ga9e9fc0fac6919241501c228e438fa2b2" kindref="member">CGAL::IO::write_MEDIT()</ref></computeroutput> </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c3t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh complex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rebind</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, labels of cells are rebinded into <computeroutput>[1..nb_of_labels]</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>show_patches</parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>true</computeroutput>, patches are labeled with different labels than cells. If <computeroutput>false</computeroutput>, each surface facet is written twice, using the label of each adjacent cell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="IOStreamSupportedFileFormats_1IOStreamMedit" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Medit File Format</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/File_medit.h" line="916" column="1" bodyfile="CGAL/IO/File_medit.h" bodystart="916" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSMDS3IOFunctions_1ga9e9fc0fac6919241501c228e438fa2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T3</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::IO::write_MEDIT</definition>
        <argsstring>(std::ostream &amp;os, const T3 &amp;t3, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_MEDIT</name>
        <qualifiedname>CGAL::IO::write_MEDIT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const T3 &amp;</type>
          <declname>t3</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>outputs a mesh complex to the medit (<computeroutput>.mesh</computeroutput>) file format. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="citelist_1CITEREF_frey:inria-00069921" kindref="member">[1]</ref> for a comprehensive description of this file format. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T3</parametername>
</parameternamelist>
<parameterdescription>
<para>can be instantiated with any 3D triangulation of CGAL provided that its vertex and cell base class are models of the concepts <computeroutput><ref refid="classSimplicialMeshVertexBase__3" kindref="compound">SimplicialMeshVertexBase_3</ref></computeroutput> and <computeroutput><ref refid="classSimplicialMeshCellBase__3" kindref="compound">SimplicialMeshCellBase_3</ref></computeroutput>, respectively. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>all_cells</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, all the cells in <computeroutput>t3</computeroutput> are written in <computeroutput>os</computeroutput>, whether they belong to the complex or not. Otherwise, only the cells <computeroutput>c</computeroutput> for which <computeroutput>c-&gt;subdomain_index() != Subdomain_index()</computeroutput> are written. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter must be set to <computeroutput>true</computeroutput> for the file to be readable by <computeroutput><ref refid="group__PkgSMDS3IOFunctions_1gab02697fc5c1e8ebf986fdbf4cf3737fb" kindref="member">read_MEDIT()</ref></computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>all_vertices</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, all the finite vertices in <computeroutput>t3</computeroutput> are written in <computeroutput>os</computeroutput>. Otherwise, only the vertices that belong to a cell <computeroutput>c</computeroutput> for which <computeroutput>c-&gt;subdomain_index() != Subdomain_index()</computeroutput> are written </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If <computeroutput>all_cells</computeroutput> is <computeroutput>true</computeroutput>, the value of this parameter is ignored and all vertices are written in <computeroutput>os</computeroutput>. It must be set to <computeroutput>true</computeroutput> for the file to be readable by <computeroutput><ref refid="group__PkgSMDS3IOFunctions_1gab02697fc5c1e8ebf986fdbf4cf3737fb" kindref="member">read_MEDIT()</ref></computeroutput>. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>rebind_labels</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, labels of cells are rebinded into <computeroutput>[1..nb_of_labels]</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>show_patches</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, patches are labeled with different labels than cells. If <computeroutput>false</computeroutput>, each surface facet is written twice, using the label of each adjacent cell. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
<simplesect kind="see"><para><ref refid="IOStreamSupportedFileFormats_1IOStreamMedit" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Medit File Format</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/File_medit.h" line="998" column="6" bodyfile="CGAL/IO/File_medit.h" bodystart="998" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSMDS3IOFunctions_1ga507712bcd0ba0d717be00a6bdf9207ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T3</type>
          </param>
          <param>
            <type>typename CornerIndex</type>
          </param>
          <param>
            <type>typename CurveIndex</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::IO::write_MEDIT</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Mesh_complex_3_in_triangulation_3&lt; T3, CornerIndex, CurveIndex &gt; &amp;c3t3, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_MEDIT</name>
        <qualifiedname>CGAL::IO::write_MEDIT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Mesh__complex__3__in__triangulation__3" kindref="compound">CGAL::Mesh_complex_3_in_triangulation_3</ref>&lt; T3, CornerIndex, CurveIndex &gt; &amp;</type>
          <declname>c3t3</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>outputs a mesh complex to the medit (<computeroutput>.mesh</computeroutput>) file format. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="citelist_1CITEREF_frey:inria-00069921" kindref="member">[1]</ref> for a comprehensive description of this file format. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T3</parametername>
</parameternamelist>
<parameterdescription>
<para>can be instantiated with any 3D triangulation of CGAL provided that its vertex and cell base class are models of the concepts <computeroutput><ref refid="classMeshVertexBase__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_3.tag">MeshVertexBase_3</ref></computeroutput> and <computeroutput><ref refid="classMeshCellBase__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_3.tag">MeshCellBase_3</ref></computeroutput>, respectively. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CornerIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the type of the indices for corners </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CurveIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>is the type of the indices for curves </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c3t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh complex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="4" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>all_cells</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, all the cells in <computeroutput>t3</computeroutput> are written in <computeroutput>os</computeroutput>, whether they belong to the complex or not. Otherwise, only the cells <computeroutput>c</computeroutput> for which <computeroutput>c-&gt;subdomain_index() != Subdomain_index()</computeroutput> are written. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If the complex does not form a topological sphere, this parameter must be set to <computeroutput>true</computeroutput> for the file to be readable by <computeroutput><ref refid="group__PkgSMDS3IOFunctions_1gab02697fc5c1e8ebf986fdbf4cf3737fb" kindref="member">read_MEDIT()</ref></computeroutput>. Otherwise the underlying triangulation data structure will not be valid. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>all_vertices</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, all the vertices in <computeroutput>t3</computeroutput> are written in <computeroutput>os</computeroutput>. Otherwise, only the vertices that belong to a cell <computeroutput>c</computeroutput> for which <computeroutput>c-&gt;subdomain_index() != Subdomain_index()</computeroutput> are written </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If <computeroutput>all_cells</computeroutput> is <computeroutput>true</computeroutput>, the value of this parameter is ignored and all vertices are written in <computeroutput>os</computeroutput>. If the complex does not form a topological sphere, it must be set to <computeroutput>true</computeroutput> for the file to be readable by <computeroutput><ref refid="group__PkgSMDS3IOFunctions_1gab02697fc5c1e8ebf986fdbf4cf3737fb" kindref="member">read_MEDIT()</ref></computeroutput>. Otherwise the underlying triangulation data structure will not be valid. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>rebind_labels</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, labels of cells are rebinded into <computeroutput>[1..nb_of_labels]</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>show_patches</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>If <computeroutput>true</computeroutput>, patches are labeled with different labels than cells. If <computeroutput>false</computeroutput>, each surface facet is written twice, using the label of each adjacent cell. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><ref refid="IOStreamSupportedFileFormats_1IOStreamMedit" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Medit File Format</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/File_medit.h" line="1078" column="6" bodyfile="CGAL/IO/File_medit.h" bodystart="1078" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgSMDS3IOFunctions_1gab02697fc5c1e8ebf986fdbf4cf3737fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T3</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_MEDIT</definition>
        <argsstring>(std::istream &amp;in, T3 &amp;t3, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_MEDIT</name>
        <qualifiedname>CGAL::IO::read_MEDIT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>T3 &amp;</type>
          <declname>t3</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>reads a mesh complex written in the medit (<computeroutput>.mesh</computeroutput>) file format. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="citelist_1CITEREF_frey:inria-00069921" kindref="member">[1]</ref> for a comprehensive description of this file format. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T3</parametername>
</parameternamelist>
<parameterdescription>
<para>can be instantiated with any 3D triangulation of CGAL provided that its vertex and cell base class are models of the concepts <computeroutput><ref refid="classMeshVertexBase__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_3.tag">MeshVertexBase_3</ref></computeroutput> and <computeroutput><ref refid="classMeshCellBase__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Mesh_3.tag">MeshCellBase_3</ref></computeroutput>, respectively. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t3</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> described below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>verbose</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether output warnings and error messages should be printed or not. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>allow_non_manifold</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>allows the construction of a triangulation with non-manifold edges and non manifold vertices. The triangulation is invalid if this situation is met, so it should be used only in advanced cases, and the triangulation will be hardly usable. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>bool </para>
</listitem>
<listitem>
<para><bold>Default: </bold>false </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the connectivity of the triangulation could be built consistently from <computeroutput>in</computeroutput>, and <computeroutput>false</computeroutput> if the triangulation is empty, or if the connectivity of <computeroutput>t3</computeroutput> could not be built. If <computeroutput>false</computeroutput> is returned, <computeroutput>t3</computeroutput> is empty when the function returns.</para>
</simplesect>
This function reads the data about vertices, surface facets, and triangulation cells from <computeroutput>in</computeroutput>, and builds a valid <computeroutput>T3</computeroutput> from it.</para>
<para>Note that a valid 3D triangulation of CGAL must have a valid data structure (see <computeroutput><ref refid="classTriangulationDataStructure__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_3.tag">TriangulationDataStructure_3</ref></computeroutput>), positively oriented cells, and cover the geometric convex hull of all points in <computeroutput>t3</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/File_medit.h" line="1128" column="6" bodyfile="CGAL/IO/File_medit.h" bodystart="1128" bodyend="1144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The free functions that can be used to read and write meshes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
