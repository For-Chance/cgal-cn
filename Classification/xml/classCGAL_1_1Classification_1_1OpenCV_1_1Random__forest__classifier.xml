<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::OpenCV::Random_forest_classifier</compoundname>
    <includes local="no">CGAL/Classification/OpenCV/Random_forest_classifier.h</includes>
      <sectiondef kind="user-defined">
      <header>Constructor</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a31577628cac87703bbcd1c26502c5e48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::OpenCV::Random_forest_classifier::Random_forest_classifier</definition>
        <argsstring>(const Label_set &amp;labels, const Feature_set &amp;features, int max_depth=20, int min_sample_count=5, int max_categories=15, int max_number_of_trees_in_the_forest=100, float forest_accuracy=0.01f)</argsstring>
        <name>Random_forest_classifier</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::Random_forest_classifier</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Classification_1_1Label__set" kindref="compound">Label_set</ref> &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_depth</declname>
          <defval>20</defval>
        </param>
        <param>
          <type>int</type>
          <declname>min_sample_count</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>int</type>
          <declname>max_categories</declname>
          <defval>15</defval>
        </param>
        <param>
          <type>int</type>
          <declname>max_number_of_trees_in_the_forest</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>float</type>
          <declname>forest_accuracy</declname>
          <defval>0.01f</defval>
        </param>
        <briefdescription>
<para>instantiates the classifier using the sets of <computeroutput>labels</computeroutput> and <computeroutput>features</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters documentation is copy-pasted from <ulink url="https://docs.opencv.org/2.4/modules/ml/doc/random_trees.html">the official documentation of OpenCV</ulink>. For more details on this method, please refer to it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>label set used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>feature set used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_depth</parametername>
</parameternamelist>
<parameterdescription>
<para>the depth of the tree. A low value will likely underfit and conversely a high value will likely overfit. The optimal value can be obtained using cross validation or other suitable methods. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_sample_count</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum samples required at a leaf node for it to be split. A reasonable value is a small percentage of the total data e.g. 1%. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_categories</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classCGAL_1_1Classification_1_1Cluster" kindref="compound">Cluster</ref> possible values of a categorical variable into <formula id="23">$ K \leq max\_categories $</formula> clusters to find a suboptimal split. If a discrete variable, on which the training procedure tries to make a split, takes more than max_categories values, the precise best subset estimation may take a very long time because the algorithm is exponential. Instead, many decision trees engines (including ML) try to find sub-optimal split in this case by clustering all the samples into max_categories clusters that is some categories are merged together. The clustering is applied only in <formula id="24">$ n&gt;2-class $</formula> classification problems for categorical variables with <formula id="25">$ N &gt; max\_categories $</formula> possible values. In case of regression and 2-class classification the optimal split can be found efficiently without employing clustering, thus the parameter is not used in these cases. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_number_of_trees_in_the_forest</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum number of trees in the forest (surprise, surprise). Typically the more trees you have the better the accuracy. However, the improvement in accuracy generally diminishes and asymptotes pass a certain number of trees. Also to keep in mind, the number of tree increases the prediction time linearly. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forest_accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>Sufficient accuracy (OOB error). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="86" column="3" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="86" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameters</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a83fe5e0fc3a4451e93d74791deea9bfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::set_max_depth</definition>
        <argsstring>(int max_depth)</argsstring>
        <name>set_max_depth</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::set_max_depth</qualifiedname>
        <param>
          <type>int</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="118" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a4cc4cf4d06a21a6f58f86ee0fa5c8aed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::set_min_sample_count</definition>
        <argsstring>(int min_sample_count)</argsstring>
        <name>set_min_sample_count</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::set_min_sample_count</qualifiedname>
        <param>
          <type>int</type>
          <declname>min_sample_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="119" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a50eaab0c4f25470f2dc9b8ff89c33d90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::set_max_categories</definition>
        <argsstring>(int max_categories)</argsstring>
        <name>set_max_categories</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::set_max_categories</qualifiedname>
        <param>
          <type>int</type>
          <declname>max_categories</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="120" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1af5a8798293cf15d64323c27caf4fe5ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::set_max_number_of_trees_in_the_forest</definition>
        <argsstring>(int max_number_of_trees_in_the_forest)</argsstring>
        <name>set_max_number_of_trees_in_the_forest</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::set_max_number_of_trees_in_the_forest</qualifiedname>
        <param>
          <type>int</type>
          <declname>max_number_of_trees_in_the_forest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="121" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="121" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a7ea66513f8b0eead70f0f9082b4fd880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::set_forest_accuracy</definition>
        <argsstring>(float forest_accuracy)</argsstring>
        <name>set_forest_accuracy</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::set_forest_accuracy</qualifiedname>
        <param>
          <type>float</type>
          <declname>forest_accuracy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="123" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="123" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Training</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1aad876febc649d37d812f5e0ce33da30d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename LabelIndexRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::train</definition>
        <argsstring>(const LabelIndexRange &amp;ground_truth)</argsstring>
        <name>train</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::train</qualifiedname>
        <param>
          <type>const LabelIndexRange &amp;</type>
          <declname>ground_truth</declname>
        </param>
        <briefdescription>
<para>runs the training algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para>From the set of provided ground truth, this algorithm estimates sets up the random trees that produce the most accurate result with respect to this ground truth.</para>
<para><simplesect kind="pre"><para>At least one ground truth item should be assigned to each label.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ground_truth</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of label indices. It should contain for each input item, in the same order as the input set, the index of the corresponding label in the <computeroutput><ref refid="classCGAL_1_1Classification_1_1Label__set" kindref="compound">Label_set</ref></computeroutput> provided in the constructor. Input items that do not have a ground truth information should be given the value <computeroutput>-1</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="148" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="148" bodyend="240"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Input/Output</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ac1c99b8a9084a6dcf73f192f7395e83d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::save_configuration</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>save_configuration</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::save_configuration</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>saves the current configuration in the file named <computeroutput>filename</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This allows to easily save and recover a specific classification configuration.</para>
<para>The output file is written in an XML format that is readable by the <computeroutput><ref refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a9ba754724aa5531d7e1f108db2b5662b" kindref="member">load_configuration()</ref></computeroutput> method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="293" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a9ba754724aa5531d7e1f108db2b5662b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::OpenCV::Random_forest_classifier::load_configuration</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>load_configuration</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::load_configuration</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>loads a configuration from the file named <computeroutput>filename</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The input file should be in the XML format written by the <computeroutput><ref refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ac1c99b8a9084a6dcf73f192f7395e83d" kindref="member">save_configuration()</ref></computeroutput> method. The feature set of the classifier should contain the exact same features in the exact same order as the ones present when the file was generated using <computeroutput><ref refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ac1c99b8a9084a6dcf73f192f7395e83d" kindref="member">save_configuration()</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="307" column="8" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="307" bodyend="317"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a996e078d10ed50511dbffb853311705f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Label__set" kindref="compound">Label_set</ref> &amp;</type>
        <definition>const Label_set&amp; CGAL::Classification::OpenCV::Random_forest_classifier::m_labels</definition>
        <argsstring></argsstring>
        <name>m_labels</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_labels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="54" column="19" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a320a7a4bdcf9df420db5386777d3cf50" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
        <definition>const Feature_set&amp; CGAL::Classification::OpenCV::Random_forest_classifier::m_features</definition>
        <argsstring></argsstring>
        <name>m_features</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_features</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="55" column="21" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a3a8e185c1b07e80b9c17ed6dae51297c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CGAL::Classification::OpenCV::Random_forest_classifier::m_max_depth</definition>
        <argsstring></argsstring>
        <name>m_max_depth</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_max_depth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="56" column="7" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a4faee861c49829f3155547163dabc5e9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CGAL::Classification::OpenCV::Random_forest_classifier::m_min_sample_count</definition>
        <argsstring></argsstring>
        <name>m_min_sample_count</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_min_sample_count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="57" column="7" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a2a77ffc3b08470d1b8704bcc54511427" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CGAL::Classification::OpenCV::Random_forest_classifier::m_max_categories</definition>
        <argsstring></argsstring>
        <name>m_max_categories</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_max_categories</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="58" column="7" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ae0b1c774fdda5f39a2d946c424b2285b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CGAL::Classification::OpenCV::Random_forest_classifier::m_max_number_of_trees_in_the_forest</definition>
        <argsstring></argsstring>
        <name>m_max_number_of_trees_in_the_forest</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_max_number_of_trees_in_the_forest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="59" column="7" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ab48e01ba18c5fc9f04b586dea5ded65a" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float CGAL::Classification::OpenCV::Random_forest_classifier::m_forest_accuracy</definition>
        <argsstring></argsstring>
        <name>m_forest_accuracy</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::m_forest_accuracy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="60" column="9" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a44b69f68ebed5093ddae4dff0fab9653" prot="private" static="no" mutable="no">
        <type>CvRTrees *</type>
        <definition>CvRTrees* CGAL::Classification::OpenCV::Random_forest_classifier::rtree</definition>
        <argsstring></argsstring>
        <name>rtree</name>
        <qualifiedname>CGAL::Classification::OpenCV::Random_forest_classifier::rtree</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="63" column="12" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classifier based on the <ref refid="namespaceCGAL_1_1Classification_1_1OpenCV" kindref="compound">OpenCV</ref> version of the random forest algorithm. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This class requires the <ref refid="thirdparty_1thirdpartyOpenCV" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OpenCV</ref> library.</para>
</simplesect>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Classifier" kindref="compound">CGAL::Classification::Classifier</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/Classification/OpenCV/Random_forest_classifier.h" line="52" column="1" bodyfile="CGAL/Classification/OpenCV/Random_forest_classifier.h" bodystart="53" bodyend="321"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a9ba754724aa5531d7e1f108db2b5662b" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>load_configuration</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a320a7a4bdcf9df420db5386777d3cf50" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ab48e01ba18c5fc9f04b586dea5ded65a" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_forest_accuracy</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a996e078d10ed50511dbffb853311705f" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_labels</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a2a77ffc3b08470d1b8704bcc54511427" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_max_categories</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a3a8e185c1b07e80b9c17ed6dae51297c" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_max_depth</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ae0b1c774fdda5f39a2d946c424b2285b" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_max_number_of_trees_in_the_forest</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a4faee861c49829f3155547163dabc5e9" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>m_min_sample_count</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a31577628cac87703bbcd1c26502c5e48" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>Random_forest_classifier</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a44b69f68ebed5093ddae4dff0fab9653" prot="private" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>rtree</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1ac1c99b8a9084a6dcf73f192f7395e83d" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>save_configuration</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a7ea66513f8b0eead70f0f9082b4fd880" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>set_forest_accuracy</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a50eaab0c4f25470f2dc9b8ff89c33d90" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>set_max_categories</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a83fe5e0fc3a4451e93d74791deea9bfc" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>set_max_depth</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1af5a8798293cf15d64323c27caf4fe5ba" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>set_max_number_of_trees_in_the_forest</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1a4cc4cf4d06a21a6f58f86ee0fa5c8aed" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>set_min_sample_count</name></member>
      <member refid="classCGAL_1_1Classification_1_1OpenCV_1_1Random__forest__classifier_1aad876febc649d37d812f5e0ce33da30d" prot="public" virt="non-virtual"><scope>CGAL::Classification::OpenCV::Random_forest_classifier</scope><name>train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
