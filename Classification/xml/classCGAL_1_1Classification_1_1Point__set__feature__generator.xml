<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Classification_1_1Point__set__feature__generator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Point_set_feature_generator</compoundname>
    <includes local="no">CGAL/Classification/Point_set_feature_generator.h</includes>
    <innerclass refid="structCGAL_1_1Classification_1_1Point__set__feature__generator_1_1Scale" prot="private">CGAL::Classification::Point_set_feature_generator::Scale</innerclass>
    <templateparamlist>
      <param>
        <type>typename GeomTraits</type>
      </param>
      <param>
        <type>typename PointRange</type>
      </param>
      <param>
        <type>typename PointMap</type>
      </param>
      <param>
        <type>typename ConcurrencyTag</type>
      </param>
      <param>
        <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructor</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a652323c0c6c806df455a6ac454cd318a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Point_set_feature_generator</definition>
        <argsstring>(const PointRange &amp;input, PointMap point_map, std::size_t nb_scales, float voxel_size=-1.f)</argsstring>
        <name>Point_set_feature_generator</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::Point_set_feature_generator</qualifiedname>
        <param>
          <type>const PointRange &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>PointMap</type>
          <declname>point_map</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nb_scales</declname>
        </param>
        <param>
          <type>float</type>
          <declname>voxel_size</declname>
          <defval>-1.f</defval>
        </param>
        <briefdescription>
<para>initializes a feature generator from an input range. </para>
        </briefdescription>
        <detaileddescription>
<para>If not provided by the user, The size of the smallest scale is automatically estimated using a method equivalent to <computeroutput><ref refid="group__PkgPointSetProcessing3Algorithms_1ga8b330397a3fb68176c851fd7d214b513" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_processing_3.tag">CGAL::compute_average_spacing()</ref></computeroutput> using 6 neighbors. The data structures needed (<computeroutput>Neighborhood</computeroutput>, <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Local_eigen_analysis</ref></computeroutput>) are computed at <computeroutput>nb_scales</computeroutput> recursively larger scales.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>point range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the input points. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_scales</parametername>
</parameternamelist>
<parameterdescription>
<para>number of scales to compute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voxel_size</parametername>
</parameternamelist>
<parameterdescription>
<para>smallest scale used as a voxel size for the planimetric grid (if the default value -1 is used, its value is automatically estimated). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="203" column="3" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="203" bodyend="230"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Feature Generation</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a495c5b3f8b775c696fe3aca17b27eed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_point_based_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_point_based_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_point_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on point position information. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a meta-function that calls the following functions:</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1adc3c1b0f855618b784f289ad35d3decf" kindref="member">generate_eigen_features()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a3fe1deb68e6ba02a9877d6cf413b6a51" kindref="member">generate_dispersion_features()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ae8c87c15af4244a2f47c3a853fa41a6b" kindref="member">generate_elevation_features()</ref></computeroutput></para>
</listitem><listitem><para>The version of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab14749e5e397a9b18878396dea61f98b" kindref="member">generate_normal_based_features()</ref></computeroutput> without a normal map</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="250" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="250" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1adc3c1b0f855618b784f289ad35d3decf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_eigen_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_eigen_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_eigen_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric eigen features. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, features <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Eigenvalue" kindref="compound">CGAL::Classification::Feature::Eigenvalue</ref></computeroutput> with indices 0, 1 and 2 are generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="267" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a3fe1deb68e6ba02a9877d6cf413b6a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_dispersion_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_dispersion_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_dispersion_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on local dispersion information. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, the following features are generated:</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Distance__to__plane" kindref="compound">CGAL::Classification::Feature::Distance_to_plane</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Vertical__dispersion" kindref="compound">CGAL::Classification::Feature::Vertical_dispersion</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="284" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="284" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ae8c87c15af4244a2f47c3a853fa41a6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_elevation_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_elevation_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_elevation_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on elevation information. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, the following features are generated:</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Elevation" kindref="compound">CGAL::Classification::Feature::Elevation</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Height__above" kindref="compound">CGAL::Classification::Feature::Height_above</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Height__below" kindref="compound">CGAL::Classification::Feature::Height_below</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Vertical__range" kindref="compound">CGAL::Classification::Feature::Vertical_range</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="304" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="304" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab14749e5e397a9b18878396dea61f98b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_normal_based_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_normal_based_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_normal_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on normal analysis information. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, the version of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Verticality" kindref="compound">CGAL::Classification::Feature::Verticality</ref></computeroutput> based on eigenvalue is generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="326" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="326" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2b8350660278ccd608ddf038c5554fab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VectorMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_normal_based_features</definition>
        <argsstring>(Feature_set &amp;features, const VectorMap &amp;normal_map)</argsstring>
        <name>generate_normal_based_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_normal_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const VectorMap &amp;</type>
          <declname>normal_map</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on normal vector information. </para>
        </briefdescription>
        <detaileddescription>
<para>Generates the version of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Verticality" kindref="compound">CGAL::Classification::Feature::Verticality</ref></computeroutput> based on normal vectors.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VectorMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>GeomTraits::Vector_3</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>normal_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the normal vectors of the input points (if any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="345" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a009b60ebe0ea7b220f9cd7e237d3ed56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ColorMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_color_based_features</definition>
        <argsstring>(Feature_set &amp;features, const ColorMap &amp;color_map)</argsstring>
        <name>generate_color_based_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_color_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const ColorMap &amp;</type>
          <declname>color_map</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on point color information. </para>
        </briefdescription>
        <detaileddescription>
<para>Generates <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Color__channel" kindref="compound">CGAL::Classification::Feature::Color_channel</ref></computeroutput> with channels <computeroutput>HUE</computeroutput>, <computeroutput>SATURATION</computeroutput> and <computeroutput>VALUE</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ColorMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput><ref refid="classCGAL_1_1IO_1_1Color" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::Color</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the colors of the input points (if any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="364" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="364" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a69edc4487e6f85c10901852e27b2c054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EchoMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_echo_based_features</definition>
        <argsstring>(Feature_set &amp;features, const EchoMap &amp;echo_map)</argsstring>
        <name>generate_echo_based_features</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::generate_echo_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const EchoMap &amp;</type>
          <declname>echo_map</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on echo information. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, generates <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Echo__scatter" kindref="compound">CGAL::Classification::Feature::Echo_scatter</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>EchoMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>std::size_t</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>echo_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access the echo values of the input points (if any). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="384" column="8" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="384" bodyend="389"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data Structures Access</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a899e2f3d758624b5265d656c571665b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a73675343588891f13aed70a5bfce13e6" kindref="member">Iso_cuboid_3</ref> &amp;</type>
        <definition>const Iso_cuboid_3 &amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::bbox</qualifiedname>
        <briefdescription>
<para>returns the bounding box of the input point set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="399" column="22" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="399" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1acc7ad342eea5c91cfbf3043e1530ceca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6f7e4547a08055422897e7ada3061125" kindref="member">Neighborhood</ref> &amp;</type>
        <definition>const Neighborhood &amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::neighborhood</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>neighborhood</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::neighborhood</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the neighborhood structure at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="403" column="22" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="403" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a37de0885b577158b0cd0f70adbfc3cdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a39df2abede31e174d288e25d16827475" kindref="member">Planimetric_grid</ref> &amp;</type>
        <definition>const Planimetric_grid &amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::grid</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>grid</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::grid</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the planimetric grid structure at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="407" column="26" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="407" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a698e1434a877e094452301e728ca89a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6b1b03ccf149f556f9de02fe492d89db" kindref="member">Local_eigen_analysis</ref> &amp;</type>
        <definition>const Local_eigen_analysis &amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::eigen</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>eigen</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::eigen</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the local eigen analysis structure at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="411" column="30" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="411" bodyend="411"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameters</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0242a2fd72e3255d5765b07685747678" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::number_of_scales</definition>
        <argsstring>() const</argsstring>
        <name>number_of_scales</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::number_of_scales</qualifiedname>
        <briefdescription>
<para>returns the number of scales that were computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="421" column="15" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a1f9c649a0a831e7345a3716de61a0210" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::grid_resolution</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>grid_resolution</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::grid_resolution</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the grid resolution at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This resolution is the length and width of a cell of the <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput> defined at this scale. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="428" column="9" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a5fe56300ff5b9c4f4752bbbc1a3f9253" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::radius_neighbors</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>radius_neighbors</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::radius_neighbors</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the radius used for neighborhood queries at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This radius is the smallest radius that is relevant from a geometric point of view at this scale (that is to say that encloses a few cells of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="436" column="9" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="436" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a4b99c78cbdb39d403580cf16fdda7a63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::radius_dtm</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>radius_dtm</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::radius_dtm</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the radius used for digital terrain modeling at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This radius represents the minimum size of a building at this scale. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="442" column="9" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="442" bodyend="442"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a73675343588891f13aed70a5bfce13e6" prot="public" static="no">
        <type>typename GeomTraits::Iso_cuboid_3</type>
        <definition>using CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Iso_cuboid_3 =  typename GeomTraits::Iso_cuboid_3</definition>
        <argsstring></argsstring>
        <name>Iso_cuboid_3</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::Iso_cuboid_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="92" column="3" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a39df2abede31e174d288e25d16827475" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Classification::Planimetric_grid</ref>&lt; GeomTraits, PointRange, PointMap &gt;</type>
        <definition>using CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Planimetric_grid =  Classification::Planimetric_grid&lt;GeomTraits, PointRange, PointMap&gt;</definition>
        <argsstring></argsstring>
        <name>Planimetric_grid</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::Planimetric_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="99" column="3" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6f7e4547a08055422897e7ada3061125" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Point__set__neighborhood" kindref="compound">Classification::Point_set_neighborhood</ref>&lt; GeomTraits, PointRange, PointMap &gt;</type>
        <definition>using CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Neighborhood =  Classification::Point_set_neighborhood&lt;GeomTraits, PointRange, PointMap&gt;</definition>
        <argsstring></argsstring>
        <name>Neighborhood</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::Neighborhood</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="100" column="3" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6b1b03ccf149f556f9de02fe492d89db" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Classification::Local_eigen_analysis</ref></type>
        <definition>using CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Local_eigen_analysis =  Classification::Local_eigen_analysis</definition>
        <argsstring></argsstring>
        <name>Local_eigen_analysis</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::Local_eigen_analysis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="101" column="3" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab05aaa9ee646f397a1001eecae2ec38d" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a73675343588891f13aed70a5bfce13e6" kindref="member">Iso_cuboid_3</ref></type>
        <definition>Iso_cuboid_3 CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_bbox</definition>
        <argsstring></argsstring>
        <name>m_bbox</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::m_bbox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="175" column="16" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0a91c6097d33398456fe7cb98ccd1daa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; Scale &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Scale&gt; &gt; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_scales</definition>
        <argsstring></argsstring>
        <name>m_scales</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::m_scales</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="176" column="15" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2370883fc540768be8033f60ab444b69" prot="private" static="no" mutable="no">
        <type>const PointRange &amp;</type>
        <definition>const PointRange&amp; CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_input</definition>
        <argsstring></argsstring>
        <name>m_input</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::m_input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="178" column="20" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a65cb0d411724dd91ce516442a426b1b8" prot="private" static="no" mutable="no">
        <type>PointMap</type>
        <definition>PointMap CGAL::Classification::Point_set_feature_generator&lt; GeomTraits, PointRange, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_point_map</definition>
        <argsstring></argsstring>
        <name>m_point_map</name>
        <qualifiedname>CGAL::Classification::Point_set_feature_generator::m_point_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Point_set_feature_generator.h" line="179" column="12" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>generates a set of generic features for point set classification. </para>
    </briefdescription>
    <detaileddescription>
<para>This class takes care of computing and storing all necessary data structures and of generating a set of generic features at multiple scales to increase the reliability of the classification.</para>
<para><simplesect kind="warning"><para>The generated features use data structures that are stored inside the generator. For this reason, the generator should be instantiated <emphasis>within the same scope</emphasis> as the feature set and should not be deleted before the feature set.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>model of CGAL <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classConstRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">ConstRange</ref></computeroutput>. Its iterator type is <computeroutput><ref refid="classRandomAccessIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessIterator</ref></computeroutput> and its value type is the key type of <computeroutput>PointMap</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is the value type of the iterator of <computeroutput>PointRange</computeroutput> and value type is <computeroutput>GeomTraits::Point_3</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel computation of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">CGAL::Classification::Local_eigen_analysis</ref></computeroutput> objects. Possible values are <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (default value is CGAL is linked with TBB) or <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (default value otherwise). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></computeroutput> used for matrix diagonalization. It can be omitted: if Eigen 3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined: in that case, an overload using <computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">Eigen_diagonalize_traits</ref></computeroutput> is provided. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="CGAL/Classification/Point_set_feature_generator.h" line="88" column="1" bodyfile="CGAL/Classification/Point_set_feature_generator.h" bodystart="89" bodyend="446"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a899e2f3d758624b5265d656c571665b5" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a698e1434a877e094452301e728ca89a7" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>eigen</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a009b60ebe0ea7b220f9cd7e237d3ed56" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_color_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a3fe1deb68e6ba02a9877d6cf413b6a51" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_dispersion_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a69edc4487e6f85c10901852e27b2c054" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_echo_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1adc3c1b0f855618b784f289ad35d3decf" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_eigen_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ae8c87c15af4244a2f47c3a853fa41a6b" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_elevation_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab14749e5e397a9b18878396dea61f98b" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_normal_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2b8350660278ccd608ddf038c5554fab" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_normal_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a495c5b3f8b775c696fe3aca17b27eed8" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>generate_point_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a37de0885b577158b0cd0f70adbfc3cdb" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a1f9c649a0a831e7345a3716de61a0210" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>grid_resolution</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a73675343588891f13aed70a5bfce13e6" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6b1b03ccf149f556f9de02fe492d89db" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Local_eigen_analysis</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1ab05aaa9ee646f397a1001eecae2ec38d" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a2370883fc540768be8033f60ab444b69" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_input</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a65cb0d411724dd91ce516442a426b1b8" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_point_map</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0a91c6097d33398456fe7cb98ccd1daa" prot="private" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>m_scales</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1acc7ad342eea5c91cfbf3043e1530ceca" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>neighborhood</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a6f7e4547a08055422897e7ada3061125" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Neighborhood</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a0242a2fd72e3255d5765b07685747678" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>number_of_scales</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a39df2abede31e174d288e25d16827475" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Planimetric_grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a652323c0c6c806df455a6ac454cd318a" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>Point_set_feature_generator</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a4b99c78cbdb39d403580cf16fdda7a63" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>radius_dtm</name></member>
      <member refid="classCGAL_1_1Classification_1_1Point__set__feature__generator_1a5fe56300ff5b9c4f4752bbbc1a3f9253" prot="public" virt="non-virtual"><scope>CGAL::Classification::Point_set_feature_generator</scope><name>radius_neighbors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
