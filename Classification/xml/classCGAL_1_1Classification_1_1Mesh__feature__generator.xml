<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Classification_1_1Mesh__feature__generator" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Classification::Mesh_feature_generator</compoundname>
    <includes local="no">CGAL/Classification/Mesh_feature_generator.h</includes>
    <innerclass refid="structCGAL_1_1Classification_1_1Mesh__feature__generator_1_1Scale" prot="private">CGAL::Classification::Mesh_feature_generator::Scale</innerclass>
    <templateparamlist>
      <param>
        <type>typename GeomTraits</type>
      </param>
      <param>
        <type>typename <ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></type>
      </param>
      <param>
        <type>typename PointMap</type>
      </param>
      <param>
        <type>typename ConcurrencyTag</type>
      </param>
      <param>
        <type>typename <ref refid="classDiagonalizeTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></type>
        <defval>CGAL::Default_diagonalize_traits&lt;float,3&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructor</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1afdefaad53592b29e4c3f38b6b2666121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Mesh_feature_generator</definition>
        <argsstring>(const FaceListGraph &amp;input, PointMap point_map, std::size_t nb_scales, float voxel_size=-1.f)</argsstring>
        <name>Mesh_feature_generator</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::Mesh_feature_generator</qualifiedname>
        <param>
          <type>const <ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>PointMap</type>
          <declname>point_map</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>nb_scales</declname>
        </param>
        <param>
          <type>float</type>
          <declname>voxel_size</declname>
          <defval>-1.f</defval>
        </param>
        <briefdescription>
<para>initializes a feature generator from an input range. </para>
        </briefdescription>
        <detaileddescription>
<para>If not provided by the user, The size of the smallest scale is automatically estimated using a method equivalent to <computeroutput><ref refid="group__PkgPointSetProcessing3Algorithms_1ga8b330397a3fb68176c851fd7d214b513" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_processing_3.tag">CGAL::compute_average_spacing()</ref></computeroutput> using 6 neighbors. The data structures needed (<computeroutput>Neighborhood</computeroutput>, <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput> and <computeroutput><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Local_eigen_analysis</ref></computeroutput>) are computed at <computeroutput>nb_scales</computeroutput> recursively larger scales.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input mesh. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_map</parametername>
</parameternamelist>
<parameterdescription>
<para>property map to access a representative point of each face. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_scales</parametername>
</parameternamelist>
<parameterdescription>
<para>number of scales to compute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>voxel_size</parametername>
</parameternamelist>
<parameterdescription>
<para>smallest scale used as a voxel size for the planimetric grid (if the default value -1 is used, its value is automatically estimated). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="209" column="3" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="209" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Feature Generation</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a9651d0485d3af616ef4b19a2ac1111ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_face_based_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_face_based_features</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::generate_face_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on face information. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, the following features are generated:</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Eigenvalue" kindref="compound">CGAL::Classification::Feature::Eigenvalue</ref></computeroutput> with indices 0, 1 and 2</para>
</listitem><listitem><para>The version of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Verticality" kindref="compound">CGAL::Classification::Feature::Verticality</ref></computeroutput> based on eigenvalues</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="254" column="8" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="254" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a654102f5802627ab1b6bb515a0b340d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::generate_point_based_features</definition>
        <argsstring>(Feature_set &amp;features)</argsstring>
        <name>generate_point_based_features</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::generate_point_based_features</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Classification_1_1Feature__set" kindref="compound">Feature_set</ref> &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>generates geometric features based on point position information. </para>
        </briefdescription>
        <detaileddescription>
<para>At each scale, the following features are generated by considering the mesh as a point cloud through <computeroutput>PointMap</computeroutput>:</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Distance__to__plane" kindref="compound">CGAL::Classification::Feature::Distance_to_plane</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Elevation" kindref="compound">CGAL::Classification::Feature::Elevation</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Height__above" kindref="compound">CGAL::Classification::Feature::Height_above</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Height__below" kindref="compound">CGAL::Classification::Feature::Height_below</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Vertical__dispersion" kindref="compound">CGAL::Classification::Feature::Vertical_dispersion</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Classification_1_1Feature_1_1Vertical__range" kindref="compound">CGAL::Classification::Feature::Vertical_range</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>the feature set where the features are instantiated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="278" column="8" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="278" bodyend="292"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data Structures Access</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1adb4395d3961dffefe7a9e588982baf9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a0a25aad5a8dac6a08786f7810e1b1f73" kindref="member">Iso_cuboid_3</ref> &amp;</type>
        <definition>const Iso_cuboid_3 &amp; CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::bbox</qualifiedname>
        <briefdescription>
<para>returns the bounding box of the input point set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="302" column="22" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="302" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a85ca31be6bdead9520e9b3ccbae92861" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a315419607b3b5a01f00316d55127587e" kindref="member">Neighborhood</ref> &amp;</type>
        <definition>const Neighborhood &amp; CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::neighborhood</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>neighborhood</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::neighborhood</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the neighborhood structure at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="306" column="22" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1aee67ee64282da1a1accae79156c0aafd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a2a36b8f53da2f3f111b80184f3c465dd" kindref="member">Planimetric_grid</ref> &amp;</type>
        <definition>const Planimetric_grid &amp; CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::grid</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>grid</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::grid</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the planimetric grid structure at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="310" column="26" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a26b78ee11dbcb84193433fd97360def1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1ae1dab04ca894f3899a649e4bf79060e4" kindref="member">Local_eigen_analysis</ref> &amp;</type>
        <definition>const Local_eigen_analysis &amp; CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::eigen</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>eigen</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::eigen</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the local eigen analysis structure at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="314" column="30" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="314" bodyend="314"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameters</header>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1acea616624fc80748230b5b5efb9321b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::number_of_scales</definition>
        <argsstring>() const</argsstring>
        <name>number_of_scales</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::number_of_scales</qualifiedname>
        <briefdescription>
<para>returns the number of scales that were computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="324" column="15" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a85bb15af4ef06d238332d9c4c028a786" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::grid_resolution</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>grid_resolution</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::grid_resolution</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the grid resolution at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This resolution is the length and width of a cell of the <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput> defined at this scale. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="331" column="9" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="331" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a418e62700e20cfb51a0ca34e34a95935" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::radius_neighbors</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>radius_neighbors</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::radius_neighbors</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the radius used for neighborhood queries at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This radius is the smallest radius that is relevant from a geometric point of view at this scale (that is to say that encloses a few cells of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Planimetric_grid</ref></computeroutput>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="339" column="9" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="339" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a61f5d8881ac71e0ca857d8a63f718cfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::radius_dtm</definition>
        <argsstring>(std::size_t scale=0) const</argsstring>
        <name>radius_dtm</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::radius_dtm</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>scale</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the radius used for digital terrain modeling at scale <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This radius represents the minimum size of a building at this scale. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="345" column="9" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="345" bodyend="345"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a0a25aad5a8dac6a08786f7810e1b1f73" prot="public" static="no">
        <type>typename GeomTraits::Iso_cuboid_3</type>
        <definition>using CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Iso_cuboid_3 =  typename GeomTraits::Iso_cuboid_3</definition>
        <argsstring></argsstring>
        <name>Iso_cuboid_3</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::Iso_cuboid_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="92" column="3" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a2a36b8f53da2f3f111b80184f3c465dd" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Planimetric__grid" kindref="compound">Classification::Planimetric_grid</ref>&lt; GeomTraits, Face_range, PointMap &gt;</type>
        <definition>using CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Planimetric_grid =  Classification::Planimetric_grid&lt;GeomTraits, Face_range, PointMap&gt;</definition>
        <argsstring></argsstring>
        <name>Planimetric_grid</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::Planimetric_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="107" column="3" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a315419607b3b5a01f00316d55127587e" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Mesh__neighborhood" kindref="compound">Classification::Mesh_neighborhood</ref>&lt; <ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &gt;</type>
        <definition>using CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Neighborhood =  Classification::Mesh_neighborhood&lt;FaceListGraph&gt;</definition>
        <argsstring></argsstring>
        <name>Neighborhood</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::Neighborhood</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="108" column="3" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1ae1dab04ca894f3899a649e4bf79060e4" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">Classification::Local_eigen_analysis</ref></type>
        <definition>using CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::Local_eigen_analysis =  Classification::Local_eigen_analysis</definition>
        <argsstring></argsstring>
        <name>Local_eigen_analysis</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::Local_eigen_analysis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="109" column="3" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1aa507c3ca7ecd4da34dd70b95094e95e2" prot="private" static="no" mutable="no">
        <type><ref refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a0a25aad5a8dac6a08786f7810e1b1f73" kindref="member">Iso_cuboid_3</ref></type>
        <definition>Iso_cuboid_3 CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_bbox</definition>
        <argsstring></argsstring>
        <name>m_bbox</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::m_bbox</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="178" column="16" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a280eb4ff0e17e3f5fc629fa7ab811d17" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; Scale &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Scale&gt; &gt; CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_scales</definition>
        <argsstring></argsstring>
        <name>m_scales</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::m_scales</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="179" column="15" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1addc20ab8c7855e51ef4a7bccb057614b" prot="private" static="no" mutable="no">
        <type>const <ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref> &amp;</type>
        <definition>const FaceListGraph&amp; CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_input</definition>
        <argsstring></argsstring>
        <name>m_input</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::m_input</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="181" column="23" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1ab000271018ae51221e0a9d3cf22e72b8" prot="private" static="no" mutable="no">
        <type>Face_range</type>
        <definition>Face_range CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_range</definition>
        <argsstring></argsstring>
        <name>m_range</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::m_range</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="182" column="14" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Classification_1_1Mesh__feature__generator_1aa5f807146fc7d0517bcd31e6e0b765a8" prot="private" static="no" mutable="no">
        <type>PointMap</type>
        <definition>PointMap CGAL::Classification::Mesh_feature_generator&lt; GeomTraits, FaceListGraph, PointMap, ConcurrencyTag, DiagonalizeTraits &gt;::m_point_map</definition>
        <argsstring></argsstring>
        <name>m_point_map</name>
        <qualifiedname>CGAL::Classification::Mesh_feature_generator::m_point_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Classification/Mesh_feature_generator.h" line="183" column="12" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>generates a set of generic features for surface mesh classification. </para>
    </briefdescription>
    <detaileddescription>
<para>This class takes care of computing and storing all necessary data structures and of generating a set of generic features at multiple scales to increase the reliability of the classification.</para>
<para>A <computeroutput>PointMap</computeroutput> is required: this map should associate each face of the mesh to a representative point (for example, the center of mass of the face). It is used to generate point set features by considering the mesh as a point set.</para>
<para><simplesect kind="warning"><para>The generated features use data structures that are stored inside the generator. For this reason, the generator should be instantiated <emphasis>within the same scope</emphasis> as the feature set and should not be deleted before the feature set.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>GeomTraits</parametername>
</parameternamelist>
<parameterdescription>
<para>model of CGAL <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointMap</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> whose key type is <computeroutput>boost::graph_traits&lt;<ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref>&gt;::face_descriptor</computeroutput> and value type is <computeroutput>GeomTraits::Point_3</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables sequential versus parallel computation of <computeroutput><ref refid="classCGAL_1_1Classification_1_1Local__eigen__analysis" kindref="compound">CGAL::Classification::Local_eigen_analysis</ref></computeroutput> objects. Possible values are <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (default value if CGAL is linked with TBB) or <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (default value otherwise). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classDiagonalizeTraits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">DiagonalizeTraits</ref></computeroutput> used for matrix diagonalization. It can be omitted: if Eigen 3 (or greater) is available and <computeroutput>CGAL_EIGEN3_ENABLED</computeroutput> is defined then an overload using <computeroutput><ref refid="classCGAL_1_1Eigen__diagonalize__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Solver_interface.tag">Eigen_diagonalize_traits</ref></computeroutput> is provided. Otherwise, the internal implementation <computeroutput>Diagonalize_traits</computeroutput> is used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="CGAL/Classification/Mesh_feature_generator.h" line="88" column="1" bodyfile="CGAL/Classification/Mesh_feature_generator.h" bodystart="89" bodyend="349"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1adb4395d3961dffefe7a9e588982baf9b" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a26b78ee11dbcb84193433fd97360def1" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>eigen</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a9651d0485d3af616ef4b19a2ac1111ae" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>generate_face_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a654102f5802627ab1b6bb515a0b340d3" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>generate_point_based_features</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1aee67ee64282da1a1accae79156c0aafd" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a85bb15af4ef06d238332d9c4c028a786" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>grid_resolution</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a0a25aad5a8dac6a08786f7810e1b1f73" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>Iso_cuboid_3</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1ae1dab04ca894f3899a649e4bf79060e4" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>Local_eigen_analysis</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1aa507c3ca7ecd4da34dd70b95094e95e2" prot="private" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>m_bbox</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1addc20ab8c7855e51ef4a7bccb057614b" prot="private" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>m_input</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1aa5f807146fc7d0517bcd31e6e0b765a8" prot="private" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>m_point_map</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1ab000271018ae51221e0a9d3cf22e72b8" prot="private" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>m_range</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a280eb4ff0e17e3f5fc629fa7ab811d17" prot="private" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>m_scales</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1afdefaad53592b29e4c3f38b6b2666121" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>Mesh_feature_generator</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a85ca31be6bdead9520e9b3ccbae92861" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>neighborhood</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a315419607b3b5a01f00316d55127587e" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>Neighborhood</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1acea616624fc80748230b5b5efb9321b8" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>number_of_scales</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a2a36b8f53da2f3f111b80184f3c465dd" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>Planimetric_grid</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a61f5d8881ac71e0ca857d8a63f718cfa" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>radius_dtm</name></member>
      <member refid="classCGAL_1_1Classification_1_1Mesh__feature__generator_1a418e62700e20cfb51a0ca34e34a95935" prot="public" virt="non-virtual"><scope>CGAL::Classification::Mesh_feature_generator</scope><name>radius_neighbors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
