<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classRegionType" kind="class" language="C++" prot="public">
    <compoundname>RegionType</compoundname>
    <includes local="no">Concepts/RegionType.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classRegionType_1ad01198370040f8eac1a37f9b19f65642" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegionType::Primitive</definition>
        <argsstring></argsstring>
        <name>Primitive</name>
        <qualifiedname>RegionType::Primitive</qualifiedname>
        <briefdescription>
<para>The parameters of the primitive covering the region. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="25" column="28" bodyfile="Concepts/RegionType.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegionType_1af6081991e34006bdd86912c7c7279c91" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegionType::Item</definition>
        <argsstring></argsstring>
        <name>Item</name>
        <qualifiedname>RegionType::Item</qualifiedname>
        <briefdescription>
<para>The reference type to the elements of the input range, e.g., a <computeroutput>const_iterator</computeroutput> of the input range. Must be a model of <computeroutput><ref refid="classHashable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Hashable</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="28" column="28" bodyfile="Concepts/RegionType.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegionType_1a300e21b63818fdadde2f654bbd2104ee" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classRegionType_1af6081991e34006bdd86912c7c7279c91" kindref="member">Item</ref> &gt;</type>
        <definition>typedef std::vector&lt;Item&gt; RegionType::Region</definition>
        <argsstring></argsstring>
        <name>Region</name>
        <qualifiedname>RegionType::Region</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="31" column="23" bodyfile="Concepts/RegionType.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classRegionType_1af7195f02b818765137fe39bba8ac2e77" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type RegionType::Region_index_map</definition>
        <argsstring></argsstring>
        <name>Region_index_map</name>
        <qualifiedname>RegionType::Region_index_map</qualifiedname>
        <briefdescription>
<para>a model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> whose key type is <computeroutput>Item</computeroutput> and value type is <computeroutput>std::size_t</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This map associates item of the input range to the index of the region it belongs to. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="38" column="28" bodyfile="Concepts/RegionType.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classRegionType_1a0173bafb2511e535ff6a94c48a043866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RegionType::is_part_of_region</definition>
        <argsstring>(const Item i, const Region &amp;region)</argsstring>
        <name>is_part_of_region</name>
        <qualifiedname>RegionType::is_part_of_region</qualifiedname>
        <param>
          <type>const <ref refid="classRegionType_1af6081991e34006bdd86912c7c7279c91" kindref="member">Item</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const Region &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>checks if the <computeroutput>Item</computeroutput> <computeroutput>i</computeroutput> can be added to the <computeroutput>Region</computeroutput> represented by <computeroutput>region</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Region__growing" kindref="compound">CGAL::Shape_detection::Region_growing</ref></computeroutput> calls this function each time when trying to add a new item to a <computeroutput>Region</computeroutput>. If this function returns <computeroutput>true</computeroutput>, the item with the index <computeroutput>i</computeroutput>, is added to the <computeroutput>region</computeroutput>, otherwise ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="47" column="8" bodyfile="Concepts/RegionType.h" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classRegionType_1ae71ecdb4caee8830b8baecd5c05d9484" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RegionType::is_valid_region</definition>
        <argsstring>(const Region &amp;region)</argsstring>
        <name>is_valid_region</name>
        <qualifiedname>RegionType::is_valid_region</qualifiedname>
        <param>
          <type>const Region &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>checks if <computeroutput>region</computeroutput> satisfies all necessary conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Region__growing" kindref="compound">CGAL::Shape_detection::Region_growing</ref></computeroutput> calls this function at the end of each propagation phase. If this function returns <computeroutput>true</computeroutput>, the <computeroutput>region</computeroutput> is accepted, otherwise rejected. If the <computeroutput>region</computeroutput> is rejected, all its items are released and available for region growing again. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="60" column="8" bodyfile="Concepts/RegionType.h" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classRegionType_1a8521676c1c5b6f668e1e0ea0ced49910" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classRegionType_1ad01198370040f8eac1a37f9b19f65642" kindref="member">Primitive</ref></type>
        <definition>Primitive RegionType::primitive</definition>
        <argsstring>() const</argsstring>
        <name>primitive</name>
        <qualifiedname>RegionType::primitive</qualifiedname>
        <briefdescription>
<para>provides the last primitive that has been fitted with the region. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="68" column="13" bodyfile="Concepts/RegionType.h" bodystart="68" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classRegionType_1a97466cd48f6e4cf714efbc803401f86a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RegionType::update</definition>
        <argsstring>(const Region &amp;region)</argsstring>
        <name>update</name>
        <qualifiedname>RegionType::update</qualifiedname>
        <param>
          <type>const Region &amp;</type>
          <declname>region</declname>
        </param>
        <briefdescription>
<para>enables to update any information about the region represented by the collection of items <computeroutput>region</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Region__growing" kindref="compound">CGAL::Shape_detection::Region_growing</ref></computeroutput> calls this function each time when a new seed item is selected. This case can be identified by checking the condition <computeroutput>region.size() == 1</computeroutput>. This function is also called periodically when enlarging the region. This case can be identified by checking the condition <computeroutput>region.size() &gt; 1</computeroutput>.</para>
<para>This function also returns a boolean at the first call when a new <computeroutput>region</computeroutput> with one seed item is being created. When it is <computeroutput>true</computeroutput>, the new <computeroutput>region</computeroutput> is further propagated, otherwise, it is rejected. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegionType.h" line="84" column="8" bodyfile="Concepts/RegionType.h" bodystart="84" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A concept that describes the set of methods used by the <computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Region__growing" kindref="compound">CGAL::Shape_detection::Region_growing</ref></computeroutput> to maintain a region. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>A region is represented by a set items, which are included in this region.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Point__set_1_1Least__squares__line__fit__region" kindref="compound">CGAL::Shape_detection::Point_set::Least_squares_line_fit_region</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Point__set_1_1Least__squares__circle__fit__region" kindref="compound">CGAL::Shape_detection::Point_set::Least_squares_circle_fit_region</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Point__set_1_1Least__squares__plane__fit__region" kindref="compound">CGAL::Shape_detection::Point_set::Least_squares_plane_fit_region</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Point__set_1_1Least__squares__sphere__fit__region" kindref="compound">CGAL::Shape_detection::Point_set::Least_squares_sphere_fit_region</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Point__set_1_1Least__squares__cylinder__fit__region" kindref="compound">CGAL::Shape_detection::Point_set::Least_squares_cylinder_fit_region</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Segment__set_1_1Least__squares__line__fit__region" kindref="compound">CGAL::Shape_detection::Segment_set::Least_squares_line_fit_region</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Shape__detection_1_1Polygon__mesh_1_1Least__squares__plane__fit__region" kindref="compound">CGAL::Shape_detection::Polygon_mesh::Least_squares_plane_fit_region</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/RegionType.h" line="20" column="1" bodyfile="Concepts/RegionType.h" bodystart="20" bodyend="88"/>
    <listofallmembers>
      <member refid="classRegionType_1a0173bafb2511e535ff6a94c48a043866" prot="public" virt="non-virtual"><scope>RegionType</scope><name>is_part_of_region</name></member>
      <member refid="classRegionType_1ae71ecdb4caee8830b8baecd5c05d9484" prot="public" virt="non-virtual"><scope>RegionType</scope><name>is_valid_region</name></member>
      <member refid="classRegionType_1af6081991e34006bdd86912c7c7279c91" prot="public" virt="non-virtual"><scope>RegionType</scope><name>Item</name></member>
      <member refid="classRegionType_1ad01198370040f8eac1a37f9b19f65642" prot="public" virt="non-virtual"><scope>RegionType</scope><name>Primitive</name></member>
      <member refid="classRegionType_1a8521676c1c5b6f668e1e0ea0ced49910" prot="public" virt="non-virtual"><scope>RegionType</scope><name>primitive</name></member>
      <member refid="classRegionType_1a300e21b63818fdadde2f654bbd2104ee" prot="public" virt="non-virtual"><scope>RegionType</scope><name>Region</name></member>
      <member refid="classRegionType_1af7195f02b818765137fe39bba8ac2e77" prot="public" virt="non-virtual"><scope>RegionType</scope><name>Region_index_map</name></member>
      <member refid="classRegionType_1a97466cd48f6e4cf714efbc803401f86a" prot="public" virt="non-virtual"><scope>RegionType</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
