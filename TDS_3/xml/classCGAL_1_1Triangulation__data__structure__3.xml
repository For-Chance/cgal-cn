<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Triangulation__data__structure__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangulation_data_structure_3</compoundname>
    <basecompoundref refid="structCGAL_1_1Triangulation__utils__3" prot="public" virt="non-virtual">CGAL::Triangulation_utils_3</basecompoundref>
    <includes local="no">CGAL/Triangulation_data_structure_3.h</includes>
    <templateparamlist>
      <param>
        <type>typename VertexBase</type>
      </param>
      <param>
        <type>typename CellBase</type>
      </param>
      <param>
        <type>typename ConcurrencyTag</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1a1de6810993008daf68acfac4f2bc5911" prot="public" static="no">
        <type>Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;</type>
        <definition>typedef Triangulation_data_structure_2&lt;VertexBase,FaceBase&gt; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::Tds</definition>
        <argsstring></argsstring>
        <name>Tds</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::Tds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="49" column="41" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1aaa9a91374f2519d1ce22a4318d0ff257" prot="public" static="no">
        <type>VertexBase::template Rebind_TDS&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__3_1a1de6810993008daf68acfac4f2bc5911" kindref="member">Tds</ref> &gt;::Other</type>
        <definition>typedef VertexBase::template Rebind_TDS&lt;Tds&gt;::Other CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::Vertex</definition>
        <argsstring></argsstring>
        <name>Vertex</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::Vertex</qualifiedname>
        <briefdescription>
<para>The vertex type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Section <ref refid="index_1tds3cyclic" kindref="member">Cyclic Dependency</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="54" column="60" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1a594d4db41422aff9d8715bc14ec5e9f4" prot="public" static="no">
        <type>CellBase::template Rebind_TDS&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__3_1a1de6810993008daf68acfac4f2bc5911" kindref="member">Tds</ref> &gt;::Other</type>
        <definition>typedef CellBase::template Rebind_TDS&lt;Tds&gt;::Other CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::Cell</definition>
        <argsstring></argsstring>
        <name>Cell</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::Cell</qualifiedname>
        <briefdescription>
<para>The face type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Section <ref refid="index_1tds3cyclic" kindref="member">Cyclic Dependency</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="59" column="58" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1af92d4d472eb8502ba4c89f34009c5937" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref>&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__3_1aaa9a91374f2519d1ce22a4318d0ff257" kindref="member">Vertex</ref>, <ref refid="structCGAL_1_1Default" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Default</ref> &gt;</type>
        <definition>typedef Compact_container&lt;Vertex, Default&gt; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::Vertex_range</definition>
        <argsstring></argsstring>
        <name>Vertex_range</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::Vertex_range</qualifiedname>
        <briefdescription>
<para>Vertex container type. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>ConcurrencyTag</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput>, a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput> is used instead of a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="65" column="27" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__3_1ac4da7865590dfb92b3d87fefb0f8f592" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref>&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__3_1a594d4db41422aff9d8715bc14ec5e9f4" kindref="member">Cell</ref>, <ref refid="structCGAL_1_1Default" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Default</ref> &gt;</type>
        <definition>typedef Compact_container&lt;Cell, Default&gt; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::Cell_range</definition>
        <argsstring></argsstring>
        <name>Cell_range</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::Cell_range</qualifiedname>
        <briefdescription>
<para>Cell container type. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>ConcurrencyTag</computeroutput> is <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput>, a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput> is used instead of a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="71" column="27" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>In addition to the interface documented in the concept, the class offers the following functions. </para>
</description>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1a918ff62cfdee4dd01e3783a719d7b23a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1ac4da7865590dfb92b3d87fefb0f8f592" kindref="member">Cell_range</ref> &amp;</type>
        <definition>Cell_range &amp; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::cells</definition>
        <argsstring>() const</argsstring>
        <name>cells</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::cells</qualifiedname>
        <briefdescription>
<para>Returns a reference to the container of cells. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="84" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1afb6c1970d0b165e6b4eb59dfd237aadf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1ac4da7865590dfb92b3d87fefb0f8f592" kindref="member">Cell_range</ref> &amp;</type>
        <definition>Cell_range &amp; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::cells</definition>
        <argsstring>()</argsstring>
        <name>cells</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::cells</qualifiedname>
        <briefdescription>
<para>Returns a reference to the container of cells. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="89" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1a79be427ba4991f76b1bdd6923f41fd45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1af92d4d472eb8502ba4c89f34009c5937" kindref="member">Vertex_range</ref> &amp;</type>
        <definition>Vertex_range &amp; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::vertices</definition>
        <argsstring>() const</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::vertices</qualifiedname>
        <briefdescription>
<para>Returns a reference to the container of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="94" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__3_1a4ad2e592fff90b88da455013894a4ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__3_1af92d4d472eb8502ba4c89f34009c5937" kindref="member">Vertex_range</ref> &amp;</type>
        <definition>Vertex_range &amp; CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;::vertices</definition>
        <argsstring>()</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_3::vertices</qualifiedname>
        <briefdescription>
<para>Returns a reference to the container of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_3.h" line="99" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__3" kindref="compound">Triangulation_data_structure_3</ref></computeroutput> stores a 3D-triangulation data structure and provides the optional geometric functionalities to be used as a parameter for a 3D-geometric triangulation (see Chapter <ref refid="index_1chapterTriangulation3" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Triangulation_3.tag">3D Triangulations</ref>). </para>
    </briefdescription>
    <detaileddescription>
<para>The vertices and cells are stored in two nested containers, which are implemented using <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput> (or <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput>, see below). The class may offer some flexibility for the choice of container in the future, in the form of additional template parameters.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VertexBase</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classTriangulationDSVertexBase__3" kindref="compound">TriangulationDSVertexBase_3</ref></computeroutput>. The default is <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__3" kindref="compound">Triangulation_ds_vertex_base_3</ref>&lt;TDS&gt;</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CellBase</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classTriangulationDSCellBase__3" kindref="compound">TriangulationDSCellBase_3</ref></computeroutput>. The default is <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__cell__base__3" kindref="compound">Triangulation_ds_cell_base_3</ref>&lt;TDS&gt;</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ConcurrencyTag</parametername>
</parameternamelist>
<parameterdescription>
<para>enables the use of a concurrent container to store vertices and cells. It can be <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> (use of a <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput> to store vertices and cells) or <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput> (use of a <computeroutput><ref refid="classCGAL_1_1Concurrent__compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Concurrent_compact_container</ref></computeroutput>). If it is <computeroutput><ref refid="structCGAL_1_1Parallel__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Parallel_tag</ref></computeroutput>, the following functions can be called concurrently: <computeroutput>create_vertex()</computeroutput>, <computeroutput>create_cell()</computeroutput>, <computeroutput>delete_vertex()</computeroutput>, and <computeroutput>delete_cell()</computeroutput>. <computeroutput><ref refid="structCGAL_1_1Sequential__tag" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Sequential_tag</ref></computeroutput> is the default value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationDataStructure__3" kindref="compound">TriangulationDataStructure_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para>The base class <computeroutput><ref refid="structCGAL_1_1Triangulation__utils__3" kindref="compound">Triangulation_utils_3</ref></computeroutput> defines basic computations on indices of vertices and neighbors of cells.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__3" kindref="compound">CGAL::Triangulation_ds_vertex_base_3</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__ds__cell__base__3" kindref="compound">CGAL::Triangulation_ds_cell_base_3</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;</label>
        <link refid="classCGAL_1_1Triangulation__data__structure__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CGAL::Triangulation_utils_3</label>
        <link refid="structCGAL_1_1Triangulation__utils__3"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CGAL::Triangulation_data_structure_3&lt; VertexBase, CellBase, ConcurrencyTag &gt;</label>
        <link refid="classCGAL_1_1Triangulation__data__structure__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>CGAL::Triangulation_utils_3</label>
        <link refid="structCGAL_1_1Triangulation__utils__3"/>
      </node>
    </collaborationgraph>
    <location file="CGAL/Triangulation_data_structure_3.h" line="41" column="1" bodyfile="CGAL/Triangulation_data_structure_3.h" bodystart="43" bodyend="103"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a3e483dd7b1e45dd3bcce3dbc7f94bd70" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>ccw</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a594d4db41422aff9d8715bc14ec5e9f4" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Cell</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1ac4da7865590dfb92b3d87fefb0f8f592" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Cell_range</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a918ff62cfdee4dd01e3783a719d7b23a" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>cells</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1afb6c1970d0b165e6b4eb59dfd237aadf" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>cells</name></member>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a39b8813b2f15dcb4446ff42b5c100529" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>cw</name></member>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a54bf42467e28dcbea13bfd022ef49217" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>next_around_edge</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a1de6810993008daf68acfac4f2bc5911" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Tds</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1aaa9a91374f2519d1ce22a4318d0ff257" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Vertex</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1af92d4d472eb8502ba4c89f34009c5937" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>Vertex_range</name></member>
      <member refid="structCGAL_1_1Triangulation__utils__3_1a71288c8c2833f954a73090336ed60054" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>vertex_triple_index</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a79be427ba4991f76b1bdd6923f41fd45" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__3_1a4ad2e592fff90b88da455013894a4ebc" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_3</scope><name>vertices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
