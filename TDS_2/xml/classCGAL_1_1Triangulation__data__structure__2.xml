<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Triangulation__data__structure__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Triangulation_data_structure_2</compoundname>
    <includes local="no">CGAL/Triangulation_data_structure_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename VertexBase</type>
      </param>
      <param>
        <type>typename FaceBase</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__2_1a30f4abb1b5d99e9810066a669e629aba" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound">Triangulation_data_structure_2</ref>&lt; VertexBase, FaceBase &gt;</type>
        <definition>typedef Triangulation_data_structure_2&lt;VertexBase,FaceBase&gt; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::Tds</definition>
        <argsstring></argsstring>
        <name>Tds</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::Tds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="47" column="43" bodyfile="CGAL/Triangulation_data_structure_2.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__2_1abc2455dd91164812c3bf041ddcc35483" prot="public" static="no">
        <type>VertexBase::template Rebind_TDS&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__2_1a30f4abb1b5d99e9810066a669e629aba" kindref="member">Tds</ref> &gt;::Other</type>
        <definition>typedef VertexBase::template Rebind_TDS&lt;Tds&gt;::Other CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::Vertex</definition>
        <argsstring></argsstring>
        <name>Vertex</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::Vertex</qualifiedname>
        <briefdescription>
<para>The vertex type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Section <ref refid="index_1TDS_2TheRebindMechanism" kindref="member">The Rebind Mechanism</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="52" column="62" bodyfile="CGAL/Triangulation_data_structure_2.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__2_1a8ddbeff8b127b8585e80bd50d78b938c" prot="public" static="no">
        <type>FaceBase::template Rebind_TDS&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__2_1a30f4abb1b5d99e9810066a669e629aba" kindref="member">Tds</ref> &gt;::Other</type>
        <definition>typedef FaceBase::template Rebind_TDS&lt;Tds&gt;::Other CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::Face</definition>
        <argsstring></argsstring>
        <name>Face</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::Face</qualifiedname>
        <briefdescription>
<para>The face type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>Section <ref refid="index_1TDS_2TheRebindMechanism" kindref="member">The Rebind Mechanism</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="57" column="60" bodyfile="CGAL/Triangulation_data_structure_2.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Ranges</header>
      <description><para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>In addition to the interface documented in the concept, the class offers the following types.</para>
<para><htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</description>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__2_1ad3eefc538d1b69486c07d283f2303992" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref>&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__2_1abc2455dd91164812c3bf041ddcc35483" kindref="member">Vertex</ref> &gt;</type>
        <definition>typedef Compact_container&lt;Vertex&gt; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::Vertex_range</definition>
        <argsstring></argsstring>
        <name>Vertex_range</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::Vertex_range</qualifiedname>
        <briefdescription>
<para>Vertex container type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="70" column="27" bodyfile="CGAL/Triangulation_data_structure_2.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Triangulation__data__structure__2_1a4de1346ae930695e3296d9e6c1493c6f" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref>&lt; <ref refid="classCGAL_1_1Triangulation__data__structure__2_1a8ddbeff8b127b8585e80bd50d78b938c" kindref="member">Face</ref> &gt;</type>
        <definition>typedef Compact_container&lt;Face&gt; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::Face_range</definition>
        <argsstring></argsstring>
        <name>Face_range</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::Face_range</qualifiedname>
        <briefdescription>
<para>Face container type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="75" column="27" bodyfile="CGAL/Triangulation_data_structure_2.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>In addition to the interface documented in the concept, the class offers the following functions.</para>
<para><htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</description>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1acca038246867698d9b646c06e33bab2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__2_1a4de1346ae930695e3296d9e6c1493c6f" kindref="member">Face_range</ref> &amp;</type>
        <definition>Face_range &amp; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::faces</definition>
        <argsstring>() const</argsstring>
        <name>faces</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::faces</qualifiedname>
        <briefdescription>
<para>returns a reference to the container of faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="89" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1acb24301d44ef454c3e33f5f71854b8a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__2_1a4de1346ae930695e3296d9e6c1493c6f" kindref="member">Face_range</ref> &amp;</type>
        <definition>Face_range &amp; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::faces</definition>
        <argsstring>()</argsstring>
        <name>faces</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::faces</qualifiedname>
        <briefdescription>
<para>returns a reference to the container of faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="94" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1a642ef228e5fe21fb9011c65d3259c0c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__2_1ad3eefc538d1b69486c07d283f2303992" kindref="member">Vertex_range</ref> &amp;</type>
        <definition>Vertex_range &amp; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::vertices</definition>
        <argsstring>() const</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::vertices</qualifiedname>
        <briefdescription>
<para>returns a reference to the container of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="99" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1aec51d07d05c13c7f37dd5a1a5c7c1954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Triangulation__data__structure__2_1ad3eefc538d1b69486c07d283f2303992" kindref="member">Vertex_range</ref> &amp;</type>
        <definition>Vertex_range &amp; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::vertices</definition>
        <argsstring>()</argsstring>
        <name>vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::vertices</qualifiedname>
        <briefdescription>
<para>returns a reference to the container of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="104" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1afe6556b5f820f6312141cebd6a645d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::join_vertices</definition>
        <argsstring>(Face_handle f, int i)</argsstring>
        <name>join_vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::join_vertices</qualifiedname>
        <param>
          <type>Face_handle</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>joins the vertices that are endpoints of the edge <computeroutput>(f,i)</computeroutput>, and returns a vertex handle to common vertex (see Fig. <ref refid="classCGAL_1_1Triangulation__data__structure__2_1figtdssplitjoin" kindref="member">figtdssplitjoin</ref>). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>f</computeroutput> must be different from <computeroutput>Face_handle()</computeroutput> and <computeroutput>i</computeroutput> must be <computeroutput>0</computeroutput>, <computeroutput>1</computeroutput> or <computeroutput>2</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="117" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1a933ea0439ff9bc1712adb239cd690515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::join_vertices</definition>
        <argsstring>(Edge e)</argsstring>
        <name>join_vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::join_vertices</qualifiedname>
        <param>
          <type>Edge</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>joins the vertices that are endpoints of the edge <computeroutput>e</computeroutput>, and returns a vertex handle to common vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="122" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1aeaa5f77fbf371a9a94c530cb3a9d74c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::join_vertices</definition>
        <argsstring>(Edge_iterator eit)</argsstring>
        <name>join_vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::join_vertices</qualifiedname>
        <param>
          <type>Edge_iterator</type>
          <declname>eit</declname>
        </param>
        <briefdescription>
<para>joins the vertices that are endpoints of the edge <computeroutput>*eit</computeroutput>, and returns a vertex handle to common vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="127" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1ac4f0320f5ccf5264c03cb6deb7210a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::join_vertices</definition>
        <argsstring>(Edges_circulator ec)</argsstring>
        <name>join_vertices</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::join_vertices</qualifiedname>
        <param>
          <type>Edges_circulator</type>
          <declname>ec</declname>
        </param>
        <briefdescription>
<para>joins the vertices that are endpoints of the edge <computeroutput>*ec</computeroutput>, and returns a vertex handle to common vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="132" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1aca1dc501dd094655232c5daf5aa0b4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::tuples::tuple&lt; Vertex_handle, Vertex_handle, Face_handle, Face_handle &gt;</type>
        <definition>boost::tuples::tuple&lt; Vertex_handle, Vertex_handle, Face_handle, Face_handle &gt; CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::split_vertex</definition>
        <argsstring>(Vertex_handle v, Face_handle f1, Face_handle f2)</argsstring>
        <name>split_vertex</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::split_vertex</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>v</declname>
        </param>
        <param>
          <type>Face_handle</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>Face_handle</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
<para>splits the vertex <computeroutput>v</computeroutput> into two vertices <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The common faces <computeroutput>f</computeroutput> and <computeroutput>g</computeroutput> of <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput> are created after (in the counter-clockwise sense) the faces <computeroutput>f1</computeroutput> and <computeroutput>f2</computeroutput>. The 4-tuple <computeroutput>(v1,v2,f,g)</computeroutput> is returned (see Fig. <ref refid="classCGAL_1_1Triangulation__data__structure__2_1figtdssplitjoin" kindref="member">figtdssplitjoin</ref>).</para>
<para><simplesect kind="pre"><para><computeroutput>dimension()</computeroutput> must be equal to <computeroutput>2</computeroutput>, <computeroutput>f1</computeroutput> and <computeroutput>f2</computeroutput> must be different from <computeroutput>Face_handle()</computeroutput> and <computeroutput>v</computeroutput> must be a vertex of both <computeroutput>f1</computeroutput> and <computeroutput>f2</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1a81809270e8f744674944b20269a55148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::insert_degree_2</definition>
        <argsstring>(Face_handle f, int i)</argsstring>
        <name>insert_degree_2</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::insert_degree_2</qualifiedname>
        <param>
          <type>Face_handle</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>inserts a degree two vertex and two faces adjacent to it that have two common edges. </para>
        </briefdescription>
        <detaileddescription>
<para>The edge defined by the face handle <computeroutput>f</computeroutput> and the integer <computeroutput>i</computeroutput> is duplicated. It returns a handle to the vertex created (see Fig. <ref refid="classCGAL_1_1Triangulation__data__structure__2_1figtdsirdeg2" kindref="member">figtdsirdeg2</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="151" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Triangulation__data__structure__2_1ab305ae66fa025cbb348d97941eaf843e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Triangulation_data_structure_2&lt; VertexBase, FaceBase &gt;::remove_degree_2</definition>
        <argsstring>(Vertex_handle v)</argsstring>
        <name>remove_degree_2</name>
        <qualifiedname>CGAL::Triangulation_data_structure_2::remove_degree_2</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>removes a degree 2 vertex and the two faces adjacent to it. </para>
        </briefdescription>
        <detaileddescription>
<para>The two edges of the star of <computeroutput>v</computeroutput> that are not incident to it are collapsed (see Fig. <ref refid="classCGAL_1_1Triangulation__data__structure__2_1figtdsirdeg2" kindref="member">figtdsirdeg2</ref>).</para>
<para><simplesect kind="pre"><para>The degree of <computeroutput>v</computeroutput> must be equal to 2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_data_structure_2.h" line="160" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound">Triangulation_data_structure_2</ref></computeroutput> is a model for the <computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound">TriangulationDataStructure_2</ref></computeroutput> concept. </para>
    </briefdescription>
    <detaileddescription>
<para>It can be used to represent an orientable 2D triangulation embedded in a space of any dimension.</para>
<para>The vertices and faces are stored in two nested containers, which are implemented using <computeroutput><ref refid="classCGAL_1_1Compact__container" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Compact_container</ref></computeroutput>. The class may offer some flexibility for the choice of container in the future, in the form of additional template parameters.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VertexBase</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classTriangulationDSVertexBase__2" kindref="compound">TriangulationDSVertexBase_2</ref></computeroutput>. The default is <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__vertex__base__2" kindref="compound">Triangulation_ds_vertex_base_2</ref>&lt;TDS&gt;</computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FaceBase</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classTriangulationDSFaceBase__2" kindref="compound">TriangulationDSFaceBase_2</ref></computeroutput>. The default is <computeroutput><ref refid="classCGAL_1_1Triangulation__ds__face__base__2" kindref="compound">Triangulation_ds_face_base_2</ref>&lt;TDS&gt;</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound">TriangulationDataStructure_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><bold>Modifiers</bold><linebreak/>
</para>
<para>In addition to the modifiers required by the <computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound">TriangulationDataStructure_2</ref></computeroutput> concept, the <computeroutput><ref refid="classCGAL_1_1Triangulation__data__structure__2" kindref="compound">Triangulation_data_structure_2</ref></computeroutput> class supports also the modifiers below. Note also that the modifiers below guarantee the combinatorial validity of the resulting data structure.</para>
<para><bold>Illustrations</bold><linebreak/>
</para>
<para><anchor id="classCGAL_1_1Triangulation__data__structure__2_1figtdssplitjoin"/><image type="html" name="join_split.png">The join and split operations.</image>
 <image type="latex" name="join_split.png">The join and split operations.</image>
</para>
<para><anchor id="classCGAL_1_1Triangulation__data__structure__2_1figtdsirdeg2"/><image type="html" name="tds-insert_degree_2.png">Insertion and removal of degree 2 vertices. </image>
 <image type="latex" name="tds-insert_degree_2.png">Insertion and removal of degree 2 vertices. </image>
 </para>
    </detaileddescription>
    <location file="CGAL/Triangulation_data_structure_2.h" line="41" column="1" bodyfile="CGAL/Triangulation_data_structure_2.h" bodystart="41" bodyend="164"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1a8ddbeff8b127b8585e80bd50d78b938c" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>Face</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1a4de1346ae930695e3296d9e6c1493c6f" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>Face_range</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1acca038246867698d9b646c06e33bab2e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>faces</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1acb24301d44ef454c3e33f5f71854b8a0" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>faces</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1a81809270e8f744674944b20269a55148" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>insert_degree_2</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1afe6556b5f820f6312141cebd6a645d6e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>join_vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1a933ea0439ff9bc1712adb239cd690515" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>join_vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1aeaa5f77fbf371a9a94c530cb3a9d74c9" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>join_vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1ac4f0320f5ccf5264c03cb6deb7210a1d" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>join_vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1ab305ae66fa025cbb348d97941eaf843e" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>remove_degree_2</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1aca1dc501dd094655232c5daf5aa0b4ee" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>split_vertex</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1a30f4abb1b5d99e9810066a669e629aba" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>Tds</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1abc2455dd91164812c3bf041ddcc35483" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>Vertex</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1ad3eefc538d1b69486c07d283f2303992" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>Vertex_range</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1a642ef228e5fe21fb9011c65d3259c0c5" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>vertices</name></member>
      <member refid="classCGAL_1_1Triangulation__data__structure__2_1aec51d07d05c13c7f37dd5a1a5c7c1954" prot="public" virt="non-virtual"><scope>CGAL::Triangulation_data_structure_2</scope><name>vertices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
