<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Is__valid" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Is_valid</compoundname>
    <includes local="no">CGAL/utils_classes.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Is__valid_1af3e6bbf53998cd5689cc047ec83e1887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Is_valid&lt; T &gt;::operator()</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Is_valid::operator()</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns if the argument is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/utils_classes.h" line="27" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Not all values of a type need to be valid. </para>
    </briefdescription>
    <detaileddescription>
<para>The function object class <computeroutput><ref refid="classCGAL_1_1Is__valid" kindref="compound">Is_valid</ref></computeroutput> checks this.</para>
<para>For example, an expression like <computeroutput>NT(0)/NT(0)</computeroutput> can result in an invalid number. Routines may have as a precondition that all values are valid.</para>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableFunctor" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableFunctor</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="CGAL/utils_classes.h" line="18" column="1" bodyfile="CGAL/utils_classes.h" bodystart="18" bodyend="31"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Is__valid_1af3e6bbf53998cd5689cc047ec83e1887" prot="public" virt="non-virtual"><scope>CGAL::Is_valid</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
