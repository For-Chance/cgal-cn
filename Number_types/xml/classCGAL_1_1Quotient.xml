<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Quotient" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Quotient</compoundname>
    <includes local="no">CGAL/Quotient.h</includes>
    <templateparamlist>
      <param>
        <type>typename NT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1aac6018cfba1d85397ee463c324baf9d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Quotient&lt; NT &gt;::Quotient</definition>
        <argsstring>()</argsstring>
        <name>Quotient</name>
        <qualifiedname>CGAL::Quotient::Quotient</qualifiedname>
        <briefdescription>
<para>introduces an uninitialized variable <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1aa9f19dcd2b5d23b62fd60b55bb562f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Quotient&lt; NT &gt;::Quotient</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>Quotient</name>
        <qualifiedname>CGAL::Quotient::Quotient</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>introduces the quotient <computeroutput>t/1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>NT needs to have a constructor from T. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a35b2b53f4ae0f28d2a0233dfcd72a9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Quotient&lt; NT &gt;::Quotient</definition>
        <argsstring>(const Quotient&lt; T &gt; &amp;t)</argsstring>
        <name>Quotient</name>
        <qualifiedname>CGAL::Quotient::Quotient</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; T &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>introduces the quotient <computeroutput>NT(t.numerator())/NT(t.denominator())</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>NT needs to have a constructor from T. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a5ba35aa6cdba180289f133f24f07f5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Quotient&lt; NT &gt;::Quotient</definition>
        <argsstring>(const NT &amp;n, const NT &amp;d)</argsstring>
        <name>Quotient</name>
        <qualifiedname>CGAL::Quotient::Quotient</qualifiedname>
        <param>
          <type>const NT &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const NT &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>introduces the quotient <computeroutput>n/d</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><formula id="54">$ d \neq0$</formula>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a2dd68843fa27c670b35bc907105cfbf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::Quotient&lt; NT &gt;::numerator</definition>
        <argsstring>() const</argsstring>
        <name>numerator</name>
        <qualifiedname>CGAL::Quotient::numerator</qualifiedname>
        <briefdescription>
<para>returns a numerator of <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="77" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a543c8929ffc508a852a893b96a0c4108" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NT</type>
        <definition>NT CGAL::Quotient&lt; NT &gt;::denominator</definition>
        <argsstring>() const</argsstring>
        <name>denominator</name>
        <qualifiedname>CGAL::Quotient::denominator</qualifiedname>
        <briefdescription>
<para>returns a denominator of <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="82" column="4"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a6471ffdd34b662c95f3f3b66adc645a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Quotient&lt; NT &gt; &amp;q)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Quotient::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>writes <computeroutput>q</computeroutput> to ostream <computeroutput>out</computeroutput> in format <computeroutput>n/d</computeroutput>, where <computeroutput>n</computeroutput> <formula id="44">$ ==$</formula><computeroutput>q.numerator()</computeroutput> and <computeroutput>d</computeroutput> <formula id="44">$ ==$</formula><computeroutput>q.denominator()</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="93" column="1" declfile="CGAL/Quotient.h" declline="93" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a1fd1f48b0d740eab5abf11b3d2df08f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, Quotient&lt; NT &gt; &amp;q)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Quotient::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>reads <computeroutput>q</computeroutput> from istream <computeroutput>in</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Expected format is <computeroutput>n/d</computeroutput>, where <computeroutput>n</computeroutput> and <computeroutput>d</computeroutput> are of type <computeroutput>NT</computeroutput>. A single <computeroutput>n</computeroutput> which is not followed by a <computeroutput>/</computeroutput> is also accepted and interpreted as <computeroutput>n/1</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="102" column="14" declfile="CGAL/Quotient.h" declline="102" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a4eda6b19dcdfb5a9735531d338c8f721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double to_double</definition>
        <argsstring>(const Quotient&lt; NT &gt; &amp;q)</argsstring>
        <name>to_double</name>
        <qualifiedname>CGAL::Quotient::to_double</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns some double approximation to <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="108" column="8" declfile="CGAL/Quotient.h" declline="108" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a6093a368d7f2f8f3a1ecf82daa2cc16e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_valid</definition>
        <argsstring>(const Quotient&lt; NT &gt; &amp;q)</argsstring>
        <name>is_valid</name>
        <qualifiedname>CGAL::Quotient::is_valid</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true, if numerator and denominator are valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="114" column="6" declfile="CGAL/Quotient.h" declline="114" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1ae142bfdc74a70cedcbc68e0ed3b42395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_finite</definition>
        <argsstring>(const Quotient&lt; NT &gt; &amp;q)</argsstring>
        <name>is_finite</name>
        <qualifiedname>CGAL::Quotient::is_finite</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns true, if numerator and denominator are finite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="120" column="6" declfile="CGAL/Quotient.h" declline="120" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Quotient_1a534386fa6a0bea8392077523814cfa65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt;</type>
        <definition>Quotient&lt; NT &gt; sqrt</definition>
        <argsstring>(const Quotient&lt; NT &gt; &amp;q)</argsstring>
        <name>sqrt</name>
        <qualifiedname>CGAL::Quotient::sqrt</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt; NT &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>returns the square root of <computeroutput>q</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is supported if and only if <computeroutput>NT</computeroutput> supports the square root as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Quotient.h" line="127" column="10" declfile="CGAL/Quotient.h" declline="127" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object of the class <computeroutput><ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt;NT&gt;</computeroutput> is an element of the field of quotients of the integral domain type <computeroutput>NT</computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>If <computeroutput>NT</computeroutput> behaves like an integer, <computeroutput><ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt;NT&gt;</computeroutput> behaves like a rational number.</para>
<para>A <computeroutput><ref refid="classCGAL_1_1Quotient" kindref="compound">Quotient</ref>&lt;NT&gt;</computeroutput> <computeroutput>q</computeroutput> is represented as a pair of <computeroutput>NT</computeroutput>s, representing numerator and denominator.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NT</parametername>
</parameternamelist>
<parameterdescription>
<para>must be at least model of concept <computeroutput><ref refid="classIntegralDomainWithoutDivision" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">IntegralDomainWithoutDivision</ref></computeroutput> and a model of concept <computeroutput><ref refid="classRealEmbeddable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RealEmbeddable</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classField" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">Field</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classRealEmbeddable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">RealEmbeddable</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classFraction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">Fraction</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><bold>Operations</bold><linebreak/>
</para>
<para>There are two access functions, namely to the numerator and the denominator of a quotient. Note that these values are not uniquely defined. It is guaranteed that <computeroutput>q.numerator()</computeroutput> and <computeroutput>q.denominator()</computeroutput> return values <computeroutput>nt_num</computeroutput> and <computeroutput>nt_den</computeroutput> such that <computeroutput>q = nt_num/nt_den</computeroutput>, only if <computeroutput>q.numerator()</computeroutput> and <computeroutput>q.denominator()</computeroutput> are called consecutively wrt <computeroutput>q</computeroutput>, i.e. <computeroutput>q</computeroutput> is not involved in any other operation between these calls.</para>
<para>The stream operations are available as well. They assume that corresponding stream operators for type <computeroutput>NT</computeroutput> exist.</para>
<para>The following functions are added to fulfill the CGAL requirements on number types. </para>
    </detaileddescription>
    <location file="CGAL/Quotient.h" line="40" column="1" bodyfile="CGAL/Quotient.h" bodystart="40" bodyend="86"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Quotient_1a543c8929ffc508a852a893b96a0c4108" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>denominator</name></member>
      <member refid="classCGAL_1_1Quotient_1ae142bfdc74a70cedcbc68e0ed3b42395" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>is_finite</name></member>
      <member refid="classCGAL_1_1Quotient_1a6093a368d7f2f8f3a1ecf82daa2cc16e" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>is_valid</name></member>
      <member refid="classCGAL_1_1Quotient_1a2dd68843fa27c670b35bc907105cfbf6" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>numerator</name></member>
      <member refid="classCGAL_1_1Quotient_1a6471ffdd34b662c95f3f3b66adc645a6" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Quotient_1a1fd1f48b0d740eab5abf11b3d2df08f5" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Quotient_1aac6018cfba1d85397ee463c324baf9d5" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>Quotient</name></member>
      <member refid="classCGAL_1_1Quotient_1aa9f19dcd2b5d23b62fd60b55bb562f4d" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>Quotient</name></member>
      <member refid="classCGAL_1_1Quotient_1a35b2b53f4ae0f28d2a0233dfcd72a9d8" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>Quotient</name></member>
      <member refid="classCGAL_1_1Quotient_1a5ba35aa6cdba180289f133f24f07f5a7" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>Quotient</name></member>
      <member refid="classCGAL_1_1Quotient_1a534386fa6a0bea8392077523814cfa65" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>sqrt</name></member>
      <member refid="classCGAL_1_1Quotient_1a4eda6b19dcdfb5a9735531d338c8f721" prot="public" virt="non-virtual"><scope>CGAL::Quotient</scope><name>to_double</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
