<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classRegularTriangulationFaceBase__2" kind="class" language="C++" prot="public">
    <compoundname>RegularTriangulationFaceBase_2</compoundname>
    <includes local="no">Concepts/RegularTriangulationFaceBase_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classRegularTriangulationFaceBase__2_1a5ab7407de82f123173567ca5f8ed0410" prot="public" static="no">
        <type>std::list&lt; Vertex_handle &gt;</type>
        <definition>typedef std::list&lt;Vertex_handle&gt; RegularTriangulationFaceBase_2::Vertex_list</definition>
        <argsstring></argsstring>
        <name>Vertex_list</name>
        <qualifiedname>RegularTriangulationFaceBase_2::Vertex_list</qualifiedname>
        <briefdescription>
<para>A <computeroutput>std::list</computeroutput> of hidden vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationFaceBase_2.h" line="55" column="19" bodyfile="Concepts/RegularTriangulationFaceBase_2.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classRegularTriangulationFaceBase__2_1a9289325a48117ef088d38c8d296d3573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classRegularTriangulationFaceBase__2_1a5ab7407de82f123173567ca5f8ed0410" kindref="member">Vertex_list</ref> &amp;</type>
        <definition>Vertex_list &amp; RegularTriangulationFaceBase_2::vertex_list</definition>
        <argsstring>()</argsstring>
        <name>vertex_list</name>
        <qualifiedname>RegularTriangulationFaceBase_2::vertex_list</qualifiedname>
        <briefdescription>
<para>Returns a reference to the list of vertices hidden by the face. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/RegularTriangulationFaceBase_2.h" line="65" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The regular triangulation of a set of weighted points does not necessarily have one vertex for each of the input points. Some of the input weighted points have no cell in the dual power diagrams and therefore do not correspond to a vertex of the regular triangulation. Those weighted points are said to be <emphasis>hidden</emphasis> points. A point which is hidden at a given time may appear later as a vertex of the regular triangulation upon removal on some other weighted point. Therefore, hidden points have to be stored somewhere. The regular triangulation store those hidden points in special vertices called <emphasis>hidden</emphasis> vertices. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>A hidden point can appear as vertex of the triangulation only when the two dimensional face where its point component is located (the face which hides it) is removed. Therefore we decided to store in each face of a regular triangulation the list of hidden vertices whose points are located in the face. Thus points hidden by a face are easily reinserted in the triangulation when the face is removed.</para>
<para>The base face of a regular triangulation has to be a model of the concept <computeroutput><ref refid="classRegularTriangulationFaceBase__2" kindref="compound">RegularTriangulationFaceBase_2</ref></computeroutput> , which refines the concept <computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound">TriangulationFaceBase_2</ref></computeroutput> by adding in the face a list to store hidden vertices.</para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound">TriangulationFaceBase_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Regular__triangulation__face__base__2" kindref="compound">CGAL::Regular_triangulation_face_base_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationFaceBase__2" kindref="compound">TriangulationFaceBase_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classRegularTriangulationVertexBase__2" kindref="compound">RegularTriangulationVertexBase_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/RegularTriangulationFaceBase_2.h" line="46" column="1" bodyfile="Concepts/RegularTriangulationFaceBase_2.h" bodystart="46" bodyend="69"/>
    <listofallmembers>
      <member refid="classRegularTriangulationFaceBase__2_1a5ab7407de82f123173567ca5f8ed0410" prot="public" virt="non-virtual"><scope>RegularTriangulationFaceBase_2</scope><name>Vertex_list</name></member>
      <member refid="classRegularTriangulationFaceBase__2_1a9289325a48117ef088d38c8d296d3573" prot="public" virt="non-virtual"><scope>RegularTriangulationFaceBase_2</scope><name>vertex_list</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
