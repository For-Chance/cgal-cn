<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Constrained__triangulation__plus__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Constrained_triangulation_plus_2</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Tr</basecompoundref>
    <includes local="no">CGAL/Constrained_triangulation_plus_2.h</includes>
    <innerclass refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" prot="public">CGAL::Constrained_triangulation_plus_2::Context</innerclass>
    <templateparamlist>
      <param>
        <type>typename Tr</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1ad56967b79e8788546c3ea5bd55653474" prot="public" static="no">
        <type>Tr</type>
        <definition>typedef Tr CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Triangulation</definition>
        <argsstring></argsstring>
        <name>Triangulation</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Triangulation</qualifiedname>
        <briefdescription>
<para>The triangulation base class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="64" column="12" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1a97d7ccfccd324092d31586bf167b7274" prot="public" static="no">
        <type>Tr::Intersection_tag</type>
        <definition>typedef Tr::Intersection_tag CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Intersection_tag</definition>
        <argsstring></argsstring>
        <name>Intersection_tag</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Intersection_tag</qualifiedname>
        <briefdescription>
<para>The intersection tag as defined in <computeroutput>Tr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="69" column="32" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Constraint_id</definition>
        <argsstring></argsstring>
        <name>Constraint_id</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Constraint_id</qualifiedname>
        <briefdescription>
<para>The identifier of a polyline constraint. </para>
        </briefdescription>
        <detaileddescription>
<para>The class is model of <computeroutput><ref refid="classAssignable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Assignable</ref></computeroutput>, <computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput>, <computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput>, <computeroutput><ref refid="classLessThanComparable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">LessThanComparable</ref></computeroutput> and <computeroutput><ref refid="classEqualityComparable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">EqualityComparable</ref></computeroutput>.</para>
<para>A default constructed <computeroutput>Constraint_id</computeroutput> is a singular value that can not be the ID of a constraint. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="77" column="28" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1a8de286842d93f3ed1a3a13305a46a598" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Constraint_iterator</definition>
        <argsstring></argsstring>
        <name>Constraint_iterator</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Constraint_iterator</qualifiedname>
        <briefdescription>
<para>An iterator to visit all the input constraints. </para>
        </briefdescription>
        <detaileddescription>
<para>The order of visit is undefined. The value type of this iterator is <computeroutput>Constraint_id</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="84" column="26" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1a49e8b829ca7199eb0b1ab18a29015eab" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a8de286842d93f3ed1a3a13305a46a598" kindref="member">Constraint_iterator</ref> &gt;</type>
        <definition>typedef Iterator_range&lt;Constraint_iterator&gt; CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Constraints</definition>
        <argsstring></argsstring>
        <name>Constraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Constraints</qualifiedname>
        <briefdescription>
<para>A range type for iterating over all constraints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="89" column="24" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1aea74ca3e4d971d098f8debe10427cdd6" prot="public" static="no">
        <type>std::pair&lt; Vertex_handle, Vertex_handle &gt;</type>
        <definition>typedef std::pair&lt;Vertex_handle, Vertex_handle&gt; CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Subconstraint</definition>
        <argsstring></argsstring>
        <name>Subconstraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Subconstraint</qualifiedname>
        <briefdescription>
<para>A subconstraint is a pair of vertices that correspond to an <computeroutput>Edge</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="95" column="19" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1ab658142eecab7e14cd2bea9872a486e0" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Subconstraint_iterator</definition>
        <argsstring></argsstring>
        <name>Subconstraint_iterator</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Subconstraint_iterator</qualifiedname>
        <briefdescription>
<para>An iterator to visit all the subconstraints of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>The order of visit is undefined. The value type of this iterator is <computeroutput>std::pair&lt;Subconstraint,std::list&lt;<ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" kindref="compound">Context</ref>&gt;*&gt;</computeroutput> corresponding to the vertices of the subconstraint. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="105" column="26" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1affdf3afc591109f9f4a36c002769e355" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab658142eecab7e14cd2bea9872a486e0" kindref="member">Subconstraint_iterator</ref> &gt;</type>
        <definition>typedef Iterator_range&lt;Subconstraint_iterator&gt; CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Subconstraints</definition>
        <argsstring></argsstring>
        <name>Subconstraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Subconstraints</qualifiedname>
        <briefdescription>
<para>A range type for iterating over all subconstraints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="110" column="24" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1a0d38b6bac2db9859af3ff67c2226f3e8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Vertices_in_constraint_iterator</definition>
        <argsstring></argsstring>
        <name>Vertices_in_constraint_iterator</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Vertices_in_constraint_iterator</qualifiedname>
        <briefdescription>
<para>An iterator on the vertices of the chain of subconstraints representing a constraint. </para>
        </briefdescription>
        <detaileddescription>
<para>The value type of this iterator is <computeroutput>Vertex_handle</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="117" column="26" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1ac9e4a6b9d892bd683c36dc64ae0613e4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Vertices_in_constraint</definition>
        <argsstring></argsstring>
        <name>Vertices_in_constraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Vertices_in_constraint</qualifiedname>
        <briefdescription>
<para>A range type for iterating over the vertices of the constraint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="122" column="26" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1aef6be20e8480b93efce170502f6978d8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Context_iterator</definition>
        <argsstring></argsstring>
        <name>Context_iterator</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Context_iterator</qualifiedname>
        <briefdescription>
<para>An iterator on constraints enclosing a given subconstraint. </para>
        </briefdescription>
        <detaileddescription>
<para>The value type of this iterator is <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" kindref="compound">Context</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="160" column="26" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1a89d33a944c4d5e75a1072ee28f5ff747" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Iterator__range" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Iterator_range</ref>&lt; <ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1aef6be20e8480b93efce170502f6978d8" kindref="member">Context_iterator</ref> &gt;</type>
        <definition>typedef Iterator_range&lt;Context_iterator&gt; CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Contexts</definition>
        <argsstring></argsstring>
        <name>Contexts</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Contexts</qualifiedname>
        <briefdescription>
<para>range type for iterating over contexts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="165" column="24" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Polyline Simplification</header>
      <description><para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The polyline simplification algorithm described in Chapter <ref refid="index_1Chapter_2D_Polyline_simplification" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyline_simplification_2.tag">Chapter_2D_Polyline_simplification</ref> operates on polyline constraints.</para>
<para>The algorithm removes in each simplification step a vertex of a constraint and at the same time from the triangulation. The class <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref></computeroutput> stores for each constraint not only the sequence of vertices but also the original sequence of points at those vertices. As the <computeroutput>Vertices_in_constraint_iterator</computeroutput> enables the traversal of the current set of vertices, the <computeroutput>Points_in_constraint_iterator</computeroutput> enables the traversal of the points that were in the constraint before the simplification algorithm started.</para>
<para>It enables the simplification algorithm to compute the error introduced by each simplification step: it is the distance of the current sequence (vertices) to the original sequence (points).</para>
<para>Those stored points which do not correspond to a vertex can be removed afterward either for a single constraint or for all constraints.</para>
<para>The simplification algorithm uses the following types and functions. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</description>
      <memberdef kind="typedef" id="classCGAL_1_1Constrained__triangulation__plus__2_1ab375f52ab119f4c636371ea6daf7b128" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Points_in_constraint_iterator</definition>
        <argsstring></argsstring>
        <name>Points_in_constraint_iterator</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Points_in_constraint_iterator</qualifiedname>
        <briefdescription>
<para>This is an advanced type. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>An iterator on the points of the original constraint before simplification steps are applied. The value type of this iterator is <computeroutput>Point</computeroutput>. A <ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0d38b6bac2db9859af3ff67c2226f3e8" kindref="member"><computeroutput>Vertices_in_constraint_iterator</computeroutput></ref> can be converted into a <computeroutput>Points_in_constraint_iterator</computeroutput>, but not the other way around. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="482" column="26" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a55758b5b1846023036829cf2ce98e961" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab375f52ab119f4c636371ea6daf7b128" kindref="member">Points_in_constraint_iterator</ref></type>
        <definition>Points_in_constraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::points_in_constraint_begin</definition>
        <argsstring>(Constraint_id cid) const</argsstring>
        <name>points_in_constraint_begin</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::points_in_constraint_begin</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>Returns an iterator to the first point on the constraint before any simplification step. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="491" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1adb4731052034ec4293c0852fa951d67d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab375f52ab119f4c636371ea6daf7b128" kindref="member">Points_in_constraint_iterator</ref></type>
        <definition>Points_in_constraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::points_in_constraint_end</definition>
        <argsstring>(Constraint_id cid) const</argsstring>
        <name>points_in_constraint_end</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::points_in_constraint_end</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>Returns an iterator past the last point on the constraint before any simplification step. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="499" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a3a285a8e838efb83df65876138b20646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::simplify</definition>
        <argsstring>(Vertices_in_constraint_iterator vicq)</argsstring>
        <name>simplify</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::simplify</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0d38b6bac2db9859af3ff67c2226f3e8" kindref="member">Vertices_in_constraint_iterator</ref></type>
          <declname>vicq</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>Removes the vertex at <computeroutput>vicq</computeroutput> from the constraint and the triangulation. The point of that vertex remains stored in the sequence of original points of the constraint until <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1af9a7b72ef1dfd89f42f2ab788726b384" kindref="member">remove_points_without_corresponding_vertex(Constraint_id)</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa804931cda95de003c7088319b730027" kindref="member">remove_points_without_corresponding_vertex()</ref></computeroutput> is called.</para>
<para>The polyline simplification algorithm described in Chapter <ref refid="index_1Chapter_2D_Polyline_simplification" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyline_simplification_2.tag">Chapter_2D_Polyline_simplification</ref> operates on polyline constraints and applies <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a3a285a8e838efb83df65876138b20646" kindref="member">simplify()</ref></computeroutput> to vertices in constraints based on a cost and stop function.</para>
<para><simplesect kind="pre"><para>Each vertex of the triangulation must be either a vertex of a constraint or a vertex at the intersection of constraints. </para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>vicq</computeroutput> must neither be the first nor the last vertex on a constraint. </para>
</simplesect>
<simplesect kind="pre"><para>The vertex referred by vicq is not contained in any other constraint. </para>
</simplesect>
<simplesect kind="pre"><para>Let <computeroutput>vip</computeroutput> and <computeroutput>vir</computeroutput> be defined as <computeroutput>vip = std::prev(vicq)</computeroutput> and <computeroutput>vir = std::next(vicr)</computeroutput>. </para>
</simplesect>
<simplesect kind="pre"><para>The line segment between <computeroutput>*vicp-&gt;point()</computeroutput> and <computeroutput>*vicr-&gt;point()</computeroutput> must not intersect any constraint.</para>
</simplesect>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1af9a7b72ef1dfd89f42f2ab788726b384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::remove_points_without_corresponding_vertex</definition>
        <argsstring>(Constraint_id cid)</argsstring>
        <name>remove_points_without_corresponding_vertex</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::remove_points_without_corresponding_vertex</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>This is an advanced function. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>Removes the original points that correspond to vertices in the constraint <computeroutput>cid</computeroutput> which have been removed by the <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a3a285a8e838efb83df65876138b20646" kindref="member">simplify()</ref></computeroutput> function. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aa804931cda95de003c7088319b730027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::remove_points_without_corresponding_vertex</definition>
        <argsstring>()</argsstring>
        <name>remove_points_without_corresponding_vertex</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::remove_points_without_corresponding_vertex</qualifiedname>
        <briefdescription>
<para>This is an advanced function. </para>
        </briefdescription>
        <detaileddescription>
<para><htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>Removes all original points that correspond to vertices in the constraints which have been removed by the <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a3a285a8e838efb83df65876138b20646" kindref="member">simplify()</ref></computeroutput> function. <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="544" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a5f9ae9a888a25f24e23354a9e1db25f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Constrained_triangulation_plus_2</definition>
        <argsstring>(const Geom_traits &amp;gt=Geom_traits())</argsstring>
        <name>Constrained_triangulation_plus_2</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Constrained_triangulation_plus_2</qualifiedname>
        <param>
          <type>const Geom_traits &amp;</type>
          <declname>gt</declname>
          <defval>Geom_traits()</defval>
        </param>
        <briefdescription>
<para>Introduces an empty triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aa5d0f7baaf510c962749963b150ae22d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Constrained_triangulation_plus_2</definition>
        <argsstring>(const Constrained_triangulation_plus_2 &amp;ct)</argsstring>
        <name>Constrained_triangulation_plus_2</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Constrained_triangulation_plus_2</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref> &amp;</type>
          <declname>ct</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a2f8524ef2b77f43f3ef87ff6f7d22c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ConstraintIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::Constrained_triangulation_plus_2</definition>
        <argsstring>(ConstraintIterator first, ConstraintIterator last, const Geom_traits &amp;gt=Geom_traits())</argsstring>
        <name>Constrained_triangulation_plus_2</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::Constrained_triangulation_plus_2</qualifiedname>
        <param>
          <type>ConstraintIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>ConstraintIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>const Geom_traits &amp;</type>
          <declname>gt</declname>
          <defval>Geom_traits()</defval>
        </param>
        <briefdescription>
<para>Introduces a constrained triangulation from the constraints in the range <computeroutput>[first,last)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ConstraintIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> with the value type <computeroutput>std::pair&lt;Point,Point&gt;</computeroutput> or <computeroutput>Segment</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="189" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Assignment</header>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aaad23addabf638e750128744f9808bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref></type>
        <definition>Constrained_triangulation_plus_2 CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::operator=</definition>
        <argsstring>(const Constrained_triangulation_plus_2 &amp;tr)</argsstring>
        <name>operator=</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref> &amp;</type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>Assignment. </para>
        </briefdescription>
        <detaileddescription>
<para>All the vertices and faces are duplicated. The bidirectional mapping between constraints and subconstraints is also duplicated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="203" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aae3aaf30f55fac735b56f5e545c75135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::swap</definition>
        <argsstring>(Constrained_triangulation_plus_2 tr)</argsstring>
        <name>swap</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::swap</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
<para>The triangulations <computeroutput>tr</computeroutput> and this triangulation are swapped. </para>
        </briefdescription>
        <detaileddescription>
<para>This operation should be preferred to the assignment or to the copy constructor if <computeroutput>tr</computeroutput> is deleted after that. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="211" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Insertion and Removal</header>
      <description><para>The class <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref></computeroutput> overwrites the following insertion and removal member functions for points and constraints. </para>
</description>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aa79f4d262e12e90a38612692d5e19079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert</definition>
        <argsstring>(const Point &amp;p, Face_handle start=Face_handle())</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert</qualifiedname>
        <param>
          <type>const Point &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Face_handle</type>
          <declname>start</declname>
          <defval>Face_handle()</defval>
        </param>
        <briefdescription>
<para>inserts point <computeroutput>p</computeroutput> as a vertex of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="224" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a695e9dba77e90db81b752682fb2622d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert</definition>
        <argsstring>(const Point &amp;p, Locate_type lt, Face_handle loc, int li)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert</qualifiedname>
        <param>
          <type>const Point &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Locate_type</type>
          <declname>lt</declname>
        </param>
        <param>
          <type>Face_handle</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>li</declname>
        </param>
        <briefdescription>
<para>inserts point <computeroutput>p</computeroutput> in the triangulation at the location given by <computeroutput>(lt,loc,i)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Triangulation__2_1a940567120751e7864c7b345eaf756642" kindref="member">Triangulation_2::locate()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="231" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1abd919273ce2e11533bf798d28ae6f50e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vertex_handle</type>
        <definition>Vertex_handle CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::push_back</definition>
        <argsstring>(const Point &amp;p)</argsstring>
        <name>push_back</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::push_back</qualifiedname>
        <param>
          <type>const Point &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Equivalent to <computeroutput>insert(p)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="238" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aee1c8336526e19b1c70dbd1ea85050d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PointIterator</type>
          </param>
        </templateparamlist>
        <type>size_type</type>
        <definition>size_type CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert</definition>
        <argsstring>(PointIterator first, PointIterator last)</argsstring>
        <name>insert</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert</qualifiedname>
        <param>
          <type>PointIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>PointIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>inserts the points in the range <computeroutput>[first,last)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of inserted points. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> with the value type <computeroutput>Point</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aa8870c3ead46efaac0c7c7f3916b4ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
        <definition>Constraint_id CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert_constraint</definition>
        <argsstring>(Point a, Point b)</argsstring>
        <name>insert_constraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert_constraint</qualifiedname>
        <param>
          <type>Point</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Point</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>inserts the constraint segment <computeroutput>ab</computeroutput> in the triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>If the two points are equal the point is inserted but no constraint, and a default constructed <computeroutput>Constraint_id</computeroutput> is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="254" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1ad02dfce33883a6e4538afedbe12bc69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::push_back</definition>
        <argsstring>(const std::pair&lt; Point, Point &gt; &amp;c)</argsstring>
        <name>push_back</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::push_back</qualifiedname>
        <param>
          <type>const std::pair&lt; Point, Point &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>inserts the constraint <computeroutput>c</computeroutput> in the triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>If the two points are equal the point is inserted but no constraint, and a default constructed <computeroutput>Constraint_id</computeroutput> is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="261" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a78006908e4d08451b3174d780ee3e19a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
        <definition>Constraint_id CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert_constraint</definition>
        <argsstring>(Vertex_handle va, Vertex_handle vb)</argsstring>
        <name>insert_constraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert_constraint</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>va</declname>
        </param>
        <param>
          <type>Vertex_handle</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>inserts a constraint whose endpoints are the vertices pointed by <computeroutput>va</computeroutput> and <computeroutput>vb</computeroutput> in the triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>If the two vertex handles are equal no constraint is inserted, and a default constructed <computeroutput>Constraint_id</computeroutput> is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="269" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aaaa7c59fac3307b1e55f9fbd4353d043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PointIterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
        <definition>Constraint_id CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert_constraint</definition>
        <argsstring>(PointIterator first, PointIterator last, bool close=false)</argsstring>
        <name>insert_constraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert_constraint</qualifiedname>
        <param>
          <type>PointIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>PointIterator</type>
          <declname>last</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>close</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>inserts a polyline defined by the points in the range <computeroutput>[first,last)</computeroutput> and returns the constraint id. </para>
        </briefdescription>
        <detaileddescription>
<para>The polyline is considered as a closed curve if the first and last point are equal or if <computeroutput>close == true</computeroutput>. This enables for example passing the vertex range of a <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref></computeroutput>. When traversing the vertices of a closed polyline constraint with a <computeroutput>Vertices_in_constraint_iterator</computeroutput> the first and last vertex are the same. In case the range is empty a default constructed <computeroutput>Constraint_id</computeroutput> is returned. In case the range contains only one point or all points are equal the point is inserted but no constraint, and a default constructed <computeroutput>Constraint_id</computeroutput> is returned.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> with the value type <computeroutput>Point</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="283" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a247b1f12c580958700ba7618c59b96c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ConstraintIterator</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert_constraints</definition>
        <argsstring>(ConstraintIterator first, ConstraintIterator last)</argsstring>
        <name>insert_constraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert_constraints</qualifiedname>
        <param>
          <type>ConstraintIterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>ConstraintIterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
<para>inserts the constraints in the range <computeroutput>[first,last)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this function is not guaranteed to insert the constraints following the order of <computeroutput>ConstraintIterator</computeroutput>, as <computeroutput><ref refid="group__PkgSpatialSortingFunctions_1ga7c597c11a3b3859234ff68526cead84d" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Spatial_sorting.tag">spatial_sort()</ref></computeroutput> is used to improve efficiency. More precisely, all endpoints are inserted prior to the segments and according to the order provided by the spatial sort. Once endpoints have been inserted, the segments are inserted in the order of the input iterator, using the vertex handles of its endpoints. In case the constraints are degenerate the points are inserted, but no constraints.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ConstraintIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be an <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> with the value type <computeroutput>std::pair&lt;Point,Point&gt;</computeroutput> or <computeroutput>Segment</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of inserted points. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="301" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a197d7b1d229e12ccffdbff242c088101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PointIterator</type>
          </param>
          <param>
            <type>class IndicesIterator</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::insert_constraints</definition>
        <argsstring>(PointIterator points_first, PointIterator points_last, IndicesIterator indices_first, IndicesIterator indices_last)</argsstring>
        <name>insert_constraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::insert_constraints</qualifiedname>
        <param>
          <type>PointIterator</type>
          <declname>points_first</declname>
        </param>
        <param>
          <type>PointIterator</type>
          <declname>points_last</declname>
        </param>
        <param>
          <type>IndicesIterator</type>
          <declname>indices_first</declname>
        </param>
        <param>
          <type>IndicesIterator</type>
          <declname>indices_last</declname>
        </param>
        <briefdescription>
<para>Same as above except that each constraint is given as a pair of indices of the points in the range [points_first, points_last). </para>
        </briefdescription>
        <detaileddescription>
<para>The indices must go from 0 to <computeroutput>std::distance(points_first, points_last)</computeroutput> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>is an <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> with the value type <computeroutput>Point</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndicesIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>is an <computeroutput><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></computeroutput> with <computeroutput>std::pair&lt;Int, Int&gt;</computeroutput> where <computeroutput>Int</computeroutput> is an integral type implicitly convertible to <computeroutput>std::size_t</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>points are inserted even if they are not endpoint of a constraint. </para>
</simplesect>
<simplesect kind="return"><para>the number of inserted points. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="314" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1adea77f5db5cd4dfae302e4502f1caa85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::split_subconstraint_graph_into_constraints</definition>
        <argsstring>(const std::function&lt; bool(Vertex_handle)&gt; &amp;is_terminal)</argsstring>
        <name>split_subconstraint_graph_into_constraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::split_subconstraint_graph_into_constraints</qualifiedname>
        <param>
          <type>const std::function&lt; bool(Vertex_handle)&gt; &amp;</type>
          <declname>is_terminal</declname>
        </param>
        <briefdescription>
<para>splits into constraints the graph of subconstraints. </para>
        </briefdescription>
        <detaileddescription>
<para>Consider the graph <computeroutput>g={V,E}</computeroutput> where <computeroutput>V</computeroutput> is the set of vertices of the triangulation and <computeroutput>E</computeroutput> is the set of all subconstraints of all constraints of the triangulation.</para>
<para>This function splits into polylines the graph <computeroutput>g</computeroutput> at vertices of degree greater than 2 and at vertices for which <computeroutput>is_terminal(v)==true</computeroutput>.</para>
<para>Each computed polyline is stored as a constraint of the triangulation.</para>
<para><simplesect kind="warning"><para>all existing constraints will be discarded.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_terminal</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional function returning <computeroutput>true</computeroutput> if the vertex <computeroutput>v</computeroutput> of degree 2 is a polyline endpoint and <computeroutput>false</computeroutput> otherwise. If omitted, a function always returning <computeroutput>false</computeroutput> will be used, that is no degree 2 vertex will be considered as a polyline endpoint.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgBGLPartition_1ga99ea6bf193f1194db5e523e713c82fb9" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">split_graph_into_polylines()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="340" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a3da93b2d820bfdeda305837faeb2c4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::remove_constraint</definition>
        <argsstring>(Constraint_id cid)</argsstring>
        <name>remove_constraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::remove_constraint</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>removes the constraint <computeroutput>cid</computeroutput>, without removing the points from the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="345" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access</header>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1af143a50f92ea75ec497f353f91f1ed7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a8de286842d93f3ed1a3a13305a46a598" kindref="member">Constraint_iterator</ref></type>
        <definition>Constraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::constraints_begin</definition>
        <argsstring>() const</argsstring>
        <name>constraints_begin</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::constraints_begin</qualifiedname>
        <briefdescription>
<para>returns a <computeroutput>Constraint_iterator</computeroutput> that points at the first constraint of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="356" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1ae20decc4280b27f5d61009fec92b397e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a8de286842d93f3ed1a3a13305a46a598" kindref="member">Constraint_iterator</ref></type>
        <definition>Constraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::constraints_end</definition>
        <argsstring>() const</argsstring>
        <name>constraints_end</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::constraints_end</qualifiedname>
        <briefdescription>
<para>returns the past-the-end iterator of the constraints of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="361" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a0fbd6978137bc8fc919fbb13ce3679c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a49e8b829ca7199eb0b1ab18a29015eab" kindref="member">Constraints</ref></type>
        <definition>Constraints CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::constraints</definition>
        <argsstring>() const</argsstring>
        <name>constraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::constraints</qualifiedname>
        <briefdescription>
<para>returns a range of constraints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="366" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1ad02088fd486bc5b753d8fc781e867630" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab658142eecab7e14cd2bea9872a486e0" kindref="member">Subconstraint_iterator</ref></type>
        <definition>Subconstraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::subconstraints_begin</definition>
        <argsstring>() const</argsstring>
        <name>subconstraints_begin</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::subconstraints_begin</qualifiedname>
        <briefdescription>
<para>returns a <computeroutput>Subconstraint_iterator</computeroutput> pointing at the first subconstraint of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="372" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a0e0f1fb5f0490175516c2c82143a3a76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab658142eecab7e14cd2bea9872a486e0" kindref="member">Subconstraint_iterator</ref></type>
        <definition>Subconstraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::subconstraints_end</definition>
        <argsstring>() const</argsstring>
        <name>subconstraints_end</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::subconstraints_end</qualifiedname>
        <briefdescription>
<para>returns the past-the-end iterator of the subconstraints of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="377" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1af25114a7e1675194367f8f9de9de90d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1affdf3afc591109f9f4a36c002769e355" kindref="member">Subconstraints</ref></type>
        <definition>Subconstraints CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::subconstraints</definition>
        <argsstring>() const</argsstring>
        <name>subconstraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::subconstraints</qualifiedname>
        <briefdescription>
<para>returns a range of subconstraints. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="382" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a877fe20e5208707263b7ba2445ec8d44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::number_of_enclosing_constraints</definition>
        <argsstring>(Vertex_handle va, Vertex_handle vb) const</argsstring>
        <name>number_of_enclosing_constraints</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::number_of_enclosing_constraints</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>va</declname>
        </param>
        <param>
          <type>Vertex_handle</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>returns the number of constraints enclosing the subconstraint <computeroutput>(va,vb)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>va</computeroutput> and <computeroutput>vb</computeroutput> refer to the vertices of a constrained edge of the triangulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="389" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a65c0a285ac0f81aa246e0a06ea07ae99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" kindref="compound">Context</ref></type>
        <definition>Context CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::context</definition>
        <argsstring>(Vertex_handle va, Vertex_handle vb) const</argsstring>
        <name>context</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::context</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>va</declname>
        </param>
        <param>
          <type>Vertex_handle</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>returns the <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" kindref="compound">Context</ref></computeroutput> relative to one of the constraints enclosing the subconstraint <computeroutput>(va,vb)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>va</computeroutput> and <computeroutput>vb</computeroutput> refer to the vertices of a constrained edge of the triangulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="397" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a94387baec9c37c3ab64bb3d641b8aa98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1aef6be20e8480b93efce170502f6978d8" kindref="member">Context_iterator</ref></type>
        <definition>Context_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::contexts_begin</definition>
        <argsstring>(Vertex_handle va, Vertex_handle vb) const</argsstring>
        <name>contexts_begin</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::contexts_begin</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>va</declname>
        </param>
        <param>
          <type>Vertex_handle</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>returns an iterator pointing at the first <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" kindref="compound">Context</ref></computeroutput> of the sequence of contexts corresponding to the constraints enclosing the subconstraint <computeroutput>(va,vb)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>va</computeroutput> and <computeroutput>vb</computeroutput> refer to the vertices of a constrained edge of the triangulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="405" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a112f6df1bc83a0268cfbb9bcfb551470" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1aef6be20e8480b93efce170502f6978d8" kindref="member">Context_iterator</ref></type>
        <definition>Context_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::contexts_end</definition>
        <argsstring>(Vertex_handle va, Vertex_handle vb) const</argsstring>
        <name>contexts_end</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::contexts_end</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>va</declname>
        </param>
        <param>
          <type>Vertex_handle</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>returns an iterator past the end <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1_1Context" kindref="compound">Context</ref></computeroutput> of the sequence of contexts corresponding to the constraints enclosing the subconstraint <computeroutput>(va,vb)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>va</computeroutput> and <computeroutput>vb</computeroutput> refer to the vertices of a constrained edge of the triangulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="414" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a6546c71af91d09fdb5798842cec9beac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a89d33a944c4d5e75a1072ee28f5ff747" kindref="member">Contexts</ref></type>
        <definition>Contexts CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::contexts</definition>
        <argsstring>(Vertex_handle va, Vertex_handle vb) const</argsstring>
        <name>contexts</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::contexts</qualifiedname>
        <param>
          <type>Vertex_handle</type>
          <declname>va</declname>
        </param>
        <param>
          <type>Vertex_handle</type>
          <declname>vb</declname>
        </param>
        <briefdescription>
<para>returns a range of contexts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="420" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1af0763d7caf0781baab11e743cac22729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0d38b6bac2db9859af3ff67c2226f3e8" kindref="member">Vertices_in_constraint_iterator</ref></type>
        <definition>Vertices_in_constraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::vertices_in_constraint_begin</definition>
        <argsstring>(Constraint_id cid) const</argsstring>
        <name>vertices_in_constraint_begin</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::vertices_in_constraint_begin</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>returns an iterator on the first vertex on the constraint <computeroutput>cid</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aa390354879f645275acba21eedba9d4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0d38b6bac2db9859af3ff67c2226f3e8" kindref="member">Vertices_in_constraint_iterator</ref></type>
        <definition>Vertices_in_constraint_iterator CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::vertices_in_constraint_end</definition>
        <argsstring>(Constraint_id cid) const</argsstring>
        <name>vertices_in_constraint_end</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::vertices_in_constraint_end</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>returns an iterator past the last vertex on the constraint <computeroutput>cid</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a4cba7c48d9b75b9a78c59a77fad549f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1ac9e4a6b9d892bd683c36dc64ae0613e4" kindref="member">Vertices_in_constraint</ref></type>
        <definition>Vertices_in_constraint CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;::vertices_in_constraint</definition>
        <argsstring>(Constraint_id cid) const</argsstring>
        <name>vertices_in_constraint</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::vertices_in_constraint</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" kindref="member">Constraint_id</ref></type>
          <declname>cid</declname>
        </param>
        <briefdescription>
<para>returns a range of the vertices on the constraint <computeroutput>cid</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="439" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1aa883b98b7bb2fbf5247a5b102bd5595c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tr</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Constrained_triangulation_plus_2&lt; Tr &gt; &amp;ctp)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref>&lt; Tr &gt; &amp;</type>
          <declname>ctp</declname>
        </param>
        <briefdescription>
<para>Writes the triangulation as for <computeroutput>Tr</computeroutput>, then writes one constraint per line, starting with the number of vertices and the indices of the vertices of the constraint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="559" column="1" declfile="CGAL/Constrained_triangulation_plus_2.h" declline="559" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Constrained__triangulation__plus__2_1a6b2ae0c5c383430368002948ebda669a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Tr</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Constrained_triangulation_plus_2&lt; Tr &gt; &amp;ctp)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Constrained_triangulation_plus_2::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref>&lt; Tr &gt; &amp;</type>
          <declname>ctp</declname>
        </param>
        <briefdescription>
<para>Reads a triangulation from stream <computeroutput>is</computeroutput> and assigns it to the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Constrained_triangulation_plus_2.h" line="568" column="15" declfile="CGAL/Constrained_triangulation_plus_2.h" declline="568" declcolumn="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref>&lt;Tr&gt;</computeroutput> provides a constrained triangulation with an additional data structure that keeps track of the input constraints and of their refinement in the triangulation. </para>
    </briefdescription>
    <detaileddescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__plus__2" kindref="compound">Constrained_triangulation_plus_2</ref>&lt;Tr&gt;</computeroutput> inherits from its template parameter Tr, which has to be instantiated by a constrained or constrained Delaunay triangulation. The intersection tag of the base class determines whether intersecting input constraints are supported or not. When intersections of input constraints are supported, the base class constructs a triangulation of the arrangement of the constraints, introducing new vertices at each proper intersection point.</para>
<para>The data structure maintains for each input constraint the sequence of vertices on this constraint. Note that there is not a one-to-one correspondence between an input constraint and the sequence of vertices. These vertices are either vertices of the input constraint or intersection points. Also consecutive identical points in the input constraint result in a single vertex in the sequence of vertices on this constraint. In case of an input constraint being degenerate to a point, this point is inserted but there will not be a zero length constraint.</para>
<para>Two consecutive vertices of a constraint form a <emphasis>subconstraint</emphasis>. A subconstraint is a pair of vertex handles and corresponds to a constrained edge of the triangulation, which is a pair of a face handle and an index.</para>
<para>The triangulation also enables the retrieval of the set of subconstraints of the triangulation (not ordered along constraints). It further enables the retrieval of the set of input constraints that induce a subconstraint. As it is straightforward to obtain a subconstraint from a constrained edge <computeroutput>e</computeroutput>, one can obtain the input constraints which induce <computeroutput>e</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Tr</parametername>
</parameternamelist>
<parameterdescription>
<para>must be either a <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__2" kindref="compound">CGAL::Constrained_triangulation_2</ref></computeroutput> or a <computeroutput><ref refid="classCGAL_1_1Constrained__Delaunay__triangulation__2" kindref="compound">CGAL::Constrained_Delaunay_triangulation_2</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__2" kindref="compound">CGAL::Constrained_triangulation_2</ref>&lt;Traits,Tds&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Constrained__Delaunay__triangulation__2" kindref="compound">CGAL::Constrained_Delaunay_triangulation_2</ref>&lt;Traits,Tds&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classConstrainedTriangulationTraits__2" kindref="compound">ConstrainedTriangulationTraits_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classConstrainedDelaunayTriangulationTraits__2" kindref="compound">ConstrainedDelaunayTriangulationTraits_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;</label>
        <link refid="classCGAL_1_1Constrained__triangulation__plus__2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Tr</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>CGAL::Constrained_triangulation_plus_2&lt; Tr &gt;</label>
        <link refid="classCGAL_1_1Constrained__triangulation__plus__2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Tr</label>
      </node>
    </collaborationgraph>
    <location file="CGAL/Constrained_triangulation_plus_2.h" line="55" column="1" bodyfile="CGAL/Constrained_triangulation_plus_2.h" bodystart="55" bodyend="549"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a5f9ae9a888a25f24e23354a9e1db25f6" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Constrained_triangulation_plus_2</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa5d0f7baaf510c962749963b150ae22d" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Constrained_triangulation_plus_2</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a2f8524ef2b77f43f3ef87ff6f7d22c43" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Constrained_triangulation_plus_2</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a136e59f7ed41cac6f861ae614bba1f3d" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Constraint_id</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a8de286842d93f3ed1a3a13305a46a598" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Constraint_iterator</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a49e8b829ca7199eb0b1ab18a29015eab" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Constraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0fbd6978137bc8fc919fbb13ce3679c4" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>constraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1af143a50f92ea75ec497f353f91f1ed7f" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>constraints_begin</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ae20decc4280b27f5d61009fec92b397e" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>constraints_end</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a65c0a285ac0f81aa246e0a06ea07ae99" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>context</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aef6be20e8480b93efce170502f6978d8" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Context_iterator</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a89d33a944c4d5e75a1072ee28f5ff747" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Contexts</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a6546c71af91d09fdb5798842cec9beac" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>contexts</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a94387baec9c37c3ab64bb3d641b8aa98" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>contexts_begin</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a112f6df1bc83a0268cfbb9bcfb551470" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>contexts_end</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa79f4d262e12e90a38612692d5e19079" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a695e9dba77e90db81b752682fb2622d9" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aee1c8336526e19b1c70dbd1ea85050d9" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa8870c3ead46efaac0c7c7f3916b4ed5" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert_constraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a78006908e4d08451b3174d780ee3e19a" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert_constraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aaaa7c59fac3307b1e55f9fbd4353d043" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert_constraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a247b1f12c580958700ba7618c59b96c2" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert_constraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a197d7b1d229e12ccffdbff242c088101" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>insert_constraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a97d7ccfccd324092d31586bf167b7274" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Intersection_tag</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a877fe20e5208707263b7ba2445ec8d44" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>number_of_enclosing_constraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa883b98b7bb2fbf5247a5b102bd5595c" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aaad23addabf638e750128744f9808bdc" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a6b2ae0c5c383430368002948ebda669a" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a55758b5b1846023036829cf2ce98e961" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>points_in_constraint_begin</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1adb4731052034ec4293c0852fa951d67d" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>points_in_constraint_end</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab375f52ab119f4c636371ea6daf7b128" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Points_in_constraint_iterator</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1abd919273ce2e11533bf798d28ae6f50e" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ad02dfce33883a6e4538afedbe12bc69f" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a3da93b2d820bfdeda305837faeb2c4ef" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>remove_constraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1af9a7b72ef1dfd89f42f2ab788726b384" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>remove_points_without_corresponding_vertex</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa804931cda95de003c7088319b730027" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>remove_points_without_corresponding_vertex</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a3a285a8e838efb83df65876138b20646" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>simplify</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1adea77f5db5cd4dfae302e4502f1caa85" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>split_subconstraint_graph_into_constraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aea74ca3e4d971d098f8debe10427cdd6" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Subconstraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ab658142eecab7e14cd2bea9872a486e0" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Subconstraint_iterator</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1affdf3afc591109f9f4a36c002769e355" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Subconstraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1af25114a7e1675194367f8f9de9de90d2" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>subconstraints</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ad02088fd486bc5b753d8fc781e867630" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>subconstraints_begin</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0e0f1fb5f0490175516c2c82143a3a76" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>subconstraints_end</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aae3aaf30f55fac735b56f5e545c75135" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>swap</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ad56967b79e8788546c3ea5bd55653474" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Triangulation</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a4cba7c48d9b75b9a78c59a77fad549f2" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>vertices_in_constraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1ac9e4a6b9d892bd683c36dc64ae0613e4" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Vertices_in_constraint</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1af0763d7caf0781baab11e743cac22729" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>vertices_in_constraint_begin</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1aa390354879f645275acba21eedba9d4b" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>vertices_in_constraint_end</name></member>
      <member refid="classCGAL_1_1Constrained__triangulation__plus__2_1a0d38b6bac2db9859af3ff67c2226f3e8" prot="public" virt="non-virtual"><scope>CGAL::Constrained_triangulation_plus_2</scope><name>Vertices_in_constraint_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
