<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgDrawConstrainedTriangulation2" kind="group">
    <compoundname>PkgDrawConstrainedTriangulation2</compoundname>
    <title>Draw a Constrained Triangulation 2</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgDrawConstrainedTriangulation2_1gaa8ce0931d83c1728d860109afa4b2661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CT2</type>
          </param>
          <param>
            <type>class InDomainPMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const CT2 &amp;ct2, InDomainPMap ipm)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const CT2 &amp;</type>
          <declname>ct2</declname>
        </param>
        <param>
          <type>InDomainPMap</type>
          <declname>ipm</declname>
        </param>
        <briefdescription>
<para>opens a new window and draws a constrained triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>If the triangulation has constraints they are drawn. The faces inside and outside of the domain, based on the property map, are drawn in different colors.</para>
<para>A call to this function blocks the execution of the program until the drawing window is closed. This function requires <computeroutput>CGAL_Qt6</computeroutput>, and is only available if the macro <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput> is defined. Linking with the cmake target <computeroutput>CGAL::CGAL_Basic_viewer</computeroutput> will link with <computeroutput>CGAL_Qt6</computeroutput> and add the definition <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CT2</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__2" kindref="compound">CGAL::Constrained_triangulation_2</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InDomainPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>CT2::Face_handle</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ct2</parametername>
</parameternamelist>
<parameterdescription>
<para>the constrained triangulation to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ipm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map defining the faces which are in the domain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;class Gt, class Tds, class Itag, class InDomainPMap&gt;</computeroutput></para>
<para><computeroutput> void CGAL::draw(const CGAL::Constrained_triangulation_2&lt;Gt, Tds, Itag&gt;&amp; ct2, InDomainPMap ipm); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_constrained_triangulation_2.h" line="28" column="8" declfile="CGAL/draw_constrained_triangulation_2.h" declline="28" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawConstrainedTriangulation2_1gab61ec32dbb931e808ac62d324531c838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CT2</type>
          </param>
          <param>
            <type>class InDomainPMap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const CT2 &amp;ct2, InDomainPMap ipm, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const CT2 &amp;</type>
          <declname>ct2</declname>
        </param>
        <param>
          <type>InDomainPMap</type>
          <declname>ipm</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Graphics__scene" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Basic_viewer.tag">CGAL::Graphics_scene</ref> &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
<para>adds the vertices, edges and faces of <computeroutput>ct2</computeroutput> into the given graphic scene <computeroutput>gs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the triangulation has constraints they are drawn. The faces inside and outside of the domain, based on the property map, are drawn in different colors. Note that <computeroutput>gs</computeroutput> is not cleared before being filled (to enable to draw several data structures in the same basic viewer).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CT2</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Constrained__triangulation__2" kindref="compound">CGAL::Constrained_triangulation_2</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InDomainPMap</parametername>
</parameternamelist>
<parameterdescription>
<para>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>CT2::Face_handle</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ct2</parametername>
</parameternamelist>
<parameterdescription>
<para>the constrained triangulation to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ipm</parametername>
</parameternamelist>
<parameterdescription>
<para>the property map defining the faces which are in the domain. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gs</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphic scene to fill.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;class Gt, class Tds, class Itag, class InDomainPMap&gt;</computeroutput></para>
<para><computeroutput> void CGAL::add_to_graphics_scene(const CGAL::Constrained_triangulation_2&lt;Gt, Tds, Itag&gt;&amp; ct2, InDomainPMap ipm, CGAL::Graphics_scene&amp; gs); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_constrained_triangulation_2.h" line="53" column="6" declfile="CGAL/draw_constrained_triangulation_2.h" declline="53" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput>#include&lt;CGAL/draw_constrained_triangulation_2.h&gt;</computeroutput> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
