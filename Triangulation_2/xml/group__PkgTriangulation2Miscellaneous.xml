<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgTriangulation2Miscellaneous" kind="group">
    <compoundname>PkgTriangulation2Miscellaneous</compoundname>
    <title>Miscellaneous</title>
    <innerclass refid="classCGAL_1_1Triangulation__cw__ccw__2" prot="public">CGAL::Triangulation_cw_ccw_2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgTriangulation2Miscellaneous_1gabe989734ed8d720d4385900d50b3c9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CT</type>
          </param>
          <param>
            <type>typename InDomainPmap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::mark_domain_in_triangulation</definition>
        <argsstring>(CT &amp;ct, InDomainPmap ipm)</argsstring>
        <name>mark_domain_in_triangulation</name>
        <qualifiedname>CGAL::mark_domain_in_triangulation</qualifiedname>
        <param>
          <type>CT &amp;</type>
          <declname>ct</declname>
        </param>
        <param>
          <type>InDomainPmap</type>
          <declname>ipm</declname>
        </param>
        <briefdescription>
<para>marks faces connected with non constrained edges as inside of the domain based on the nesting level. </para>
        </briefdescription>
        <detaileddescription>
<para>The function starts from facets incident to the infinite vertex, with a nesting level of 0. Then recursively considers the non-explored facets incident to constrained edges bounding the former set and increase the nesting level by 1. Facets in the domain are those with an odd nesting level.</para>
<para>For this overload, the &quot;in domain&quot; information is set in <computeroutput>ipm</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CT</parametername>
</parameternamelist>
<parameterdescription>
<para>a constrained triangulation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InDomainPmap</parametername>
</parameternamelist>
<parameterdescription>
<para>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>CT::Face_handle</computeroutput> as key type and <computeroutput>bool</computeroutput> as value type.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ct.dimension() == 2</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/mark_domain_in_triangulation.h" line="23" column="1" declfile="CGAL/mark_domain_in_triangulation.h" declline="23" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgTriangulation2Miscellaneous_1ga0409755d0eb89100810230443a85e7eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::mark_domain_in_triangulation</definition>
        <argsstring>(CT &amp;ct)</argsstring>
        <name>mark_domain_in_triangulation</name>
        <qualifiedname>CGAL::mark_domain_in_triangulation</qualifiedname>
        <param>
          <type>CT &amp;</type>
          <declname>ct</declname>
        </param>
        <briefdescription>
<para>marks faces connected with non constrained edges as inside of the domain based on the nesting level. </para>
        </briefdescription>
        <detaileddescription>
<para>The function starts from facets incident to the infinite vertex, with a nesting level of 0. Then recursively considers the non-explored facets incident to constrained edges bounding the former set and increase the nesting level by 1. Facets in the domain are those with an odd nesting level.</para>
<para>For this overload, the &quot;in domain&quot; marker is contained in the face type of <computeroutput>CT</computeroutput>, which must provide the methods <computeroutput>bool is_in_domain()</computeroutput> and <computeroutput>void set_in_domain(bool)</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CT</parametername>
</parameternamelist>
<parameterdescription>
<para>a constrained triangulation</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>ct.dimension() == 2</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/mark_domain_in_triangulation.h" line="47" column="1" declfile="CGAL/mark_domain_in_triangulation.h" declline="47" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
