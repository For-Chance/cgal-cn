<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor</compoundname>
    <basecompoundref refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Default__visitor" prot="public" virt="non-virtual">CGAL::Polygon_mesh_processing::Corefinement::Default_visitor&lt; TriangleMesh &gt;</basecompoundref>
    <includes local="no">CGAL/Polygon_mesh_processing/corefinement.h</includes>
    <templateparamlist>
      <param>
        <type>class TriangleMesh</type>
      </param>
      <param>
        <type>class VPM1</type>
        <defval>typename boost::property_map&lt;TriangleMesh, <ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">vertex_point_t</ref>&gt;::type</defval>
      </param>
      <param>
        <type>class VPM2</type>
        <defval>typename boost::property_map&lt;TriangleMesh, <ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">vertex_point_t</ref>&gt;::type</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1ae536f0592f4521fda89e568d9b05ecaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;::Non_manifold_output_visitor</definition>
        <argsstring>(TriangleMesh &amp;tm1, TriangleMesh &amp;tm2, VPM1 vpm1=get(CGAL::vertex_point, tm1), VPM1 vpm2=get(CGAL::vertex_point, tm2))</argsstring>
        <name>Non_manifold_output_visitor</name>
        <qualifiedname>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor::Non_manifold_output_visitor</qualifiedname>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm1</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm2</declname>
        </param>
        <param>
          <type>VPM1</type>
          <declname>vpm1</declname>
          <defval>get(CGAL::vertex_point, tm1)</defval>
        </param>
        <param>
          <type>VPM1</type>
          <declname>vpm2</declname>
          <defval>get(CGAL::vertex_point, tm2)</defval>
        </param>
        <briefdescription>
<para>constructor where meshes are exactly the same as the one passed a function in <ref refid="group__PMP__corefinement__grp" kindref="compound">Corefinement and Boolean Operations</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The visitor cannot be reused for several calls to the aforementioned function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tm1</parametername>
</parameternamelist>
<parameterdescription>
<para>first triangle mesh in the same order as in the function in <ref refid="group__PMP__corefinement__grp" kindref="compound">Corefinement and Boolean Operations</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm2</parametername>
</parameternamelist>
<parameterdescription>
<para>second triangle mesh in the same order as in the function in <ref refid="group__PMP__corefinement__grp" kindref="compound">Corefinement and Boolean Operations</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vpm1</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex point map for <computeroutput>tm1</computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vpm2</parametername>
</parameternamelist>
<parameterdescription>
<para>vertex point map for <computeroutput>tm2</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="78" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1aabfab73a7dd683cc714d7926d0515edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PolygonRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;::extract_intersection</definition>
        <argsstring>(PointRange &amp;points, PolygonRange &amp;triangles)</argsstring>
        <name>extract_intersection</name>
        <qualifiedname>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor::extract_intersection</qualifiedname>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>triangles</declname>
        </param>
        <briefdescription>
<para>fills a polygon soup with the intersection between input meshes provided in the constructor, after a call to either <computeroutput><ref refid="group__PMP__corefinement__grp_1gaafa5e46c35c3fef461a47d73b4566961" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput> or <computeroutput><ref refid="group__PMP__corefinement__grp_1ga3ff96d36cad8f37efcdada916c46fbbe" kindref="member">corefine_and_compute_intersection()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value type is the value type of <computeroutput>VPM1</computeroutput> and <computeroutput>VPM2</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is itself a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is an unsigned integer type convertible to <computeroutput>std::size_t</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="93" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1ac707152f7e66c013b76d2bcd4c76a722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PolygonRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;::extract_union</definition>
        <argsstring>(PointRange &amp;points, PolygonRange &amp;triangles)</argsstring>
        <name>extract_union</name>
        <qualifiedname>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor::extract_union</qualifiedname>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>triangles</declname>
        </param>
        <briefdescription>
<para>fills a polygon soup with the union between input meshes provided in the constructor, after a call to either <computeroutput><ref refid="group__PMP__corefinement__grp_1gaafa5e46c35c3fef461a47d73b4566961" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput> or <computeroutput><ref refid="group__PMP__corefinement__grp_1ga95f618914f8d54d840065204b029492f" kindref="member">corefine_and_compute_union()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value type is the value type of <computeroutput>VPM1</computeroutput> and <computeroutput>VPM2</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is itself a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is an unsigned integer type convertible to <computeroutput>std::size_t</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="106" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1aae8d5a9622b2fe1c26e9b1842553bf49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PolygonRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;::extract_tm1_minus_tm2</definition>
        <argsstring>(PointRange &amp;points, PolygonRange &amp;triangles)</argsstring>
        <name>extract_tm1_minus_tm2</name>
        <qualifiedname>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor::extract_tm1_minus_tm2</qualifiedname>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>triangles</declname>
        </param>
        <briefdescription>
<para>fills a polygon soup with the difference between input meshes provided in the constructor, after a call to either <computeroutput><ref refid="group__PMP__corefinement__grp_1gaafa5e46c35c3fef461a47d73b4566961" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput> or <computeroutput><ref refid="group__PMP__corefinement__grp_1ga02fa6ed9116a759ecfb87063392f5455" kindref="member">corefine_and_compute_difference()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value type is the value type of <computeroutput>VPM1</computeroutput> and <computeroutput>VPM2</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is itself a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is an unsigned integer type convertible to <computeroutput>std::size_t</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="119" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1a076e89303bcd655c2f06eb32c0e04f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointRange</type>
          </param>
          <param>
            <type>typename PolygonRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;::extract_tm2_minus_tm1</definition>
        <argsstring>(PointRange &amp;points, PolygonRange &amp;triangles)</argsstring>
        <name>extract_tm2_minus_tm1</name>
        <qualifiedname>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor::extract_tm2_minus_tm1</qualifiedname>
        <param>
          <type>PointRange &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>PolygonRange &amp;</type>
          <declname>triangles</declname>
        </param>
        <briefdescription>
<para>fills a polygon soup with the opposite difference between input meshes provided in the constructor, after a call to <computeroutput><ref refid="group__PMP__corefinement__grp_1gaafa5e46c35c3fef461a47d73b4566961" kindref="member">corefine_and_compute_boolean_operations()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PointRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concept <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> whose value type is the value type of <computeroutput>VPM1</computeroutput> and <computeroutput>VPM2</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonRange</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is itself a model of the concepts <computeroutput><ref refid="classRandomAccessContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessContainer</ref></computeroutput> and <computeroutput><ref refid="classBackInsertionSequence" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">BackInsertionSequence</ref></computeroutput> whose <computeroutput>value_type</computeroutput> is an unsigned integer type convertible to <computeroutput>std::size_t</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="131" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> </para>
</listitem>
</variablelist>
A model of <computeroutput><ref refid="classPMPCorefinementVisitor" kindref="compound">PMPCorefinementVisitor</ref></computeroutput> that enables extracting non-manifold outputs from a corefinement-based Boolean Operations (<ref refid="group__PMP__corefinement__grp" kindref="compound">Corefinement and Boolean Operations</ref>).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classHalfedgeListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">HalfedgeListGraph</ref></computeroutput>, <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>, and <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VPM1</parametername>
</parameternamelist>
<parameterdescription>
<para>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and an unspecified type <computeroutput>Point_3</computeroutput> as value type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VPM2</parametername>
</parameternamelist>
<parameterdescription>
<para>a class model of <computeroutput><ref refid="classReadablePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadablePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;TriangleMesh&gt;::vertex_descriptor</computeroutput> as key type and the same value type as <computeroutput>VPM1</computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::Polygon_mesh_processing::Corefinement::Default_visitor&lt; TriangleMesh &gt;</label>
        <link refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Default__visitor"/>
      </node>
      <node id="1">
        <label>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;</label>
        <link refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Polygon_mesh_processing::Corefinement::Default_visitor&lt; TriangleMesh &gt;</label>
        <link refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Default__visitor"/>
      </node>
      <node id="1">
        <label>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor&lt; TriangleMesh, VPM1, VPM2 &gt;</label>
        <link refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Polygon_mesh_processing/corefinement.h" line="66" column="1" bodyfile="CGAL/Polygon_mesh_processing/corefinement.h" bodystart="68" bodyend="133"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1aabfab73a7dd683cc714d7926d0515edc" prot="public" virt="non-virtual"><scope>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor</scope><name>extract_intersection</name></member>
      <member refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1aae8d5a9622b2fe1c26e9b1842553bf49" prot="public" virt="non-virtual"><scope>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor</scope><name>extract_tm1_minus_tm2</name></member>
      <member refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1a076e89303bcd655c2f06eb32c0e04f90" prot="public" virt="non-virtual"><scope>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor</scope><name>extract_tm2_minus_tm1</name></member>
      <member refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1ac707152f7e66c013b76d2bcd4c76a722" prot="public" virt="non-virtual"><scope>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor</scope><name>extract_union</name></member>
      <member refid="structCGAL_1_1Polygon__mesh__processing_1_1Corefinement_1_1Non__manifold__output__visitor_1ae536f0592f4521fda89e568d9b05ecaa" prot="public" virt="non-virtual"><scope>CGAL::Polygon_mesh_processing::Corefinement::Non_manifold_output_visitor</scope><name>Non_manifold_output_visitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
