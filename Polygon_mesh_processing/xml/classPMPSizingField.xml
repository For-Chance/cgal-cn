<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classPMPSizingField" kind="class" language="C++" prot="public">
    <compoundname>PMPSizingField</compoundname>
    <includes local="no">Concepts/PMPSizingField.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>These types are used for the documentation of the functions of the concept and not needed implementation wise. </para>
</description>
      <memberdef kind="typedef" id="classPMPSizingField_1a0a0ee7e5a2c3bc442a9350a02b1b2f24" prot="public" static="no">
        <type>boost::graph_traits&lt; <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &gt;::vertex_descriptor</type>
        <definition>typedef boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor PMPSizingField::vertex_descriptor</definition>
        <argsstring></argsstring>
        <name>vertex_descriptor</name>
        <qualifiedname>PMPSizingField::vertex_descriptor</qualifiedname>
        <briefdescription>
<para>Vertex descriptor type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="23" column="49" bodyfile="Concepts/PMPSizingField.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPMPSizingField_1acb8d0afb2a0acec38cbfd1741b5dcc98" prot="public" static="no">
        <type>boost::graph_traits&lt; <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &gt;::halfedge_descriptor</type>
        <definition>typedef boost::graph_traits&lt;PolygonMesh&gt;::halfedge_descriptor PMPSizingField::halfedge_descriptor</definition>
        <argsstring></argsstring>
        <name>halfedge_descriptor</name>
        <qualifiedname>PMPSizingField::halfedge_descriptor</qualifiedname>
        <briefdescription>
<para>Halfedge descriptor type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="26" column="51" bodyfile="Concepts/PMPSizingField.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPMPSizingField_1a557a97827ef40f6d6fb866a1a749e6ab" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PMPSizingField::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <qualifiedname>PMPSizingField::Point_3</qualifiedname>
        <briefdescription>
<para>3D point type matching the value type of the vertex property map passed to <computeroutput><ref refid="group__PMP__meshing__grp_1ga66cb01cf228ed22f0a2a474cfa2aeb3f" kindref="member">CGAL::Polygon_mesh_processing::isotropic_remeshing()</ref></computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="29" column="26" bodyfile="Concepts/PMPSizingField.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PMPSizingField::PolygonMesh</definition>
        <argsstring></argsstring>
        <name>PolygonMesh</name>
        <qualifiedname>PMPSizingField::PolygonMesh</qualifiedname>
        <briefdescription>
<para>Polygon mesh type matching the type passed to <computeroutput><ref refid="group__PMP__meshing__grp_1ga66cb01cf228ed22f0a2a474cfa2aeb3f" kindref="member">CGAL::Polygon_mesh_processing::isotropic_remeshing()</ref></computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="32" column="26" bodyfile="Concepts/PMPSizingField.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classPMPSizingField_1af2b8137aed4d180e0b4f4a283999ee2d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type PMPSizingField::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>PMPSizingField::FT</qualifiedname>
        <briefdescription>
<para>Number type matching the <computeroutput>FT</computeroutput> type of the geometric traits passed to <computeroutput><ref refid="group__PMP__meshing__grp_1ga66cb01cf228ed22f0a2a474cfa2aeb3f" kindref="member">CGAL::Polygon_mesh_processing::isotropic_remeshing()</ref></computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="35" column="26" bodyfile="Concepts/PMPSizingField.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions</header>
      <memberdef kind="function" id="classPMPSizingField_1a998f26cbc6ac3edbfa4703847ef03dd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPMPSizingField_1af2b8137aed4d180e0b4f4a283999ee2d" kindref="member">FT</ref></type>
        <definition>FT PMPSizingField::at</definition>
        <argsstring>(const vertex_descriptor v, const PolygonMesh &amp;pmesh) const</argsstring>
        <name>at</name>
        <qualifiedname>PMPSizingField::at</qualifiedname>
        <param>
          <type>const <ref refid="classPMPSizingField_1a0a0ee7e5a2c3bc442a9350a02b1b2f24" kindref="member">vertex_descriptor</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>returns the sizing value at <computeroutput>v</computeroutput> (used during tangential relaxation). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="43" column="4"/>
      </memberdef>
      <memberdef kind="function" id="classPMPSizingField_1a70cc54d401f84a313ebc54d957fd247a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classPMPSizingField_1af2b8137aed4d180e0b4f4a283999ee2d" kindref="member">FT</ref> &gt;</type>
        <definition>std::optional&lt; FT &gt; PMPSizingField::is_too_long</definition>
        <argsstring>(const vertex_descriptor va, const vertex_descriptor vb, const PolygonMesh &amp;pmesh) const</argsstring>
        <name>is_too_long</name>
        <qualifiedname>PMPSizingField::is_too_long</qualifiedname>
        <param>
          <type>const <ref refid="classPMPSizingField_1a0a0ee7e5a2c3bc442a9350a02b1b2f24" kindref="member">vertex_descriptor</ref></type>
          <declname>va</declname>
        </param>
        <param>
          <type>const <ref refid="classPMPSizingField_1a0a0ee7e5a2c3bc442a9350a02b1b2f24" kindref="member">vertex_descriptor</ref></type>
          <declname>vb</declname>
        </param>
        <param>
          <type>const <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>returns the ratio of the current edge squared length and the local target edge squared length between the points of <computeroutput>va</computeroutput> and <computeroutput>vb</computeroutput> in case the current edge is too long, and <computeroutput>std::nullopt</computeroutput> otherwise (used for triggering edge splits and preventing some edge collapses). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="48" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classPMPSizingField_1aaf135545d27f1352b59e872cc6500ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classPMPSizingField_1af2b8137aed4d180e0b4f4a283999ee2d" kindref="member">FT</ref> &gt;</type>
        <definition>std::optional&lt; FT &gt; PMPSizingField::is_too_short</definition>
        <argsstring>(const halfedge_descriptor h, const PolygonMesh &amp;pmesh) const</argsstring>
        <name>is_too_short</name>
        <qualifiedname>PMPSizingField::is_too_short</qualifiedname>
        <param>
          <type>const <ref refid="classPMPSizingField_1acb8d0afb2a0acec38cbfd1741b5dcc98" kindref="member">halfedge_descriptor</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>returns the ratio of the squared length of <computeroutput>h</computeroutput> and the local target edge squared length if it is too short, and <computeroutput>std::nullopt</computeroutput> otherwise (used for triggering edge collapses). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="55" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classPMPSizingField_1a760182d3f098d5c709c7e47a9653acf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classPMPSizingField_1a557a97827ef40f6d6fb866a1a749e6ab" kindref="member">Point_3</ref></type>
        <definition>Point_3 PMPSizingField::split_placement</definition>
        <argsstring>(const halfedge_descriptor h, const PolygonMesh &amp;pmesh) const</argsstring>
        <name>split_placement</name>
        <qualifiedname>PMPSizingField::split_placement</qualifiedname>
        <param>
          <type>const <ref refid="classPMPSizingField_1acb8d0afb2a0acec38cbfd1741b5dcc98" kindref="member">halfedge_descriptor</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>returns the position of the new vertex created when splitting the edge of <computeroutput>h</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="59" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classPMPSizingField_1a42a21767d6e96fc6645edf1c6d312d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PMPSizingField::register_split_vertex</definition>
        <argsstring>(const vertex_descriptor v, const PolygonMesh &amp;pmesh)</argsstring>
        <name>register_split_vertex</name>
        <qualifiedname>PMPSizingField::register_split_vertex</qualifiedname>
        <param>
          <type>const <ref refid="classPMPSizingField_1a0a0ee7e5a2c3bc442a9350a02b1b2f24" kindref="member">vertex_descriptor</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" kindref="member">PolygonMesh</ref> &amp;</type>
          <declname>pmesh</declname>
        </param>
        <briefdescription>
<para>function called after the addition of the split vertex <computeroutput>v</computeroutput> in <computeroutput>pmesh</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used for example to update a pre-computed sizing field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PMPSizingField.h" line="64" column="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classPMPSizingField" kindref="compound">PMPSizingField</ref></computeroutput> defines the requirements for the sizing field used in <computeroutput><ref refid="group__PMP__meshing__grp_1ga66cb01cf228ed22f0a2a474cfa2aeb3f" kindref="member">CGAL::Polygon_mesh_processing::isotropic_remeshing()</ref></computeroutput> to define the target length for every individual edge during the remeshing process. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Polygon__mesh__processing_1_1Uniform__sizing__field" kindref="compound">CGAL::Polygon_mesh_processing::Uniform_sizing_field</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Polygon__mesh__processing_1_1Adaptive__sizing__field" kindref="compound">CGAL::Polygon_mesh_processing::Adaptive_sizing_field</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/PMPSizingField.h" line="15" column="1" bodyfile="Concepts/PMPSizingField.h" bodystart="15" bodyend="68"/>
    <listofallmembers>
      <member refid="classPMPSizingField_1a998f26cbc6ac3edbfa4703847ef03dd1" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>at</name></member>
      <member refid="classPMPSizingField_1af2b8137aed4d180e0b4f4a283999ee2d" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>FT</name></member>
      <member refid="classPMPSizingField_1acb8d0afb2a0acec38cbfd1741b5dcc98" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>halfedge_descriptor</name></member>
      <member refid="classPMPSizingField_1a70cc54d401f84a313ebc54d957fd247a" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>is_too_long</name></member>
      <member refid="classPMPSizingField_1aaf135545d27f1352b59e872cc6500ac8" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>is_too_short</name></member>
      <member refid="classPMPSizingField_1a557a97827ef40f6d6fb866a1a749e6ab" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>Point_3</name></member>
      <member refid="classPMPSizingField_1ac91844c2049943895fbcb1e6017be89c" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>PolygonMesh</name></member>
      <member refid="classPMPSizingField_1a42a21767d6e96fc6645edf1c6d312d1c" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>register_split_vertex</name></member>
      <member refid="classPMPSizingField_1a760182d3f098d5c709c7e47a9653acf0" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>split_placement</name></member>
      <member refid="classPMPSizingField_1a0a0ee7e5a2c3bc442a9350a02b1b2f24" prot="public" virt="non-virtual"><scope>PMPSizingField</scope><name>vertex_descriptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
