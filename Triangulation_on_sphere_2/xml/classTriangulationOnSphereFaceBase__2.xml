<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classTriangulationOnSphereFaceBase__2" kind="class" language="C++" prot="public">
    <compoundname>TriangulationOnSphereFaceBase_2</compoundname>
    <includes local="no">Concepts/TriangulationOnSphereFaceBase_2.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTriangulationOnSphereFaceBase__2_1afd01ca6f33579d6f8bae5cbb6b26c27e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TriangulationOnSphereFaceBase_2::is_ghost</definition>
        <argsstring>()</argsstring>
        <name>is_ghost</name>
        <qualifiedname>TriangulationOnSphereFaceBase_2::is_ghost</qualifiedname>
        <briefdescription>
<para>provides read access to a Boolean used to indicate if the face is a ghost face. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereFaceBase_2.h" line="33" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationOnSphereFaceBase__2_1a6d4bd41e4848d65f826488f3619a930c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationOnSphereFaceBase_2::set_ghost</definition>
        <argsstring>(const bool b)</argsstring>
        <name>set_ghost</name>
        <qualifiedname>TriangulationOnSphereFaceBase_2::set_ghost</qualifiedname>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>provides write access to a Boolean used to indicate if the face is a ghost face. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereFaceBase_2.h" line="36" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationOnSphereFaceBase__2_1a793bf7ff535a925ce755a27436e3392b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; TriangulationOnSphereFaceBase_2::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, TriangulationOnSphereFaceBase_2 &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>TriangulationOnSphereFaceBase_2::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationOnSphereFaceBase__2" kindref="compound">TriangulationOnSphereFaceBase_2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>inputs the non-combinatorial information given by the face: its ghost status and other possible information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereFaceBase_2.h" line="42" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationOnSphereFaceBase__2_1a4b96ba868ac4e3eb26a6ea2a7ffe57fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; TriangulationOnSphereFaceBase_2::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const TriangulationOnSphereFaceBase_2 &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>TriangulationOnSphereFaceBase_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classTriangulationOnSphereFaceBase__2" kindref="compound">TriangulationOnSphereFaceBase_2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>outputs the non combinatorial operation given by the face: its ghost status and other possible information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereFaceBase_2.h" line="48" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationDSFaceBase__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDSFaceBase_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para>The concept <computeroutput><ref refid="classTriangulationOnSphereFaceBase__2" kindref="compound">TriangulationOnSphereFaceBase_2</ref></computeroutput> describes the requirements for a face class of a triangulation data structure that is itself plugged into a triangulation on the sphere.</para>
<para>The data structure concept <computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDataStructure_2</ref></computeroutput> was primarily designed to serve as a data structure for the 2D triangulation classes of CGAL, which are triangulations embedded in the 2D Euclidean plane. However, its genericity makes it usable for any orientable triangulated surface without boundary regardless of the dimensionality of the space the triangulation is embedded in, and thus it is a valid data structure for the triangulations on the sphere of this package.</para>
<para>A departing feature is that if the vertices of the triangulation are all lying on one hemisphere, then the triangulation is not an orientable triangulated surface without boundary. In this case, fictitious faces are added to the triangulation, called <emphasis>ghost faces</emphasis>, such that the triangulation is a topological sphere.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__on__sphere__face__base__2" kindref="compound">CGAL::Triangulation_on_sphere_face_base_2</ref>&lt;Traits, Fb&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDataStructure_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationOnSphereVertexBase__2" kindref="compound">TriangulationOnSphereVertexBase_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/TriangulationOnSphereFaceBase_2.h" line="29" column="1" bodyfile="Concepts/TriangulationOnSphereFaceBase_2.h" bodystart="30" bodyend="49"/>
    <listofallmembers>
      <member refid="classTriangulationOnSphereFaceBase__2_1afd01ca6f33579d6f8bae5cbb6b26c27e" prot="public" virt="non-virtual"><scope>TriangulationOnSphereFaceBase_2</scope><name>is_ghost</name></member>
      <member refid="classTriangulationOnSphereFaceBase__2_1a4b96ba868ac4e3eb26a6ea2a7ffe57fb" prot="public" virt="non-virtual"><scope>TriangulationOnSphereFaceBase_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classTriangulationOnSphereFaceBase__2_1a793bf7ff535a925ce755a27436e3392b" prot="public" virt="non-virtual"><scope>TriangulationOnSphereFaceBase_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classTriangulationOnSphereFaceBase__2_1a6d4bd41e4848d65f826488f3619a930c" prot="public" virt="non-virtual"><scope>TriangulationOnSphereFaceBase_2</scope><name>set_ghost</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
