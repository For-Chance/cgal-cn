<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classTriangulationOnSphereVertexBase__2" kind="class" language="C++" prot="public">
    <compoundname>TriangulationOnSphereVertexBase_2</compoundname>
    <includes local="no">Concepts/TriangulationOnSphereVertexBase_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classTriangulationOnSphereVertexBase__2_1ac74a14d8067dc85377196f733981afa8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationOnSphereVertexBase_2::Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::Point</qualifiedname>
        <briefdescription>
<para>Must be the equivalent to the point type <computeroutput>Point_on_sphere_2</computeroutput> of the concept <computeroutput><ref refid="classTriangulationOnSphereTraits__2" kindref="compound">TriangulationOnSphereTraits_2</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="28" column="28" bodyfile="Concepts/TriangulationOnSphereVertexBase_2.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTriangulationOnSphereVertexBase__2_1a259571ec551badb044db4084d1ce77ce" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type TriangulationOnSphereVertexBase_2::Face_handle</definition>
        <argsstring></argsstring>
        <name>Face_handle</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::Face_handle</qualifiedname>
        <briefdescription>
<para>Must be the equivalent to the point type <computeroutput>Face_handle</computeroutput> of the triangulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="33" column="28" bodyfile="Concepts/TriangulationOnSphereVertexBase_2.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classTriangulationOnSphereVertexBase__2_1a799485c9be0e7df245141c294144796d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationOnSphereVertexBase_2::TriangulationOnSphereVertexBase_2</definition>
        <argsstring>(Point p)</argsstring>
        <name>TriangulationOnSphereVertexBase_2</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::TriangulationOnSphereVertexBase_2</qualifiedname>
        <param>
          <type><ref refid="classTriangulationOnSphereVertexBase__2_1ac74a14d8067dc85377196f733981afa8" kindref="member">Point</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>constructs a vertex whose geometric embedding is the point <computeroutput>p</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="43" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationOnSphereVertexBase__2_1a28712600502a69c98a8bff0bea5762e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TriangulationOnSphereVertexBase_2::TriangulationOnSphereVertexBase_2</definition>
        <argsstring>(Point p, Face_handle f)</argsstring>
        <name>TriangulationOnSphereVertexBase_2</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::TriangulationOnSphereVertexBase_2</qualifiedname>
        <param>
          <type><ref refid="classTriangulationOnSphereVertexBase__2_1ac74a14d8067dc85377196f733981afa8" kindref="member">Point</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationOnSphereVertexBase__2_1a259571ec551badb044db4084d1ce77ce" kindref="member">Face_handle</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>constructs a vertex whose geometric embedding is the point <computeroutput>p</computeroutput> and pointing to face <computeroutput>f</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>Face_handle</computeroutput> is the type defined the triangulation data structure used in the Delaunay triangulation on the sphere. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="50" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Access Functions</header>
      <memberdef kind="function" id="classTriangulationOnSphereVertexBase__2_1a86962fd1a1aa4b624fcadf18e869c4ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTriangulationOnSphereVertexBase__2_1ac74a14d8067dc85377196f733981afa8" kindref="member">Point</ref></type>
        <definition>Point TriangulationOnSphereVertexBase_2::point</definition>
        <argsstring>() const</argsstring>
        <name>point</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::point</qualifiedname>
        <briefdescription>
<para>returns the point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="60" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setting</header>
      <memberdef kind="function" id="classTriangulationOnSphereVertexBase__2_1a5f5376bf14e89536dc3aac2490903b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TriangulationOnSphereVertexBase_2::set_point</definition>
        <argsstring>(Point p)</argsstring>
        <name>set_point</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::set_point</qualifiedname>
        <param>
          <type><ref refid="classTriangulationOnSphereVertexBase__2_1ac74a14d8067dc85377196f733981afa8" kindref="member">Point</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>sets the point. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="70" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationOnSphereVertexBase__2_1a9071bd6f4f5d7b8bd929f0cc84b80063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; TriangulationOnSphereVertexBase_2::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, TriangulationOnSphereVertexBase_2 &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classTriangulationOnSphereVertexBase__2" kindref="compound">TriangulationOnSphereVertexBase_2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>inputs the non-combinatorial information given by the vertex: the point and other possible information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="76" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classTriangulationOnSphereVertexBase__2_1ac70b36a15bb1e779b5b07fc4742d800c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; TriangulationOnSphereVertexBase_2::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const TriangulationOnSphereVertexBase_2 &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>TriangulationOnSphereVertexBase_2::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classTriangulationOnSphereVertexBase__2" kindref="compound">TriangulationOnSphereVertexBase_2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>outputs the non combinatorial operation given by the vertex: the point and other possible information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="82" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classTriangulationDSVertexBase__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDSVertexBase_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para>The concept <computeroutput><ref refid="classTriangulationOnSphereVertexBase__2" kindref="compound">TriangulationOnSphereVertexBase_2</ref></computeroutput> describes the requirements for the vertex base class of a triangulation data structure to be plugged in a triangulation on the sphere. It refines the concept <computeroutput><ref refid="classTriangulationDSVertexBase__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDSVertexBase_2</ref></computeroutput>, adding geometric information: the vertex base of a triangulation stores a point.</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Triangulation__on__sphere__vertex__base__2" kindref="compound">CGAL::Triangulation_on_sphere_vertex_base_2</ref>&lt;Traits,Vb&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classTriangulationDataStructure__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/TDS_2.tag">TriangulationDataStructure_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classTriangulationOnSphereFaceBase__2" kindref="compound">TriangulationOnSphereFaceBase_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/TriangulationOnSphereVertexBase_2.h" line="19" column="1" bodyfile="Concepts/TriangulationOnSphereVertexBase_2.h" bodystart="20" bodyend="85"/>
    <listofallmembers>
      <member refid="classTriangulationOnSphereVertexBase__2_1a259571ec551badb044db4084d1ce77ce" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>Face_handle</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1ac70b36a15bb1e779b5b07fc4742d800c" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>operator&lt;&lt;</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1a9071bd6f4f5d7b8bd929f0cc84b80063" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>operator&gt;&gt;</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1ac74a14d8067dc85377196f733981afa8" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>Point</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1a86962fd1a1aa4b624fcadf18e869c4ac" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>point</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1a5f5376bf14e89536dc3aac2490903b25" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>set_point</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1a799485c9be0e7df245141c294144796d" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>TriangulationOnSphereVertexBase_2</name></member>
      <member refid="classTriangulationOnSphereVertexBase__2_1a28712600502a69c98a8bff0bea5762e3" prot="public" virt="non-virtual"><scope>TriangulationOnSphereVertexBase_2</scope><name>TriangulationOnSphereVertexBase_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
