<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classOptimalConvexPartitionTraits__2" kind="class" language="C++" prot="public">
    <compoundname>OptimalConvexPartitionTraits_2</compoundname>
    <includes local="no">Concepts/OptimalConvexPartitionTraits_2.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>In addition to the types listed with the concept <computeroutput><ref refid="classPartitionTraits__2" kindref="compound">PartitionTraits_2</ref></computeroutput>, the following types are required: </para>
</description>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a5b40d02710e301d68c2f9d23af890d9e" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Collinear_are_ordered_along_line_2</definition>
        <argsstring></argsstring>
        <name>Collinear_are_ordered_along_line_2</name>
        <qualifiedname>OptimalConvexPartitionTraits_2::Collinear_are_ordered_along_line_2</qualifiedname>
        <briefdescription>
<para>Predicate object type that determines orderings of <ref refid="classPartitionTraits__2_1a5bd41b29aafb9165cec4d11918e84eed" kindref="member"><computeroutput>Point_2</computeroutput> </ref> &apos;s on a line. </para>
        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q, Point_2 r)</computeroutput> that returns <computeroutput>true</computeroutput>, iff <computeroutput>q</computeroutput> lies between <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput> and <computeroutput>p</computeroutput>, <computeroutput>q</computeroutput>, and <computeroutput>r</computeroutput> satisfy the precondition that they are collinear. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="37" column="26" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classOptimalConvexPartitionTraits__2_1a2435b1233b83e6b5ec1756155d25aaa8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type OptimalConvexPartitionTraits_2::Are_stritcly_ordered_along_line_2</definition>
        <argsstring></argsstring>
        <name>Are_stritcly_ordered_along_line_2</name>
        <qualifiedname>OptimalConvexPartitionTraits_2::Are_stritcly_ordered_along_line_2</qualifiedname>
        <briefdescription>
<para>Predicate object type that determines orderings of <ref refid="classPartitionTraits__2_1a5bd41b29aafb9165cec4d11918e84eed" kindref="member"><computeroutput>Point_2</computeroutput> </ref> &apos;s. </para>
        </briefdescription>
        <detaileddescription>
<para>Must provide <computeroutput>bool operator()(Point_2 p, Point_2 q, Point_2 r)</computeroutput> that returns <computeroutput>true</computeroutput>, iff the three points are collinear and <computeroutput>q</computeroutput> lies strictly between <computeroutput>p</computeroutput> and <computeroutput>r</computeroutput>. Note that <computeroutput>false</computeroutput> should be returned if <computeroutput>q==p</computeroutput> or <computeroutput>q==r</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="48" column="26" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <description><para>Only a copy constructor is required. </para>
</description>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1adc0341237509567de1295270332a90cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OptimalConvexPartitionTraits_2::OptimalConvexPartitionTraits_2</definition>
        <argsstring>(OptimalConvexPartitionTraits_2 tr)</argsstring>
        <name>OptimalConvexPartitionTraits_2</name>
        <qualifiedname>OptimalConvexPartitionTraits_2::OptimalConvexPartitionTraits_2</qualifiedname>
        <param>
          <type><ref refid="classOptimalConvexPartitionTraits__2" kindref="compound">OptimalConvexPartitionTraits_2</ref></type>
          <declname>tr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>In addition to the functions required by <computeroutput><ref refid="classPartitionTraits__2" kindref="compound">PartitionTraits_2</ref></computeroutput>, the following functions that create instances of the above function object types must exist: </para>
</description>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1af9ef731b161c61e91d5898d2d892a4ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classOptimalConvexPartitionTraits__2_1a5b40d02710e301d68c2f9d23af890d9e" kindref="member">Collinear_are_ordered_along_line_2</ref></type>
        <definition>Collinear_are_ordered_along_line_2 OptimalConvexPartitionTraits_2::collinear_are_ordered_along_line_2_object</definition>
        <argsstring>() const</argsstring>
        <name>collinear_are_ordered_along_line_2_object</name>
        <qualifiedname>OptimalConvexPartitionTraits_2::collinear_are_ordered_along_line_2_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="73" column="36"/>
      </memberdef>
      <memberdef kind="function" id="classOptimalConvexPartitionTraits__2_1afd0940e9cc9745efbbd81d04b44fa179" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Are_strictly_ordered_along_line_2</type>
        <definition>Are_strictly_ordered_along_line_2 OptimalConvexPartitionTraits_2::are_strictly_ordered_along_line_2_object</definition>
        <argsstring>() const</argsstring>
        <name>are_strictly_ordered_along_line_2_object</name>
        <qualifiedname>OptimalConvexPartitionTraits_2::are_strictly_ordered_along_line_2_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Requirements of a traits class to be used with the function <computeroutput>optimal_convex_partition_2()</computeroutput> that computes an optimal convex partition of a polygon. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classPartitionTraits__2" kindref="compound">PartitionTraits_2</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Partition__traits__2" kindref="compound">CGAL::Partition_traits_2</ref>&lt;R&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgPartition2Ref_1ga9d234240af69b14694923824fc8fca12" kindref="member">CGAL::convex_partition_is_valid_2()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Partition__is__valid__traits__2" kindref="compound">CGAL::Partition_is_valid_traits_2</ref>&lt;Traits, <ref refid="classPolygonIsValid" kindref="compound">PolygonIsValid</ref>&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/OptimalConvexPartitionTraits_2.h" line="20" column="1" bodyfile="Concepts/OptimalConvexPartitionTraits_2.h" bodystart="20" bodyend="84"/>
    <listofallmembers>
      <member refid="classOptimalConvexPartitionTraits__2_1afd0940e9cc9745efbbd81d04b44fa179" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>are_strictly_ordered_along_line_2_object</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a2435b1233b83e6b5ec1756155d25aaa8" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Are_stritcly_ordered_along_line_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1a5b40d02710e301d68c2f9d23af890d9e" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>Collinear_are_ordered_along_line_2</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1af9ef731b161c61e91d5898d2d892a4ff" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>collinear_are_ordered_along_line_2_object</name></member>
      <member refid="classOptimalConvexPartitionTraits__2_1adc0341237509567de1295270332a90cd" prot="public" virt="non-virtual"><scope>OptimalConvexPartitionTraits_2</scope><name>OptimalConvexPartitionTraits_2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
