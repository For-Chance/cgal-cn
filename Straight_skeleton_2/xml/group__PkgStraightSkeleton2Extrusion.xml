<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgStraightSkeleton2Extrusion" kind="group">
    <compoundname>PkgStraightSkeleton2Extrusion</compoundname>
    <title>Skeleton Extrusion</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgStraightSkeleton2Extrusion_1ga0d1ccb10934bb54fb88a6174f30dfe49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
          <param>
            <type>typename FT</type>
          </param>
          <param>
            <type>typename PolygonMesh</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::extrude_skeleton</definition>
        <argsstring>(const Polygon &amp;polygon, PolygonMesh &amp;out, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>extrude_skeleton</name>
        <qualifiedname>CGAL::extrude_skeleton</qualifiedname>
        <param>
          <type>const Polygon &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>PolygonMesh &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>constructs the straight skeleton-based extrusion of a polygon with holes. </para>
        </briefdescription>
        <detaileddescription>
<para>Given a polygon with holes and a set of weights, the skeleton extrusion is a volume constructed from the weighted straight skeleton by associating a height to the vertices of the skeleton, which corresponds to the time at the vertex. The input polygon is placed at <computeroutput>z = 0</computeroutput>.</para>
<para>This function allows cropping the extruded skeleton at a maximum height, using the optional <computeroutput>maximum_height()</computeroutput> named parameter.</para>
<para>The result is a closed, 2-manifold surface triangle mesh. Note that this mesh can have non-local self-intersections if a maximal height is provided due to possible (geometric) non-manifold occurrences.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolygonWithHoles</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classSequenceContainer" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">SequenceContainer</ref></computeroutput> with value type <computeroutput>InK::Point_2</computeroutput> (e.g. <computeroutput><ref refid="classCGAL_1_1Polygon__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_2</ref>&lt;InK&gt;</computeroutput>) or a model of <computeroutput><ref refid="classGeneralPolygonWithHoles__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">GeneralPolygonWithHoles_2</ref></computeroutput> (e.g. <computeroutput><ref refid="classCGAL_1_1Polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">Polygon_with_holes_2</ref>&lt;InK&gt;</computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolygonMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classMutableFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">MutableFaceGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>the polygon with holes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output polygon mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="6" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>weights</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a range of weights, one for each edge of the input polygon </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose value type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose value type is <computeroutput>FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>an empty range (uniform weights are used) </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>Weights should be finite and all of the same sign. Negative weights are used to signify exterior extrusion. Contrary to weighted skeleton functions, a weight <computeroutput>0</computeroutput> can here be used to signify a vertical extrusion of this edge. </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>If neither <computeroutput>weights</computeroutput> nor <computeroutput>angles</computeroutput> are provided, uniform weights are used. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>angles</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a range of angles, one for each edge of the input polygon. For each contour edge, the angle is the dihedral angle between the <computeroutput>z=0</computeroutput> plane and the desired extrusion plane. </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose value type is a model of <computeroutput><ref refid="classRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Circulator.tag">Range</ref></computeroutput> whose value type is <computeroutput>FT</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>an empty range (uniform weights are used) </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>Angles are measured in degrees and should be strictly within <computeroutput>0</computeroutput> and <computeroutput>180</computeroutput> degrees and should be eitger all acute (inward extrusion) or all obtuse (outward extrusion). </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is ignored if the <computeroutput>weights</computeroutput> parameter is provided. </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>The conversion to weights involves trigonometry and will be inexact, even when using a number type with exact square roots. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>maximum_height</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>the maximum height of the extrusion </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>FT</computeroutput>, a model of <computeroutput><ref refid="classFieldNumberType" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Algebraic_foundations.tag">FieldNumberType</ref></computeroutput> convertible to the kernel type of the polygon. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>unused </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter should not be null, but can be negative; in this case, the polygon is extruded downwards. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>verbose</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>Whether information about the extrusion process should be printed to <computeroutput>std::cout</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>false</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>geom_traits</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>an instance of a geometric traits class </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>a CGAL <ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref> deduced from the polygon&apos;s point type, using <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref></computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>vertex_point_map</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a property map associating points to the vertices of <computeroutput>out</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold>a class model of <computeroutput><ref refid="classReadWritePropertyMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ReadWritePropertyMap</ref></computeroutput> with <computeroutput>boost::graph_traits&lt;PolygonMesh&gt;::vertex_descriptor</computeroutput> as key type and <computeroutput>InK::Point_2</computeroutput> as value type. </para>
</listitem>
<listitem>
<para><bold>Default: </bold>the internal property map for <computeroutput><ref refid="group__PkgBGLProperties_1ga247337f62916ade681347fa6f07251e1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">CGAL::vertex_point_t</ref></computeroutput> of <computeroutput>out</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the construction was successful, <computeroutput>false</computeroutput> otherwise.</para>
</simplesect>
<simplesect kind="pre"><para><computeroutput>polygon</computeroutput> is a weakly simple polygon with holes. </para>
</simplesect>
<simplesect kind="pre"><para>Holes are weakly simple polygons that do not intersect each other or the outer boundary.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStraightSkeleton2OffsetFunctions_1gaee073b6bd62fb5722bad41528647ec30" kindref="member">CGAL::create_interior_weighted_skeleton_and_offset_polygons_with_holes_2()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Straight__skeleton__2" kindref="compound">CGAL::Straight_skeleton_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/extrude_skeleton.h" line="90" column="6" declfile="CGAL/extrude_skeleton.h" declline="90" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The following functions are used to construct the skeleton extrusion of a polygon. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
