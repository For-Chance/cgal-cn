<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Trisegment__2" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Trisegment_2</compoundname>
    <includes local="no">CGAL/Trisegment_2.h</includes>
    <templateparamlist>
      <param>
        <type>typename K</type>
      </param>
      <param>
        <type>typename Segment</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Trisegment__2_1a5617de0645277aa15fa3534bc6fbc2f4" prot="public" static="no">
        <type>K::FT</type>
        <definition>typedef K::FT CGAL::Trisegment_2&lt; K, Segment &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>CGAL::Trisegment_2::FT</qualifiedname>
        <briefdescription>
<para>the field type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="40" column="26" bodyfile="CGAL/Trisegment_2.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Trisegment__2_1afba916e710a0444936dc4dce6b6767f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Segment &amp;</type>
        <definition>const Segment &amp; CGAL::Trisegment_2&lt; K, Segment &gt;::e0</definition>
        <argsstring>() const</argsstring>
        <name>e0</name>
        <qualifiedname>CGAL::Trisegment_2::e0</qualifiedname>
        <briefdescription>
<para>returns <computeroutput>e0</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="43" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Trisegment__2_1ad94e14644c1cf0565e5229cd18c88146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Segment &amp;</type>
        <definition>const Segment &amp; CGAL::Trisegment_2&lt; K, Segment &gt;::e1</definition>
        <argsstring>() const</argsstring>
        <name>e1</name>
        <qualifiedname>CGAL::Trisegment_2::e1</qualifiedname>
        <briefdescription>
<para>returns <computeroutput>e1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="46" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Trisegment__2_1a9f254b56d81e431e6ea0dbbf03211339" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Segment &amp;</type>
        <definition>const Segment &amp; CGAL::Trisegment_2&lt; K, Segment &gt;::e2</definition>
        <argsstring>() const</argsstring>
        <name>e2</name>
        <qualifiedname>CGAL::Trisegment_2::e2</qualifiedname>
        <briefdescription>
<para>returns <computeroutput>e2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="49" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Trisegment__2_1abce2aca993e17a404e37d336a717434b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Trisegment__2_1a5617de0645277aa15fa3534bc6fbc2f4" kindref="member">FT</ref> &amp;</type>
        <definition>const FT &amp; CGAL::Trisegment_2&lt; K, Segment &gt;::w0</definition>
        <argsstring>() const</argsstring>
        <name>w0</name>
        <qualifiedname>CGAL::Trisegment_2::w0</qualifiedname>
        <briefdescription>
<para>returns the weight of the edge <computeroutput>e0</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="52" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Trisegment__2_1a5380ebd324b9e74b284c8ce3c27a9a63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Trisegment__2_1a5617de0645277aa15fa3534bc6fbc2f4" kindref="member">FT</ref> &amp;</type>
        <definition>const FT &amp; CGAL::Trisegment_2&lt; K, Segment &gt;::w1</definition>
        <argsstring>() const</argsstring>
        <name>w1</name>
        <qualifiedname>CGAL::Trisegment_2::w1</qualifiedname>
        <briefdescription>
<para>returns the weight of the edge <computeroutput>e1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="55" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Trisegment__2_1af245a65216f287655d65b4ba0d129323" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classCGAL_1_1Trisegment__2_1a5617de0645277aa15fa3534bc6fbc2f4" kindref="member">FT</ref> &amp;</type>
        <definition>const FT &amp; CGAL::Trisegment_2&lt; K, Segment &gt;::w2</definition>
        <argsstring>() const</argsstring>
        <name>w2</name>
        <qualifiedname>CGAL::Trisegment_2::w2</qualifiedname>
        <briefdescription>
<para>returns the weight of the edge <computeroutput>e1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Trisegment_2.h" line="58" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A straight skeleton event is the simultaneous collision of three offsetted oriented straight line segments <computeroutput>e0*</computeroutput>,<computeroutput>e1*</computeroutput>,<computeroutput>e2*</computeroutput> (<computeroutput>e*</computeroutput> denotes an <emphasis>offsetted</emphasis> edge). </para>
    </briefdescription>
    <detaileddescription>
<para>This record stores the segments corresponding to the INPUT edges <computeroutput>(e0,e1,e2)</computeroutput> whose offsets intersect at the event along with their collinearity.</para>
<para>If the event is an edge-event, then <computeroutput>e0*-&gt;e1*-&gt;e2*</computeroutput> must be consecutive right before the event so that after the event <computeroutput>e0*</computeroutput> and <computeroutput>e2*</computeroutput> become consecutive. Thus, there are offset vertices <computeroutput>(e0*,e1*)</computeroutput> and <computeroutput>(e1*,e2*)</computeroutput> in the offset polygon which do not necessarily exist in the original polygon.</para>
<para>If the event is a split-event, <computeroutput>e0*-&gt;e1*</computeroutput> must be consecutive right before the event so that after the event <computeroutput>e0*-&gt;right(e2*)</computeroutput> and <computeroutput>left(e2*)-&gt;e1*</computeroutput> become consecutive. Thus, there is an offset vertex <computeroutput>(e0*,e1*)</computeroutput> in the offset polygon which does not necessarily exist in the original polygon.</para>
<para>The offset vertices <computeroutput>(e0*,e1*)</computeroutput> and <computeroutput>(e1*,e2*)</computeroutput> are called the left and right seeds for the event. A seed is a contour node if the vertex is already present in the input polygon, otherwise is a skeleton node. If a seed is a skeleton node it is produced by a previous event so it is itself defined as a trisegment, thus, a trisegment is actually a node in a binary tree.</para>
<para>Since trisegments are tree nodes they must always be handled via the nested smart pointer type <computeroutput>Self_ptr</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classKernel" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Segment</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classKernel_1_1Segment__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Kernel::Segment_2</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Objects of this type should be constructed using the traits&apos; functor <computeroutput>Construct_ss_trisegment_2</computeroutput> (see the concept <computeroutput><ref refid="classStraightSkeletonBuilderTraits__2" kindref="compound">StraightSkeletonBuilderTraits_2</ref></computeroutput>).</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolygonOffsetBuilderTraits__2" kindref="compound">PolygonOffsetBuilderTraits_2</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="CGAL/Trisegment_2.h" line="36" column="1" bodyfile="CGAL/Trisegment_2.h" bodystart="37" bodyend="60"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Trisegment__2_1afba916e710a0444936dc4dce6b6767f8" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>e0</name></member>
      <member refid="classCGAL_1_1Trisegment__2_1ad94e14644c1cf0565e5229cd18c88146" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>e1</name></member>
      <member refid="classCGAL_1_1Trisegment__2_1a9f254b56d81e431e6ea0dbbf03211339" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>e2</name></member>
      <member refid="classCGAL_1_1Trisegment__2_1a5617de0645277aa15fa3534bc6fbc2f4" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Trisegment__2_1abce2aca993e17a404e37d336a717434b" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>w0</name></member>
      <member refid="classCGAL_1_1Trisegment__2_1a5380ebd324b9e74b284c8ce3c27a9a63" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>w1</name></member>
      <member refid="classCGAL_1_1Trisegment__2_1af245a65216f287655d65b4ba0d129323" prot="public" virt="non-virtual"><scope>CGAL::Trisegment_2</scope><name>w2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
