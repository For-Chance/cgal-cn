<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Gaussian__map" prot="public">CGAL::Gaussian_map</innerclass>
    <innerclass refid="classCGAL_1_1Gaussian__map__to__nef__3" prot="public">CGAL::Gaussian_map_to_nef_3</innerclass>
    <innerclass refid="classCGAL_1_1PointMark" prot="public">CGAL::PointMark</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgMinkowskiSum3Ref_1ga3bf12a91d48792b17c9649b6c8e51d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Nef_polyhedron_3</type>
          </param>
        </templateparamlist>
        <type>Nef_polyhedron_3</type>
        <definition>Nef_polyhedron_3 CGAL::minkowski_sum_3</definition>
        <argsstring>(Nef_polyhedron_3 &amp;N0, Nef_polyhedron_3 &amp;N1)</argsstring>
        <name>minkowski_sum_3</name>
        <qualifiedname>CGAL::minkowski_sum_3</qualifiedname>
        <param>
          <type>Nef_polyhedron_3 &amp;</type>
          <declname>N0</declname>
        </param>
        <param>
          <type>Nef_polyhedron_3 &amp;</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMinkowskiSum3Ref_1ga3bf12a91d48792b17c9649b6c8e51d0c" kindref="member">minkowski_sum_3()</ref></computeroutput> computes the Minkowski sum of two given 3D Nef polyhedra <formula id="15">$ N0$</formula> and <formula id="16">$ N1$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the function runs in <formula id="11">$O(n^3m^3)$</formula> time in the worst case, where <formula id="9">$ n$</formula> and <formula id="10">$ m$</formula> are the complexities of the two input polyhedra (the complexity of a <computeroutput>Nef_polyhedron_3</computeroutput> is the sum of its <computeroutput>Vertices</computeroutput>, <computeroutput>Halfedges</computeroutput> and <computeroutput>SHalfedges</computeroutput>).</para>
<para>An input polyhedron may consist of: <orderedlist>
<listitem>
<para>singular vertices </para>
</listitem>
<listitem>
<para>singular edges </para>
</listitem>
<listitem>
<para>singular convex facets without holes </para>
</listitem>
<listitem>
<para>surfaces with convex facets that have no holes. </para>
</listitem>
<listitem>
<para>three-dimensional features, whose coplanar facets have common selection marks (this includes open and closed solids) </para>
</listitem>
</orderedlist>
</para>
<para>Taking a different viewpoint, the implementation is restricted as follows: <orderedlist>
<listitem>
<para>The input polyhedra must be bounded (selected outer volume is ignored). </para>
</listitem>
<listitem>
<para>All sets of coplanar facets of a full-dimensional feature must have the same selection mark (in case of different selection marks, unselected is assumed). </para>
</listitem>
<listitem>
<para>All facets of lower-dimensional features need to be convex and must not have holes (non-convex facets and holes are ignored). </para>
</listitem>
</orderedlist>
</para>
<para><simplesect kind="post"><para>If either of the input polyhedra is non-convex, it is modified during the computation, i.e., it is decomposed into convex pieces.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput>CGAL::Nef_polyhedron_3&lt;Traits&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="" kindref="compound"><computeroutput>CGAL::convex_decomposition_3()</computeroutput></ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/minkowski_sum_3.h" line="65" column="1" bodyfile="CGAL/minkowski_sum_3.h" bodystart="65" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="bipartite__nary__union__sorted__combined_8h_1a7f99e17b4b0f7c11cb9e9751b014a7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Nef_polyhedron</type>
          </param>
        </templateparamlist>
        <type>Nef_polyhedron</type>
        <definition>Nef_polyhedron CGAL::bipartite_nary_union_sorted_combined</definition>
        <argsstring>(Nef_polyhedron &amp;N0, Nef_polyhedron &amp;N1)</argsstring>
        <name>bipartite_nary_union_sorted_combined</name>
        <qualifiedname>CGAL::bipartite_nary_union_sorted_combined</qualifiedname>
        <param>
          <type>Nef_polyhedron &amp;</type>
          <declname>N0</declname>
        </param>
        <param>
          <type>Nef_polyhedron &amp;</type>
          <declname>N1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Minkowski_sum_3/bipartite_nary_union_sorted_combined.h" line="59" column="1" bodyfile="CGAL/Minkowski_sum_3/bipartite_nary_union_sorted_combined.h" bodystart="59" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="Gaussian__map_8h_1a122c2ffb0e3f98b6e573c5a95509de9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Kernel</type>
          </param>
          <param>
            <type>typename Nef</type>
          </param>
          <param>
            <type>typename Mark</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const CGAL::Gaussian_map&lt; Kernel, Nef, Mark &gt; &amp;G)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const CGAL::Gaussian_map&lt; Kernel, Nef, Mark &gt; &amp;</type>
          <declname>G</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Minkowski_sum_3/Gaussian_map.h" line="1195" column="1" bodyfile="CGAL/Minkowski_sum_3/Gaussian_map.h" bodystart="1195" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="PointMark_8h_1ac941ee7728258fcadc2fd24970585e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Kernel</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const PointMark&lt; Kernel &gt; &amp;pm)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const PointMark&lt; Kernel &gt; &amp;</type>
          <declname>pm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Minkowski_sum_3/PointMark.h" line="60" column="1" bodyfile="CGAL/Minkowski_sum_3/PointMark.h" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="PointMark_8h_1a5537213e58bede4320ead1c33c4d14e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Kernel</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::operator==</definition>
        <argsstring>(const PointMark&lt; Kernel &gt; &amp;pm1, const PointMark&lt; Kernel &gt; &amp;pm2)</argsstring>
        <name>operator==</name>
        <qualifiedname>CGAL::operator==</qualifiedname>
        <param>
          <type>const PointMark&lt; Kernel &gt; &amp;</type>
          <declname>pm1</declname>
        </param>
        <param>
          <type>const PointMark&lt; Kernel &gt; &amp;</type>
          <declname>pm2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Minkowski_sum_3/PointMark.h" line="67" column="6" bodyfile="CGAL/Minkowski_sum_3/PointMark.h" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="PointMark_8h_1af77950667b64ab0ed005c577cb0a7d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Kernel</type>
          </param>
        </templateparamlist>
        <type>const PointMark&lt; Kernel &gt;</type>
        <definition>const PointMark&lt; Kernel &gt; CGAL::operator+</definition>
        <argsstring>(const PointMark&lt; Kernel &gt; &amp;pm1, const PointMark&lt; Kernel &gt; &amp;pm2)</argsstring>
        <name>operator+</name>
        <qualifiedname>CGAL::operator+</qualifiedname>
        <param>
          <type>const PointMark&lt; Kernel &gt; &amp;</type>
          <declname>pm1</declname>
        </param>
        <param>
          <type>const PointMark&lt; Kernel &gt; &amp;</type>
          <declname>pm2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Minkowski_sum_3/PointMark.h" line="75" column="17" bodyfile="CGAL/Minkowski_sum_3/PointMark.h" bodystart="75" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Minkowski_sum_3.txt" line="2" column="1"/>
  </compounddef>
</doxygen>
