<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classGraphicsSceneOptionsWithVolumes" kind="class" language="C++" prot="public">
    <compoundname>GraphicsSceneOptionsWithVolumes</compoundname>
    <includes local="no">Concepts/GraphicsSceneOptions.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classGraphicsSceneOptionsWithVolumes_1aa84ae120162b25da8732e8e8ed99c0fb" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type GraphicsSceneOptionsWithVolumes::volume_descriptor</definition>
        <argsstring></argsstring>
        <name>volume_descriptor</name>
        <qualifiedname>GraphicsSceneOptionsWithVolumes::volume_descriptor</qualifiedname>
        <briefdescription>
<para>A descriptor of volumes of <computeroutput>DS</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GraphicsSceneOptions.h" line="107" column="28" bodyfile="Concepts/GraphicsSceneOptions.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGraphicsSceneOptionsWithVolumes_1a9dd9b45432f6e7b8384af8060ea4e0ac" prot="public" static="no" mutable="no">
        <type>std::function&lt; bool(const DS &amp;, <ref refid="classGraphicsSceneOptionsWithVolumes_1aa84ae120162b25da8732e8e8ed99c0fb" kindref="member">volume_descriptor</ref>)&gt;</type>
        <definition>std::function&lt;bool(const DS &amp;, volume_descriptor)&gt; GraphicsSceneOptionsWithVolumes::ignore_volume</definition>
        <argsstring></argsstring>
        <name>ignore_volume</name>
        <qualifiedname>GraphicsSceneOptionsWithVolumes::ignore_volume</qualifiedname>
        <briefdescription>
<para><computeroutput>std::function</computeroutput> that returns <computeroutput>true</computeroutput> if the given volume must be ignored, <computeroutput>false</computeroutput> otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GraphicsSceneOptions.h" line="111" column="17" bodyfile="Concepts/GraphicsSceneOptions.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphicsSceneOptionsWithVolumes_1a0c3a202ad812ffc926bd240d4dc420e3" prot="public" static="no" mutable="no">
        <type>std::function&lt; bool(const DS &amp;, <ref refid="classGraphicsSceneOptionsWithVolumes_1aa84ae120162b25da8732e8e8ed99c0fb" kindref="member">volume_descriptor</ref>)&gt;</type>
        <definition>std::function&lt;bool(const DS &amp;, volume_descriptor)&gt; GraphicsSceneOptionsWithVolumes::is_volume_colored</definition>
        <argsstring></argsstring>
        <name>is_volume_colored</name>
        <qualifiedname>GraphicsSceneOptionsWithVolumes::is_volume_colored</qualifiedname>
        <briefdescription>
<para><computeroutput>std::function</computeroutput> that returns <computeroutput>true</computeroutput> if the given volume is colored, <computeroutput>false</computeroutput> otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>For non colored volumes, this is the role of the user of a graphic scene to decide which color must be used (cf. for example <computeroutput>Basic_viewer</computeroutput>, <computeroutput>faces_mono_color</computeroutput>). Returns <computeroutput>false</computeroutput> by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GraphicsSceneOptions.h" line="116" column="17" bodyfile="Concepts/GraphicsSceneOptions.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphicsSceneOptionsWithVolumes_1aa2def00c48ff4aa6db6624b1d325b5e3" prot="public" static="no" mutable="no">
        <type>std::function&lt; bool(const DS &amp;, <ref refid="classGraphicsSceneOptionsWithVolumes_1aa84ae120162b25da8732e8e8ed99c0fb" kindref="member">volume_descriptor</ref>)&gt;</type>
        <definition>std::function&lt;bool(const DS &amp;, volume_descriptor)&gt; GraphicsSceneOptionsWithVolumes::is_volume_wireframe</definition>
        <argsstring></argsstring>
        <name>is_volume_wireframe</name>
        <qualifiedname>GraphicsSceneOptionsWithVolumes::is_volume_wireframe</qualifiedname>
        <briefdescription>
<para><computeroutput>std::function</computeroutput> that returns <computeroutput>true</computeroutput> if the given volume is in wireframe, <computeroutput>false</computeroutput> otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GraphicsSceneOptions.h" line="120" column="17" bodyfile="Concepts/GraphicsSceneOptions.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGraphicsSceneOptionsWithVolumes_1a70a71ef15943d744561bcb6a0cacab5d" prot="public" static="no" mutable="no">
        <type>std::function&lt; CGAL::IO::Color(const DS &amp;, <ref refid="classGraphicsSceneOptionsWithVolumes_1aa84ae120162b25da8732e8e8ed99c0fb" kindref="member">volume_descriptor</ref>)&gt;</type>
        <definition>std::function&lt;CGAL::IO::Color(const DS &amp;, volume_descriptor)&gt; GraphicsSceneOptionsWithVolumes::volume_color</definition>
        <argsstring></argsstring>
        <name>volume_color</name>
        <qualifiedname>GraphicsSceneOptionsWithVolumes::volume_color</qualifiedname>
        <briefdescription>
<para><computeroutput>std::function</computeroutput> that returns the color of the given volume, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>the color of all the faces of this volume. <computeroutput>nullptr</computeroutput> by default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GraphicsSceneOptions.h" line="124" column="17" bodyfile="Concepts/GraphicsSceneOptions.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGraphicsSceneOptionsWithVolumes_1aa12e081dbc5d864853fb4296141c4445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GraphicsSceneOptionsWithVolumes::ignore_all_volumes</definition>
        <argsstring>(bool b)</argsstring>
        <name>ignore_all_volumes</name>
        <qualifiedname>GraphicsSceneOptionsWithVolumes::ignore_all_volumes</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>ignores all volumes when <computeroutput>b</computeroutput> is <computeroutput>true</computeroutput>; otherwise ignore only volumes for which <computeroutput><ref refid="classGraphicsSceneOptionsWithVolumes_1a9dd9b45432f6e7b8384af8060ea4e0ac" kindref="member">ignore_volume()</ref></computeroutput> returns <computeroutput>true</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/GraphicsSceneOptions.h" line="127" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classGraphicsSceneOptionsWithVolumes" kindref="compound">GraphicsSceneOptionsWithVolumes</ref></computeroutput> extends the concept <computeroutput><ref refid="classGraphicsSceneOptions" kindref="compound">GraphicsSceneOptions</ref></computeroutput> to deal with data structures that represent volumes. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para><variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classGraphicsSceneOptions" kindref="compound">GraphicsSceneOptions</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><ref refid="structCGAL_1_1Graphics__scene__options" kindref="compound"><computeroutput>CGAL::Graphics_scene_options&lt;DS, VertexDescriptor, EdgeDescriptor, FaceDescriptor, VolumeDescriptor&gt;</computeroutput></ref> </para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
    <location file="Concepts/GraphicsSceneOptions.h" line="101" column="1" bodyfile="Concepts/GraphicsSceneOptions.h" bodystart="102" bodyend="128"/>
    <listofallmembers>
      <member refid="classGraphicsSceneOptionsWithVolumes_1aa12e081dbc5d864853fb4296141c4445" prot="public" virt="non-virtual"><scope>GraphicsSceneOptionsWithVolumes</scope><name>ignore_all_volumes</name></member>
      <member refid="classGraphicsSceneOptionsWithVolumes_1a9dd9b45432f6e7b8384af8060ea4e0ac" prot="public" virt="non-virtual"><scope>GraphicsSceneOptionsWithVolumes</scope><name>ignore_volume</name></member>
      <member refid="classGraphicsSceneOptionsWithVolumes_1a0c3a202ad812ffc926bd240d4dc420e3" prot="public" virt="non-virtual"><scope>GraphicsSceneOptionsWithVolumes</scope><name>is_volume_colored</name></member>
      <member refid="classGraphicsSceneOptionsWithVolumes_1aa2def00c48ff4aa6db6624b1d325b5e3" prot="public" virt="non-virtual"><scope>GraphicsSceneOptionsWithVolumes</scope><name>is_volume_wireframe</name></member>
      <member refid="classGraphicsSceneOptionsWithVolumes_1a70a71ef15943d744561bcb6a0cacab5d" prot="public" virt="non-virtual"><scope>GraphicsSceneOptionsWithVolumes</scope><name>volume_color</name></member>
      <member refid="classGraphicsSceneOptionsWithVolumes_1aa84ae120162b25da8732e8e8ed99c0fb" prot="public" virt="non-virtual"><scope>GraphicsSceneOptionsWithVolumes</scope><name>volume_descriptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
