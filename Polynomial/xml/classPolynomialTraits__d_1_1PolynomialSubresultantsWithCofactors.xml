<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classPolynomialTraits__d_1_1PolynomialSubresultantsWithCofactors" kind="class" language="C++" prot="public">
    <compoundname>PolynomialTraits_d::PolynomialSubresultantsWithCofactors</compoundname>
    <includes local="no">Concepts/PolynomialTraits_d--PolynomialSubresultantsWithCofactors.h</includes>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classPolynomialTraits__d_1_1PolynomialSubresultantsWithCofactors_1ac1ee5fe7cfc768528906e5f680746a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIterator1</type>
          </param>
          <param>
            <type>typename OutputIterator2</type>
          </param>
          <param>
            <type>typename OutputIterator3</type>
          </param>
        </templateparamlist>
        <type>OutputIterator1</type>
        <definition>OutputIterator1 PolynomialTraits_d::PolynomialSubresultantsWithCofactors::operator()</definition>
        <argsstring>(Polynomial_d p, Polynomial_d q, OutputIterator1 sres, OutputIterator2 co_p, OutputIterator3 co_q)</argsstring>
        <name>operator()</name>
        <qualifiedname>PolynomialTraits_d::PolynomialSubresultantsWithCofactors::operator()</qualifiedname>
        <param>
          <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">Polynomial_d</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">Polynomial_d</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type>OutputIterator1</type>
          <declname>sres</declname>
        </param>
        <param>
          <type>OutputIterator2</type>
          <declname>co_p</declname>
        </param>
        <param>
          <type>OutputIterator3</type>
          <declname>co_q</declname>
        </param>
        <briefdescription>
<para>computes the subresultants of <formula id="21">$ p$</formula> and <formula id="22">$ q$</formula>, and the cofactors, with respect to the outermost variable. </para>
        </briefdescription>
        <detaileddescription>
<para>Each element is of type <computeroutput><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--PolynomialSubresultantsWithCofactors.h" line="44" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classPolynomialTraits__d_1_1PolynomialSubresultantsWithCofactors_1a49d3c73325a0c5417cb261a4b4e9a222" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OutputIterator1</type>
          </param>
          <param>
            <type>typename OutputIterator2</type>
          </param>
          <param>
            <type>typename OutputIterator3</type>
          </param>
        </templateparamlist>
        <type>OutputIterator1</type>
        <definition>OutputIterator1 PolynomialTraits_d::PolynomialSubresultantsWithCofactors::operator()</definition>
        <argsstring>(Polynomial_d p, Polynomial_d q, OutputIterator1 sres, OutputIterator2 co_p, OutputIterator3 co_q, int i)</argsstring>
        <name>operator()</name>
        <qualifiedname>PolynomialTraits_d::PolynomialSubresultantsWithCofactors::operator()</qualifiedname>
        <param>
          <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">Polynomial_d</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">Polynomial_d</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type>OutputIterator1</type>
          <declname>sres</declname>
        </param>
        <param>
          <type>OutputIterator2</type>
          <declname>co_p</declname>
        </param>
        <param>
          <type>OutputIterator3</type>
          <declname>co_q</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>computes the subresultants of <formula id="21">$ p$</formula> and <formula id="22">$ q$</formula>, and the cofactors, with respect to <formula id="33">$ x_i$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para>Each element is of type <computeroutput><ref refid="classPolynomialTraits__d_1a4526aab58b9438fcad4cdfc26f7f1cf6" kindref="member">PolynomialTraits_d::Polynomial_d</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/PolynomialTraits_d--PolynomialSubresultantsWithCofactors.h" line="58" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Computes the polynomial subresultant of two polynomials <formula id="21">$ p$</formula> and <formula id="22">$ q$</formula> of degree <formula id="93">$ n$</formula> and <formula id="94">$ m$</formula>, respectively, as defined in the documentation of <computeroutput><ref refid="classPolynomialTraits__d_1_1PolynomialSubresultants" kindref="compound">PolynomialTraits_d::PolynomialSubresultants</ref></computeroutput>. Moreover, for <formula id="95">$ \mathrm{Sres}_i(p,q)$</formula>, polynomials <formula id="96">$ u_i$</formula> and <formula id="97">$ v_i$</formula> with <formula id="98">$ \deg u_i\leq m-i-1$</formula> and <formula id="99">$ \deg v_i\leq n-i-1$</formula> are computed such that <formula id="100">$ \mathrm{Sres}_i(p,q)=u_i p + v_i q$</formula>. <formula id="96">$ u_i$</formula> and <formula id="97">$ v_i$</formula> are called the <emphasis>cofactors</emphasis> of <formula id="95">$ \mathrm{Sres}_i(p,q)$</formula>. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>The result is written in three output ranges, each of length <formula id="101">$ \min\{n,m\}+1$</formula>, starting with the <formula id="39">$ 0$</formula>-th subresultant and the corresponding cofactors.</para>
<para><simplesect kind="note"><para>This functor is optional.</para>
</simplesect>
<variablelist>
<varlistentry><term>Refines</term></varlistentry>
<listitem><para><computeroutput><ref refid="classAdaptableBinaryFunction" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">AdaptableBinaryFunction</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref></computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classPolynomial__d" kindref="compound">Polynomial_d</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d" kindref="compound">PolynomialTraits_d</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1Resultant" kindref="compound">PolynomialTraits_d::Resultant</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1PolynomialSubresultants" kindref="compound">PolynomialTraits_d::PolynomialSubresultants</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1PrincipalSubresultants" kindref="compound">PolynomialTraits_d::PrincipalSubresultants</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classPolynomialTraits__d_1_1SturmHabichtSequenceWithCofactors" kindref="compound">PolynomialTraits_d::SturmHabichtSequenceWithCofactors</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/PolynomialTraits_d--PolynomialSubresultantsWithCofactors.h" line="30" column="1" bodyfile="Concepts/PolynomialTraits_d--PolynomialSubresultantsWithCofactors.h" bodystart="30" bodyend="67"/>
    <listofallmembers>
      <member refid="classPolynomialTraits__d_1_1PolynomialSubresultantsWithCofactors_1ac1ee5fe7cfc768528906e5f680746a17" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::PolynomialSubresultantsWithCofactors</scope><name>operator()</name></member>
      <member refid="classPolynomialTraits__d_1_1PolynomialSubresultantsWithCofactors_1a49d3c73325a0c5417cb261a4b4e9a222" prot="public" virt="non-virtual"><scope>PolynomialTraits_d::PolynomialSubresultantsWithCofactors</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
