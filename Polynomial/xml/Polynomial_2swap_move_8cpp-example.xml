<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="Polynomial_2swap_move_8cpp-example" kind="example">
    <compoundname>Polynomial/swap_move.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="Polynomial/swap_move.cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polynomial.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polynomial_traits_d.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polynomial_type_generator.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">CGAL::IO::set_pretty_mode</ref>(std::cout);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL::Polynomial_type_generator&lt;int,3&gt;::Type</ref><sp/>Poly_3;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Polynomial__traits__d" kindref="compound">CGAL::Polynomial_traits_d&lt;Poly_3&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PT_3;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//construction<sp/>using<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_3<sp/>x<sp/>=<sp/>PT_3::Shift()(Poly_3(1),1,0);<sp/></highlight><highlight class="comment">//<sp/>x_0^1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_3<sp/>y<sp/>=<sp/>PT_3::Shift()(Poly_3(1),1,1);<sp/></highlight><highlight class="comment">//<sp/>x_1^1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_3<sp/>z<sp/>=<sp/>PT_3::Shift()(Poly_3(1),1,2);<sp/></highlight><highlight class="comment">//<sp/>x_2^1</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Poly_3<sp/>F<sp/>=<sp/>x*y*y*z*z*z;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>trivariate<sp/>polynomial<sp/>F:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>F<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_3::Swap<sp/><ref refid="group__PkgPolynomialFunctions_1gaf14eb69ab0be30e7ecec826374296279" kindref="member">swap</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_3::Move<sp/><ref refid="group__PkgPolynomialFunctions_1ga3c9844416f0d3ed43923d2a4892b5813" kindref="member">move</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PT_3::Permute<sp/><ref refid="group__PkgPolynomialFunctions_1gaf50ef88b24f772d61eefbab49015aeb4" kindref="member">permute</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x<sp/>and<sp/>z<sp/>swapped:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1gaf14eb69ab0be30e7ecec826374296279" kindref="member">swap</ref>(F,0,2)<sp/></highlight><highlight class="comment">//<sp/>=<sp/>x^3*y^2*z</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x<sp/>and<sp/>y<sp/>swapped:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1gaf14eb69ab0be30e7ecec826374296279" kindref="member">swap</ref>(F,0,1)<sp/></highlight><highlight class="comment">//<sp/>=<sp/>x^2*y*z^3</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x<sp/>moved<sp/>to<sp/>outermost<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1ga3c9844416f0d3ed43923d2a4892b5813" kindref="member">move</ref>(F,0,2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>x^2*y^3*z</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Same<sp/>as<sp/>swap(swap(F,0,1),1,2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1gaf14eb69ab0be30e7ecec826374296279" kindref="member">swap</ref>(<ref refid="group__PkgPolynomialFunctions_1gaf14eb69ab0be30e7ecec826374296279" kindref="member">swap</ref>(F,0,1),1,2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>x^2*y^3*z</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Same<sp/>as<sp/>the<sp/>permutation<sp/>(0,1,2)-&gt;(2,0,1):<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>perm;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>perm.push_back(2);perm.push_back(0);perm.push_back(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="group__PkgPolynomialFunctions_1gaf50ef88b24f772d61eefbab49015aeb4" kindref="member">permute</ref>(F,perm.begin(),perm.end())</highlight><highlight class="comment">//<sp/>=<sp/>x^2*y^3*z</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="examples.txt"/>
  </compounddef>
</doxygen>
