<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Ridge__approximation" prot="public">CGAL::Ridge_approximation</innerclass>
    <innerclass refid="classCGAL_1_1Ridge__line" prot="public">CGAL::Ridge_line</innerclass>
    <innerclass refid="classCGAL_1_1Umbilic" prot="public">CGAL::Umbilic</innerclass>
    <innerclass refid="classCGAL_1_1Umbilic__approximation" prot="public">CGAL::Umbilic_approximation</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__PkgRidges3Enums_1ga00a3b23ecc61f7b02492e79cf7cf1b91" prot="public" static="no" strong="no">
        <type></type>
        <name>Ridge_order</name>
        <qualifiedname>CGAL::Ridge_order</qualifiedname>
        <enumvalue id="group__PkgRidges3Enums_1gga00a3b23ecc61f7b02492e79cf7cf1b91a2f4d0a35e9fb158b4e06aa00cdd1be1a" prot="public">
          <name>Ridge_order_3</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga00a3b23ecc61f7b02492e79cf7cf1b91ac5178f610808720dcb31f1e84d755460" prot="public">
          <name>Ridge_order_4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enum <computeroutput>Ridge_order</computeroutput> describes the order of differential quantities used to distinguish elliptic and hyperbolic ridges. </para>
        </briefdescription>
        <detaileddescription>
<para>Third or fourth order quantities may be used as explained in Section <ref refid="index_1Ridges_3Approximating" kindref="member">Approximating Ridges on Triangulated Surface Meshes</ref> of the User Manual.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Ridge__approximation" kindref="compound">Ridge_approximation</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ridges.h" line="12" column="1" bodyfile="CGAL/Ridges.h" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgRidges3Enums_1ga52a2c136a49dc8f32e146aa8204cb65a" prot="public" static="no" strong="no">
        <type></type>
        <name>Ridge_type</name>
        <qualifiedname>CGAL::Ridge_type</qualifiedname>
        <enumvalue id="group__PkgRidges3Enums_1gga52a2c136a49dc8f32e146aa8204cb65aad6458197d2d914616a1229703641fc26" prot="public">
          <name>MAX_ELLIPTIC_RIDGE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga52a2c136a49dc8f32e146aa8204cb65aafff4a2edf212ef44875cd3fd82f1fc6a" prot="public">
          <name>MAX_HYPERBOLIC_RIDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga52a2c136a49dc8f32e146aa8204cb65aa8476643dc6a52935b0413cf080bb8ed4" prot="public">
          <name>MAX_CREST_RIDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga52a2c136a49dc8f32e146aa8204cb65aaf28972caa9c208fa7096a992139b582c" prot="public">
          <name>MIN_ELLIPTIC_RIDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga52a2c136a49dc8f32e146aa8204cb65aac4a20a4d417d135de77f1d7c6cb4cdaf" prot="public">
          <name>MIN_HYPERBOLIC_RIDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga52a2c136a49dc8f32e146aa8204cb65aa224c1b10b418e4511734720d6db26049" prot="public">
          <name>MIN_CREST_RIDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enum <computeroutput>Ridge_type</computeroutput> describes the types for the class <computeroutput><ref refid="classCGAL_1_1Ridge__line" kindref="compound">Ridge_line</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Ridge__line" kindref="compound">Ridge_line</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ridges.h" line="19" column="1" bodyfile="CGAL/Ridges.h" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="group__PkgRidges3Enums_1ga4a6962972d77b9dcc9dfd82fdb5cf822" prot="public" static="no" strong="no">
        <type></type>
        <name>Umbilic_type</name>
        <qualifiedname>CGAL::Umbilic_type</qualifiedname>
        <enumvalue id="group__PkgRidges3Enums_1gga4a6962972d77b9dcc9dfd82fdb5cf822a34921ace95210d956a9ba2c8615933a7" prot="public">
          <name>NON_GENERIC_UMBILIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga4a6962972d77b9dcc9dfd82fdb5cf822afb00126ebe97b59d3426f9bf4cc93e98" prot="public">
          <name>ELLIPTIC_UMBILIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__PkgRidges3Enums_1gga4a6962972d77b9dcc9dfd82fdb5cf822a08e952e539375e05e9b2575bb413dcd9" prot="public">
          <name>HYPERBOLIC_UMBILIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The enum <computeroutput>Umbilic_type</computeroutput> describes the types for the class <computeroutput><ref refid="classCGAL_1_1Umbilic" kindref="compound">Umbilic</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Umbilic" kindref="compound">Umbilic</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Umbilics.h" line="8" column="1" bodyfile="CGAL/Umbilics.h" bodystart="8" bodyend="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgRidges3Ref_1ga160ff11edf5b6fd969f94461703d4e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class VertexFTMap</type>
          </param>
          <param>
            <type>class VertexVectorMap</type>
          </param>
          <param>
            <type>class OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator CGAL::compute_crest_ridges</definition>
        <argsstring>(const TriangleMesh &amp;tm, VertexFTMap vertex_k1_pm, VertexFTMap vertex_k2_pm, VertexFTMap vertex_b0_pm, VertexFTMap vertex_b3_pm, VertexVectorMap vertex_d1_pm, VertexVectorMap vertex_d2_pm, VertexFTMap vertex_P1_pm, VertexFTMap vertex_P2_pm, OutputIterator it, CGAL::Ridge_order order=CGAL::Ridge_order_3)</argsstring>
        <name>compute_crest_ridges</name>
        <qualifiedname>CGAL::compute_crest_ridges</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k1_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k2_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_b0_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_b3_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d1_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d2_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_P1_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_P2_pm</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="group__PkgRidges3Enums_1ga00a3b23ecc61f7b02492e79cf7cf1b91" kindref="member">CGAL::Ridge_order</ref></type>
          <declname>order</declname>
          <defval><ref refid="group__PkgRidges3Enums_1gga00a3b23ecc61f7b02492e79cf7cf1b91a2f4d0a35e9fb158b4e06aa00cdd1be1a" kindref="member">CGAL::Ridge_order_3</ref></defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgRidges3Ref_1ga160ff11edf5b6fd969f94461703d4e35" kindref="member">compute_crest_ridges()</ref></computeroutput> is a shortcut to the method <computeroutput><ref refid="classCGAL_1_1Ridge__approximation_1ad0ee150d6563444483c0c06dd346df65" kindref="member">Ridge_approximation::compute_crest_ridges()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See <computeroutput><ref refid="classCGAL_1_1Ridge__approximation_1aa037edd340871bedc7356ed71d4671bc" kindref="member">Ridge_approximation::Ridge_approximation()</ref></computeroutput> for an explanation of the parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ridges.h" line="39" column="16" declfile="CGAL/Ridges.h" declline="39" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgRidges3Ref_1gacbcb335296cafd49ca33420d2fea8c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class VertexFTMap</type>
          </param>
          <param>
            <type>class VertexVectorMap</type>
          </param>
          <param>
            <type>class OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator CGAL::compute_max_ridges</definition>
        <argsstring>(const TriangleMesh &amp;tm, VertexFTMap vertex_k1_pm, VertexFTMap vertex_k2_pm, VertexFTMap vertex_b0_pm, VertexFTMap vertex_b3_pm, VertexVectorMap vertex_d1_pm, VertexVectorMap vertex_d2_pm, VertexFTMap vertex_P1_pm, const VertexFTMap vertex_P2_pm, OutputIterator it, CGAL::Ridge_order order=CGAL::Ridge_order_3)</argsstring>
        <name>compute_max_ridges</name>
        <qualifiedname>CGAL::compute_max_ridges</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k1_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k2_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_b0_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_b3_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d1_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d2_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_P1_pm</declname>
        </param>
        <param>
          <type>const VertexFTMap</type>
          <declname>vertex_P2_pm</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="group__PkgRidges3Enums_1ga00a3b23ecc61f7b02492e79cf7cf1b91" kindref="member">CGAL::Ridge_order</ref></type>
          <declname>order</declname>
          <defval><ref refid="group__PkgRidges3Enums_1gga00a3b23ecc61f7b02492e79cf7cf1b91a2f4d0a35e9fb158b4e06aa00cdd1be1a" kindref="member">CGAL::Ridge_order_3</ref></defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgRidges3Ref_1gacbcb335296cafd49ca33420d2fea8c24" kindref="member">compute_max_ridges()</ref></computeroutput> is a shortcut to the method <computeroutput><ref refid="classCGAL_1_1Ridge__approximation_1a61b39f380ed5ec620f7fdcc577d31e00" kindref="member">Ridge_approximation::compute_max_ridges()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See <computeroutput><ref refid="classCGAL_1_1Ridge__approximation_1aa037edd340871bedc7356ed71d4671bc" kindref="member">Ridge_approximation::Ridge_approximation()</ref></computeroutput> for an explanation of the parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ridges.h" line="66" column="16" declfile="CGAL/Ridges.h" declline="66" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgRidges3Ref_1ga03c751ca758e75a4e00c9c60843e0eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class VertexFTMap</type>
          </param>
          <param>
            <type>class VertexVectorMap</type>
          </param>
          <param>
            <type>class OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator CGAL::compute_min_ridges</definition>
        <argsstring>(const TriangleMesh &amp;tm, VertexFTMap vertex_k1_pm, VertexFTMap vertex_k2_pm, VertexFTMap vertex_b0_pm, VertexFTMap vertex_b3_pm, VertexVectorMap vertex_d1_pm, VertexVectorMap vertex_d2_pm, VertexFTMap vertex_P1_pm, VertexFTMap vertex_P2_pm, OutputIterator it, CGAL::Ridge_order order=CGAL::Ridge_order_3)</argsstring>
        <name>compute_min_ridges</name>
        <qualifiedname>CGAL::compute_min_ridges</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k1_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k2_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_b0_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_b3_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d1_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d2_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_P1_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_P2_pm</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="group__PkgRidges3Enums_1ga00a3b23ecc61f7b02492e79cf7cf1b91" kindref="member">CGAL::Ridge_order</ref></type>
          <declname>order</declname>
          <defval><ref refid="group__PkgRidges3Enums_1gga00a3b23ecc61f7b02492e79cf7cf1b91a2f4d0a35e9fb158b4e06aa00cdd1be1a" kindref="member">CGAL::Ridge_order_3</ref></defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgRidges3Ref_1ga03c751ca758e75a4e00c9c60843e0eb5" kindref="member">compute_min_ridges()</ref></computeroutput> is a shortcut to the method <computeroutput><ref refid="classCGAL_1_1Ridge__approximation_1a4577c3ec620b7f3331e2e42f398de8e6" kindref="member">Ridge_approximation::compute_min_ridges()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See <computeroutput><ref refid="classCGAL_1_1Ridge__approximation_1aa037edd340871bedc7356ed71d4671bc" kindref="member">Ridge_approximation::Ridge_approximation()</ref></computeroutput> for an explanation of the parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Ridges.h" line="95" column="16" declfile="CGAL/Ridges.h" declline="95" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgRidges3Ref_1gaec8861e49a5cddc02ac9723f8f2b88ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TriangleMesh</type>
          </param>
          <param>
            <type>class VertexFTMap</type>
          </param>
          <param>
            <type>class VertexVectorMap</type>
          </param>
          <param>
            <type>class OutputIterator</type>
          </param>
        </templateparamlist>
        <type>OutputIterator</type>
        <definition>OutputIterator CGAL::compute_umbilics</definition>
        <argsstring>(const TriangleMesh &amp;tm, VertexFTMap vertex_k1_pm, VertexFTMap vertex_k2_pm, VertexVectorMap vertex_d1_pm, VertexVectorMap vertex_d2_pm, OutputIterator it, double size)</argsstring>
        <name>compute_umbilics</name>
        <qualifiedname>CGAL::compute_umbilics</qualifiedname>
        <param>
          <type>const TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k1_pm</declname>
        </param>
        <param>
          <type>VertexFTMap</type>
          <declname>vertex_k2_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d1_pm</declname>
        </param>
        <param>
          <type>VertexVectorMap</type>
          <declname>vertex_d2_pm</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>it</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgRidges3Ref_1gaec8861e49a5cddc02ac9723f8f2b88ba" kindref="member">compute_umbilics()</ref></computeroutput> is a shortcut to the method <computeroutput><ref refid="classCGAL_1_1Umbilic__approximation_1a7c0c937739e4d842cf00d3babcd67305" kindref="member">Umbilic_approximation::compute()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>See <computeroutput><ref refid="classCGAL_1_1Umbilic__approximation_1ae9fdf34babb6b62c3a001c11d17a09a4" kindref="member">Umbilic_approximation::Umbilic_approximation()</ref></computeroutput> for an explanation of the parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Umbilics.h" line="23" column="16" declfile="CGAL/Umbilics.h" declline="23" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Ridges.h" line="1" column="1"/>
  </compounddef>
</doxygen>
