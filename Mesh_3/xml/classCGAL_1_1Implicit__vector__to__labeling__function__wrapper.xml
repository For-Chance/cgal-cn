<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Implicit_vector_to_labeling_function_wrapper</compoundname>
    <includes local="no">CGAL/Implicit_to_labeling_function_wrapper.h</includes>
    <templateparamlist>
      <param>
        <type>class Function_</type>
      </param>
      <param>
        <type>class BGT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1aa1ea8ecc2eb6cf52d1fce64c63458b9f" prot="public" static="no">
        <type>int</type>
        <definition>typedef int CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::return_type</definition>
        <argsstring></argsstring>
        <name>return_type</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::return_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="102" column="37" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a3294f832e0b7c80c22980865e2bdb35a" prot="public" static="no">
        <type>std::vector&lt; Function_ * &gt;</type>
        <definition>typedef std::vector&lt;Function_*&gt; CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::Function_vector</definition>
        <argsstring></argsstring>
        <name>Function_vector</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::Function_vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="103" column="25" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a486b6bda4f4f851929ea6f41f2ff143f" prot="public" static="no">
        <type>BGT::Point_3</type>
        <definition>typedef BGT::Point_3 CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::Point_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="104" column="37" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1aac3838d3c91a28cb788555f38a1c93a4" prot="private" static="no" mutable="no">
        <type>const Function_vector</type>
        <definition>const Function_vector CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::function_vector_</definition>
        <argsstring></argsstring>
        <name>function_vector_</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::function_vector_</qualifiedname>
        <briefdescription>
<para>Functions to wrap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="138" column="25" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a1ace0b5ddedba17a8345dcb9f9d59539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::Implicit_vector_to_labeling_function_wrapper</definition>
        <argsstring>(const std::vector&lt; Function_ * &gt; &amp;v)</argsstring>
        <name>Implicit_vector_to_labeling_function_wrapper</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::Implicit_vector_to_labeling_function_wrapper</qualifiedname>
        <param>
          <type>const std::vector&lt; Function_ * &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="107" column="3" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="107" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1aa38066de069f5172bed823de276c9ad0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::~Implicit_vector_to_labeling_function_wrapper</definition>
        <argsstring>()</argsstring>
        <name>~Implicit_vector_to_labeling_function_wrapper</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::~Implicit_vector_to_labeling_function_wrapper</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="119" column="3" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a806e43619ccf77aa0654e65200859f93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>return_type</type>
        <definition>return_type CGAL::Implicit_vector_to_labeling_function_wrapper&lt; Function_, BGT &gt;::operator()</definition>
        <argsstring>(const Point_3 &amp;p) const</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Implicit_vector_to_labeling_function_wrapper::operator()</qualifiedname>
        <param>
          <type>const Point_3 &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Operator () </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="122" column="15" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="122" bodyend="134"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription></xrefdescription></xrefsect></para>
<para>Wraps a set of implicit function [f1,f2,...] to one function F which takes its values into N.</para>
<para>Let p be a point. F(p) = 0b000000(f2(p)&lt;0)(f1(p)&lt;0)</para>
<para>It can handle at most 8 functions. </para>
    </detaileddescription>
    <location file="CGAL/Implicit_to_labeling_function_wrapper.h" line="98" column="1" bodyfile="CGAL/Implicit_to_labeling_function_wrapper.h" bodystart="99" bodyend="140"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a3294f832e0b7c80c22980865e2bdb35a" prot="public" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>Function_vector</name></member>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1aac3838d3c91a28cb788555f38a1c93a4" prot="private" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>function_vector_</name></member>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a1ace0b5ddedba17a8345dcb9f9d59539" prot="public" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>Implicit_vector_to_labeling_function_wrapper</name></member>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a806e43619ccf77aa0654e65200859f93" prot="public" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>operator()</name></member>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1a486b6bda4f4f851929ea6f41f2ff143f" prot="public" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1aa1ea8ecc2eb6cf52d1fce64c63458b9f" prot="public" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>return_type</name></member>
      <member refid="classCGAL_1_1Implicit__vector__to__labeling__function__wrapper_1aa38066de069f5172bed823de276c9ad0" prot="public" virt="non-virtual"><scope>CGAL::Implicit_vector_to_labeling_function_wrapper</scope><name>~Implicit_vector_to_labeling_function_wrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
