<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL_1_1Mesh__3" kind="namespace" language="C++">
    <compoundname>CGAL::Mesh_3</compoundname>
    <innerclass refid="structCGAL_1_1Mesh__3_1_1Detect__features__in__image" prot="public">CGAL::Mesh_3::Detect_features_in_image</innerclass>
    <innerclass refid="structCGAL_1_1Mesh__3_1_1Detect__features__on__image__bbox" prot="public">CGAL::Mesh_3::Detect_features_on_image_bbox</innerclass>
    <innerclass refid="classCGAL_1_1Mesh__3_1_1Mesh__polyhedron__face" prot="public">CGAL::Mesh_3::Mesh_polyhedron_face</innerclass>
    <innerclass refid="classCGAL_1_1Mesh__3_1_1Mesh__polyhedron__halfedge" prot="public">CGAL::Mesh_3::Mesh_polyhedron_halfedge</innerclass>
    <innerclass refid="classCGAL_1_1Mesh__3_1_1Mesh__polyhedron__items" prot="public">CGAL::Mesh_3::Mesh_polyhedron_items</innerclass>
    <innerclass refid="classCGAL_1_1Mesh__3_1_1Mesh__polyhedron__vertex" prot="public">CGAL::Mesh_3::Mesh_polyhedron_vertex</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="Mesh__polyhedron__3_8h_1acf303cd36ab1b9f8714958c5d254b0db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Integral</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; Integral, Integral &gt;</type>
        <definition>std::pair&lt; Integral, Integral &gt; CGAL::Mesh_3::patch_id_default_value</definition>
        <argsstring>(std::pair&lt; Integral, Integral &gt;)</argsstring>
        <name>patch_id_default_value</name>
        <qualifiedname>CGAL::Mesh_3::patch_id_default_value</qualifiedname>
        <param>
          <type>std::pair&lt; Integral, Integral &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_polyhedron_3.h" line="129" column="1" bodyfile="CGAL/Mesh_polyhedron_3.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="Mesh__polyhedron__3_8h_1a4da744fefd1b325d09bc200b9b271471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Integral</type>
          </param>
        </templateparamlist>
        <type>Integral</type>
        <definition>Integral CGAL::Mesh_3::patch_id_default_value</definition>
        <argsstring>(Integral)</argsstring>
        <name>patch_id_default_value</name>
        <qualifiedname>CGAL::Mesh_3::patch_id_default_value</qualifiedname>
        <param>
          <type>Integral</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_polyhedron_3.h" line="135" column="17" bodyfile="CGAL/Mesh_polyhedron_3.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Functions_1gaa7f5d88727381f5923f1e093dc7de81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type><ref refid="classCGAL_1_1Image__3" kindref="compound">CGAL::Image_3</ref></type>
        <definition>CGAL::Image_3 CGAL::Mesh_3::generate_label_weights</definition>
        <argsstring>(const CGAL::Image_3 &amp;image, const float &amp;sigma)</argsstring>
        <name>generate_label_weights</name>
        <qualifiedname>CGAL::Mesh_3::generate_label_weights</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Image__3" kindref="compound">CGAL::Image_3</ref> &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
<para>Free function that generates a <computeroutput><ref refid="classCGAL_1_1Image__3" kindref="compound">CGAL::Image_3</ref></computeroutput> of weights associated to each voxel of <computeroutput>image</computeroutput>, to make the output mesh surfaces smoother. </para>
        </briefdescription>
        <detaileddescription>
<para>The weights image is generated using the algorithm described by Stalling et al in <ref refid="citelist_1CITEREF_stalling1998weighted" kindref="member">[17]</ref>. The <ulink url="https://itk.org/">Insight toolkit</ulink> is needed to compile this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>the input labeled image from which the weights image is computed. Both will then be used to construct a <computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sigma</parametername>
</parameternamelist>
<parameterdescription>
<para>the standard deviation parameter of the internal Gaussian filter, measured in real-world distances. The size of a voxel (e.g. shortest length or longest length) usually is a good value for this parameter. Note that if <computeroutput>sigma</computeroutput> is too small, the &quot;stair-effect&quot; of meshing from a voxel image can appear. On the other side, if <computeroutput>sigma</computeroutput> is too large, thin volumes (basically one voxel thick) may be lost in the meshing process because the computed weights are too blurry.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <computeroutput><ref refid="classCGAL_1_1Image__3" kindref="compound">CGAL::Image_3</ref></computeroutput> of weights used to build a quality <computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">Labeled_mesh_domain_3</ref></computeroutput>, with the same dimensions as <computeroutput>image</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/generate_label_weights.h" line="315" column="15" bodyfile="CGAL/Mesh_3/generate_label_weights.h" bodystart="315" bodyend="324"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Mesh_polyhedron_3.h" line="31" column="1"/>
  </compounddef>
</doxygen>
