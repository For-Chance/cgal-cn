<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Polyhedral__complex__mesh__domain__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Polyhedral_complex_mesh_domain_3</compoundname>
    <basecompoundref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" prot="public" virt="non-virtual">CGAL::Mesh_domain_with_polyline_features_3&lt; Polyhedral_mesh_domain_3&lt; typename Mesh_polyhedron_3&lt; IGT &gt;::type, IGT &gt; &gt;</basecompoundref>
    <includes local="no">CGAL/Polyhedral_complex_mesh_domain_3.h</includes>
    <templateparamlist>
      <param>
        <type>class IGT</type>
      </param>
      <param>
        <type>class Polyhedron</type>
        <defval>typename <ref refid="structCGAL_1_1Mesh__polyhedron__3" kindref="compound">Mesh_polyhedron_3</ref>&lt;IGT&gt;::type</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1abc7b13b197d280fef12bcd3e9d7dd945" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputPolyhedraIterator</type>
          </param>
          <param>
            <type>typename InputPairOfSubdomainIndicesIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Polyhedral_complex_mesh_domain_3</definition>
        <argsstring>(InputPolyhedraIterator begin, InputPolyhedraIterator end, InputPairOfSubdomainIndicesIterator indices_begin, InputPairOfSubdomainIndicesIterator indices_end)</argsstring>
        <name>Polyhedral_complex_mesh_domain_3</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Polyhedral_complex_mesh_domain_3</qualifiedname>
        <param>
          <type>InputPolyhedraIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputPolyhedraIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>InputPairOfSubdomainIndicesIterator</type>
          <declname>indices_begin</declname>
        </param>
        <param>
          <type>InputPairOfSubdomainIndicesIterator</type>
          <declname>indices_end</declname>
        </param>
        <briefdescription>
<para>constructs a domain defined by a set of polyhedral surfaces, describing a polyhedral complex. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>first iterator on the input polyhedral surfaces </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>past the end iterator on the input polyhedral surfaces </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indices_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>first iterator on the pairs of subdomain indices (two subdomain indices per input polyhedral surface), corresponding to the first input polyhedral surface. Each pair should be ordered as follows : the first (resp. second) element is the index of the subdomain that lies on the positively oriented (resp. negatively oriented) side of the corresponding input polyhedral surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indices_end</parametername>
</parameternamelist>
<parameterdescription>
<para>past the end iterator on the pairs of subdomain indices</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputPolyhedraIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput>, holding <computeroutput>Polyhedron</computeroutput>&apos;s </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputPairOfSubdomainIndicesIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>model of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput>, holding <computeroutput>std::pair&lt;Subdomain_index, Subdomain_index&gt;</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><computeroutput>std::distance(begin, end) == std::distance(indices_begin, indices_end)</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="214" column="3" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="214" bodyend="251"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a300d2862021233942627c8beb9b19b0b" prot="public" static="no">
        <type>Polyhedron_</type>
        <definition>typedef Polyhedron_ CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Polyhedron</definition>
        <argsstring></argsstring>
        <name>Polyhedron</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Polyhedron</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="123" column="23" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1ad78f83322cade9b31c33319459e109a0" prot="public" static="no">
        <type><ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">Mesh_domain_with_polyline_features_3</ref>&lt; <ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">Polyhedral_mesh_domain_3</ref>&lt; Polyhedron, IGT_, TriangleAccessor, int, <ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">Tag_true</ref> &gt; &gt;</type>
        <definition>typedef Mesh_domain_with_polyline_features_3&lt; Polyhedral_mesh_domain_3&lt; Polyhedron, IGT_, TriangleAccessor, int, Tag_true &gt; &gt; CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="126" column="2" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a59ae666142aa9d0e0c989bc0f8e726b3" prot="public" static="no">
        <type>Base::FT</type>
        <definition>typedef Base::FT CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::FT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="137" column="36" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1aa7d7557f132aa836d6c9ddecd6b26255" prot="public" static="no">
        <type>Polyhedron</type>
        <definition>typedef Polyhedron CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Polyhedron_type</definition>
        <argsstring></argsstring>
        <name>Polyhedron_type</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Polyhedron_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="140" column="22" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1aa9e8acc9c5747859dda888c98e985d8a" prot="public" static="no">
        <type>Base::Corner_index</type>
        <definition>typedef Base::Corner_index CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Corner_index</definition>
        <argsstring></argsstring>
        <name>Corner_index</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Corner_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="143" column="47" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a0fba7785e665107d8a0ae83572b26810" prot="public" static="no">
        <type>Base::Curve_index</type>
        <definition>typedef Base::Curve_index CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Curve_index</definition>
        <argsstring></argsstring>
        <name>Curve_index</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Curve_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="144" column="47" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a446ff9e6794c4a27c90ee158c17c0d19" prot="public" static="no">
        <type>Base::Surface_patch_index</type>
        <definition>typedef Base::Surface_patch_index CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Surface_patch_index</definition>
        <argsstring></argsstring>
        <name>Surface_patch_index</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Surface_patch_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="145" column="47" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a0b08badb5a7fdbf15156180c113a4f31" prot="public" static="no">
        <type>Base::Subdomain_index</type>
        <definition>typedef Base::Subdomain_index CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Subdomain_index</definition>
        <argsstring></argsstring>
        <name>Subdomain_index</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Subdomain_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="146" column="47" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a4f09839e432d498d87d93321c147f00a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::detect_features</definition>
        <argsstring>(FT angle_bound=FT(60))</argsstring>
        <name>detect_features</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::detect_features</qualifiedname>
        <param>
          <type>FT</type>
          <declname>angle_bound</declname>
          <defval>FT(60)</defval>
        </param>
        <briefdescription>
<para>detects sharp features and boundaries of the polyhedral components of the complex (including potential internal polyhedra), and inserts them as features of the domain. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>angle_bound</computeroutput> gives the maximum angle (in degrees) between the two normal vectors of adjacent triangles. For an edge of the polyhedron, if the angle between the two normal vectors of its incident facets is bigger than the given bound, then the edge is considered as a feature edge, and inserted as a feature of the domain. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="303" column="8" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a6548fc3268ef23f76b80075450688b5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::detect_borders</definition>
        <argsstring>()</argsstring>
        <name>detect_borders</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::detect_borders</qualifiedname>
        <briefdescription>
<para>detects border edges of the polyhedral components of the complex, and inserts them as features of the domain. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should only be called alone, and not before or after <computeroutput><ref refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a4f09839e432d498d87d93321c147f00a" kindref="member">detect_features()</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="312" column="8" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="312" bodyend="314"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a6f3eaaed6227551c58b4d28a084cde6b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::Polyhedral_complex_mesh_domain_3</definition>
        <argsstring>(const Self &amp;src)</argsstring>
        <name>Polyhedral_complex_mesh_domain_3</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::Polyhedral_complex_mesh_domain_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">Self</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="667" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a0b094aee4615d808e8348e29e2bd605f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">Self</ref> &amp;</type>
        <definition>Self &amp; CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;::operator=</definition>
        <argsstring>(const Self &amp;src)</argsstring>
        <name>operator=</name>
        <qualifiedname>CGAL::Polyhedral_complex_mesh_domain_3::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">Self</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="668" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3" kindref="compound">Polyhedral_complex_mesh_domain_3</ref></computeroutput> implements a domain defined by a collection of polyhedral surfaces, forming a complex. </para>
    </briefdescription>
    <detaileddescription>
<para>The constraints on the complex are:<itemizedlist>
<listitem><para>a polyhedral surface of the complex cannot self-intersect,</para>
</listitem><listitem><para>two polyhedral surfaces of the complex are either disjoint, or share a subset of their border edges.</para>
</listitem></itemizedlist>
</para>
<para>It is a model of the concept <computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput>. It also provides a member function to automatically detect sharp features and boundaries from the input polyhedral surface(s).</para>
<para>The union of the polyhedral surfaces is a non-manifold surface, called the 2D surface of the domain. It is locally manifold, with or without borders, but at the intersections of polyhedral surfaces.</para>
<para>The complement of the 2D surface is decomposed into:<itemizedlist>
<listitem><para>zero, one, or many sub-domains of the mesh domain,</para>
</listitem><listitem><para>plus the exterior of the mesh domain.</para>
</listitem></itemizedlist>
</para>
<para>If the domain has sub-domains, each one must be the union of one or many connected components of the complement of the 2D surface. The sub-domains have indices, of integral type <computeroutput>Subdomain_index</computeroutput>, and the exterior of the mesh domain is associated with the subdomain index <computeroutput>0</computeroutput>, like for any mesh domain in <ref refid="namespaceCGAL" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CGAL</ref>.</para>
<para>Each polyhedral surface is oriented, and has two sides. The positive side is union of the positive side of all of its facets, usually named the &quot;exterior&quot; of the surface. The negative side is the other side. The use of <computeroutput><ref refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3" kindref="compound">Polyhedral_complex_mesh_domain_3</ref></computeroutput> assumes that for each polyhedral surface, the sub-domain indices on both sides are known.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>stands for the type of the input polyhedral surface(s), model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IGT</parametername>
</parameternamelist>
<parameterdescription>
<para>stands for a geometric traits class providing the types and functors required to implement the intersection tests and intersection computations for polyhedral boundary surfaces. This parameter has to be instantiated with a model of the concept <computeroutput><ref refid="classIntersectionGeometricTraits__3" kindref="compound">IntersectionGeometricTraits_3</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">CGAL::Mesh_domain_with_polyline_features_3</ref>&lt;MD&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">CGAL::Polyhedral_mesh_domain_3</ref>&lt;Polyhedron,IGT&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Mesh__polyhedron__3" kindref="compound">CGAL::Mesh_polyhedron_3</ref>&lt;IGT&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::Mesh_domain_with_polyline_features_3&lt; MD &gt;</label>
        <link refid="classCGAL_1_1Mesh__domain__with__polyline__features__3"/>
      </node>
      <node id="1">
        <label>CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;</label>
        <link refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Mesh_domain_with_polyline_features_3&lt; MD &gt;</label>
        <link refid="classCGAL_1_1Mesh__domain__with__polyline__features__3"/>
      </node>
      <node id="1">
        <label>CGAL::Polyhedral_complex_mesh_domain_3&lt; IGT, Polyhedron &gt;</label>
        <link refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Polyhedral_complex_mesh_domain_3.h" line="104" column="1" bodyfile="CGAL/Polyhedral_complex_mesh_domain_3.h" bodystart="120" bodyend="670"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a364109e2a07e005e27cab30cfa334f02" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>add_features</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a625e43ab832eeff1e2acdc71fb07ffa2" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>add_features_and_incidences</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1ad78f83322cade9b31c33319459e109a0" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Base</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1affec9006b8aaac3dde88168ba57ffbc2" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>construct_point_on_curve</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a424539bc4373c0c14aa7628475c5376c" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>corner_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1aa9e8acc9c5747859dda888c98e985d8a" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Corner_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a0fba7785e665107d8a0ae83572b26810" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Curve_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a5e9325cfec29e3e058c08445b05732e4" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>curve_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a54cccf390c7b69d8f7216341495bad4e" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>curve_length</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ac9b259867ac195b8f4dc31187cd86fac" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Curve_segment_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a53dc8687128d150f500c8721df07a227" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>curve_segment_length</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a6548fc3268ef23f76b80075450688b5c" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>detect_borders</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a4f09839e432d498d87d93321c147f00a" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>detect_features</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a3f46ffea7f794c683a902cce9be0ff92" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>distance_sign</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1af33bbc89c488e20635c96a8f10da15e8" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>distance_sign_along_loop</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a59ae666142aa9d0e0c989bc0f8e726b3" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ab5c519a4d93d8e63867fdde9617a5bc3" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>get_corners</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a1fd503f8dc9696d9b9546d97cc3b4079" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>get_curves</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1adae47e68b00279a27285e158242238ca" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>GT</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a32574e8c3c1d8d64266d8752b698efac" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Has_features</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a59941b93a6ac89a7043c3a3daa843a33" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a426cc65495fe7956c7c0db8ad0a7d405" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>index_from_corner_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a33a90c833561f0fd7c665380541add1c" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>index_from_curve_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a81344258ee25f033804a4a808d863dac" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>index_from_subdomain_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ada11883f938b49721f4291a9789f77fd" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>index_from_surface_patch_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1af72f9cf0ffefaf5840e38da4bebd737d" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>is_curve_segment_covered</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a7d27e5dbaf99e9ed77790f0b2498dfaa" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>is_loop</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1aa31fb76d7790b438dfd27062a51b5713" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Mesh_domain_with_polyline_features_3</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a73d7993e120bcc2b3605fe934c395345" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Mesh_domain_with_polyline_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a0b094aee4615d808e8348e29e2bd605f" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a900facf77095f99e656904df75c0d3fc" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1abc7b13b197d280fef12bcd3e9d7dd945" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Polyhedral_complex_mesh_domain_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a6f3eaaed6227551c58b4d28a084cde6b" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Polyhedral_complex_mesh_domain_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a300d2862021233942627c8beb9b19b0b" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Polyhedron</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1aa7d7557f132aa836d6c9ddecd6b26255" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Polyhedron_type</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ac88b63e3a6dfbcbdee6982424249cfa9" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>R</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a0b08badb5a7fdbf15156180c113a4f31" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Subdomain_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a083834f561fd0dbca6326fddfd79fe8e" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>subdomain_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__complex__mesh__domain__3_1a446ff9e6794c4a27c90ee158c17c0d19" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>Surface_patch_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ae33c4612a8a15b5936f9a6c53456a436" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_complex_mesh_domain_3</scope><name>surface_patch_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
