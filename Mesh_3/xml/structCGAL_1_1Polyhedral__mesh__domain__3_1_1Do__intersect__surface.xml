<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface" kind="struct" language="C++" prot="public">
    <compoundname>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface</compoundname>
    <includes local="no">CGAL/Polyhedral_mesh_domain_3.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface_1ad528f1dd8fe7d6a52375e81e2e76b423" prot="private" static="no" mutable="no">
        <type>const <ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">Polyhedral_mesh_domain_3</ref> &amp;</type>
        <definition>const Polyhedral_mesh_domain_3&amp; CGAL::Polyhedral_mesh_domain_3&lt; Polyhedron, IGT &gt;::Do_intersect_surface::r_domain_</definition>
        <argsstring></argsstring>
        <name>r_domain_</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface::r_domain_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_3.h" line="455" column="36" bodyfile="CGAL/Polyhedral_mesh_domain_3.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface_1ac0ab4893d71ddbd736ca56051bba2653" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_3&lt; Polyhedron, IGT &gt;::Do_intersect_surface::Do_intersect_surface</definition>
        <argsstring>(const Polyhedral_mesh_domain_3 &amp;domain)</argsstring>
        <name>Do_intersect_surface</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface::Do_intersect_surface</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">Polyhedral_mesh_domain_3</ref> &amp;</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_3.h" line="433" column="5" bodyfile="CGAL/Polyhedral_mesh_domain_3.h" bodystart="433" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface_1ab162c81ab0c36ee9133b460e58047efd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Query</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; boost::mpl::contains&lt; Allowed_query_types, Query &gt;::value, Surface_patch &gt;</type>
        <definition>std::enable_if_t&lt; boost::mpl::contains&lt; Allowed_query_types, Query &gt;::value, Surface_patch &gt; CGAL::Polyhedral_mesh_domain_3&lt; Polyhedron, IGT &gt;::Do_intersect_surface::operator()</definition>
        <argsstring>(const Query &amp;q) const</argsstring>
        <name>operator()</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface::operator()</qualifiedname>
        <param>
          <type>const Query &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_3.h" line="440" column="5" bodyfile="CGAL/Polyhedral_mesh_domain_3.h" bodystart="440" bodyend="452"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the element <computeroutput>type</computeroutput> intersects properly any of the surface patches describing either the domain boundary or some subdomain boundary. </para>
    </briefdescription>
    <detaileddescription>
<para><computeroutput>Type</computeroutput> is either <computeroutput><ref refid="classCGAL_1_1Segment__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Segment_3</ref></computeroutput>, <computeroutput><ref refid="classCGAL_1_1Ray__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Ray_3</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Line__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">Line_3</ref></computeroutput>. Parameter index is set to the index of the intersected surface patch if <computeroutput>true</computeroutput> is returned and to the default <computeroutput>Surface_patch_index</computeroutput> value otherwise. </para>
    </detaileddescription>
    <location file="CGAL/Polyhedral_mesh_domain_3.h" line="431" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_3.h" bodystart="432" bodyend="456"/>
    <listofallmembers>
      <member refid="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface_1ac0ab4893d71ddbd736ca56051bba2653" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface</scope><name>Do_intersect_surface</name></member>
      <member refid="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface_1ab162c81ab0c36ee9133b460e58047efd" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface</scope><name>operator()</name></member>
      <member refid="structCGAL_1_1Polyhedral__mesh__domain__3_1_1Do__intersect__surface_1ad528f1dd8fe7d6a52375e81e2e76b423" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_3::Do_intersect_surface</scope><name>r_domain_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
