<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Polyhedral_mesh_domain_with_features_3</compoundname>
    <basecompoundref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" prot="public" virt="non-virtual">CGAL::Mesh_domain_with_polyline_features_3&lt; Polyhedral_mesh_domain_3&lt; typename Mesh_polyhedron_3&lt; IGT_ &gt;::type, IGT &gt; &gt;</basecompoundref>
    <includes local="no">CGAL/Polyhedral_mesh_domain_with_features_3.h</includes>
    <templateparamlist>
      <param>
        <type>class IGT</type>
      </param>
      <param>
        <type>class Polyhedron</type>
        <defval>typename <ref refid="structCGAL_1_1Mesh__polyhedron__3" kindref="compound">Mesh_polyhedron_3</ref>&lt;IGT_&gt;::type</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Creation</header>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a41552115cde4e7c05a17df02955c8ba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>(const Polyhedron &amp;bounding_polyhedron)</argsstring>
        <name>Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>bounding_polyhedron</declname>
        </param>
        <briefdescription>
<para>Constructor from a polyhedral surface. </para>
        </briefdescription>
        <detaileddescription>
<para>No feature detection is done at this level. Note that a copy of <computeroutput>bounding_polyhedron</computeroutput> will be done. The polyhedron <computeroutput>bounding_polyhedron</computeroutput> has to be closed and free of intersections. The interior of <computeroutput>bounding_polyhedron</computeroutput> will be meshed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="169" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="169" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a6028cafa6549170749f026f9354d2096" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Constructor from an OFF file. No feature detection is done at this level. Users must read the file into a <computeroutput>Polyhedron</computeroutput> and call the constructor above. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="189" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="189" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a03bb630b104206e106c8db3361114ba2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>(const Polyhedron &amp;polyhedron, const Polyhedron &amp;bounding_polyhedron)</argsstring>
        <name>Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>polyhedron</declname>
        </param>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>bounding_polyhedron</declname>
        </param>
        <briefdescription>
<para>Constructor from a polyhedral surface, and a bounding polyhedral surface. </para>
        </briefdescription>
        <detaileddescription>
<para>The first polyhedron should be entirely included inside <computeroutput>bounding_polyhedron</computeroutput>, which has to be closed and free of intersections. Using this constructor enables to mesh a polyhedral surface which is not closed, or has holes. The inside of <computeroutput>bounding_polyhedron</computeroutput> will be meshed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="220" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="220" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aea9cb8c3128172a8fac9ca70f4873ff4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputPolyhedraPtrIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>(InputPolyhedraPtrIterator begin, InputPolyhedraPtrIterator end)</argsstring>
        <name>Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <param>
          <type>InputPolyhedraPtrIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputPolyhedraPtrIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructor from a sequence of polyhedral surfaces, without a bounding surface. </para>
        </briefdescription>
        <detaileddescription>
<para>The domain will always answer <computeroutput>false</computeroutput> to <computeroutput>is_in_domain()</computeroutput> queries.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputPolyhedraPtrIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> with value type <computeroutput>Polyhedron*</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator for a sequence of pointers to polyhedra </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator for a sequence of pointers to polyhedra </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="254" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="254" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a9a101b70f24d8d06ada4b4c90e190edc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputPolyhedraPtrIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>(InputPolyhedraPtrIterator begin, InputPolyhedraPtrIterator end, const Polyhedron &amp;bounding_polyhedron)</argsstring>
        <name>Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <param>
          <type>InputPolyhedraPtrIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputPolyhedraPtrIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>bounding_polyhedron</declname>
        </param>
        <briefdescription>
<para>Constructor from a sequence of polyhedral surfaces, and a bounding polyhedral surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputPolyhedraPtrIterator</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classForwardIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">ForwardIterator</ref></computeroutput> with value type <computeroutput>Polyhedron*</computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator for a sequence of pointers to polyhedra </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator for a sequence of pointers to polyhedra </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bounding_polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>the bounding surface </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="284" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="284" bodyend="310"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a8264d9a44747be3ed04d292538e6cc6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::detect_features</definition>
        <argsstring>(FT angle_bound=FT(60))</argsstring>
        <name>detect_features</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::detect_features</qualifiedname>
        <param>
          <type>FT</type>
          <declname>angle_bound</declname>
          <defval>FT(60)</defval>
        </param>
        <briefdescription>
<para>detects sharp features and boundaries of the internal bounding polyhedron (and the potential internal polyhedra) and inserts them as features of the domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle_bound</parametername>
</parameternamelist>
<parameterdescription>
<para>gives the maximum angle (in degrees) between the two normal vectors of adjacent triangles. For an edge of a polyhedron, if the angle between the two normal vectors of its incident facets is bigger than the given bound, then the edge is considered as a feature edge. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="336" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ae450b23fbd85646051b31fad7eeb5b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::detect_borders</definition>
        <argsstring>()</argsstring>
        <name>detect_borders</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::detect_borders</qualifiedname>
        <briefdescription>
<para>detects border edges of the bounding polyhedron and inserts them as features of the domain. </para>
        </briefdescription>
        <detaileddescription>
<para>This function should only be called alone, and not before or after <computeroutput>detect_features()</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="346" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="346" bodyend="346"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a83c8be084b11cf2a3bef7a8a23367144" prot="private" static="no">
        <type><ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">Mesh_domain_with_polyline_features_3</ref>&lt; <ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">Polyhedral_mesh_domain_3</ref>&lt; Polyhedron_, IGT_, TriangleAccessor, Patch_id, Use_exact_intersection_construction_tag &gt; &gt;</type>
        <definition>typedef Mesh_domain_with_polyline_features_3&lt; Polyhedral_mesh_domain_3&lt; Polyhedron_, IGT_, TriangleAccessor, Patch_id, Use_exact_intersection_construction_tag &gt; &gt; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="114" column="2" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a0d0629b93b501e813591e0146e820e35" prot="private" static="no">
        <type>boost::adjacency_list&lt; boost::setS, boost::vecS, boost::undirectedS, typename IGT_::Point_3, std::set&lt; typename Base::Surface_patch_index &gt; &gt;</type>
        <definition>typedef boost::adjacency_list&lt; boost::setS, boost::vecS, boost::undirectedS, typename IGT_::Point_3, std::set&lt;typename Base::Surface_patch_index&gt; &gt; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Featured_edges_copy_graph</definition>
        <argsstring></argsstring>
        <name>Featured_edges_copy_graph</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Featured_edges_copy_graph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="121" column="2" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a4a796b22d9b0016b65b6c9e90de1b034" prot="private" static="no">
        <type><ref refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3" kindref="compound">Polyhedral_mesh_domain_with_features_3</ref></type>
        <definition>typedef Polyhedral_mesh_domain_with_features_3 CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Self</definition>
        <argsstring></argsstring>
        <name>Self</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Self</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="421" column="50" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aa740ab76e4b1ab2b2c7a15aca6383713" prot="public" static="no">
        <type>Polyhedron_</type>
        <definition>typedef Polyhedron_ CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedron</definition>
        <argsstring></argsstring>
        <name>Polyhedron</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedron</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="123" column="23" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a080b19acec9fcd16d0dc8ef3e1420502" prot="public" static="no">
        <type>Polyhedron</type>
        <definition>typedef Polyhedron CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedron_type</definition>
        <argsstring></argsstring>
        <name>Polyhedron_type</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedron_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="124" column="22" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a4e698b4cceebf43627f15a37b8ac21c1" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Base::Index</ref></type>
        <definition>typedef Base::Index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Index</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="127" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a30db2cf9ed68d45ed7a7ca1f0dcc97a3" prot="public" static="no">
        <type>Base::Corner_index</type>
        <definition>typedef Base::Corner_index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Corner_index</definition>
        <argsstring></argsstring>
        <name>Corner_index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Corner_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="128" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a7a7bdbe6d2758290bc5cf7c2a9664bf5" prot="public" static="no">
        <type>Base::Curve_index</type>
        <definition>typedef Base::Curve_index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Curve_index</definition>
        <argsstring></argsstring>
        <name>Curve_index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Curve_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="129" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ad0b9bb1ef0ad013d9e5e9ba3269183fe" prot="public" static="no">
        <type>Base::Surface_patch_index</type>
        <definition>typedef Base::Surface_patch_index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Surface_patch_index</definition>
        <argsstring></argsstring>
        <name>Surface_patch_index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Surface_patch_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="130" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a449ef646fcbdca0fc17792eff3483e87" prot="public" static="no">
        <type>Base::Subdomain_index</type>
        <definition>typedef Base::Subdomain_index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Subdomain_index</definition>
        <argsstring></argsstring>
        <name>Subdomain_index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Subdomain_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="131" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a797546e2314179db9b2eb667521741c1" prot="public" static="no">
        <type>Curve_index</type>
        <definition>typedef Curve_index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Curve_segment_index</definition>
        <argsstring></argsstring>
        <name>Curve_segment_index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Curve_segment_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="135" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a630751e361030dedb0459d482bd06b5d" prot="public" static="no">
        <type>boost::property_map&lt; Polyhedron, face_patch_id_t&lt; Patch_id &gt; &gt;::type</type>
        <definition>typedef boost::property_map&lt;Polyhedron,face_patch_id_t&lt;Patch_id&gt;&gt;::type CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Face_patch_id_pmap</definition>
        <argsstring></argsstring>
        <name>Face_patch_id_pmap</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Face_patch_id_pmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="140" column="20" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a2d46411a0897baf7e729b51e2198df12" prot="public" static="no">
        <type>boost::property_traits&lt; Face_patch_id_pmap &gt;::value_type</type>
        <definition>typedef boost::property_traits&lt;Face_patch_id_pmap&gt;::value_type CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::P_id</definition>
        <argsstring></argsstring>
        <name>P_id</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::P_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="142" column="37" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a33dd75408ebae29828e24da3fa0beb36" prot="public" static="no">
        <type>Surface_patch_index</type>
        <definition>typedef Surface_patch_index CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Surface_index</definition>
        <argsstring></argsstring>
        <name>Surface_index</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Surface_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="146" column="47" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1acaca002589bb7467a344609073aab11f" prot="public" static="no">
        <type>Base::R</type>
        <definition>typedef Base::R CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="149" column="36" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a3781704b88810af1da438db3465c1c1f" prot="public" static="no">
        <type>Base::Point_3</type>
        <definition>typedef Base::Point_3 CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Point_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="150" column="36" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a2f519b2dcf4123514ce00bd54c57da7d" prot="public" static="no">
        <type>Base::FT</type>
        <definition>typedef Base::FT CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::FT</definition>
        <argsstring></argsstring>
        <name>FT</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::FT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="152" column="36" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aec99172d310ea75b37d78b7e7c07c98e" prot="public" static="no">
        <type><ref refid="group__PkgSTLExtensionUtilities_1gab3e2296107b5d26c32c8183028a217f1" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_true</ref></type>
        <definition>typedef CGAL::Tag_true CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Has_features</definition>
        <argsstring></argsstring>
        <name>Has_features</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Has_features</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="154" column="36" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ad0848500ea8507c470f96f37de823b2d" prot="public" static="no">
        <type>std::vector&lt; Point_3 &gt;</type>
        <definition>typedef std::vector&lt;Point_3&gt; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Bare_polyline</definition>
        <argsstring></argsstring>
        <name>Bare_polyline</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Bare_polyline</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="156" column="23" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a44727c752724a7acda14694c82da5c61" prot="public" static="no">
        <type>Mesh_3::Polyline_with_context&lt; Surface_patch_index, Curve_index, Bare_polyline &gt;</type>
        <definition>typedef Mesh_3::Polyline_with_context&lt;Surface_patch_index, Curve_index, Bare_polyline &gt; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyline_with_context</definition>
        <argsstring></argsstring>
        <name>Polyline_with_context</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyline_with_context</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="158" column="2" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aeb18fed3f6ac5a06ab6d96e8d1ab93fb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Polyhedron &gt;</type>
        <definition>std::vector&lt;Polyhedron&gt; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::stored_polyhedra</definition>
        <argsstring></argsstring>
        <name>stored_polyhedra</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::stored_polyhedra</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="416" column="15" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aecce5b2bc3c6a37127275e91d268a3fe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::borders_detected_</definition>
        <argsstring></argsstring>
        <name>borders_detected_</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::borders_detected_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="417" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a1f99dd25042bde326c88c0bd12a8c0da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::~Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>()</argsstring>
        <name>~Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::~Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="315" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1adc86798a57c1e59f382463d7b55d5228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; GT_, P_, TA_, Tag_, E_tag_ &gt;::initialize_ts</definition>
        <argsstring>(Polyhedron &amp;p)</argsstring>
        <name>initialize_ts</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::initialize_ts</qualifiedname>
        <param>
          <type>Polyhedron &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="318" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="432" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aeeea1fc6d819778d9c476dc03e91cdc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; GT_, P_, TA_, Tag_, E_tag_ &gt;::detect_borders</definition>
        <argsstring>(std::vector&lt; Polyhedron &gt; &amp;p)</argsstring>
        <name>detect_borders</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::detect_borders</qualifiedname>
        <param>
          <type>std::vector&lt; Polyhedron &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="320" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="534" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ab239d005efcd755199d30ddfa89874ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; GT_, P_, TA_, Tag_, E_tag_ &gt;::detect_features</definition>
        <argsstring>(FT angle_in_degree, std::vector&lt; Polyhedron &gt; &amp;p)</argsstring>
        <name>detect_features</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::detect_features</qualifiedname>
        <param>
          <type>FT</type>
          <declname>angle_in_degree</declname>
        </param>
        <param>
          <type>std::vector&lt; Polyhedron &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="322" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="487" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a4d1d10228c88778cdadd783a435aed58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::add_features</definition>
        <argsstring>(InputIterator first, InputIterator end)</argsstring>
        <name>add_features</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::add_features</qualifiedname>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="classInputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">InputIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="352" column="3" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="352" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a207b536bc0e6ec757e49e5b8ef7d5ee1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; Polyhedron &gt; &amp;</type>
        <definition>const std::vector&lt; Polyhedron &gt; &amp; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::polyhedra</definition>
        <argsstring>() const</argsstring>
        <name>polyhedra</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::polyhedra</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="392" column="21" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a01d77e3ccc73103e48ce5d1e67a025b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Edge_predicate</type>
          </param>
          <param>
            <type>typename P2vmap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::add_featured_edges_to_graph</definition>
        <argsstring>(const Polyhedron &amp;p, const Edge_predicate &amp;pred, Featured_edges_copy_graph &amp;g_copy, P2vmap &amp;p2vmap)</argsstring>
        <name>add_featured_edges_to_graph</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::add_featured_edges_to_graph</qualifiedname>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const Edge_predicate &amp;</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>Featured_edges_copy_graph &amp;</type>
          <declname>g_copy</declname>
        </param>
        <param>
          <type>P2vmap &amp;</type>
          <declname>p2vmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="585" column="40" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="586" bodyend="644"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1affd4ccc1824f380cb878bd3d60f1cac5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::load_from_file</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>load_from_file</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::load_from_file</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="398" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="398" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a244c6196d23f37b80a13c90d09c9dca1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; GT_, P_, TA_, Tag_, E_tag_ &gt;::add_features_from_split_graph_into_polylines</definition>
        <argsstring>(Featured_edges_copy_graph &amp;graph)</argsstring>
        <name>add_features_from_split_graph_into_polylines</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::add_features_from_split_graph_into_polylines</qualifiedname>
        <param>
          <type>Featured_edges_copy_graph &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="408" column="8" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="548" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a52e5548ab0fc665df886be6179036cce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Edge_predicate</type>
          </param>
          <param>
            <type>typename P2Vmap</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::add_featured_edges_to_graph</definition>
        <argsstring>(const Polyhedron &amp;poly, const Edge_predicate &amp;pred, Featured_edges_copy_graph &amp;graph, P2Vmap &amp;p2vmap)</argsstring>
        <name>add_featured_edges_to_graph</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::add_featured_edges_to_graph</qualifiedname>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>poly</declname>
        </param>
        <param>
          <type>const Edge_predicate &amp;</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>Featured_edges_copy_graph &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>P2Vmap &amp;</type>
          <declname>p2vmap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="411" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a9538c5eb370f775ac48bbaf912179e07" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::Polyhedral_mesh_domain_with_features_3</definition>
        <argsstring>(const Self &amp;src)</argsstring>
        <name>Polyhedral_mesh_domain_with_features_3</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::Polyhedral_mesh_domain_with_features_3</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3" kindref="compound">Self</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="422" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a8042cb20803396f7a555204c276c5a5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3" kindref="compound">Self</ref> &amp;</type>
        <definition>Self &amp; CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;::operator=</definition>
        <argsstring>(const Self &amp;src)</argsstring>
        <name>operator=</name>
        <qualifiedname>CGAL::Polyhedral_mesh_domain_with_features_3::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3" kindref="compound">Self</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="423" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3" kindref="compound">Polyhedral_mesh_domain_with_features_3</ref></computeroutput> implements a domain whose boundary is a simplicial polyhedral surface. </para>
    </briefdescription>
    <detaileddescription>
<para>This surface must be free of intersections. It can either be closed, included inside another polyhedral surface which is closed and free of intersections, or open. In the latter case, the meshing process will only take care of the quality of the 1D (features and boundaries) and 2D (surfaces) components of the mesh.</para>
<para>It is a model of the concept <computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput>. It also provides a member function to automatically detect sharp features and boundaries from the input polyhedral surface(s).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>IGT</parametername>
</parameternamelist>
<parameterdescription>
<para>stands for a geometric traits class providing the types and functors required to implement the intersection tests and intersection computations for polyhedral boundary surfaces. This parameter has to be instantiated with a model of the concept <computeroutput><ref refid="classIntersectionGeometricTraits__3" kindref="compound">IntersectionGeometricTraits_3</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Polyhedron</parametername>
</parameternamelist>
<parameterdescription>
<para>stands for the type of the input polyhedral surface(s), model of <computeroutput><ref refid="classFaceListGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceListGraph</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Is model of</term></varlistentry>
<listitem><para><computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Mesh__domain__with__polyline__features__3" kindref="compound">CGAL::Mesh_domain_with_polyline_features_3</ref>&lt;MD&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">CGAL::Polyhedral_mesh_domain_3</ref>&lt;Polyhedron,IGT&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="structCGAL_1_1Mesh__polyhedron__3" kindref="compound">CGAL::Mesh_polyhedron_3</ref>&lt;IGT&gt;</computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CGAL::Mesh_domain_with_polyline_features_3&lt; MD &gt;</label>
        <link refid="classCGAL_1_1Mesh__domain__with__polyline__features__3"/>
      </node>
      <node id="1">
        <label>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;</label>
        <link refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CGAL::Mesh_domain_with_polyline_features_3&lt; MD &gt;</label>
        <link refid="classCGAL_1_1Mesh__domain__with__polyline__features__3"/>
      </node>
      <node id="1">
        <label>CGAL::Polyhedral_mesh_domain_with_features_3&lt; IGT, Polyhedron &gt;</label>
        <link refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CGAL/Polyhedral_mesh_domain_with_features_3.h" line="92" column="1" bodyfile="CGAL/Polyhedral_mesh_domain_with_features_3.h" bodystart="110" bodyend="425"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a52e5548ab0fc665df886be6179036cce" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>add_featured_edges_to_graph</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a01d77e3ccc73103e48ce5d1e67a025b5" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>add_featured_edges_to_graph</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a4d1d10228c88778cdadd783a435aed58" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>add_features</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a625e43ab832eeff1e2acdc71fb07ffa2" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>add_features_and_incidences</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a244c6196d23f37b80a13c90d09c9dca1" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>add_features_from_split_graph_into_polylines</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ad0848500ea8507c470f96f37de823b2d" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Bare_polyline</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a83c8be084b11cf2a3bef7a8a23367144" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Base</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aecce5b2bc3c6a37127275e91d268a3fe" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>borders_detected_</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1affec9006b8aaac3dde88168ba57ffbc2" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>construct_point_on_curve</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a30db2cf9ed68d45ed7a7ca1f0dcc97a3" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Corner_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a424539bc4373c0c14aa7628475c5376c" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>corner_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a5e9325cfec29e3e058c08445b05732e4" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>curve_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a7a7bdbe6d2758290bc5cf7c2a9664bf5" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Curve_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a54cccf390c7b69d8f7216341495bad4e" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>curve_length</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a797546e2314179db9b2eb667521741c1" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Curve_segment_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a53dc8687128d150f500c8721df07a227" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>curve_segment_length</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aeeea1fc6d819778d9c476dc03e91cdc3" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>detect_borders</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ae450b23fbd85646051b31fad7eeb5b55" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>detect_borders</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ab239d005efcd755199d30ddfa89874ee" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>detect_features</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a8264d9a44747be3ed04d292538e6cc6b" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>detect_features</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a3f46ffea7f794c683a902cce9be0ff92" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>distance_sign</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1af33bbc89c488e20635c96a8f10da15e8" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>distance_sign_along_loop</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a630751e361030dedb0459d482bd06b5d" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Face_patch_id_pmap</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a0d0629b93b501e813591e0146e820e35" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Featured_edges_copy_graph</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a2f519b2dcf4123514ce00bd54c57da7d" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>FT</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ab5c519a4d93d8e63867fdde9617a5bc3" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>get_corners</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a1fd503f8dc9696d9b9546d97cc3b4079" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>get_curves</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1adae47e68b00279a27285e158242238ca" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>GT</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aec99172d310ea75b37d78b7e7c07c98e" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Has_features</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a4e698b4cceebf43627f15a37b8ac21c1" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a426cc65495fe7956c7c0db8ad0a7d405" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>index_from_corner_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a33a90c833561f0fd7c665380541add1c" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>index_from_curve_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a81344258ee25f033804a4a808d863dac" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>index_from_subdomain_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ada11883f938b49721f4291a9789f77fd" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>index_from_surface_patch_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1adc86798a57c1e59f382463d7b55d5228" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>initialize_ts</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1af72f9cf0ffefaf5840e38da4bebd737d" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>is_curve_segment_covered</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a7d27e5dbaf99e9ed77790f0b2498dfaa" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>is_loop</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1affd4ccc1824f380cb878bd3d60f1cac5" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>load_from_file</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1aa31fb76d7790b438dfd27062a51b5713" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Mesh_domain_with_polyline_features_3</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a73d7993e120bcc2b3605fe934c395345" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Mesh_domain_with_polyline_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a8042cb20803396f7a555204c276c5a5c" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>operator=</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a2d46411a0897baf7e729b51e2198df12" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>P_id</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a3781704b88810af1da438db3465c1c1f" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Point_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a207b536bc0e6ec757e49e5b8ef7d5ee1" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>polyhedra</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a41552115cde4e7c05a17df02955c8ba5" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedral_mesh_domain_with_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a6028cafa6549170749f026f9354d2096" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedral_mesh_domain_with_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a03bb630b104206e106c8db3361114ba2" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedral_mesh_domain_with_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aea9cb8c3128172a8fac9ca70f4873ff4" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedral_mesh_domain_with_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a9a101b70f24d8d06ada4b4c90e190edc" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedral_mesh_domain_with_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a9538c5eb370f775ac48bbaf912179e07" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedral_mesh_domain_with_features_3</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aa740ab76e4b1ab2b2c7a15aca6383713" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedron</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a080b19acec9fcd16d0dc8ef3e1420502" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyhedron_type</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a44727c752724a7acda14694c82da5c61" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Polyline_with_context</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1acaca002589bb7467a344609073aab11f" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>R</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a4a796b22d9b0016b65b6c9e90de1b034" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Self</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1aeb18fed3f6ac5a06ab6d96e8d1ab93fb" prot="private" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>stored_polyhedra</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1a083834f561fd0dbca6326fddfd79fe8e" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>subdomain_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a449ef646fcbdca0fc17792eff3483e87" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Subdomain_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a33dd75408ebae29828e24da3fa0beb36" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Surface_index</name></member>
      <member refid="classCGAL_1_1Mesh__domain__with__polyline__features__3_1ae33c4612a8a15b5936f9a6c53456a436" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>surface_patch_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1ad0b9bb1ef0ad013d9e5e9ba3269183fe" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>Surface_patch_index</name></member>
      <member refid="classCGAL_1_1Polyhedral__mesh__domain__with__features__3_1a1f99dd25042bde326c88c0bd12a8c0da" prot="public" virt="non-virtual"><scope>CGAL::Polyhedral_mesh_domain_with_features_3</scope><name>~Polyhedral_mesh_domain_with_features_3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
