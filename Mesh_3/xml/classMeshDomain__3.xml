<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classMeshDomain__3" kind="class" language="C++" prot="public">
    <compoundname>MeshDomain_3</compoundname>
    <includes local="no">Concepts/MeshDomain_3.h</includes>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <memberdef kind="typedef" id="classMeshDomain__3_1ab3785dcfd92ab85f9d090fef7864fc4d" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>MeshDomain_3::R</qualifiedname>
        <briefdescription>
<para>Geometric traits class. </para>
        </briefdescription>
        <detaileddescription>
<para>This type is defined to ensure compatibility with <computeroutput><ref refid="structCGAL_1_1Kernel__traits" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Kernel_traits</ref>&lt;T&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="54" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a323f0a4cb87177d3eb507c7d84f54bac" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Point_3</definition>
        <argsstring></argsstring>
        <name>Point_3</name>
        <qualifiedname>MeshDomain_3::Point_3</qualifiedname>
        <briefdescription>
<para>Point type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="59" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a22e0ab297d0d111b022f846fb4cf38be" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Segment_3</definition>
        <argsstring></argsstring>
        <name>Segment_3</name>
        <qualifiedname>MeshDomain_3::Segment_3</qualifiedname>
        <briefdescription>
<para>Segment type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="64" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a26ad06cb55692483c8620f9f491174c8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Ray_3</definition>
        <argsstring></argsstring>
        <name>Ray_3</name>
        <qualifiedname>MeshDomain_3::Ray_3</qualifiedname>
        <briefdescription>
<para>Ray type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="69" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a39b06d546b6c4d8046da14a305895d82" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Line_3</definition>
        <argsstring></argsstring>
        <name>Line_3</name>
        <qualifiedname>MeshDomain_3::Line_3</qualifiedname>
        <briefdescription>
<para>Line type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="74" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a6a5d8720b0e3fdc00674e56e591bc1ab" prot="public" static="no">
        <type><ref refid="group__PkgSTLExtensionUtilities_1ga89d5ecf1540b2ec0a2bf5dd003e186d0" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::Tag_false</ref></type>
        <definition>typedef CGAL::Tag_false MeshDomain_3::Has_features</definition>
        <argsstring></argsstring>
        <name>Has_features</name>
        <qualifiedname>MeshDomain_3::Has_features</qualifiedname>
        <briefdescription>
<para>A type to distinguish <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput> models from <computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput> models. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="80" column="25" bodyfile="Concepts/MeshDomain_3.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a30d50e8d38bee7db92b4ec0f813e8e53" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Subdomain_index</definition>
        <argsstring></argsstring>
        <name>Subdomain_index</name>
        <qualifiedname>MeshDomain_3::Subdomain_index</qualifiedname>
        <briefdescription>
<para>Type of indices for subdomains of the input domain. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be a model of <ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref>, <ref refid="classAssignable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Assignable</ref>, <ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref> and <ref refid="classEqualityComparable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">EqualityComparable</ref>. The default constructed value must match the label of the exterior of the domain (which contains at least the unbounded component). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="89" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1aca73a623abfca9f06942bfd11c7d01b8" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Surface_patch_index</definition>
        <argsstring></argsstring>
        <name>Surface_patch_index</name>
        <qualifiedname>MeshDomain_3::Surface_patch_index</qualifiedname>
        <briefdescription>
<para>Type of indices for surface patches (boundaries and interfaces) of the input domain. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be a model of <ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref>, <ref refid="classAssignable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Assignable</ref>, <ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref> and <ref refid="classEqualityComparable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">EqualityComparable</ref>. The default constructed value must be the index value assigned to a non surface facet. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="99" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Index</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <qualifiedname>MeshDomain_3::Index</qualifiedname>
        <briefdescription>
<para>Type of indices to be stored at mesh vertices to characterize the lowest dimensional face of the input complex on which the vertex lies. </para>
        </briefdescription>
        <detaileddescription>
<para>Must be a model of <ref refid="classCopyConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">CopyConstructible</ref>, <ref refid="classAssignable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Assignable</ref>, <ref refid="classDefaultConstructible" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">DefaultConstructible</ref> and <ref refid="classEqualityComparable" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">EqualityComparable</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="108" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a60b9ed345f8a92f7629d97936e2ec6ce" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="classMeshDomain__3_1a323f0a4cb87177d3eb507c7d84f54bac" kindref="member">Point_3</ref>, <ref refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" kindref="member">Index</ref>, int &gt;</type>
        <definition>typedef std::tuple&lt;Point_3, Index, int&gt; MeshDomain_3::Intersection</definition>
        <argsstring></argsstring>
        <name>Intersection</name>
        <qualifiedname>MeshDomain_3::Intersection</qualifiedname>
        <briefdescription>
<para>Returns type of <computeroutput>Construct_intersection</computeroutput> queries. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>int</computeroutput> represents the dimension of the lower dimensional face of the input complex on which the intersection point lies and <computeroutput>Index</computeroutput> is the index of this face. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="116" column="20" bodyfile="Concepts/MeshDomain_3.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1abcf45d5a98576cad24711008e940b98f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Construct_initial_points</definition>
        <argsstring></argsstring>
        <name>Construct_initial_points</name>
        <qualifiedname>MeshDomain_3::Construct_initial_points</qualifiedname>
        <briefdescription>
<para>A function object to construct a set of initial points on the surface of the domain. </para>
        </briefdescription>
        <detaileddescription>
<para>Provides the following operators:</para>
<para><computeroutput>template&lt;typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref>&gt;</computeroutput> <linebreak/>
 <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> operator()(OutputIterator pts)</computeroutput></para>
<para><computeroutput>template&lt;typename <ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref>&gt;</computeroutput> <linebreak/>
 <computeroutput><ref refid="classOutputIterator" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">OutputIterator</ref> operator()(OutputIterator pts, int n)</computeroutput></para>
<para>Those two operators output a set of (<computeroutput>n</computeroutput>) surface points to the output iterator <computeroutput>pts</computeroutput>, as objects of type <computeroutput>std::pair&lt;Point_3, Index&gt;</computeroutput>. If <computeroutput>n</computeroutput> is not given, the functor must provide enough points to initialize the mesh generation process. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="136" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1a1f3bc4d537f5006ebb9f798a7611d484" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Is_in_domain</definition>
        <argsstring></argsstring>
        <name>Is_in_domain</name>
        <qualifiedname>MeshDomain_3::Is_in_domain</qualifiedname>
        <briefdescription>
<para>A function object to query whether a point is in the input domain or not. </para>
        </briefdescription>
        <detaileddescription>
<para>In the positive case, it outputs the subdomain which includes the query point. Provides the operator:</para>
<para><computeroutput>std::optional&lt;Subdomain_index&gt; operator()(Point_3 p)</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="145" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1afb3faad276fea4f39269d9dc27faf8a5" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Do_intersect_surface</definition>
        <argsstring></argsstring>
        <name>Do_intersect_surface</name>
        <qualifiedname>MeshDomain_3::Do_intersect_surface</qualifiedname>
        <briefdescription>
<para>A function object which answers intersection queries between the surface patches of the domain and objects of type <computeroutput>Segment_3</computeroutput>, <computeroutput>Ray_3</computeroutput> or <computeroutput>Line_3</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Provides the operators:</para>
<para><computeroutput>std::optional&lt;Surface_patch_index&gt; operator()(Segment_3 s)</computeroutput></para>
<para><computeroutput>std::optional&lt;Surface_patch_index&gt; operator()(Ray_3 r)</computeroutput></para>
<para><computeroutput>std::optional&lt;Surface_patch_index&gt; operator()(Line_3 l)</computeroutput></para>
<para>The return type of the operators tell whether or not the query intersects a surface patch. In the positive case, it provides (through <ref refid="group__Kernel__operator__prod_1ga8427cff04588dc338b8acf3e1b116dce" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">operator*()</ref>) the <computeroutput>Surface_patch_index</computeroutput> of one of the intersected surface patches. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="163" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMeshDomain__3_1abf5e2d0c259135514d8cfa2394f7781f" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type MeshDomain_3::Construct_intersection</definition>
        <argsstring></argsstring>
        <name>Construct_intersection</name>
        <qualifiedname>MeshDomain_3::Construct_intersection</qualifiedname>
        <briefdescription>
<para>A function object to construct the intersection between an object of type <computeroutput>Segment_3</computeroutput>, <computeroutput>Ray_3</computeroutput> or <computeroutput>Line_3</computeroutput> and an interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Provides the operators:</para>
<para><computeroutput>Intersection operator()(Segment_3 s)</computeroutput></para>
<para><computeroutput>Intersection operator()(Ray_3 r)</computeroutput></para>
<para><computeroutput>Intersection operator()(Line_3 l)</computeroutput> <simplesect kind="pre"><para>do_intersect_surface(s/r/l) == true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="177" column="26" bodyfile="Concepts/MeshDomain_3.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Bounding box</header>
      <description><para>Since CGAL-4.8, a model of <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput> must provide a function providing a bounding box of the domain. </para>
</description>
      <memberdef kind="function" id="classMeshDomain__3_1a6e9137af1d710bd6fe157c9958641a92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Bbox_3</type>
        <definition>Bbox_3 MeshDomain_3::bbox</definition>
        <argsstring>() const</argsstring>
        <name>bbox</name>
        <qualifiedname>MeshDomain_3::bbox</qualifiedname>
        <briefdescription>
<para>Returns a bounding box of the domain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="187" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operations</header>
      <description><para>The following functions give access to the function objects: </para>
</description>
      <memberdef kind="function" id="classMeshDomain__3_1a469359bc9240cc1afe4bf2a70ae4c738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1abcf45d5a98576cad24711008e940b98f" kindref="member">Construct_initial_points</ref></type>
        <definition>Construct_initial_points MeshDomain_3::construct_initial_points_object</definition>
        <argsstring>()</argsstring>
        <name>construct_initial_points_object</name>
        <qualifiedname>MeshDomain_3::construct_initial_points_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="197" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classMeshDomain__3_1aeee0915777ad4c4c79a0a851bd6b67ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1a1f3bc4d537f5006ebb9f798a7611d484" kindref="member">Is_in_domain</ref></type>
        <definition>Is_in_domain MeshDomain_3::is_in_domain_object</definition>
        <argsstring>()</argsstring>
        <name>is_in_domain_object</name>
        <qualifiedname>MeshDomain_3::is_in_domain_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="202" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classMeshDomain__3_1a3bb543734d968244f69c987f12197219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1afb3faad276fea4f39269d9dc27faf8a5" kindref="member">Do_intersect_surface</ref></type>
        <definition>Do_intersect_surface MeshDomain_3::do_intersect_surface_object</definition>
        <argsstring>()</argsstring>
        <name>do_intersect_surface_object</name>
        <qualifiedname>MeshDomain_3::do_intersect_surface_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="207" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classMeshDomain__3_1abe6277e48c8c96c8448e91cbfcfe4b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1abf5e2d0c259135514d8cfa2394f7781f" kindref="member">Construct_intersection</ref></type>
        <definition>Construct_intersection MeshDomain_3::construct_intersection_object</definition>
        <argsstring>()</argsstring>
        <name>construct_intersection_object</name>
        <qualifiedname>MeshDomain_3::construct_intersection_object</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="212" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Index Conversion</header>
      <description><para>These methods are designed to convert indices: </para>
</description>
      <memberdef kind="function" id="classMeshDomain__3_1af6ab035cf46011121a78a2525d8776f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" kindref="member">Index</ref></type>
        <definition>Index MeshDomain_3::index_from_surface_patch_index</definition>
        <argsstring>(Surface_patch_index surface_patch_index)</argsstring>
        <name>index_from_surface_patch_index</name>
        <qualifiedname>MeshDomain_3::index_from_surface_patch_index</qualifiedname>
        <param>
          <type><ref refid="classMeshDomain__3_1aca73a623abfca9f06942bfd11c7d01b8" kindref="member">Surface_patch_index</ref></type>
          <declname>surface_patch_index</declname>
        </param>
        <briefdescription>
<para>Returns the index to be stored at a vertex lying on the surface patch identified by <computeroutput>surface_patch_index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="224" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classMeshDomain__3_1a425cfc034a428806de9ddb5eccd914a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" kindref="member">Index</ref></type>
        <definition>Index MeshDomain_3::index_from_subdomain_index</definition>
        <argsstring>(Subdomain_index subdomain_index)</argsstring>
        <name>index_from_subdomain_index</name>
        <qualifiedname>MeshDomain_3::index_from_subdomain_index</qualifiedname>
        <param>
          <type><ref refid="classMeshDomain__3_1a30d50e8d38bee7db92b4ec0f813e8e53" kindref="member">Subdomain_index</ref></type>
          <declname>subdomain_index</declname>
        </param>
        <briefdescription>
<para>Returns the index to be stored at a vertex lying in the subdomain identified by <computeroutput>subdomain_index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="230" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classMeshDomain__3_1a01fee118b937e10f74ae87757996faa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1aca73a623abfca9f06942bfd11c7d01b8" kindref="member">Surface_patch_index</ref></type>
        <definition>Surface_patch_index MeshDomain_3::surface_patch_index</definition>
        <argsstring>(Index index)</argsstring>
        <name>surface_patch_index</name>
        <qualifiedname>MeshDomain_3::surface_patch_index</qualifiedname>
        <param>
          <type><ref refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" kindref="member">Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>Surface_patch_index</computeroutput> of the surface patch where lies a vertex with dimension 2 and index <computeroutput>index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="236" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classMeshDomain__3_1a30d824d127514b64dfb1a62141a40376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMeshDomain__3_1a30d50e8d38bee7db92b4ec0f813e8e53" kindref="member">Subdomain_index</ref></type>
        <definition>Subdomain_index MeshDomain_3::subdomain_index</definition>
        <argsstring>(Index index)</argsstring>
        <name>subdomain_index</name>
        <qualifiedname>MeshDomain_3::subdomain_index</qualifiedname>
        <param>
          <type><ref refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" kindref="member">Index</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the index of the subdomain containing a vertex with dimension 3 and index <computeroutput>index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Concepts/MeshDomain_3.h" line="242" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The concept <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput> describes the knowledge required on the object to be discretized. The concept <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput> is the concept to be used when the input domain does not have <formula id="5">$ 0$</formula> or <formula id="4">$ 1$</formula>-dimensional features that need to be accurately approximated by the mesh. In such a case, the queries issued by the meshing process concern only the faces of the input domain with dimension <formula id="6">$ 3$</formula> and <formula id="7">$ 2$</formula>, that are respectively called <emphasis>subdomains</emphasis> and <emphasis>surface patches</emphasis>. </para>
    </briefdescription>
    <detaileddescription>
<para></para>
<para>More specifically the concept <computeroutput><ref refid="classMeshDomain__3" kindref="compound">MeshDomain_3</ref></computeroutput> provides a method to localize a point with respect to the input domain and its subdomains. Moreover, as the concept <computeroutput><ref refid="classSurfaceMeshTraits__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Surface_mesher.tag">SurfaceMeshTraits_3</ref></computeroutput>, it also provides predicates to test whether a query segment (or a ray, or a line) intersects the boundary of the domain or of the subdomains, and constructors to compute some intersection point if any. It also includes a method able to provide a small set of initial points on the boundary.</para>
<para>In the following we consider only proper intersection with the domain and subdomain boundaries. A segment, ray or line is said to intersect properly the domain boundary (resp. a subdomain boundary) if it includes points which are strictly inside and strictly outside the domain (resp. the subdomain).</para>
<para><variablelist>
<varlistentry><term>Has models</term></varlistentry>
<listitem><para></para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Polyhedral__mesh__domain__3" kindref="compound">CGAL::Polyhedral_mesh_domain_3</ref>&lt;Polyhedron,IGT&gt;</computeroutput> </para>
</listitem>
<varlistentry><term></term></varlistentry>
<listitem><para><computeroutput><ref refid="classCGAL_1_1Labeled__mesh__domain__3" kindref="compound">CGAL::Labeled_mesh_domain_3</ref>&lt;BGT&gt;</computeroutput> </para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="classMeshVertexBase__3" kindref="compound">MeshVertexBase_3</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classMeshCellBase__3" kindref="compound">MeshCellBase_3</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="Concepts/MeshDomain_3.h" line="44" column="1" bodyfile="Concepts/MeshDomain_3.h" bodystart="44" bodyend="246"/>
    <listofallmembers>
      <member refid="classMeshDomain__3_1a6e9137af1d710bd6fe157c9958641a92" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>bbox</name></member>
      <member refid="classMeshDomain__3_1abcf45d5a98576cad24711008e940b98f" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Construct_initial_points</name></member>
      <member refid="classMeshDomain__3_1a469359bc9240cc1afe4bf2a70ae4c738" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>construct_initial_points_object</name></member>
      <member refid="classMeshDomain__3_1abf5e2d0c259135514d8cfa2394f7781f" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Construct_intersection</name></member>
      <member refid="classMeshDomain__3_1abe6277e48c8c96c8448e91cbfcfe4b0a" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>construct_intersection_object</name></member>
      <member refid="classMeshDomain__3_1afb3faad276fea4f39269d9dc27faf8a5" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Do_intersect_surface</name></member>
      <member refid="classMeshDomain__3_1a3bb543734d968244f69c987f12197219" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>do_intersect_surface_object</name></member>
      <member refid="classMeshDomain__3_1a6a5d8720b0e3fdc00674e56e591bc1ab" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Has_features</name></member>
      <member refid="classMeshDomain__3_1a316834c2980ad726dd3497b138feaca4" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Index</name></member>
      <member refid="classMeshDomain__3_1a425cfc034a428806de9ddb5eccd914a7" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>index_from_subdomain_index</name></member>
      <member refid="classMeshDomain__3_1af6ab035cf46011121a78a2525d8776f6" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>index_from_surface_patch_index</name></member>
      <member refid="classMeshDomain__3_1a60b9ed345f8a92f7629d97936e2ec6ce" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Intersection</name></member>
      <member refid="classMeshDomain__3_1a1f3bc4d537f5006ebb9f798a7611d484" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Is_in_domain</name></member>
      <member refid="classMeshDomain__3_1aeee0915777ad4c4c79a0a851bd6b67ff" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>is_in_domain_object</name></member>
      <member refid="classMeshDomain__3_1a39b06d546b6c4d8046da14a305895d82" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Line_3</name></member>
      <member refid="classMeshDomain__3_1a323f0a4cb87177d3eb507c7d84f54bac" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Point_3</name></member>
      <member refid="classMeshDomain__3_1ab3785dcfd92ab85f9d090fef7864fc4d" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>R</name></member>
      <member refid="classMeshDomain__3_1a26ad06cb55692483c8620f9f491174c8" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Ray_3</name></member>
      <member refid="classMeshDomain__3_1a22e0ab297d0d111b022f846fb4cf38be" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Segment_3</name></member>
      <member refid="classMeshDomain__3_1a30d50e8d38bee7db92b4ec0f813e8e53" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Subdomain_index</name></member>
      <member refid="classMeshDomain__3_1a30d824d127514b64dfb1a62141a40376" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>subdomain_index</name></member>
      <member refid="classMeshDomain__3_1aca73a623abfca9f06942bfd11c7d01b8" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>Surface_patch_index</name></member>
      <member refid="classMeshDomain__3_1a01fee118b937e10f74ae87757996faa4" prot="public" virt="non-virtual"><scope>MeshDomain_3</scope><name>surface_patch_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
