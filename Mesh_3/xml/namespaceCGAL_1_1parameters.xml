<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL_1_1parameters" kind="namespace" language="C++">
    <compoundname>CGAL::parameters</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga666e751a1518b97a63ff2d0e01a1008b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::manifold</definition>
        <argsstring>()</argsstring>
        <name>manifold</name>
        <qualifiedname>CGAL::parameters::manifold</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga666e751a1518b97a63ff2d0e01a1008b" kindref="member">parameters::manifold()</ref></computeroutput> is used to drive the meshing algorithm for surfaces. </para>
        </briefdescription>
        <detaileddescription>
<para>It ensures that the surface of the output mesh is a manifold surface without boundaries. The manifold property of the output mesh can be achieved only if the input surface is a manifold. Note that the meshing algorithm provably terminates only if the input sharp edges have been protected, using the feature protection (see <ref refid="index_1Mesh_3Protectionof0and1dimensionalExposed" kindref="member">Protection of 0 and 1-dimensional Exposed Features</ref>).</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga6392d76fc574edf9de766c6806f0741c" kindref="member">CGAL::parameters::manifold_with_boundary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga910ada4d26130095019315acae35e601" kindref="member">CGAL::parameters::non_manifold()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="23" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="23" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga910ada4d26130095019315acae35e601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::non_manifold</definition>
        <argsstring>()</argsstring>
        <name>non_manifold</name>
        <qualifiedname>CGAL::parameters::non_manifold</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga910ada4d26130095019315acae35e601" kindref="member">parameters::non_manifold()</ref></computeroutput> is used to drive the meshing algorithm for surfaces. </para>
        </briefdescription>
        <detaileddescription>
<para>It does not ensure that the surface of the output mesh is a manifold surface. The manifold property of the output mesh might nevertheless result from an appropriate choice of meshing criteria. <simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga6392d76fc574edf9de766c6806f0741c" kindref="member">CGAL::parameters::manifold_with_boundary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga666e751a1518b97a63ff2d0e01a1008b" kindref="member">CGAL::parameters::manifold()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="38" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="38" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga6392d76fc574edf9de766c6806f0741c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::manifold_with_boundary</definition>
        <argsstring>()</argsstring>
        <name>manifold_with_boundary</name>
        <qualifiedname>CGAL::parameters::manifold_with_boundary</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga6392d76fc574edf9de766c6806f0741c" kindref="member">parameters::manifold_with_boundary()</ref></computeroutput> is used to drive the meshing algorithm for surfaces. </para>
        </briefdescription>
        <detaileddescription>
<para>It ensures that the surface of the output mesh is a manifold surface which may have boundaries. The manifold property of the output mesh can be achieved only if the input surface is a manifold. Note that the meshing algorithm provably terminates only if the input sharp edges have been protected, using the feature protection (see <ref refid="index_1Mesh_3Protectionof0and1dimensionalExposed" kindref="member">Protection of 0 and 1-dimensional Exposed Features</ref>).</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga910ada4d26130095019315acae35e601" kindref="member">CGAL::parameters::non_manifold()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga666e751a1518b97a63ff2d0e01a1008b" kindref="member">CGAL::parameters::manifold()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="58" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="58" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga09f46cfd7b3364794e767755f4191862" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::exude</definition>
        <argsstring>(const Named_function_parameters &amp;np=parameters::default_values())</argsstring>
        <name>exude</name>
        <qualifiedname>CGAL::parameters::exude</qualifiedname>
        <param>
          <type>const Named_function_parameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga09f46cfd7b3364794e767755f4191862" kindref="member">parameters::exude()</ref></computeroutput> enables the user to trigger a call to <computeroutput><ref refid="group__PkgMesh3Functions_1gab295d7888d08a4679b79d9349cf5b16d" kindref="member">exude_mesh_3()</ref></computeroutput> in the <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput> mesh generation functions. </para>
        </briefdescription>
        <detaileddescription>
<para>It also enables the user to pass parameters to the optimization function <computeroutput><ref refid="group__PkgMesh3Functions_1gab295d7888d08a4679b79d9349cf5b16d" kindref="member">exude_mesh_3()</ref></computeroutput> through these mesh generation functions.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>time_limit</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is used to set up, in seconds, a CPU time limit after which the optimization process is stopped. This time is measured using the <computeroutput>Real_timer</computeroutput> class. The default value is 0 and means that there is no time limit. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>time_limit &gt;= 0</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>sliver_bound</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is designed to give, in degrees, a targeted lower bound on dihedral angles of mesh cells. The exudation process considers in turn all the mesh cells that have a smallest dihedral angle less than sliver_bound and tries to make them disappear by weighting their vertices. The optimization process stops when every cell in the mesh achieves this quality. The default value is 0 and means that there is no targeted bound: the exuder then runs as long as it can improve the smallest dihedral angles of the set of cells incident to some vertices. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0 &lt;= sliver_bound &lt;= 180</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>with<sp/>an<sp/>exudation<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga09f46cfd7b3364794e767755f4191862" kindref="member">parameters::exude</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3</ref>(c3t3,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga09f46cfd7b3364794e767755f4191862" kindref="member">parameters::exude</ref>(parameters::time_limit(10)));</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1gab24d8652fbb6ae045e989769c5bc69f0" kindref="member">CGAL::parameters::no_exude()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gab295d7888d08a4679b79d9349cf5b16d" kindref="member">CGAL::exude_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="114" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="114" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1gaf2aaad1efc924b8d96992a85334f0ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::features</definition>
        <argsstring>()</argsstring>
        <name>features</name>
        <qualifiedname>CGAL::parameters::features</qualifiedname>
        <briefdescription>
<para>Provides an option indicating that 0 and 1-dimensional features have to be taken into account (the domain must be a model of <computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
<para>This is the default behavior when the domain is a model of <computeroutput><ref refid="classMeshDomainWithFeatures__3" kindref="compound">MeshDomainWithFeatures_3</ref></computeroutput>.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1gab6c227cc0baf003108979eef46cf430d" kindref="member">CGAL::parameters::no_features()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="129" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="129" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1gae8754fd84eee75700656e4459f3a515d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::lloyd</definition>
        <argsstring>(const Named_function_parameters &amp;np=parameters::default_values())</argsstring>
        <name>lloyd</name>
        <qualifiedname>CGAL::parameters::lloyd</qualifiedname>
        <param>
          <type>const Named_function_parameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1gae8754fd84eee75700656e4459f3a515d" kindref="member">parameters::lloyd()</ref></computeroutput> enables the user to trigger a call of <computeroutput><ref refid="group__PkgMesh3Functions_1ga833cd5f487e406a46106028b9ac0ee0b" kindref="member">lloyd_optimize_mesh_3()</ref></computeroutput> in the mesh generation functions <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>It also enables the user to pass parameters to the optimization function <computeroutput><ref refid="group__PkgMesh3Functions_1ga833cd5f487e406a46106028b9ac0ee0b" kindref="member">lloyd_optimize_mesh_3()</ref></computeroutput> through these mesh generation functions.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>time_limit</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>to set up, in seconds, a CPU time limit after which the optimization process is stopped. This time is measured using <computeroutput>CGAL::Real_timer</computeroutput>. 0 means that there is no time limit. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>time_limit &gt;= 0</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>max_iteration_number</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>limit on the number of performed iterations. 0 means that there is no limit on the number of performed iterations. </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>max_iteration_number &gt;=0</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>int</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>freeze_bound</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>designed to reduce running time of each optimization iteration. Any vertex that has a displacement less than a given fraction of the length of its shortest incident edge, is frozen (i.e. is not relocated). The parameter <computeroutput>freeze_bound</computeroutput> gives the threshold ratio. If it is set to 0, freezing of vertices is disabled. </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0&lt;= freeze_bound &lt;=1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.01 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>convergence</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>threshold ratio of stopping criterion based on convergence: the optimization process is stopped when at the last iteration the displacement of any vertex is less than a given fraction of the length of the shortest edge incident to that vertex. </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0 &lt;=convergence &lt;= 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.02 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>do_freeze</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>completes the <computeroutput>freeze_bound</computeroutput> parameter. If it is set to <computeroutput>true</computeroutput> (default value), frozen vertices will not move anymore in next iterations. Otherwise, at each iteration, any vertex that moves, unfreezes all its incident vertices. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>bool</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>true </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>with<sp/>lloyd<sp/>optimization<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1gae8754fd84eee75700656e4459f3a515d" kindref="member">parameters::lloyd</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3</ref>(c3t3,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1gae8754fd84eee75700656e4459f3a515d" kindref="member">parameters::lloyd</ref>(parameters::time_limit(10)));</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga8bd27303eebeb84a2fa70fbb3aa8a56c" kindref="member">CGAL::parameters::no_lloyd()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1ga833cd5f487e406a46106028b9ac0ee0b" kindref="member">CGAL::lloyd_optimize_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="208" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="208" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1gab24d8652fbb6ae045e989769c5bc69f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::no_exude</definition>
        <argsstring>()</argsstring>
        <name>no_exude</name>
        <qualifiedname>CGAL::parameters::no_exude</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1gab24d8652fbb6ae045e989769c5bc69f0" kindref="member">parameters::no_exude()</ref></computeroutput> enables the user to tell the mesh generation functions <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput> that no exudation must be done. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>without<sp/>exudation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1gab24d8652fbb6ae045e989769c5bc69f0" kindref="member">parameters::no_exude</ref>());</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga09f46cfd7b3364794e767755f4191862" kindref="member">CGAL::parameters::exude()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gab295d7888d08a4679b79d9349cf5b16d" kindref="member">CGAL::exude_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="231" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="231" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1gab6c227cc0baf003108979eef46cf430d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::no_features</definition>
        <argsstring>()</argsstring>
        <name>no_features</name>
        <qualifiedname>CGAL::parameters::no_features</qualifiedname>
        <briefdescription>
<para>Provides an option indicating no special treatment should be done with 0 and 1-dimensional features. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1gaf2aaad1efc924b8d96992a85334f0ca5" kindref="member">CGAL::parameters::features()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="244" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="244" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga8bd27303eebeb84a2fa70fbb3aa8a56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::no_lloyd</definition>
        <argsstring>()</argsstring>
        <name>no_lloyd</name>
        <qualifiedname>CGAL::parameters::no_lloyd</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga8bd27303eebeb84a2fa70fbb3aa8a56c" kindref="member">parameters::no_lloyd()</ref></computeroutput> enables the user to tell the mesh generation functions <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput> that no lloyd optimization must be done. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>without<sp/>lloyd<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga8bd27303eebeb84a2fa70fbb3aa8a56c" kindref="member">parameters::no_lloyd</ref>());</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1gae8754fd84eee75700656e4459f3a515d" kindref="member">CGAL::parameters::lloyd()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1ga833cd5f487e406a46106028b9ac0ee0b" kindref="member">CGAL::lloyd_optimize_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="267" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="267" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga4d83f119881f1c461357344b96364f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::no_odt</definition>
        <argsstring>()</argsstring>
        <name>no_odt</name>
        <qualifiedname>CGAL::parameters::no_odt</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga4d83f119881f1c461357344b96364f2c" kindref="member">parameters::no_odt()</ref></computeroutput> enables the user to tell the mesh generation functions <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput> that no ODT optimization must be done. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>without<sp/>odt<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga4d83f119881f1c461357344b96364f2c" kindref="member">parameters::no_odt</ref>());</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga684a23d08b8d8086063c6e3276025322" kindref="member">CGAL::parameters::odt()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1ga4e27ad603e8376a2cd05166162ea3a61" kindref="member">CGAL::odt_optimize_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="290" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="290" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga9f696ff6caf3c4efd246e43946a89294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::no_perturb</definition>
        <argsstring>()</argsstring>
        <name>no_perturb</name>
        <qualifiedname>CGAL::parameters::no_perturb</qualifiedname>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga9f696ff6caf3c4efd246e43946a89294" kindref="member">parameters::no_perturb()</ref></computeroutput> enables the user to tell mesh generation global functions <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput> that no perturbation must be done. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>without<sp/>perturbation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga9f696ff6caf3c4efd246e43946a89294" kindref="member">parameters::no_perturb</ref>());</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga69a51bb2164f320aa5e76409cefd6554" kindref="member">CGAL::parameters::perturb()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1ga04b81c22e2273645cc3c62a21c4a4636" kindref="member">CGAL::perturb_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="313" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="313" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga684a23d08b8d8086063c6e3276025322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::odt</definition>
        <argsstring>(const Named_function_parameters &amp;np=parameters::default_values())</argsstring>
        <name>odt</name>
        <qualifiedname>CGAL::parameters::odt</qualifiedname>
        <param>
          <type>const Named_function_parameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga684a23d08b8d8086063c6e3276025322" kindref="member">parameters::odt()</ref></computeroutput> enables the user to trigger a call to <computeroutput><ref refid="group__PkgMesh3Functions_1ga4e27ad603e8376a2cd05166162ea3a61" kindref="member">CGAL::odt_optimize_mesh_3()</ref></computeroutput> in <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> mesh optimization functions. </para>
        </briefdescription>
        <detaileddescription>
<para>It also enables the user to pass parameters to the optimization function <computeroutput><ref refid="group__PkgMesh3Functions_1ga4e27ad603e8376a2cd05166162ea3a61" kindref="member">odt_optimize_mesh_3()</ref></computeroutput> through these mesh generation functions.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="5" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>time_limit</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is used to set up, in seconds, a CPU time limit after which the optimization process is stopped. This time is measured using <computeroutput>Real_timer</computeroutput>. The default value is 0 and means that there is no time limit. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>time_limit &gt;= 0</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>max_iteration_number</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>sets a limit on the number of performed iterations. The default value of 0 means that there is no limit on the number of performed iterations. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>std::size_t</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>convergence</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is a stopping criterion based on convergence: the optimization process is stopped, when at the last iteration, the displacement of any vertex is less than a given percentage of the length the shortest edge incident to that vertex. The parameter <computeroutput>convergence</computeroutput> gives the threshold ratio. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0 &lt;= convergence &lt;= 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.02 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>freeze_bound</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is designed to reduce running time of each optimization iteration. Any vertex that has a displacement less than a given percentage of the length of its shortest incident edge, is frozen (i.e. is not relocated). The parameter <computeroutput>freeze_bound</computeroutput> gives the threshold ratio. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0 &lt;= freeze_bound &lt;= 1</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0.01 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>do_freeze</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>completes the <computeroutput>freeze_bound</computeroutput> parameter. If it is set to <computeroutput>true</computeroutput>, frozen vertices will not move anymore in next iterations. Otherwise, at each iteration, any vertex that moves, unfreezes all its incident vertices. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>bool</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>true </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>with<sp/>odt<sp/>optimization<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga684a23d08b8d8086063c6e3276025322" kindref="member">parameters::odt</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3</ref>(c3t3,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga684a23d08b8d8086063c6e3276025322" kindref="member">parameters::odt</ref>(parameters::time_limit(10)));</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga4d83f119881f1c461357344b96364f2c" kindref="member">CGAL::parameters::no_odt()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1ga4e27ad603e8376a2cd05166162ea3a61" kindref="member">CGAL::odt_optimize_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="393" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="393" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgMesh3Parameters_1ga69a51bb2164f320aa5e76409cefd6554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class NamedParameters</type>
            <defval>parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>unspecified_type</type>
        <definition>unspecified_type CGAL::parameters::perturb</definition>
        <argsstring>(const Named_function_parameters &amp;np=parameters::default_values())</argsstring>
        <name>perturb</name>
        <qualifiedname>CGAL::parameters::perturb</qualifiedname>
        <param>
          <type>const Named_function_parameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>The function <computeroutput><ref refid="group__PkgMesh3Parameters_1ga69a51bb2164f320aa5e76409cefd6554" kindref="member">parameters::perturb()</ref></computeroutput> enables the user to trigger a call to <computeroutput><ref refid="group__PkgMesh3Functions_1ga04b81c22e2273645cc3c62a21c4a4636" kindref="member">perturb_mesh_3()</ref></computeroutput> in <computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">make_mesh_3()</ref></computeroutput> and <computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3()</ref></computeroutput> mesh generation functions. </para>
        </briefdescription>
        <detaileddescription>
<para>It also enables the user to pass parameters to the optimization function <computeroutput><ref refid="group__PkgMesh3Functions_1ga04b81c22e2273645cc3c62a21c4a4636" kindref="member">perturb_mesh_3()</ref></computeroutput> through these mesh generation functions.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below:</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>time_limit</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is used to set up, in seconds, a CPU time limit after which the optimization process is stopped. This time is measured using the <computeroutput>Real_timer</computeroutput> class. The default value is 0 and means that there is no time limit. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>time_limit &gt;= 0</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>sliver_bound</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>is designed to give, in degrees, a targeted lower bound on dihedral angles of mesh cells. The exudation process considers in turn all the mesh cells that have a smallest dihedral angle less than sliver_bound and tries to make them disappear by weighting their vertices. The optimization process stops when every cell in the mesh achieves this quality. The default value is 0 and means that there is no targeted bound: the exuder then runs as long as it can improve the smallest dihedral angles of the set of cells incident to some vertices. </para>
</listitem>
<listitem>
<para><bold>Type: </bold><computeroutput>double</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Precondition: </bold><computeroutput>0 &lt;= sliver_bound &lt;= 180</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Default: </bold>0 </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><bold>Example</bold><linebreak/>
</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Mesh<sp/>generation<sp/>with<sp/>a<sp/>perturbation<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C3t3<sp/>c3t3<sp/>=<sp/>make_mesh_3&lt;c3t3&gt;(domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga69a51bb2164f320aa5e76409cefd6554" kindref="member">parameters::perturb</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">refine_mesh_3</ref>(c3t3,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>domain,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__PkgMesh3Parameters_1ga69a51bb2164f320aa5e76409cefd6554" kindref="member">parameters::perturb</ref>(parameters::time_limit(10)));</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Parameters_1ga9f696ff6caf3c4efd246e43946a89294" kindref="member">CGAL::parameters::no_perturb()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1ga04b81c22e2273645cc3c62a21c4a4636" kindref="member">CGAL::perturb_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gac8599a0c967075f740bf8e2e92c4770e" kindref="member">CGAL::make_mesh_3()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgMesh3Functions_1gabd5d3e92323fc601e87700b92fa49962" kindref="member">CGAL::refine_mesh_3()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Mesh_3/parameters.h" line="452" column="18" declfile="CGAL/Mesh_3/parameters.h" declline="452" declcolumn="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Mesh_3/parameters.h" line="3" column="1"/>
  </compounddef>
</doxygen>
