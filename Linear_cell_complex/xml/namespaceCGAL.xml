<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Cell__attribute__with__point" prot="public">CGAL::Cell_attribute_with_point</innerclass>
    <innerclass refid="classCGAL_1_1Cell__attribute__with__point__and__id" prot="public">CGAL::Cell_attribute_with_point_and_id</innerclass>
    <innerclass refid="classCGAL_1_1Linear__cell__complex__for__combinatorial__map" prot="public">CGAL::Linear_cell_complex_for_combinatorial_map</innerclass>
    <innerclass refid="classCGAL_1_1Linear__cell__complex__for__generalized__map" prot="public">CGAL::Linear_cell_complex_for_generalized_map</innerclass>
    <innerclass refid="classCGAL_1_1Linear__cell__complex__incremental__builder__3" prot="public">CGAL::Linear_cell_complex_incremental_builder_3</innerclass>
    <innerclass refid="structCGAL_1_1Linear__cell__complex__min__items" prot="public">CGAL::Linear_cell_complex_min_items</innerclass>
    <innerclass refid="structCGAL_1_1Linear__cell__complex__traits" prot="public">CGAL::Linear_cell_complex_traits</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1gaf1430ae5975d4186d8a9a873959826fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const LCC &amp;lcc, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>opens a new window and draws a linear cell complex. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the drawing are taken from the optional graphics scene options parameter.</para>
<para>A call to this function blocks the execution of the program until the drawing window is closed. This function requires <computeroutput>CGAL_Qt6</computeroutput>, and is only available if the macro <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput> is defined. Linking with the cmake target <computeroutput>CGAL::CGAL_Basic_viewer</computeroutput> will link with <computeroutput>CGAL_Qt6</computeroutput> and add the definition <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>LCC</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Linear__cell__complex__for__combinatorial__map" kindref="compound">CGAL::Linear_cell_complex_for_combinatorial_map</ref>&lt;...&gt;</computeroutput> or <computeroutput><ref refid="classCGAL_1_1Linear__cell__complex__for__generalized__map" kindref="compound">CGAL::Linear_cell_complex_for_generalized_map</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptions</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lcc</parametername>
</parameternamelist>
<parameterdescription>
<para>the linear cell complex to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;unsigned int d, unsigned int ad, class T, class I, class M, class R, class S, class GSOptions&gt;</computeroutput></para>
<para><computeroutput> void CGAL::draw(const CGAL::Linear_cell_complex_base&lt;d, ad, T, I, A, M, R, S&gt;&amp; lcc, const GSOptions&amp; gso); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_linear_cell_complex.h" line="28" column="8" declfile="CGAL/draw_linear_cell_complex.h" declline="28" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1fc5d07bdb1b32251fe1def6e80d1821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const LCC &amp;lcc)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawLinearCellComplex_1gaf1430ae5975d4186d8a9a873959826fc" kindref="member">CGAL::draw</ref>(lcc, Graphics_scene_options{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_linear_cell_complex.h" line="36" column="8" declfile="CGAL/draw_linear_cell_complex.h" declline="36" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1967f19a555c5385cc33992d52e8b65e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const LCC &amp;lcc, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>adds the vertices, edges and faces of <computeroutput>lcc</computeroutput> into the given graphic scene <computeroutput>gs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the cells are taken from the optional graphics scene options parameter <computeroutput>gso</computeroutput>. Note that <computeroutput>gs</computeroutput> is not cleared before being filled (to enable to draw several data structures in the same basic viewer).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>LCC</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Linear__cell__complex__for__combinatorial__map" kindref="compound">CGAL::Linear_cell_complex_for_combinatorial_map</ref>&lt;...&gt;</computeroutput> or <computeroutput><ref refid="classCGAL_1_1Linear__cell__complex__for__generalized__map" kindref="compound">CGAL::Linear_cell_complex_for_generalized_map</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptions</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lcc</parametername>
</parameternamelist>
<parameterdescription>
<para>the linear cell complex to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gs</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphic scene to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;unsigned int d, unsigned int ad, class T, class I, class M, class R, class S, class GSOptions&gt;</computeroutput></para>
<para><computeroutput> void CGAL::add_to_graphics_scene(const CGAL::Linear_cell_complex_base&lt;d, ad, T, I, A, M, R, S&gt;&amp; lcc, CGAL::Graphics_scene&amp; gs, const GSOptions&amp; gso); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_linear_cell_complex.h" line="61" column="6" declfile="CGAL/draw_linear_cell_complex.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawLinearCellComplex_1ga1d761a370cf0b53d0e1fd212592ed699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const LCC &amp;lcc, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawLinearCellComplex_1ga1967f19a555c5385cc33992d52e8b65e" kindref="member">CGAL::add_to_graphics_scene</ref>(lcc, gs, Graphics_scene_options{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_linear_cell_complex.h" line="71" column="6" declfile="CGAL/draw_linear_cell_complex.h" declline="71" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1ga2e694849af5a899bb8545ff7ea8ab2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
        </templateparamlist>
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_plane_graph</definition>
        <argsstring>(LCC &amp;lcc, std::istream &amp;ais)</argsstring>
        <name>import_from_plane_graph</name>
        <qualifiedname>CGAL::import_from_plane_graph</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>std::istream &amp;</type>
          <declname>ais</declname>
        </param>
        <briefdescription>
<para>Imports an embedded plane graph read from <computeroutput>ais</computeroutput> into <computeroutput>lcc</computeroutput>, a model of the <computeroutput><ref refid="classLinearCellComplex" kindref="compound">LinearCellComplex</ref></computeroutput> concept. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects are added in <computeroutput>lcc</computeroutput>, existing darts are not modified. Returns a dart created during the import. <simplesect kind="pre"><para><ref refid="" kindref="compound"><computeroutput>LCC::dimension</computeroutput></ref> <formula id="0">$ \geq$</formula> 2 and <ref refid="classLinearCellComplex_1a8ce098514128c2a8cd936be894f9f6fd" kindref="member"><computeroutput>LCC::ambient_dimension</computeroutput></ref>==2.</para>
</simplesect>
<bold>File format</bold><linebreak/>
</para>
<para>The file format must be the following. First the number of vertices and the number of edges of the planar graph. Then, for each vertex of the planar graph, the coordinates of the <formula id="1">$ i^{\mbox{th}}$</formula> vertex (two numbers for <formula id="2">$ x$</formula> and <formula id="3">$ y$</formula> coordinates). The first vertex index is 0. Then for each edge of the planar graph, the two indices of the two vertices (two numbers between 0 and the number of vertices minus 1).</para>
<para>Here a small example: <verbatim>5 6
1.0 3.0 0.0 2.0 2.0 2.0 0.0 0.0 2.0 0.0
0 1 0 2 1 2 1 3 2 4 3 4
</verbatim></para>
<para><image type="html" name="lcc_import_graph.svg">Example of import_graph reading the above file as istream, middle for combinatorial map as combinatorial data-structure, right for generalized maps.</image>
 <image type="latex" name="lcc_import_graph.svg">Example of import_graph reading the above file as istream, middle for combinatorial map as combinatorial data-structure, right for generalized maps.</image>
</para>
<para><bold>Left</bold>: A planar graph embedded in the plane with <emphasis>P0</emphasis>=(1.0,3.0), <emphasis>P1</emphasis>=(0.0,2.0), <emphasis>P2</emphasis>=(2.0,2.0), <emphasis>P3</emphasis>=(0.0,0.0), <emphasis>P4</emphasis>=(2.0,0.0). <bold>Middle</bold>: the 2D linear cell complex reconstructed if combinatorial maps are the combinatorial data-structure. <bold>Right</bold>: the 2D linear cell complex reconstructed if generalized maps are the combinatorial data-structure.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexConstructions_1ga75b167e60b6cf3adbe8026256bee47ed" kindref="member">CGAL::import_from_triangulation_3</ref>&lt;LCC,Triangulation&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexConstructions_1gab7a03aa3f1e7e1ff6d15a31e34abb432" kindref="member">CGAL::import_from_polyhedron_3</ref>&lt;LCC,Polyhedron&gt;</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Linear_cell_complex_constructors.h" line="32" column="31" declfile="CGAL/Linear_cell_complex_constructors.h" declline="32" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexOperations_1gae7e4a92836175268e7b31a99d3a73cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
        </templateparamlist>
        <type>LCC::Vector</type>
        <definition>LCC::Vector CGAL::compute_normal_of_cell_0</definition>
        <argsstring>(const LCC &amp;lcc, typename LCC::Dart_const_descriptor d)</argsstring>
        <name>compute_normal_of_cell_0</name>
        <qualifiedname>CGAL::compute_normal_of_cell_0</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>typename LCC::Dart_const_descriptor</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Returns the normal vector of the 0-cell containing <computeroutput>d</computeroutput>, i.e. the average of all the normal vectors of the 2-cells incident to the 0-cell containing <computeroutput>d</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classLinearCellComplex_1a8ce098514128c2a8cd936be894f9f6fd" kindref="member"><computeroutput>LCC::ambient_dimension</computeroutput></ref>==3 and <computeroutput>d</computeroutput> <formula id="4">$ \in $</formula> <ref refid="" kindref="compound"><computeroutput>lcc.darts()</computeroutput></ref>.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexOperations_1gae78fd3d505c8ea4c80980c13b7391cb5" kindref="member">CGAL::compute_normal_of_cell_2</ref>&lt;LCC&gt;</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Linear_cell_complex_operations.h" line="13" column="22" declfile="CGAL/Linear_cell_complex_operations.h" declline="13" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexOperations_1gae78fd3d505c8ea4c80980c13b7391cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
        </templateparamlist>
        <type>LCC::Vector</type>
        <definition>LCC::Vector CGAL::compute_normal_of_cell_2</definition>
        <argsstring>(const LCC &amp;lcc, typename LCC::Dart_const_descriptor d)</argsstring>
        <name>compute_normal_of_cell_2</name>
        <qualifiedname>CGAL::compute_normal_of_cell_2</qualifiedname>
        <param>
          <type>const LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>typename LCC::Dart_const_descriptor</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Returns the normal vector of the 2-cell containing <computeroutput>d</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classLinearCellComplex_1a8ce098514128c2a8cd936be894f9f6fd" kindref="member"><computeroutput>LCC::ambient_dimension</computeroutput></ref>==3 and <computeroutput>d</computeroutput> <formula id="4">$ \in $</formula> <ref refid="" kindref="compound"><computeroutput>lcc.darts()</computeroutput></ref>.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexOperations_1gae7e4a92836175268e7b31a99d3a73cef" kindref="member">CGAL::compute_normal_of_cell_0</ref>&lt;LCC&gt;</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Linear_cell_complex_operations.h" line="25" column="22" declfile="CGAL/Linear_cell_complex_operations.h" declline="25" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1gab7a03aa3f1e7e1ff6d15a31e34abb432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
          <param>
            <type>class Polyhedron</type>
          </param>
        </templateparamlist>
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_polyhedron_3</definition>
        <argsstring>(LCC &amp;lcc, const Polyhedron &amp;apoly)</argsstring>
        <name>import_from_polyhedron_3</name>
        <qualifiedname>CGAL::import_from_polyhedron_3</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const Polyhedron &amp;</type>
          <declname>apoly</declname>
        </param>
        <briefdescription>
<para>Imports <computeroutput>apoly</computeroutput> (a <computeroutput>Polyhedron_3</computeroutput>) into <computeroutput>lcc</computeroutput>, a model of the <computeroutput><ref refid="classLinearCellComplex" kindref="compound">LinearCellComplex</ref></computeroutput> concept. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects are added in <computeroutput>lcc</computeroutput>, existing darts are not modified. Returns a dart created during the import. <simplesect kind="pre"><para><ref refid="" kindref="compound"><computeroutput>LCC::dimension</computeroutput></ref> <formula id="0">$ \geq$</formula> 2 and <ref refid="classLinearCellComplex_1a8ce098514128c2a8cd936be894f9f6fd" kindref="member"><computeroutput>LCC::ambient_dimension</computeroutput></ref>==3.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexConstructions_1ga2e694849af5a899bb8545ff7ea8ab2a8" kindref="member">CGAL::import_from_plane_graph</ref>&lt;LCC&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexConstructions_1ga75b167e60b6cf3adbe8026256bee47ed" kindref="member">CGAL::import_from_triangulation_3</ref>&lt;LCC,Triangulation&gt;</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Polyhedron_3_to_lcc.h" line="12" column="31" declfile="CGAL/Polyhedron_3_to_lcc.h" declline="12" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgLinearCellComplexConstructions_1ga75b167e60b6cf3adbe8026256bee47ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LCC</type>
          </param>
          <param>
            <type>class Triangulation_</type>
          </param>
        </templateparamlist>
        <type>LCC::Dart_descriptor</type>
        <definition>LCC::Dart_descriptor CGAL::import_from_triangulation_3</definition>
        <argsstring>(LCC &amp;lcc, const Triangulation_ &amp;atr)</argsstring>
        <name>import_from_triangulation_3</name>
        <qualifiedname>CGAL::import_from_triangulation_3</qualifiedname>
        <param>
          <type>LCC &amp;</type>
          <declname>lcc</declname>
        </param>
        <param>
          <type>const Triangulation_ &amp;</type>
          <declname>atr</declname>
        </param>
        <briefdescription>
<para>Imports <computeroutput>atr</computeroutput> (a <computeroutput>Triangulation_3</computeroutput>) into <computeroutput>lcc</computeroutput>, a model of the <computeroutput><ref refid="classLinearCellComplex" kindref="compound">LinearCellComplex</ref></computeroutput> concept. </para>
        </briefdescription>
        <detaileddescription>
<para>Objects are added in <computeroutput>lcc</computeroutput>, existing darts are not modified. Returns a dart created during the import. <simplesect kind="pre"><para><ref refid="" kindref="compound"><computeroutput>LCC::dimension</computeroutput></ref> <formula id="0">$ \geq$</formula> 3 and <ref refid="classLinearCellComplex_1a8ce098514128c2a8cd936be894f9f6fd" kindref="member"><computeroutput>LCC::ambient_dimension</computeroutput></ref>==3.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexConstructions_1ga2e694849af5a899bb8545ff7ea8ab2a8" kindref="member">CGAL::import_from_plane_graph</ref>&lt;LCC&gt;</computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgLinearCellComplexConstructions_1gab7a03aa3f1e7e1ff6d15a31e34abb432" kindref="member">CGAL::import_from_polyhedron_3</ref>&lt;LCC,Polyhedron&gt;</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Triangulation_3_to_lcc.h" line="13" column="31" declfile="CGAL/Triangulation_3_to_lcc.h" declline="13" declcolumn="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Cell_attribute_with_point.h" line="2" column="1"/>
  </compounddef>
</doxygen>
