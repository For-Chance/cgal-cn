<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Benchmark__rep" prot="public">CGAL::Benchmark_rep</innerclass>
    <innerclass refid="classCGAL_1_1File__header__extended__OFF" prot="public">CGAL::File_header_extended_OFF</innerclass>
    <innerclass refid="classCGAL_1_1File__header__OFF" prot="public">CGAL::File_header_OFF</innerclass>
    <innerclass refid="classCGAL_1_1File__scanner__OFF" prot="public">CGAL::File_scanner_OFF</innerclass>
    <innerclass refid="classCGAL_1_1File__writer__inventor" prot="public">CGAL::File_writer_inventor</innerclass>
    <innerclass refid="classCGAL_1_1File__writer__OFF" prot="public">CGAL::File_writer_OFF</innerclass>
    <innerclass refid="classCGAL_1_1File__writer__VRML__2" prot="public">CGAL::File_writer_VRML_2</innerclass>
    <innerclass refid="classCGAL_1_1File__writer__wavefront" prot="public">CGAL::File_writer_wavefront</innerclass>
    <innerclass refid="classCGAL_1_1Generic__writer" prot="public">CGAL::Generic_writer</innerclass>
    <innerclass refid="classCGAL_1_1I__Scanner__OFF__facet__iterator" prot="public">CGAL::I_Scanner_OFF_facet_iterator</innerclass>
    <innerclass refid="classCGAL_1_1I__Scanner__OFF__vertex__and__normals__iterator" prot="public">CGAL::I_Scanner_OFF_vertex_and_normals_iterator</innerclass>
    <innerclass refid="classCGAL_1_1I__Scanner__OFF__vertex__iterator" prot="public">CGAL::I_Scanner_OFF_vertex_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Input__rep" prot="public">CGAL::Input_rep</innerclass>
    <innerclass refid="classCGAL_1_1Input__rep_3_01std_1_1optional_3_01T_01_4_01_4" prot="public">CGAL::Input_rep&lt; std::optional&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classCGAL_1_1Inventor__ostream" prot="public">CGAL::Inventor_ostream</innerclass>
    <innerclass refid="classCGAL_1_1Inventor__ostream__base" prot="public">CGAL::Inventor_ostream_base</innerclass>
    <innerclass refid="structCGAL_1_1io__Extract__insert" prot="public">CGAL::io_Extract_insert</innerclass>
    <innerclass refid="structCGAL_1_1io__Operator" prot="public">CGAL::io_Operator</innerclass>
    <innerclass refid="structCGAL_1_1io__Read__write" prot="public">CGAL::io_Read_write</innerclass>
    <innerclass refid="structCGAL_1_1IO__rep__is__not__specialized__aux" prot="public">CGAL::IO_rep_is_not_specialized_aux</innerclass>
    <innerclass refid="structCGAL_1_1IO__rep__is__specialized__aux" prot="public">CGAL::IO_rep_is_specialized_aux</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits" prot="public">CGAL::Io_traits</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01char_01_4" prot="public">CGAL::Io_traits&lt; char &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01double_01_4" prot="public">CGAL::Io_traits&lt; double &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01float_01_4" prot="public">CGAL::Io_traits&lt; float &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01int_01_4" prot="public">CGAL::Io_traits&lt; int &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01long_01_4" prot="public">CGAL::Io_traits&lt; long &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01long_01double_01_4" prot="public">CGAL::Io_traits&lt; long double &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01long_01long_01_4" prot="public">CGAL::Io_traits&lt; long long &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01short_01_4" prot="public">CGAL::Io_traits&lt; short &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01unsigned_01char_01_4" prot="public">CGAL::Io_traits&lt; unsigned char &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01unsigned_01int_01_4" prot="public">CGAL::Io_traits&lt; unsigned int &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01unsigned_01long_01_4" prot="public">CGAL::Io_traits&lt; unsigned long &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01unsigned_01long_01long_01_4" prot="public">CGAL::Io_traits&lt; unsigned long long &gt;</innerclass>
    <innerclass refid="structCGAL_1_1Io__traits_3_01unsigned_01short_01_4" prot="public">CGAL::Io_traits&lt; unsigned short &gt;</innerclass>
    <innerclass refid="classCGAL_1_1Istream__iterator" prot="public">CGAL::Istream_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Ostream__iterator" prot="public">CGAL::Ostream_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Output__rep" prot="public">CGAL::Output_rep</innerclass>
    <innerclass refid="classCGAL_1_1Output__rep_3_01std_1_1optional_3_01T_01_4_00_01F_01_4" prot="public">CGAL::Output_rep&lt; std::optional&lt; T &gt;, F &gt;</innerclass>
    <innerclass refid="classCGAL_1_1Output__rep_3_01std_1_1variant_3_01T_8_8_8_01_4_00_01F_01_4" prot="public">CGAL::Output_rep&lt; std::variant&lt; T... &gt;, F &gt;</innerclass>
    <innerclass refid="classCGAL_1_1Scanner__OFF" prot="public">CGAL::Scanner_OFF</innerclass>
    <innerclass refid="classCGAL_1_1Verbose__ostream" prot="public">CGAL::Verbose_ostream</innerclass>
    <innerclass refid="classCGAL_1_1VRML__1__ostream" prot="public">CGAL::VRML_1_ostream</innerclass>
    <innerclass refid="classCGAL_1_1VRML__2__ostream" prot="public">CGAL::VRML_2_ostream</innerclass>
    <innernamespace refid="namespaceCGAL_1_1IO">CGAL::IO</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1Stream__support">CGAL::Stream_support</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="io_8h_1ab8e9e5b3ce17577cd17734e5d422c7ad" prot="public" static="no">
        <type>IO_rep_is_specialized_aux&lt; void &gt;</type>
        <definition>typedef IO_rep_is_specialized_aux&lt;void&gt; CGAL::IO_rep_is_specialized</definition>
        <argsstring></argsstring>
        <name>IO_rep_is_specialized</name>
        <qualifiedname>CGAL::IO_rep_is_specialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="147" column="35" bodyfile="CGAL/IO/io.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="io_8h_1aec8eff3cd2cce22dfe21c3249894da1f" prot="public" static="no">
        <type>IO_rep_is_not_specialized_aux&lt; void &gt;</type>
        <definition>typedef IO_rep_is_not_specialized_aux&lt;void&gt; CGAL::IO_rep_is_not_specialized</definition>
        <argsstring></argsstring>
        <name>IO_rep_is_not_specialized</name>
        <qualifiedname>CGAL::IO_rep_is_not_specialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="148" column="39" bodyfile="CGAL/IO/io.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="binary__file__io_8h_1af661544051f04e6a594fd326ba64d6a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_uinteger32</definition>
        <argsstring>(std::ostream &amp;out, std::uint32_t u)</argsstring>
        <name>I_Binary_write_uinteger32</name>
        <qualifiedname>CGAL::I_Binary_write_uinteger32</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="30" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a632b2172ddd413254da219fe0623fb9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_size_t_into_uinteger32</definition>
        <argsstring>(std::ostream &amp;out, std::size_t s)</argsstring>
        <name>I_Binary_write_size_t_into_uinteger32</name>
        <qualifiedname>CGAL::I_Binary_write_size_t_into_uinteger32</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="36" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a55f8818ab085865aa6a5bffd222a351f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_integer32</definition>
        <argsstring>(std::ostream &amp;out, std::int32_t i)</argsstring>
        <name>I_Binary_write_integer32</name>
        <qualifiedname>CGAL::I_Binary_write_integer32</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="43" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1ae40679ff069381372ec9c431fe001ac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_float32</definition>
        <argsstring>(std::ostream &amp;out, float f)</argsstring>
        <name>I_Binary_write_float32</name>
        <qualifiedname>CGAL::I_Binary_write_float32</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="47" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a260840639cc1244f3744fe17aa08c7db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_bool</definition>
        <argsstring>(std::ostream &amp;out, bool b)</argsstring>
        <name>I_Binary_write_bool</name>
        <qualifiedname>CGAL::I_Binary_write_bool</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="51" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1aa91c8e6c08228b5744980f0f6a4b1915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_uinteger32</definition>
        <argsstring>(std::istream &amp;is, std::uint32_t &amp;u)</argsstring>
        <name>I_Binary_read_uinteger32</name>
        <qualifiedname>CGAL::I_Binary_read_uinteger32</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="58" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1aab4efe5254bc0e589913cc7e0ca51881" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_size_t_from_uinteger32</definition>
        <argsstring>(std::istream &amp;is, std::size_t &amp;s)</argsstring>
        <name>I_Binary_read_size_t_from_uinteger32</name>
        <qualifiedname>CGAL::I_Binary_read_size_t_from_uinteger32</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::size_t &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="63" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a9bf54bea666e979a61efbe965c2a1500" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_integer32</definition>
        <argsstring>(std::istream &amp;is, std::int32_t &amp;i)</argsstring>
        <name>I_Binary_read_integer32</name>
        <qualifiedname>CGAL::I_Binary_read_integer32</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="69" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a02fb6146ecc88c59c9aa252c3fe722ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_float32</definition>
        <argsstring>(std::istream &amp;is, float &amp;f)</argsstring>
        <name>I_Binary_read_float32</name>
        <qualifiedname>CGAL::I_Binary_read_float32</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="73" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1aec35dd347c669ec439f80eddc1305491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_bool</definition>
        <argsstring>(std::istream &amp;is, bool &amp;b)</argsstring>
        <name>I_Binary_read_bool</name>
        <qualifiedname>CGAL::I_Binary_read_bool</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="77" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a8c483a21dff76fe2245509019573779c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_swap_to_big_endian</definition>
        <argsstring>(std::uint32_t &amp;u)</argsstring>
        <name>I_swap_to_big_endian</name>
        <qualifiedname>CGAL::I_swap_to_big_endian</qualifiedname>
        <param>
          <type>std::uint32_t &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="84" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a529600bebb39ca6b6b4200eb36701858" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_swap_to_big_endian</definition>
        <argsstring>(std::int32_t &amp;i)</argsstring>
        <name>I_swap_to_big_endian</name>
        <qualifiedname>CGAL::I_swap_to_big_endian</qualifiedname>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="92" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="92" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a98dc93104e28c9dacdff2940a56f48a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_swap_to_big_endian</definition>
        <argsstring>(float &amp;f)</argsstring>
        <name>I_swap_to_big_endian</name>
        <qualifiedname>CGAL::I_swap_to_big_endian</qualifiedname>
        <param>
          <type>float &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="107" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="107" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1aff7ab7f92f6d6941fa5c7303e3d1c348" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_big_endian_integer32</definition>
        <argsstring>(std::ostream &amp;out, std::int32_t i)</argsstring>
        <name>I_Binary_write_big_endian_integer32</name>
        <qualifiedname>CGAL::I_Binary_write_big_endian_integer32</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="122" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1a9629d55b049f42733fdf3fe50b7f0509" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_write_big_endian_float32</definition>
        <argsstring>(std::ostream &amp;out, float f)</argsstring>
        <name>I_Binary_write_big_endian_float32</name>
        <qualifiedname>CGAL::I_Binary_write_big_endian_float32</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="127" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1ab62a30c1990248f6ae7c029c3444cd55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_big_endian_integer32</definition>
        <argsstring>(std::istream &amp;is, std::int32_t &amp;i)</argsstring>
        <name>I_Binary_read_big_endian_integer32</name>
        <qualifiedname>CGAL::I_Binary_read_big_endian_integer32</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>std::int32_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="133" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="binary__file__io_8h_1aa393a2f33b1858ad0207c659b18348ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::I_Binary_read_big_endian_float32</definition>
        <argsstring>(std::istream &amp;is, float &amp;f)</argsstring>
        <name>I_Binary_read_big_endian_float32</name>
        <qualifiedname>CGAL::I_Binary_read_big_endian_float32</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/binary_file_io.h" line="138" column="1" bodyfile="CGAL/IO/binary_file_io.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group__IOstreamOperators_1gab63c7e66d05c61b2cafb1f85fd8bb3f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, Class c)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inserts object <computeroutput>c</computeroutput> in the stream <computeroutput>os</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>os</computeroutput>. CGAL defines output operators for classes that are derived from the class <computeroutput>ostream</computeroutput>. This allows to write to ostreams as <computeroutput>cout</computeroutput> or <computeroutput>cerr</computeroutput>, as well as to <computeroutput>std::ostringstream</computeroutput> and <computeroutput>std::ofstream</computeroutput>. The output operator is defined for all classes in the CGAL <computeroutput>Kernel</computeroutput> and for the class <computeroutput>Color</computeroutput> as well.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="107" column="1" declfile="CGAL/IO/io.h" declline="107" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__IOstreamOperators_1ga2e62094cfede6ee53227479cd7250883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>istream &amp;</type>
        <definition>istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, Class c)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>Class</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>CGAL defines input operators for classes that are derived from the class <computeroutput>istream</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This allows to read from istreams as <computeroutput>std::cin</computeroutput>, as well as from <computeroutput>std::istringstream</computeroutput> and <computeroutput>std::ifstream</computeroutput>. The input operator is defined for all classes in the CGAL <computeroutput>Kernel</computeroutput>.</para>
<para><simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="126" column="9" declfile="CGAL/IO/io.h" declline="126" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1afb68f649aed95ba7dfad3863ba4c849c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Benchmark_rep&lt; T, F &gt; rep)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>Benchmark_rep&lt; T, F &gt;</type>
          <declname>rep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="480" column="1" bodyfile="CGAL/IO/io.h" bodystart="480" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1ab40c8439a3703a95bdfdd59c314af595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::write</definition>
        <argsstring>(std::ostream &amp;os, const T &amp;t, const io_Read_write &amp;)</argsstring>
        <name>write</name>
        <qualifiedname>CGAL::write</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const io_Read_write &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="647" column="13" bodyfile="CGAL/IO/io.h" bodystart="647" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1af1aebf3e5bf65323bde01b85f6cd3444" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::write</definition>
        <argsstring>(std::ostream &amp;os, const T &amp;t, const io_Operator &amp;)</argsstring>
        <name>write</name>
        <qualifiedname>CGAL::write</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const io_Operator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="653" column="13" bodyfile="CGAL/IO/io.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1af0041f8a1c37a82a50f99dea212e573a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::write</definition>
        <argsstring>(std::ostream &amp;os, const T &amp;t, const io_Extract_insert &amp;)</argsstring>
        <name>write</name>
        <qualifiedname>CGAL::write</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const io_Extract_insert &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="659" column="13" bodyfile="CGAL/IO/io.h" bodystart="659" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1ab0c276021e050d107e8980c3ef967344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::write</definition>
        <argsstring>(std::ostream &amp;os, const T &amp;t)</argsstring>
        <name>write</name>
        <qualifiedname>CGAL::write</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="665" column="13" bodyfile="CGAL/IO/io.h" bodystart="665" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1a0b1114cf9e0428ad230cb2fd871c3b9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::read</definition>
        <argsstring>(std::istream &amp;is, T &amp;t, const io_Read_write &amp;)</argsstring>
        <name>read</name>
        <qualifiedname>CGAL::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const io_Read_write &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="671" column="13" bodyfile="CGAL/IO/io.h" bodystart="671" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1a4d24bc2de4d9b97266b947d1134bd436" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::read</definition>
        <argsstring>(std::istream &amp;is, T &amp;t, const io_Operator &amp;)</argsstring>
        <name>read</name>
        <qualifiedname>CGAL::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const io_Operator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="677" column="13" bodyfile="CGAL/IO/io.h" bodystart="677" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1aba2bb2f4ecb0c7e564bae3c77377d332" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::read</definition>
        <argsstring>(std::istream &amp;is, T &amp;t, const io_Extract_insert &amp;)</argsstring>
        <name>read</name>
        <qualifiedname>CGAL::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const io_Extract_insert &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="683" column="13" bodyfile="CGAL/IO/io.h" bodystart="683" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1aa824316c32ea2cb49b44041a6f1aec72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::read</definition>
        <argsstring>(std::istream &amp;is, T &amp;t)</argsstring>
        <name>read</name>
        <qualifiedname>CGAL::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="689" column="13" bodyfile="CGAL/IO/io.h" bodystart="689" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1af3d6a93139ce1d85a1a68f0fa9c7f332" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::swallow</definition>
        <argsstring>(std::istream &amp;is, char d)</argsstring>
        <name>swallow</name>
        <qualifiedname>CGAL::swallow</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>char</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="790" column="13" bodyfile="CGAL/IO/io.h" bodystart="790" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="io_8h_1a9e7b2584d82c79a32af61de564897fe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::swallow</definition>
        <argsstring>(std::istream &amp;is, const std::string &amp;s)</argsstring>
        <name>swallow</name>
        <qualifiedname>CGAL::swallow</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="802" column="13" bodyfile="CGAL/IO/io.h" bodystart="802" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="File__header__extended__OFF_8h_1af52b0d5613df1dc037b4073574979ad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const File_header_extended_OFF &amp;h)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const File_header_extended_OFF &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_header_extended_OFF.h" line="96" column="1" declfile="CGAL/IO/OFF/File_header_extended_OFF.h" declline="96" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="File__header__extended__OFF_8h_1a7b9b7be8179fd95461f2d3eda2aece17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, File_header_extended_OFF &amp;h)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>File_header_extended_OFF &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_header_extended_OFF.h" line="100" column="14" declfile="CGAL/IO/OFF/File_header_extended_OFF.h" declline="100" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="File__header__extended__OFF_8h_1abdcab07ae8687fddf986576fc8286eac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::skip_until_EOL</definition>
        <argsstring>(std::istream &amp;in)</argsstring>
        <name>skip_until_EOL</name>
        <qualifiedname>CGAL::skip_until_EOL</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_header_extended_OFF.h" line="103" column="21" bodyfile="CGAL/IO/OFF/File_header_extended_OFF.h" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="File__header__extended__OFF_8h_1a4f90f9da1b40bfb59c7cfa7fdeb96fde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; CGAL::skip_comment_OFF</definition>
        <argsstring>(std::istream &amp;in)</argsstring>
        <name>skip_comment_OFF</name>
        <qualifiedname>CGAL::skip_comment_OFF</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_header_extended_OFF.h" line="114" column="21" bodyfile="CGAL/IO/OFF/File_header_extended_OFF.h" bodystart="114" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="File__header__OFF_8h_1a28857e6c8fce14db18cb77e6a82699fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CGAL_EXPORT std::ostream &amp;</type>
        <definition>CGAL_INLINE_FUNCTION std::ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const File_header_OFF &amp;h)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const File_header_OFF &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_header_OFF_impl.h" line="210" column="1" bodyfile="CGAL/IO/OFF/File_header_OFF_impl.h" bodystart="210" bodyend="235" declfile="CGAL/IO/OFF/File_header_OFF.h" declline="116" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="File__header__OFF_8h_1a8c6a20e5d96aa3d55bcbbb0d085e31e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CGAL_EXPORT std::istream &amp;</type>
        <definition>CGAL_INLINE_FUNCTION std::istream &amp; CGAL::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, File_header_OFF &amp;h)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>File_header_OFF &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_header_OFF_impl.h" line="239" column="14" bodyfile="CGAL/IO/OFF/File_header_OFF_impl.h" bodystart="239" bodyend="422" declfile="CGAL/IO/OFF/File_header_OFF.h" declline="119" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="File__scanner__OFF_8h_1a6a97164b311a825c7454d53465ae2038" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Point</type>
          </param>
        </templateparamlist>
        <type>Point &amp;</type>
        <definition>Point &amp; CGAL::file_scan_vertex</definition>
        <argsstring>(File_scanner_OFF &amp;scanner, Point &amp;p)</argsstring>
        <name>file_scan_vertex</name>
        <qualifiedname>CGAL::file_scan_vertex</qualifiedname>
        <param>
          <type>File_scanner_OFF &amp;</type>
          <declname>scanner</declname>
        </param>
        <param>
          <type>Point &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_scanner_OFF.h" line="824" column="7" bodyfile="CGAL/IO/OFF/File_scanner_OFF.h" bodystart="824" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="File__scanner__OFF_8h_1a0653dbaf6b61461f689bcdfed3d73190" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_Color</type>
          </param>
        </templateparamlist>
        <type>T_Color &amp;</type>
        <definition>T_Color &amp; CGAL::file_scan_color</definition>
        <argsstring>(File_scanner_OFF &amp;scanner, T_Color &amp;c)</argsstring>
        <name>file_scan_color</name>
        <qualifiedname>CGAL::file_scan_color</qualifiedname>
        <param>
          <type>File_scanner_OFF &amp;</type>
          <declname>scanner</declname>
        </param>
        <param>
          <type>T_Color &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_scanner_OFF.h" line="841" column="9" bodyfile="CGAL/IO/OFF/File_scanner_OFF.h" bodystart="841" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="File__scanner__OFF_8h_1a22fd838573b14fe93c8dcfe257d554a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Vector</type>
          </param>
        </templateparamlist>
        <type>Vector &amp;</type>
        <definition>Vector &amp; CGAL::file_scan_normal</definition>
        <argsstring>(File_scanner_OFF &amp;scanner, Vector &amp;v)</argsstring>
        <name>file_scan_normal</name>
        <qualifiedname>CGAL::file_scan_normal</qualifiedname>
        <param>
          <type>File_scanner_OFF &amp;</type>
          <declname>scanner</declname>
        </param>
        <param>
          <type>Vector &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/File_scanner_OFF.h" line="852" column="1" bodyfile="CGAL/IO/OFF/File_scanner_OFF.h" bodystart="852" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="generic__copy__OFF_8h_1a07a37a46a085261dccbe27dd17c0d37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Stream</type>
          </param>
          <param>
            <type>class Writer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::generic_copy_OFF</definition>
        <argsstring>(File_scanner_OFF &amp;scanner, Stream &amp;out, Writer &amp;writer)</argsstring>
        <name>generic_copy_OFF</name>
        <qualifiedname>CGAL::generic_copy_OFF</qualifiedname>
        <param>
          <type>File_scanner_OFF &amp;</type>
          <declname>scanner</declname>
        </param>
        <param>
          <type>Stream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Writer &amp;</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/generic_copy_OFF.h" line="30" column="1" bodyfile="CGAL/IO/OFF/generic_copy_OFF.h" bodystart="30" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="generic__copy__OFF_8h_1a4f587778a0179ff1ac4e545c3bae44e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Stream</type>
          </param>
          <param>
            <type>class Writer</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::generic_copy_OFF</definition>
        <argsstring>(std::istream &amp;in, Stream &amp;out, Writer &amp;writer, bool verbose=false)</argsstring>
        <name>generic_copy_OFF</name>
        <qualifiedname>CGAL::generic_copy_OFF</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Stream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>Writer &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/generic_copy_OFF.h" line="91" column="6" bodyfile="CGAL/IO/OFF/generic_copy_OFF.h" bodystart="91" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="Scanner__OFF_8h_1add327230c01a03d1aee916857c0976bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Pt</type>
          </param>
          <param>
            <type>class Distance</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::distance</definition>
        <argsstring>(const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;first, const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;last, Distance &amp;n)</argsstring>
        <name>distance</name>
        <qualifiedname>CGAL::distance</qualifiedname>
        <param>
          <type>const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;</type>
          <declname>last</declname>
        </param>
        <param>
          <type>Distance &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/Scanner_OFF.h" line="222" column="6" bodyfile="CGAL/IO/OFF/Scanner_OFF.h" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="Scanner__OFF_8h_1a6e486f4fa564cb2f4683ad0dfa26b96b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Distance</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::distance</definition>
        <argsstring>(const I_Scanner_OFF_facet_iterator &amp;first, const I_Scanner_OFF_facet_iterator &amp;last, Distance &amp;n)</argsstring>
        <name>distance</name>
        <qualifiedname>CGAL::distance</qualifiedname>
        <param>
          <type>const I_Scanner_OFF_facet_iterator &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const I_Scanner_OFF_facet_iterator &amp;</type>
          <declname>last</declname>
        </param>
        <param>
          <type>Distance &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/Scanner_OFF.h" line="228" column="6" bodyfile="CGAL/IO/OFF/Scanner_OFF.h" bodystart="228" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="Scanner__OFF_8h_1a1406b457233c7a92ceb98437e1d06db1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Pt</type>
          </param>
        </templateparamlist>
        <type>std::ptrdiff_t</type>
        <definition>std::ptrdiff_t CGAL::distance</definition>
        <argsstring>(const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;first, const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;last)</argsstring>
        <name>distance</name>
        <qualifiedname>CGAL::distance</qualifiedname>
        <param>
          <type>const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const I_Scanner_OFF_vertex_iterator&lt; Pt &gt; &amp;</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/Scanner_OFF.h" line="234" column="16" bodyfile="CGAL/IO/OFF/Scanner_OFF.h" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="Scanner__OFF_8h_1afc0d35e8ff7fdc696a721dc71148b339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ptrdiff_t</type>
        <definition>std::ptrdiff_t CGAL::distance</definition>
        <argsstring>(const I_Scanner_OFF_facet_iterator &amp;first, const I_Scanner_OFF_facet_iterator &amp;last)</argsstring>
        <name>distance</name>
        <qualifiedname>CGAL::distance</qualifiedname>
        <param>
          <type>const I_Scanner_OFF_facet_iterator &amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>const I_Scanner_OFF_facet_iterator &amp;</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OFF/Scanner_OFF.h" line="240" column="17" bodyfile="CGAL/IO/OFF/Scanner_OFF.h" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="Inventor__ostream_8h_1a361980f6d6a04488d2f2c148849a1190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_stream_precision_from_NP</definition>
        <argsstring>(Inventor_ostream_base &amp;os, const NP &amp;np)</argsstring>
        <name>set_stream_precision_from_NP</name>
        <qualifiedname>CGAL::set_stream_precision_from_NP</qualifiedname>
        <param>
          <type>Inventor_ostream_base &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const NP &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/OI/Inventor_ostream.h" line="94" column="6" bodyfile="CGAL/IO/OI/Inventor_ostream.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="VRML__2__ostream_8h_1a1c5f496df8546e4960b6659143816fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VRML_2_ostream &amp;</type>
        <definition>VRML_2_ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(VRML_2_ostream &amp;os, const char *s)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>VRML_2_ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/VRML/VRML_2_ostream.h" line="99" column="8" bodyfile="CGAL/IO/VRML/VRML_2_ostream.h" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="VRML__2__ostream_8h_1aa521489cc8ade5d9421c12ba8abee5e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VRML_2_ostream &amp;</type>
        <definition>VRML_2_ostream &amp; CGAL::operator&lt;&lt;</definition>
        <argsstring>(VRML_2_ostream &amp;os, const double &amp;d)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::operator&lt;&lt;</qualifiedname>
        <param>
          <type>VRML_2_ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/VRML/VRML_2_ostream.h" line="106" column="8" bodyfile="CGAL/IO/VRML/VRML_2_ostream.h" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="VRML__2__ostream_8h_1a8f0487c46cd0cb72bdfbc78147a5756b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NP</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::set_stream_precision_from_NP</definition>
        <argsstring>(VRML_2_ostream &amp;os, const NP &amp;np)</argsstring>
        <name>set_stream_precision_from_NP</name>
        <qualifiedname>CGAL::set_stream_precision_from_NP</qualifiedname>
        <param>
          <type>VRML_2_ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const NP &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/VRML/VRML_2_ostream.h" line="114" column="6" bodyfile="CGAL/IO/VRML/VRML_2_ostream.h" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="IOstream.txt" line="1" column="1"/>
  </compounddef>
</doxygen>
