<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgStreamSupportRef" kind="group">
    <compoundname>PkgStreamSupportRef</compoundname>
    <title>I/O Streams Reference</title>
    <innerclass refid="classCGAL_1_1IO_1_1Color" prot="public">CGAL::IO::Color</innerclass>
    <innerclass refid="classCGAL_1_1Output__rep" prot="public">CGAL::Output_rep</innerclass>
    <innerclass refid="classCGAL_1_1Input__rep" prot="public">CGAL::Input_rep</innerclass>
    <innerclass refid="classCGAL_1_1Istream__iterator" prot="public">CGAL::Istream_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Ostream__iterator" prot="public">CGAL::Ostream_iterator</innerclass>
    <innerclass refid="classCGAL_1_1Verbose__ostream" prot="public">CGAL::Verbose_ostream</innerclass>
    <innergroup refid="group__IOstreamOperators">Stream Operators</innergroup>
    <innergroup refid="group__IOstreamFunctions">I/O Functions</innergroup>
    <innergroup refid="group__PkgStreamSupportEnumRef">I/O Enums</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgStreamSupportRef_1gaef04729ed020e200594efd0f0f26004f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>Output_rep&lt; T &gt;</type>
        <definition>Output_rep&lt; T &gt; CGAL::IO::oformat</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>oformat</name>
        <qualifiedname>CGAL::IO::oformat</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Convenience function to construct an output representation (<computeroutput><ref refid="classCGAL_1_1Output__rep" kindref="compound">Output_rep</ref></computeroutput>) for type <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Generic <ref refid="namespaceCGAL_1_1IO" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">IO</ref> for type <computeroutput>T</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="241" column="12" bodyfile="CGAL/IO/io.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga6b9c3742007c1eadb4767d1704938eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>Output_rep&lt; T, F &gt;</type>
        <definition>Output_rep&lt; T, F &gt; CGAL::IO::oformat</definition>
        <argsstring>(const T &amp;t, F format)</argsstring>
        <name>oformat</name>
        <qualifiedname>CGAL::IO::oformat</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>F</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Convenience function to construct an output representation (<computeroutput><ref refid="classCGAL_1_1Output__rep" kindref="compound">Output_rep</ref></computeroutput>) for type <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Generic <ref refid="namespaceCGAL_1_1IO" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Arrangement_on_surface_2.tag">IO</ref> for type <computeroutput>T</computeroutput> with formatting tag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="251" column="12" bodyfile="CGAL/IO/io.h" bodystart="251" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga8c599d03756553b8a17389aee4c433c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>Input_rep&lt; T &gt;</type>
        <definition>Input_rep&lt; T &gt; CGAL::IO::iformat</definition>
        <argsstring>(T &amp;t)</argsstring>
        <name>iformat</name>
        <qualifiedname>CGAL::IO::iformat</qualifiedname>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>The definition of this function is completely symmetric to <computeroutput>oformat()</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="460" column="11" bodyfile="CGAL/IO/io.h" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mode</type>
        <definition>Mode CGAL::IO::get_mode</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>get_mode</name>
        <qualifiedname>CGAL::IO::get_mode</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>returns the printing mode of the IO stream <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="504" column="13" bodyfile="CGAL/IO/io.h" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mode</type>
        <definition>Mode CGAL::IO::set_ascii_mode</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>set_ascii_mode</name>
        <qualifiedname>CGAL::IO::set_ascii_mode</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>sets the mode of the IO stream <computeroutput>s</computeroutput> to be the <computeroutput>ASCII</computeroutput> mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the previous mode of <computeroutput>s</computeroutput>.</para>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="524" column="13" bodyfile="CGAL/IO/io.h" bodystart="524" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mode</type>
        <definition>Mode CGAL::IO::set_binary_mode</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>set_binary_mode</name>
        <qualifiedname>CGAL::IO::set_binary_mode</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>sets the mode of the IO stream <computeroutput>s</computeroutput> to be the <computeroutput>BINARY</computeroutput> mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the previous mode of <computeroutput>s</computeroutput>.</para>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="546" column="13" bodyfile="CGAL/IO/io.h" bodystart="546" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mode</type>
        <definition>Mode CGAL::IO::set_pretty_mode</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>set_pretty_mode</name>
        <qualifiedname>CGAL::IO::set_pretty_mode</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>sets the mode of the IO stream <computeroutput>s</computeroutput> to be the <computeroutput>PRETTY</computeroutput> mode. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the previous mode of <computeroutput>s</computeroutput>.</para>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="568" column="13" bodyfile="CGAL/IO/io.h" bodystart="568" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mode</type>
        <definition>Mode CGAL::IO::set_mode</definition>
        <argsstring>(std::ios &amp;s, Mode m)</argsstring>
        <name>set_mode</name>
        <qualifiedname>CGAL::IO::set_mode</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>Mode</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>sets the printing mode of the IO stream <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="589" column="13" bodyfile="CGAL/IO/io.h" bodystart="589" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::IO::is_pretty</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>is_pretty</name>
        <qualifiedname>CGAL::IO::is_pretty</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>checks if the IO stream <computeroutput>s</computeroutput> is in <computeroutput>PRETTY</computeroutput> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="610" column="13" bodyfile="CGAL/IO/io.h" bodystart="610" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::IO::is_ascii</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>is_ascii</name>
        <qualifiedname>CGAL::IO::is_ascii</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>checks if the IO stream <computeroutput>s</computeroutput> is in <computeroutput>ASCII</computeroutput> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="626" column="13" bodyfile="CGAL/IO/io.h" bodystart="626" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::IO::is_binary</definition>
        <argsstring>(std::ios &amp;s)</argsstring>
        <name>is_binary</name>
        <qualifiedname>CGAL::IO::is_binary</qualifiedname>
        <param>
          <type>std::ios &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>checks if the IO stream <computeroutput>s</computeroutput> is in <computeroutput>BINARY</computeroutput> mode. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput></ref> <simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/io.h" line="642" column="13" bodyfile="CGAL/IO/io.h" bodystart="642" bodyend="642"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>  <image type="html" name="io.png"></image>
   Andreas Fabri, Geert-Jan Giezeman, and Lutz Kettner All classes in the CGAL kernel provide input and output operators for I/O streams. The basic task of such an operator is to produce a representation of an object that can be written as a sequence of characters on devices as a console, a file, or a pipe. In CGAL we distinguish between a raw ASCII, a raw binary and a pretty printing format.    <bold>Introduced in:</bold> CGAL 1.0<linebreak/>
 <bold>BibTeX:</bold> <ulink url="../Manual/how_to_cite_cgal.html#cgal:fgk-ios-12-24b">cgal:fgk-ios-12-24b</ulink><linebreak/>
 <bold>License:</bold> <ref refid="license_1licensesLGPL" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">LGPL</ref> <linebreak/>
 </para>
<para>All classes in the CGAL kernel provide input and output operators for I/O streams. CGAL provides three different printing mode, defined in the enum <ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>IO::Mode</computeroutput> </ref>, as well as different functions to set and get the printing mode.</para>
<para><htmlonly block="yes"> &lt;h2 class=&quot;groupheader&quot;&gt;Classified Reference Pages&lt;/h2&gt; </htmlonly></para>
<para><heading level="2">Enum</heading>
</para>
<para><itemizedlist>
<listitem><para><ref refid="group__PkgStreamSupportEnumRef" kindref="compound"><computeroutput>CGAL::IO::Mode</computeroutput> </ref></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Classes</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="classCGAL_1_1IO_1_1Color" kindref="compound">CGAL::IO::Color</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Istream__iterator" kindref="compound">CGAL::Istream_iterator</ref>&lt;T,Stream&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Ostream__iterator" kindref="compound">CGAL::Ostream_iterator</ref>&lt;T,Stream&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Verbose__ostream" kindref="compound">CGAL::Verbose_ostream</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Input__rep" kindref="compound">CGAL::Input_rep</ref>&lt;T,F&gt;</computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="classCGAL_1_1Output__rep" kindref="compound">CGAL::Output_rep</ref>&lt;T,F&gt;</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga3bf176fc0f57ebc0d35e30489967f9dd" kindref="member">CGAL::IO::get_mode()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaf145cf5cbf5e27ebb907a8260002a5f3" kindref="member">CGAL::IO::is_ascii()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga423ff820f482065303852111a2e9f14d" kindref="member">CGAL::IO::is_binary()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga6713a01742201ddbddc3410a4e1f3467" kindref="member">CGAL::IO::is_pretty()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga137e30a6116e8be505077d3a22b373d9" kindref="member">CGAL::IO::set_mode()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7d51c854b865a7eb367e21fc43bd37b8" kindref="member">CGAL::IO::set_ascii_mode()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga7eb5683e79d8aa69059a453dc44cbaa7" kindref="member">CGAL::IO::set_binary_mode()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga2cbb865dd83eedd780f4a452635b1d28" kindref="member">CGAL::IO::set_pretty_mode()</ref></computeroutput></para>
</listitem><listitem><para><ref refid="group__IOstreamOperators" kindref="compound"><computeroutput>CGAL::operator&gt;&gt;()</computeroutput> </ref></para>
</listitem><listitem><para><ref refid="group__IOstreamOperators" kindref="compound"><computeroutput>CGAL::operator&lt;&lt;()</computeroutput> </ref></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1ga8c599d03756553b8a17389aee4c433c9" kindref="member">CGAL::IO::iformat()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__PkgStreamSupportRef_1gaef04729ed020e200594efd0f0f26004f" kindref="member">CGAL::IO::oformat()</ref></computeroutput></para>
</listitem></itemizedlist>
</para>
<para><heading level="2">I/O Functions</heading>
</para>
<para><itemizedlist>
<listitem><para><computeroutput><ref refid="group__IOstreamFunctions_1gaafb0e02f4669802c727709743065804c" kindref="member">CGAL::IO::read_polygon_soup()</ref></computeroutput></para>
</listitem><listitem><para><computeroutput><ref refid="group__IOstreamFunctions_1ga030115449f48c379b0c080328fd730b0" kindref="member">CGAL::IO::write_polygon_soup()</ref></computeroutput></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsSTL" kindref="compound">I/O for STL files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsPLY" kindref="compound">I/O for PLY files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsOBJ" kindref="compound">I/O for OBJ files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsOFF" kindref="compound">I/O for OFF files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsGOCAD" kindref="compound">I/O for GOCAD files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsVTK" kindref="compound">I/O for VTK files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncs3MF" kindref="compound">I/O for 3MF files </ref></para>
</listitem><listitem><para><ref refid="group__PkgStreamSupportIoFuncsWKT" kindref="compound">I/O for WKT files </ref> </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
