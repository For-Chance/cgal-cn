<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgStreamSupportIoFuncsWKT" kind="group">
    <compoundname>PkgStreamSupportIoFuncsWKT</compoundname>
    <title>WKT I/O Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga146a8ad6682cf17ecb008994364284ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_point_WKT</definition>
        <argsstring>(std::istream &amp;in, Point &amp;point)</argsstring>
        <name>read_point_WKT</name>
        <qualifiedname>CGAL::IO::read_point_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Point &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>fills a <computeroutput>Point</computeroutput> from a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para>The first line starting with POINT in the stream will be used.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>can be a <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="76" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="76" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1gac41ebb86e6ca704a703bc7fa73bc1cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiPoint</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_multi_point_WKT</definition>
        <argsstring>(std::istream &amp;in, MultiPoint &amp;mp)</argsstring>
        <name>read_multi_point_WKT</name>
        <qualifiedname>CGAL::IO::read_multi_point_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>MultiPoint &amp;</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
<para>overwrites the content of a <computeroutput>MultiPoint</computeroutput> with the first line starting with MULTIPOINT in the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput>, and have:<itemizedlist>
<listitem><para>a function <computeroutput>push_back()</computeroutput> that takes the same point type,</para>
</listitem><listitem><para>a function <computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">clear()</ref></computeroutput>,</para>
</listitem><listitem><para>a function <computeroutput>resize()</computeroutput> that takes a <computeroutput>size_type</computeroutput></para>
</listitem><listitem><para>an <computeroutput>operator[]()</computeroutput> that takes a <computeroutput>size_type</computeroutput>.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="124" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="124" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1gaa8555eff6ee952cbbbbad9dc6f2d4649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename LineString</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_linestring_WKT</definition>
        <argsstring>(std::istream &amp;in, LineString &amp;polyline)</argsstring>
        <name>read_linestring_WKT</name>
        <qualifiedname>CGAL::IO::read_linestring_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>LineString &amp;</type>
          <declname>polyline</declname>
        </param>
        <briefdescription>
<para>fills a <computeroutput>Linestring</computeroutput> from a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para>The first line starting with LINESTRING in the stream will be used.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Linestring</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput>, and have:<itemizedlist>
<listitem><para>a function <computeroutput>push_back()</computeroutput> that takes a <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput>.</para>
</listitem><listitem><para>a function <computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">clear()</ref></computeroutput>,</para>
</listitem><listitem><para>a function <computeroutput>resize()</computeroutput> that takes a <computeroutput>size_type</computeroutput></para>
</listitem><listitem><para>an <computeroutput>operator[]()</computeroutput> that takes a <computeroutput>size_type</computeroutput>.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="170" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="170" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1gadfbdad1b3362b91368d112ac7484f009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiLineString</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_multi_linestring_WKT</definition>
        <argsstring>(std::istream &amp;in, MultiLineString &amp;mls)</argsstring>
        <name>read_multi_linestring_WKT</name>
        <qualifiedname>CGAL::IO::read_multi_linestring_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>MultiLineString &amp;</type>
          <declname>mls</declname>
        </param>
        <briefdescription>
<para>overwrites the content of a <computeroutput>MultiLineString</computeroutput> with the first line starting with MULTILINESTRING in the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput>Linestring</computeroutput>, and have:<itemizedlist>
<listitem><para>a function <computeroutput>push_back()</computeroutput> that takes a <computeroutput>Linestring</computeroutput>,</para>
</listitem><listitem><para>a function <computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">clear()</ref></computeroutput>,</para>
</listitem><listitem><para>a function <computeroutput>resize()</computeroutput> that takes a <computeroutput>size_type</computeroutput></para>
</listitem><listitem><para>an <computeroutput>operator[]()</computeroutput> that takes a <computeroutput>size_type</computeroutput>.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="214" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="214" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga0bf10061c888cb9be8e2c6e12be48110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_polygon_WKT</definition>
        <argsstring>(std::istream &amp;in, Polygon &amp;polygon)</argsstring>
        <name>read_polygon_WKT</name>
        <qualifiedname>CGAL::IO::read_polygon_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Polygon &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
<para>fills <computeroutput>polygon</computeroutput> from a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para>The first line starting with POLYGON in the stream will be used.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>is a <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="266" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="266" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1gab00420bb054eb7aa139a74910ab9fbd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiPolygon</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_multi_polygon_WKT</definition>
        <argsstring>(std::istream &amp;in, MultiPolygon &amp;polygons)</argsstring>
        <name>read_multi_polygon_WKT</name>
        <qualifiedname>CGAL::IO::read_multi_polygon_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>MultiPolygon &amp;</type>
          <declname>polygons</declname>
        </param>
        <briefdescription>
<para>overwrites the content of a <computeroutput>MultiPolygon</computeroutput> with the first line starting with MULTIPOLYGON in the stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiPolygon</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput>, and have:<itemizedlist>
<listitem><para>a function <computeroutput>push_back()</computeroutput> that takes a <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput>,</para>
</listitem><listitem><para>a function <computeroutput><ref refid="group__PkgBGLHelperFct_1ga4d3b9bb446f55fd37206eeba9d582296" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">clear()</ref></computeroutput>,</para>
</listitem><listitem><para>a function <computeroutput>resize()</computeroutput> that takes a <computeroutput>size_type</computeroutput></para>
</listitem><listitem><para>an <computeroutput>operator[]()</computeroutput> that takes a <computeroutput>size_type</computeroutput>.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="313" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="313" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1gaa359cf97c9c2088e3965838ca047f192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::IO::write_point_WKT</definition>
        <argsstring>(std::ostream &amp;out, const Point &amp;point)</argsstring>
        <name>write_point_WKT</name>
        <qualifiedname>CGAL::IO::write_point_WKT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const Point &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>writes <computeroutput>point</computeroutput> into a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>is a <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="368" column="14" bodyfile="CGAL/IO/WKT.h" bodystart="368" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga11a7d9adde86643a19b8635e83cc3956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Polygon</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::IO::write_polygon_WKT</definition>
        <argsstring>(std::ostream &amp;out, const Polygon &amp;poly)</argsstring>
        <name>write_polygon_WKT</name>
        <qualifiedname>CGAL::IO::write_polygon_WKT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const Polygon &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
<para>writes <computeroutput>poly</computeroutput> into a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Polygon</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="388" column="14" bodyfile="CGAL/IO/WKT.h" bodystart="388" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga9a0cc0e749b686833f12d94a45173258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename LineString</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::IO::write_linestring_WKT</definition>
        <argsstring>(std::ostream &amp;out, LineString ls)</argsstring>
        <name>write_linestring_WKT</name>
        <qualifiedname>CGAL::IO::write_linestring_WKT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>LineString</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
<para>writes the content of <computeroutput>ls</computeroutput> into a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>LineString</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="408" column="14" bodyfile="CGAL/IO/WKT.h" bodystart="408" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1gaafca9701184dfc1f147ef3771f348209" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiPoint</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::IO::write_multi_point_WKT</definition>
        <argsstring>(std::ostream &amp;out, MultiPoint &amp;mp)</argsstring>
        <name>write_multi_point_WKT</name>
        <qualifiedname>CGAL::IO::write_multi_point_WKT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>MultiPoint &amp;</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
<para>writes the content of <computeroutput>mp</computeroutput> into a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="429" column="14" bodyfile="CGAL/IO/WKT.h" bodystart="429" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga56eb9fc151c6a52af723d65612f4d2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiPolygon</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::IO::write_multi_polygon_WKT</definition>
        <argsstring>(std::ostream &amp;out, MultiPolygon &amp;polygons)</argsstring>
        <name>write_multi_polygon_WKT</name>
        <qualifiedname>CGAL::IO::write_multi_polygon_WKT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>MultiPolygon &amp;</type>
          <declname>polygons</declname>
        </param>
        <briefdescription>
<para>writes the content of <computeroutput>polygons</computeroutput> into a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiPolygon</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="450" column="14" bodyfile="CGAL/IO/WKT.h" bodystart="450" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga4c077a50b5782e54133d27ea11c0c3e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiLineString</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; CGAL::IO::write_multi_linestring_WKT</definition>
        <argsstring>(std::ostream &amp;out, MultiLineString &amp;mls)</argsstring>
        <name>write_multi_linestring_WKT</name>
        <qualifiedname>CGAL::IO::write_multi_linestring_WKT</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>MultiLineString &amp;</type>
          <declname>mls</declname>
        </param>
        <briefdescription>
<para>writes the content of <computeroutput>mls</computeroutput> into a WKT stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput>LineString</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportIoFuncsWKT_1ga9a0cc0e749b686833f12d94a45173258" kindref="member">CGAL::IO::write_linestring_WKT()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="478" column="14" bodyfile="CGAL/IO/WKT.h" bodystart="478" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgStreamSupportIoFuncsWKT_1ga774fb181cf36889b2d4da65f4c72bdf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MultiPoint</type>
          </param>
          <param>
            <type>typename MultiLineString</type>
          </param>
          <param>
            <type>typename MultiPolygon</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_WKT</definition>
        <argsstring>(std::istream &amp;is, MultiPoint &amp;points, MultiLineString &amp;polylines, MultiPolygon &amp;polygons)</argsstring>
        <name>read_WKT</name>
        <qualifiedname>CGAL::IO::read_WKT</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>MultiPoint &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>MultiLineString &amp;</type>
          <declname>polylines</declname>
        </param>
        <param>
          <type>MultiPolygon &amp;</type>
          <declname>polygons</declname>
        </param>
        <briefdescription>
<para>reads the content of a WKT stream and fills <computeroutput>points</computeroutput>, <computeroutput>polylines</computeroutput> and <computeroutput>polygons</computeroutput> with all the POINT, MULTIPOINT, LINESTRING, MULTILINESTRING, POLYGON and MULTIPOLYGON it finds in <computeroutput>input</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MultiPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1Point__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_2</ref></computeroutput> or <computeroutput><ref refid="classCGAL_1_1Point__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Kernel_23.tag">CGAL::Point_3</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MultiLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput>Linestring</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MultiPolygon</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of <computeroutput><ref refid="classRandomAccessRange" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">RandomAccessRange</ref></computeroutput> of <computeroutput><ref refid="classCGAL_1_1General__polygon__with__holes__2" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polygon.tag">CGAL::General_polygon_with_holes_2</ref></computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="attention"><para>Only Cartesian Kernels with double or float as <computeroutput>FT</computeroutput> are supported.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput><ref refid="group__PkgStreamSupportIoFuncsWKT_1gaa8555eff6ee952cbbbbad9dc6f2d4649" kindref="member">CGAL::IO::read_linestring_WKT()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/IO/WKT.h" line="515" column="6" bodyfile="CGAL/IO/WKT.h" bodystart="515" bodyend="593"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>I/O Functions for the <ref refid="IOStreamSupportedFileFormats_1IOStreamWKT" kindref="member">Well-Known Text (WKT) File Format</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
