<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Delaunay__triangulation__3" prot="public">CGAL::Delaunay_triangulation_3</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__triangulation__cell__base__3" prot="public">CGAL::Delaunay_triangulation_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Delaunay__triangulation__cell__base__with__circumcenter__3" prot="public">CGAL::Delaunay_triangulation_cell_base_with_circumcenter_3</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__3" prot="public">CGAL::Regular_triangulation_3</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__cell__base__3" prot="public">CGAL::Regular_triangulation_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__cell__base__with__weighted__circumcenter__3" prot="public">CGAL::Regular_triangulation_cell_base_with_weighted_circumcenter_3</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__euclidean__traits__3" prot="public">CGAL::Regular_triangulation_euclidean_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Regular__triangulation__vertex__base__3" prot="public">CGAL::Regular_triangulation_vertex_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Robust__weighted__circumcenter__filtered__traits__3" prot="public">CGAL::Robust_weighted_circumcenter_filtered_traits_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__3" prot="public">CGAL::Triangulation_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__cell__base__3" prot="public">CGAL::Triangulation_cell_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__cell__base__with__info__3" prot="public">CGAL::Triangulation_cell_base_with_info_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__simplex__3" prot="public">CGAL::Triangulation_simplex_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__vertex__base__3" prot="public">CGAL::Triangulation_vertex_base_3</innerclass>
    <innerclass refid="classCGAL_1_1Triangulation__vertex__base__with__info__3" prot="public">CGAL::Triangulation_vertex_base_with_info_3</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgDrawTriangulation3_1ga072412258835c1d7e0e2ddd32eee6537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T3</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const T3 &amp;at3, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const T3 &amp;</type>
          <declname>at3</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>opens a new window and draws a 3D triangulation. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the drawing are taken from the optional graphics scene options parameter.</para>
<para>A call to this function blocks the execution of the program until the drawing window is closed. This function requires <computeroutput>CGAL_Qt6</computeroutput>, and is only available if the macro <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput> is defined. Linking with the cmake target <computeroutput>CGAL::CGAL_Basic_viewer</computeroutput> will link with <computeroutput>CGAL_Qt6</computeroutput> and add the definition <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T3</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Triangulation__3" kindref="compound">CGAL::Triangulation_3</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptions</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>at3</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulation to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;class Gt, class Tds, class LDS, class GSOptions&gt;</computeroutput></para>
<para><computeroutput> void CGAL::draw(const CGAL::Triangulation_3&lt;Gt, Tds, LDS&gt;&amp; at3, const GSOptions&amp; gso); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_triangulation_3.h" line="28" column="6" declfile="CGAL/draw_triangulation_3.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation3_1ga6a09318e75a0fb017c3ee02521f62742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T3</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const T3 &amp;at3)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const T3 &amp;</type>
          <declname>at3</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawTriangulation3_1ga072412258835c1d7e0e2ddd32eee6537" kindref="member">CGAL::draw</ref>(at3, Graphics_scene_options{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_triangulation_3.h" line="35" column="8" declfile="CGAL/draw_triangulation_3.h" declline="35" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation3_1gad19c4dcbe23ac2820bea8cd68c0543e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T3</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const T3 &amp;at3, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const T3 &amp;</type>
          <declname>at3</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>adds the vertices, edges and faces of <computeroutput>at3</computeroutput> into the given graphic scene <computeroutput>gs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the cells are taken from the optional graphics scene options parameter <computeroutput>gso</computeroutput>. Note that <computeroutput>gs</computeroutput> is not cleared before being filled (to enable to draw several data structures in the same basic viewer).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T3</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Triangulation__3" kindref="compound">CGAL::Triangulation_3</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptions</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>at3</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangulation to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gs</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphic scene to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;class Gt, class Tds, class LDS, class GSOptions&gt;</computeroutput></para>
<para><computeroutput> void CGAL::add_to_graphics_scene(const CGAL::Triangulation_3&lt;Gt, Tds, LDS&gt;&amp;  at3, CGAL::Graphics_scene&amp; gs, const GSOptions&amp; gso); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_triangulation_3.h" line="60" column="6" declfile="CGAL/draw_triangulation_3.h" declline="60" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawTriangulation3_1ga9c5293cdc163d0b89f76fa827b36944d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T3</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const T3 &amp;at3, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const T3 &amp;</type>
          <declname>at3</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawTriangulation3_1gad19c4dcbe23ac2820bea8cd68c0543e5" kindref="member">CGAL::add_to_graphics_scene</ref>(at3, gs, Graphics_scene_options{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_triangulation_3.h" line="70" column="6" declfile="CGAL/draw_triangulation_3.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgTriangulation3Ref_1ga53546af7121912bb59adcb8801a3e663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Triangulation</type>
          </param>
          <param>
            <type>class TriangleMesh</type>
          </param>
        </templateparamlist>
        <type>boost::graph_traits&lt; FG &gt;::vertex_descriptor</type>
        <definition>boost::graph_traits&lt; FG &gt;::vertex_descriptor CGAL::link_to_face_graph</definition>
        <argsstring>(const Triangulation &amp;t, typename Triangulation::Vertex_handle vh, TriangleMesh &amp;tm, bool no_infinite_faces=true)</argsstring>
        <name>link_to_face_graph</name>
        <qualifiedname>CGAL::link_to_face_graph</qualifiedname>
        <param>
          <type>const Triangulation &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>typename Triangulation::Vertex_handle</type>
          <declname>vh</declname>
        </param>
        <param>
          <type>TriangleMesh &amp;</type>
          <declname>tm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>no_infinite_faces</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>fills the face graph <computeroutput>tm</computeroutput> with the <ulink url="https://en.wikipedia.org/wiki/Simplicial_complex#Closure.2C_star.2C_and_link">link</ulink> of triangulation vertex <computeroutput>vh</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><computeroutput>T.dimension()</computeroutput>==3.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Triangulation</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a CGAL 3D triangulation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TriangleMesh</parametername>
</parameternamelist>
<parameterdescription>
<para>must be a model of the concept <computeroutput>MutableFaceGraph</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the 3D triangulation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vh</parametername>
</parameternamelist>
<parameterdescription>
<para>the vertex handle of the vertex </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tm</parametername>
</parameternamelist>
<parameterdescription>
<para>the triangle mesh </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>no_infinite_faces</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>vh</computeroutput> is on the convex hull of the triangulation, <computeroutput>no_infinite_faces == true</computeroutput> generates a triangle mesh with a border. Otherwise, this parameter is ignored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the vertex descriptor of the triangle mesh <computeroutput>tm</computeroutput> corresponding to the infinite vertex of <computeroutput>t</computeroutput>, if <computeroutput>vh</computeroutput> is on the convex hull of the triangulation, and if <computeroutput>no_infinite_faces == false</computeroutput>. Otherwise, an arbitrary vertex descriptor of the triangle mesh <computeroutput>tm</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><computeroutput>convex_hull_3_to_face_graph()</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/link_to_face_graph.h" line="30" column="1" declfile="CGAL/link_to_face_graph.h" declline="30" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Delaunay_triangulation_3.h" line="2" column="1"/>
  </compounddef>
</doxygen>
