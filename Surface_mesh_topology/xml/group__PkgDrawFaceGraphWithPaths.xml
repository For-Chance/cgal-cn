<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgDrawFaceGraphWithPaths" kind="group">
    <compoundname>PkgDrawFaceGraphWithPaths</compoundname>
    <title>Draw a Mesh with Paths</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1gaef57f5480a700871bda6a50502338a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Mesh &amp;amesh, const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;apaths, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;</type>
          <declname>apaths</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>opens a new window and draws <computeroutput>amesh</computeroutput>, either a 2D linear cell complex or a model of the <ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref> concept, plus the paths lying on this mesh given in <computeroutput>apaths</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the drawing are taken from the optional graphics scene options parameter.</para>
<para>A call to this function blocks the execution of the program until the drawing window is closed. This function requires <computeroutput>CGAL_Qt6</computeroutput>, and is only available if the macro <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput> is defined. Linking with the cmake target <computeroutput>CGAL::CGAL_Basic_viewer</computeroutput> will link with <computeroutput>CGAL_Qt6</computeroutput> and add the definition <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>either a 2D linear cell complex or a model of the <ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref> concept. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptionsFaceGraphWithPaths</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apaths</parametername>
</parameternamelist>
<parameterdescription>
<para>the paths to draw, which should lie on <computeroutput>amesh</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="19" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1gab2cea28c767cdb9aa317fa11abfc712a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Mesh &amp;amesh, const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;apaths)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;</type>
          <declname>apaths</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawLinearCellComplex_1gaf1430ae5975d4186d8a9a873959826fc" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Linear_cell_complex.tag">CGAL::draw</ref>(amesh, apaths, Graphics_scene_options_face_graph_with_paths{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="29" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="29" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1gab83339b0778c59f99832ed30900b34a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Mesh &amp;amesh, std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt; apaths, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt;</type>
          <declname>apaths</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>Same function than <ulink url="#gaef57f5480a700871bda6a50502338a66"><bold>draw()</bold></ulink> but taking the paths from a list instead from an std::vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="38" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="38" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1gabd7d1f44abaf8e512a06b2240668105a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const Mesh &amp;amesh, std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt; apaths)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt;</type>
          <declname>apaths</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawLinearCellComplex_1gaf1430ae5975d4186d8a9a873959826fc" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Linear_cell_complex.tag">CGAL::draw</ref>(amesh, apaths, Graphics_scene_options_face_graph_with_paths{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="48" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="48" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1gaa011d277d42130437c8665030ea12f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Mesh &amp;amesh, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso, const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;apaths)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <param>
          <type>const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;</type>
          <declname>apaths</declname>
        </param>
        <briefdescription>
<para>adds the vertices, edges and faces of <computeroutput>amesh</computeroutput>, either a 2D linear cell complex or a model of the <ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref> concept, plus the paths lying on this mesh given in <computeroutput>apaths</computeroutput>, into the given graphic scene <computeroutput>gs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the cells are taken from the optional graphics scene options parameter <computeroutput>gso</computeroutput>. Note that <computeroutput>gs</computeroutput> is not cleared before being filled (to enable to draw several data structures in the same basic viewer).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>either a 2D linear cell complex or a model of the <ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref> concept. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptionsFaceGraphWithPaths</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amesh</parametername>
</parameternamelist>
<parameterdescription>
<para>the mesh to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gs</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphic scene to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>apaths</parametername>
</parameternamelist>
<parameterdescription>
<para>the paths to draw, which should lie on <computeroutput>amesh</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="65" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1ga5795bacf5f5b2f6730ca9e4662904adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Mesh &amp;amesh, CGAL::Graphics_scene &amp;gs, const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;apaths)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const std::vector&lt; Surface_mesh_topology::Path_on_surface&lt; Mesh &gt; &gt; &amp;</type>
          <declname>apaths</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawLinearCellComplex_1ga1967f19a555c5385cc33992d52e8b65e" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Linear_cell_complex.tag">CGAL::add_to_graphics_scene</ref>(amesh, gs, Graphics_scene_options_face_graph_with_paths{}, apaths)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="76" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1ga766e94c64d37ddf1db9e7aa4e7417a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Mesh &amp;amesh, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso, std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt; apaths)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt;</type>
          <declname>apaths</declname>
        </param>
        <briefdescription>
<para>Same function than <ulink url="#gaa011d277d42130437c8665030ea12f97"><bold>add_to_graphics_scene()</bold></ulink> but taking the paths from a list instead from an std::vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="86" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawFaceGraphWithPaths_1ga8327c7fedaff1d9f47341be713d9fb22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Mesh</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Mesh &amp;amesh, CGAL::Graphics_scene &amp;gs, std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt; apaths)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; Path_on_surface&lt; Mesh &gt; &gt;</type>
          <declname>apaths</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawLinearCellComplex_1ga1967f19a555c5385cc33992d52e8b65e" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Linear_cell_complex.tag">CGAL::add_to_graphics_scene</ref>(amesh, gs, Graphics_scene_options_face_graph_with_paths{}, apaths)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_face_graph_with_paths.h" line="97" column="6" declfile="CGAL/draw_face_graph_with_paths.h" declline="97" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><computeroutput>#include&lt;CGAL/draw_face_graph_with_paths.h&gt;</computeroutput> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
