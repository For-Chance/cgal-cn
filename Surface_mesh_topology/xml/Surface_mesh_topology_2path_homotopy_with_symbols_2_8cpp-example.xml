<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="Surface_mesh_topology_2path_homotopy_with_symbols_2_8cpp-example" kind="example">
    <compoundname>Surface_mesh_topology/path_homotopy_with_symbols_2.cpp</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="Surface_mesh_topology/path_homotopy_with_symbols_2.cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;CGAL/Polygonal_schema.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Path_on_surface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CGAL/Curves_on_surface_topology.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Polygonal__schema__with__combinatorial__map" kindref="compound">CGAL::Surface_mesh_topology::Polygonal_schema_with_combinatorial_map&lt;&gt;</ref><sp/>PS;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PS<sp/>ps;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.add_facet(</highlight><highlight class="stringliteral">&quot;a<sp/>b<sp/>-a<sp/>c&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>First<sp/>facet,<sp/>giving<sp/>directly<sp/>its<sp/>sequence<sp/>of<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.add_facet(</highlight><highlight class="stringliteral">&quot;d<sp/>-c<sp/>e<sp/>-b&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Second<sp/>facet</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.init_facet();<sp/></highlight><highlight class="comment">//<sp/>Third<sp/>facet</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.add_edges_to_facet(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>each<sp/>edge<sp/>is<sp/>added<sp/>one<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.add_edges_to_facet(</highlight><highlight class="stringliteral">&quot;-d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.add_edges_to_facet(</highlight><highlight class="stringliteral">&quot;-f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.add_edges_to_facet(</highlight><highlight class="stringliteral">&quot;-e&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.finish_facet();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.perforate_facet(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>cells<sp/>of<sp/>the<sp/>combinatorial<sp/>maps:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ps.display_characteristics(std::cout)&lt;&lt;std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface" kindref="compound">CGAL::Surface_mesh_topology::Path_on_surface&lt;PS&gt;</ref><sp/>p(ps);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>p.push_back_by_label(</highlight><highlight class="stringliteral">&quot;a<sp/>b<sp/>-a<sp/>e<sp/>-b<sp/>d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Curves__on__surface__topology" kindref="compound">CGAL::Surface_mesh_topology::Curves_on_surface_topology&lt;PS&gt;</ref><sp/>cst(ps);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res=cst.is_contractible(p);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Path<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;(res?</highlight><highlight class="stringliteral">&quot;IS&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;IS<sp/>NOT&quot;</highlight><highlight class="normal">)&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>contractible.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="examples.txt"/>
  </compounddef>
</doxygen>
