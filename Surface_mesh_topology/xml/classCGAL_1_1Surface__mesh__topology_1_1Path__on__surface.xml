<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface" kind="class" language="C++" prot="public">
    <compoundname>CGAL::Surface_mesh_topology::Path_on_surface</compoundname>
    <includes local="no">CGAL/Path_on_surface.h</includes>
    <templateparamlist>
      <param>
        <type>typename Mesh</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a5f6f8760175c123edcbae62fb7ce04e4" prot="public" static="no">
        <type><ref refid="classunspecified__type" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">unspecified_type</ref></type>
        <definition>typedef unspecified_type CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::halfedge_descriptor</definition>
        <argsstring></argsstring>
        <name>halfedge_descriptor</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::halfedge_descriptor</qualifiedname>
        <briefdescription>
<para>A handle to <computeroutput>Dart</computeroutput> for combinatorial/generalized maps, or a halfedge descriptor for models of the <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> concept. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="18" column="30" bodyfile="CGAL/Path_on_surface.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1ad51f8aa548bc907327904fcea4f9ff96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::Path_on_surface</definition>
        <argsstring>(const Mesh &amp;amesh)</argsstring>
        <name>Path_on_surface</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::Path_on_surface</qualifiedname>
        <param>
          <type>const Mesh &amp;</type>
          <declname>amesh</declname>
        </param>
        <briefdescription>
<para>creates an empty path object which lies on <computeroutput>amesh</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1acda772afa7e2f2851974f1398ae04d00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::is_empty</definition>
        <argsstring>() const</argsstring>
        <name>is_empty</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::is_empty</qualifiedname>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff this path is empty </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="24" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a16ead319d042e66c17faa0cd31b56152" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::is_closed</definition>
        <argsstring>() const</argsstring>
        <name>is_closed</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::is_closed</qualifiedname>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff this path is closed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="27" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a273bf6cf48f71931b6793248acf99ae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::is_simple</definition>
        <argsstring>() const</argsstring>
        <name>is_simple</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::is_simple</qualifiedname>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff this path does not pass twice through a same edge or a same vertex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="30" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7dc4d68b6bbc174b07398190edd855f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::length</qualifiedname>
        <briefdescription>
<para>returns the length of the path, i.e. its number of edges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="33" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1abf8d11d33d4b366a72290f1b78c801be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a5f6f8760175c123edcbae62fb7ce04e4" kindref="member">halfedge_descriptor</ref></type>
        <definition>halfedge_descriptor CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::operator[]</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::operator[]</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns the ith dart of the path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>i&lt;<computeroutput><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7dc4d68b6bbc174b07398190edd855f9" kindref="member">length()</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="37" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a9ba1154cfe4e58b35a0cacca4f90b0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::clear</qualifiedname>
        <briefdescription>
<para>clears this path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a3aae17ee1adefd962310e19994a8b620" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::can_be_pushed</definition>
        <argsstring>(halfedge_descriptor hd, bool flip=false) const</argsstring>
        <name>can_be_pushed</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::can_be_pushed</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a5f6f8760175c123edcbae62fb7ce04e4" kindref="member">halfedge_descriptor</ref></type>
          <declname>hd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flip</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff <computeroutput>hd</computeroutput> can be added at the end of this path. If <computeroutput>flip</computeroutput> is true, the direction of <computeroutput>hd</computeroutput> is reversed before checking </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7ab5d5739194b4c972aa74c49cb05543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::push_back</definition>
        <argsstring>(halfedge_descriptor hd, bool flip=false)</argsstring>
        <name>push_back</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::push_back</qualifiedname>
        <param>
          <type><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a5f6f8760175c123edcbae62fb7ce04e4" kindref="member">halfedge_descriptor</ref></type>
          <declname>hd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>flip</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>adds <computeroutput>hd</computeroutput> at the end of this path. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>flip</computeroutput> is true, the opposite of <computeroutput>hd</computeroutput> is considered. <simplesect kind="pre"><para><computeroutput>can_be_pushed(hd)</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1acdd26daa275609bb5b34606dac122d7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::can_be_pushed_by_index</definition>
        <argsstring>(std::size_t i) const</argsstring>
        <name>can_be_pushed_by_index</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::can_be_pushed_by_index</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the dart/halfedge with index <computeroutput>i</computeroutput> can be added at the end of this path. </para>
        </briefdescription>
        <detaileddescription>
<para>If Mesh is a <computeroutput><ref refid="classCGAL_1_1Polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyhedron.tag">Polyhedron_3</ref></computeroutput>, takes time proportional to the number of darts/halfedges. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="51" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a3bf430e3e6fc0fd2d173b98cffcdb89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::push_back_by_index</definition>
        <argsstring>(std::size_t i)</argsstring>
        <name>push_back_by_index</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::push_back_by_index</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>adds the dart/halfedge with index <computeroutput>i</computeroutput> at the end of this path. </para>
        </briefdescription>
        <detaileddescription>
<para>If Mesh is a <computeroutput><ref refid="classCGAL_1_1Polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyhedron.tag">Polyhedron_3</ref></computeroutput>, takes time proportional to the number of halfedges. <simplesect kind="pre"><para><computeroutput>can_be_pushed_by_index(i)</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a0876bf4a6d720ec94be64f7f9d63c766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::push_back_by_index</definition>
        <argsstring>(std::initializer_list&lt; std::size_t &gt; l)</argsstring>
        <name>push_back_by_index</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::push_back_by_index</qualifiedname>
        <param>
          <type>std::initializer_list&lt; std::size_t &gt;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>adds successively all dart/halfedges in <computeroutput>l</computeroutput> (a sequence of indices), at the end of the path. </para>
        </briefdescription>
        <detaileddescription>
<para>If Mesh is a <computeroutput><ref refid="classCGAL_1_1Polyhedron__3" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Polyhedron.tag">Polyhedron_3</ref></computeroutput>, takes time proportional to the number of halfedges. For each index <computeroutput>i</computeroutput>, <computeroutput>can_be_pushed_by_index(i)</computeroutput> should be true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a1d84ab79576f8f41f5124c2b5fe7c55f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::extend_positive_turn</definition>
        <argsstring>(std::size_t nb)</argsstring>
        <name>extend_positive_turn</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::extend_positive_turn</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>adds the dart/halfedge obtained by turning <computeroutput>nb</computeroutput> times around the target vertex of the last dart/halfedge in this path, in the positive circular order. </para>
        </briefdescription>
        <detaileddescription>
<para>To extend with a positive 1 turn thus amounts to extend with the <computeroutput>next()</computeroutput> pointer. (A zero turn corresponds to the <computeroutput>opposite()</computeroutput> pointer.) <simplesect kind="pre"><para>!<computeroutput><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1acda772afa7e2f2851974f1398ae04d00" kindref="member">is_empty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a3b1629a7e6e46e0477166a18ae1d1e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::extend_negative_turn</definition>
        <argsstring>(std::size_t nb)</argsstring>
        <name>extend_negative_turn</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::extend_negative_turn</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>adds the dart/halfedge obtained by turning <computeroutput>nb</computeroutput> times around the target vertex of the last dart/halfedge in this path, in the negative circular order. </para>
        </briefdescription>
        <detaileddescription>
<para>To extend with a negative 1 turn thus amounts to extend with the composite pointer: <computeroutput>opposite(prev(opposite()))</computeroutput>. <simplesect kind="pre"><para>!<computeroutput><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1acda772afa7e2f2851974f1398ae04d00" kindref="member">is_empty()</ref></computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a9dc8e934c952a9b3ac3578878d19093c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::can_be_pushed_by_label</definition>
        <argsstring>(const std::string &amp;l) const</argsstring>
        <name>can_be_pushed_by_label</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::can_be_pushed_by_label</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> iff the dart/halfedge with label <computeroutput>l</computeroutput> can be added at the end of this path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>Mesh must be a model of <computeroutput><ref refid="classPolygonalSchema" kindref="compound">PolygonalSchema</ref></computeroutput> concept. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1afad1f86d456ab700558a703bb9dff496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::push_back_by_label</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>push_back_by_label</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::push_back_by_label</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>adds successively all darts/halfedges in <computeroutput>s</computeroutput> (a sequence of labels separated by spaces) at the end of this path. </para>
        </briefdescription>
        <detaileddescription>
<para>For each label, l, <computeroutput>can_be_pushed_by_label(l)</computeroutput> should be true. <simplesect kind="pre"><para>Mesh must be a model of <computeroutput><ref refid="classPolygonalSchema" kindref="compound">PolygonalSchema</ref></computeroutput> concept. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1ad3cc8980f80c3b17b66b7a8600810c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Self &amp;</type>
        <definition>Self &amp; CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::operator+=</definition>
        <argsstring>(const Self &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::operator+=</qualifiedname>
        <param>
          <type>const Self &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>concatenates <computeroutput>other</computeroutput> to this path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>the last vertex of this path should coincide with the first vertex of <computeroutput>other</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1afe643c7a1a2f005277b30fbcc06bc710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::reverse</definition>
        <argsstring>()</argsstring>
        <name>reverse</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::reverse</qualifiedname>
        <briefdescription>
<para>reverses this path (i.e. negates its orientation). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a10d3e1b1563e882ad1bc58655dc8fee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::generate_random_path</definition>
        <argsstring>(std::size_t length, Random &amp;random=get_default_random())</argsstring>
        <name>generate_random_path</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::generate_random_path</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>Random &amp;</type>
          <declname>random</declname>
          <defval>get_default_random()</defval>
        </param>
        <briefdescription>
<para>creates a random open path with <computeroutput>length</computeroutput> darts/halfedges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7b6cb5478efe630cee3142fbe233224e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CGAL::Surface_mesh_topology::Path_on_surface&lt; Mesh &gt;::generate_random_closed_path</definition>
        <argsstring>(std::size_t length, Random &amp;random=get_default_random())</argsstring>
        <name>generate_random_closed_path</name>
        <qualifiedname>CGAL::Surface_mesh_topology::Path_on_surface::generate_random_closed_path</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>Random &amp;</type>
          <declname>random</declname>
          <defval>get_default_random()</defval>
        </param>
        <briefdescription>
<para>creates a random closed path with at least <computeroutput>length</computeroutput> darts/halfedges. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Path_on_surface.h" line="90" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <computeroutput><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface" kindref="compound">Path_on_surface</ref></computeroutput> represents a walk in a mesh which is either a model of <computeroutput><ref refid="classCombinatorialMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Combinatorial_map.tag">CombinatorialMap</ref></computeroutput>, a model of <computeroutput><ref refid="classGeneralizedMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Generalized_map.tag">GeneralizedMap</ref></computeroutput> or a model of a <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>Each object of this class is constructed from an external mesh on which the path should lie. A path is represented as a sequence of darts or halfedges, each one representing an oriented edge in the path. The class <computeroutput><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface" kindref="compound">Path_on_surface</ref></computeroutput> behaves as a container for this sequence of darts/halfedges. Elements are added in the path one at a time to the path thanks to the <computeroutput><ref refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7ab5d5739194b4c972aa74c49cb05543" kindref="member">push_back()</ref></computeroutput> method.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Mesh</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput><ref refid="classCombinatorialMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Combinatorial_map.tag">CombinatorialMap</ref></computeroutput>, <computeroutput><ref refid="classGeneralizedMap" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Generalized_map.tag">GeneralizedMap</ref></computeroutput> or of <computeroutput><ref refid="classFaceGraph" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">FaceGraph</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="CGAL/Path_on_surface.h" line="12" column="3" bodyfile="CGAL/Path_on_surface.h" bodystart="13" bodyend="91"/>
    <listofallmembers>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a3aae17ee1adefd962310e19994a8b620" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>can_be_pushed</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1acdd26daa275609bb5b34606dac122d7f" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>can_be_pushed_by_index</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a9dc8e934c952a9b3ac3578878d19093c" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>can_be_pushed_by_label</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a9ba1154cfe4e58b35a0cacca4f90b0a9" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>clear</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a3b1629a7e6e46e0477166a18ae1d1e96" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>extend_negative_turn</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a1d84ab79576f8f41f5124c2b5fe7c55f" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>extend_positive_turn</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7b6cb5478efe630cee3142fbe233224e" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>generate_random_closed_path</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a10d3e1b1563e882ad1bc58655dc8fee0" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>generate_random_path</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a5f6f8760175c123edcbae62fb7ce04e4" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>halfedge_descriptor</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a16ead319d042e66c17faa0cd31b56152" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>is_closed</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1acda772afa7e2f2851974f1398ae04d00" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>is_empty</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a273bf6cf48f71931b6793248acf99ae0" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>is_simple</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7dc4d68b6bbc174b07398190edd855f9" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>length</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1ad3cc8980f80c3b17b66b7a8600810c5b" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>operator+=</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1abf8d11d33d4b366a72290f1b78c801be" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>operator[]</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1ad51f8aa548bc907327904fcea4f9ff96" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>Path_on_surface</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a7ab5d5739194b4c972aa74c49cb05543" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>push_back</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a3bf430e3e6fc0fd2d173b98cffcdb89d" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>push_back_by_index</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1a0876bf4a6d720ec94be64f7f9d63c766" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>push_back_by_index</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1afad1f86d456ab700558a703bb9dff496" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>push_back_by_label</name></member>
      <member refid="classCGAL_1_1Surface__mesh__topology_1_1Path__on__surface_1afe643c7a1a2f005277b30fbcc06bc710" prot="public" virt="non-virtual"><scope>CGAL::Surface_mesh_topology::Path_on_surface</scope><name>reverse</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
