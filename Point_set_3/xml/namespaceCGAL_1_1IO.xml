<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL_1_1IO" kind="namespace" language="C++">
    <compoundname>CGAL::IO</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgPointSet3IO_1gade7dbb6c22e93441b0868c214e2858e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_point_set</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;ps, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_point_set</name>
        <qualifiedname>CGAL::IO::read_point_set</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>reads the point set from an input file. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para>IOStreamOFF (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para>IOStreamPLY (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para>IOStreamLAS (<computeroutput>.las</computeroutput>)</para>
</listitem><listitem><para>IOStreamXYZ (<computeroutput>.xyz</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the filename extension (letter case is not important). If the file contains normal vectors, the normal map is added to the point set. For PLY input, all point properties found in the header are added.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be read in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only relevant for <computeroutput>PLY</computeroutput> writing: the <computeroutput>OFF</computeroutput> and <computeroutput>XYZ</computeroutput> formats are always ASCII, and the <computeroutput>LAS</computeroutput> format is always binary. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO.h" line="122" column="6" bodyfile="CGAL/Point_set_3/IO.h" bodystart="122" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IO_1gacba0bfce8fbaa7cacd291d9649891f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_point_set</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;ps, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_point_set</name>
        <qualifiedname>CGAL::IO::write_point_set</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes the point set in an output file. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para>IOStreamOFF (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para>IOStreamPLY (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para>IOStreamLAS (<computeroutput>.las</computeroutput>)</para>
</listitem><listitem><para>IOStreamXYZ (<computeroutput>.xyz</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the filename extension (letter case is not important).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be written in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only relevant for <computeroutput>PLY</computeroutput> writing: the <computeroutput>OFF</computeroutput> and <computeroutput>XYZ</computeroutput> formats are always ASCII, and the <computeroutput>LAS</computeroutput> format is always binary. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>6</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO.h" line="217" column="6" bodyfile="CGAL/Point_set_3/IO.h" bodystart="217" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOLAS_1ga87dc5f0f0d96c5a75286f5996e414aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_LAS</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_LAS</name>
        <qualifiedname>CGAL::IO::read_LAS</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>reads the content of an input stream in the IOStreamLAS into a point set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>To read a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ifstream</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>All LAS properties are read as described in <computeroutput>read_LAS_with_properties()</computeroutput>.</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/LAS.h" line="67" column="6" bodyfile="CGAL/Point_set_3/IO/LAS.h" bodystart="67" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOLAS_1gafcba54318cea1ea8513d77722d7cac4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_LAS</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_LAS</name>
        <qualifiedname>CGAL::IO::read_LAS</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>reads the content of an input file in the IOStreamLAS into a point set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>All LAS properties are read as described in <computeroutput>read_LAS_with_properties()</computeroutput>.</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/LAS.h" line="160" column="6" bodyfile="CGAL/Point_set_3/IO/LAS.h" bodystart="160" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOLAS_1ga0c12c2bb8a472ab6e4b31930ef124c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_LAS</definition>
        <argsstring>(std::ostream &amp;os, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>write_LAS</name>
        <qualifiedname>CGAL::IO::write_LAS</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>writes the content of a point set into an output stream in the IOStreamLAS. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="attention"><para>To write to a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ofstream</computeroutput>.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>All LAS properties are written as described in <computeroutput>read_LAS_with_properties()</computeroutput>.</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/LAS.h" line="204" column="6" bodyfile="CGAL/Point_set_3/IO/LAS.h" bodystart="204" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOLAS_1ga1437b4cb885abe35039ff847ec30eff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_LAS</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>write_LAS</name>
        <qualifiedname>CGAL::IO::write_LAS</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>writes the content of a point set into an output file in the IOStreamLAS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>All LAS properties are written as described in <computeroutput>read_LAS_with_properties()</computeroutput>.</para>
</simplesect>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/LAS.h" line="389" column="6" bodyfile="CGAL/Point_set_3/IO/LAS.h" bodystart="389" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOOFF_1ga7c81c321554271487cb19b61672cc1b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_OFF</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_OFF</name>
        <qualifiedname>CGAL::IO::read_OFF</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>reads the content of an input stream in the IOStreamOFF into a point set. </para>
        </briefdescription>
        <detaileddescription>
<para>If normals are present in the input (NOFF), a normal map will be created and filled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/OFF.h" line="49" column="6" bodyfile="CGAL/Point_set_3/IO/OFF.h" bodystart="49" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOOFF_1gaedea2b893bc508a45ac9e34fe7d3f0b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_OFF</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_OFF</name>
        <qualifiedname>CGAL::IO::read_OFF</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>reads the content of an input file in the IOStreamOFF into a point set. </para>
        </briefdescription>
        <detaileddescription>
<para>If normals are present in the input (NOFF), a normal map will be created and filled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/OFF.h" line="87" column="6" bodyfile="CGAL/Point_set_3/IO/OFF.h" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOOFF_1ga651700e4589fae953b7a73ccfcc58db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_OFF</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_OFF</name>
        <qualifiedname>CGAL::IO::write_OFF</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes the content of a point set into an output stream in the IOStreamOFF. </para>
        </briefdescription>
        <detaileddescription>
<para>If it exists, the normal map associated to the point set is inserted in the stream.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold>the precision of the stream <computeroutput>os</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/OFF.h" line="138" column="6" bodyfile="CGAL/Point_set_3/IO/OFF.h" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOOFF_1gabddeae7861c3256dba7801433a23b9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_OFF</definition>
        <argsstring>(const std::string &amp;fname, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_OFF</name>
        <qualifiedname>CGAL::IO::write_OFF</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes the content of a point set into an output file in the IOStreamOFF. </para>
        </briefdescription>
        <detaileddescription>
<para>If it exists, the normal map associated to the point set is inserted in the file.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>6</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/OFF.h" line="177" column="6" bodyfile="CGAL/Point_set_3/IO/OFF.h" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOPLY_1ga8fc1750616dd8e7b7eb67bd1bd9413df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_PLY</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, std::string &amp;comments)</argsstring>
        <name>read_PLY</name>
        <qualifiedname>CGAL::IO::read_PLY</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <briefdescription>
<para>reads a point set with properties from an input stream in ASCII or binary IOStreamPLY. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>the operator reads the vertex <computeroutput>point</computeroutput> property;</para>
</listitem><listitem><para>if three PLY properties <computeroutput>nx</computeroutput>, <computeroutput>ny</computeroutput> and <computeroutput>nz</computeroutput> with type <computeroutput>float</computeroutput> or <computeroutput>double</computeroutput> are found, the normal map is added;</para>
</listitem><listitem><para>if any other PLY property is found, a &quot;[name]&quot; property map is added, where <computeroutput>[name]</computeroutput> is the name of the PLY property.</para>
</listitem></itemizedlist>
</para>
<para>The <computeroutput>comments</computeroutput> parameter can be omitted. If provided, it will be used to store the potential comments found in the PLY header. Each line starting by &quot;comment &quot; in the header is appended to the <computeroutput>comments</computeroutput> string (without the &quot;comment &quot; word).</para>
<para><simplesect kind="attention"><para>To read a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ifstream</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>optional PLY comments.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="240" column="6" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="240" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOPLY_1ga02f288f712c437a9113fb5311a918d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_PLY</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, std::string &amp;comments, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_PLY</name>
        <qualifiedname>CGAL::IO::read_PLY</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>reads a point set with properties from an input stream in ASCII or binary IOStreamPLY. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>the operator reads the vertex <computeroutput>point</computeroutput> property;</para>
</listitem><listitem><para>if three PLY properties <computeroutput>nx</computeroutput>, <computeroutput>ny</computeroutput> and <computeroutput>nz</computeroutput> with type <computeroutput>float</computeroutput> or <computeroutput>double</computeroutput> are found, the normal map is added;</para>
</listitem><listitem><para>if any other PLY property is found, a &quot;[name]&quot; property map is added, where <computeroutput>[name]</computeroutput> is the name of the PLY property.</para>
</listitem></itemizedlist>
</para>
<para>The <computeroutput>comments</computeroutput> parameter can be omitted. If provided, it will be used to store the potential comments found in the PLY header. Each line starting by &quot;comment &quot; in the header is appended to the <computeroutput>comments</computeroutput> string (without the &quot;comment &quot; word).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>optional PLY comments. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>optional Named Parameters described below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be read in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="337" column="6" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="337" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOPLY_1ga879e77653e6be14c290aa6f7f0f6383b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_PLY</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const std::string &amp;comments, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_PLY</name>
        <qualifiedname>CGAL::IO::write_PLY</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes a point set with properties in an output stream in the IOStreamPLY. </para>
        </briefdescription>
        <detaileddescription>
<para>If it exists, the normal map is inserted in the stream. All other properties with simple types are inserted in the stream.</para>
<para>If provided, the <computeroutput>comments</computeroutput> string is included line by line in the header of the PLY stream (each line will be precedeed by &quot;comment &quot;).</para>
<para><simplesect kind="attention"><para>To write to a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ofstream</computeroutput>, and the <ref refid="" kindref="compound"><computeroutput>IO::Mode</computeroutput> </ref> of the stream must be set to <computeroutput>BINARY</computeroutput>.</para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>optional PLY comments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold>the precision of the stream <computeroutput>os</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only meaningful while using ASCII encoding. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="431" column="6" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="431" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOPLY_1ga5d861024d03b21ccc02047b83e428a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_PLY</definition>
        <argsstring>(const std::string &amp;fname, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const std::string &amp;comments, const NamedParameters &amp;np)</argsstring>
        <name>write_PLY</name>
        <qualifiedname>CGAL::IO::write_PLY</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>comments</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
        </param>
        <briefdescription>
<para>writes a point set with properties in an output stream in the IOStreamPLY. </para>
        </briefdescription>
        <detaileddescription>
<para>If it exists, the normal map is written in the file. All other properties with simple types are written in the file.</para>
<para>If provided, the <computeroutput>comments</computeroutput> string is included line by line in the header of the PLY stream (each line will be precedeed by &quot;comment &quot;).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comments</parametername>
</parameternamelist>
<parameterdescription>
<para>optional PLY comments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be read in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>6</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only meaningful while using ASCII encoding. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="683" column="6" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="683" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOXYZ_1gaa21dccecfcfb73b70fd47607dfe6cbc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_XYZ</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_XYZ</name>
        <qualifiedname>CGAL::IO::read_XYZ</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>reads the content of an input stream in the IOStreamXYZ into a point set. </para>
        </briefdescription>
        <detaileddescription>
<para>If normals are present in the input stream, a normal map will be created and filled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/XYZ.h" line="48" column="6" bodyfile="CGAL/Point_set_3/IO/XYZ.h" bodystart="48" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOXYZ_1gab97a417cf36ec49afb169ad32cd05393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_XYZ</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_XYZ</name>
        <qualifiedname>CGAL::IO::read_XYZ</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
<para>reads the content of an input file in the IOStreamXYZ into a point set. </para>
        </briefdescription>
        <detaileddescription>
<para>If normals are present in the input file, a normal map will be created and filled.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/XYZ.h" line="86" column="6" bodyfile="CGAL/Point_set_3/IO/XYZ.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOXYZ_1ga1f687a98677a374b1aaa6cefce0e811d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_XYZ</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_XYZ</name>
        <qualifiedname>CGAL::IO::write_XYZ</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes the content of a point set into an output stream in the IOStreamXYZ. </para>
        </briefdescription>
        <detaileddescription>
<para>If it exists, the normal map associated to the point set is inserted in the stream.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold>the precision of the stream <computeroutput>os</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/XYZ.h" line="136" column="6" bodyfile="CGAL/Point_set_3/IO/XYZ.h" bodystart="136" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IOXYZ_1gab01d9fba341860959749a7dde9aa0ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval>CGAL::parameters::Default_named_parameters</defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_XYZ</definition>
        <argsstring>(const std::string &amp;fname, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_XYZ</name>
        <qualifiedname>CGAL::IO::write_XYZ</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes the content of a point set into an output file in the IOStreamXYZ. </para>
        </briefdescription>
        <detaileddescription>
<para>If it exists, the normal map associated to the point set is inserted in the stream.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of Named Parameters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point_set</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of Named Parameters among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>6</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/XYZ.h" line="174" column="6" bodyfile="CGAL/Point_set_3/IO/XYZ.h" bodystart="174" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CGAL/Point_set_3/IO.h" line="84" column="1"/>
  </compounddef>
</doxygen>
