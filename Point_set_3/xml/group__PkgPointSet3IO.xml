<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="group__PkgPointSet3IO" kind="group">
    <compoundname>PkgPointSet3IO</compoundname>
    <title>Input/Output</title>
    <innergroup refid="group__PkgPointSet3IOLAS">Input/Output (LAS)</innergroup>
    <innergroup refid="group__PkgPointSet3IOOFF">Input/Output (OFF)</innergroup>
    <innergroup refid="group__PkgPointSet3IOPLY">Input/Output (PLY)</innergroup>
    <innergroup refid="group__PkgPointSet3IOXYZ">Input/Output (XYZ)</innergroup>
    <innergroup refid="group__PkgPointSet3IODeprecated">Input/Output (Deprecated)</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgPointSet3IO_1gade7dbb6c22e93441b0868c214e2858e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::read_point_set</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;ps, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>read_point_set</name>
        <qualifiedname>CGAL::IO::read_point_set</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>reads the point set from an input file. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOFF" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Object File Format (OFF)</ref> (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref> (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamLAS" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">LAS (Lidar) File Format</ref> (<computeroutput>.las</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamXYZ" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">XYZ File Format</ref> (<computeroutput>.xyz</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the filename extension (letter case is not important). If the file contains normal vectors, the normal map is added to the point set. For PLY input, all point properties found in the header are added.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the input file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="1" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be read in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only relevant for <computeroutput>PLY</computeroutput> writing: the <computeroutput>OFF</computeroutput> and <computeroutput>XYZ</computeroutput> formats are always ASCII, and the <computeroutput>LAS</computeroutput> format is always binary. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the reading was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO.h" line="122" column="6" bodyfile="CGAL/Point_set_3/IO.h" bodystart="122" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IO_1gacba0bfce8fbaa7cacd291d9649891f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
          <param>
            <type>typename NamedParameters</type>
            <defval><ref refid="group__PkgSTLExtensionRef_1ga1ea7a72cb4d04623ca568523ba262c9b" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/STL_Extension.tag">CGAL::parameters::Default_named_parameters</ref></defval>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::IO::write_point_set</definition>
        <argsstring>(const std::string &amp;fname, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;ps, const NamedParameters &amp;np=parameters::default_values())</argsstring>
        <name>write_point_set</name>
        <qualifiedname>CGAL::IO::write_point_set</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>const NamedParameters &amp;</type>
          <declname>np</declname>
          <defval>parameters::default_values()</defval>
        </param>
        <briefdescription>
<para>writes the point set in an output file. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOFF" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Object File Format (OFF)</ref> (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref> (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamLAS" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">LAS (Lidar) File Format</ref> (<computeroutput>.las</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamXYZ" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">XYZ File Format</ref> (<computeroutput>.xyz</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the filename extension (letter case is not important).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>the point type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector type of the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref></computeroutput> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NamedParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>a sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the output file </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>np</parametername>
</parameternamelist>
<parameterdescription>
<para>an optional sequence of <ref refid="group__bgl__namedparameters" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/BGL.tag">Named Parameters</ref> among the ones listed below</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<variablelist>
<varlistentry><term>Optional Named Parameters</term></varlistentry>
<listitem><para><table rows="2" cols="2"><row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>use_binary_mode</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>indicates whether data should be written in binary (<computeroutput>true</computeroutput>) or in ASCII (<computeroutput>false</computeroutput>) </para>
</listitem>
<listitem>
<para><bold>Type: </bold>Boolean </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>true</computeroutput> </para>
</listitem>
<listitem>
<para><bold>Extra: </bold>This parameter is only relevant for <computeroutput>PLY</computeroutput> writing: the <computeroutput>OFF</computeroutput> and <computeroutput>XYZ</computeroutput> formats are always ASCII, and the <computeroutput>LAS</computeroutput> format is always binary. </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
<para></para>
</entry></row>
<row>
<entry thead="no"><para><htmlonly block="yes"> &lt;button class=&quot;collapsible&quot;&gt;</htmlonly> <bold>stream_precision</bold> <htmlonly block="yes">&lt;/button&gt; &lt;div class=&quot;content&quot;&gt;</htmlonly><itemizedlist>
<listitem>
<para>a parameter used to set the precision (i.e. how many digits are generated) of the output stream </para>
</listitem>
<listitem>
<para><bold>Type: </bold>int </para>
</listitem>
<listitem>
<para><bold>Default: </bold><computeroutput>6</computeroutput> </para>
</listitem>
</itemizedlist>
<htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
</listitem>
</variablelist>
</para>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the writing was successful, <computeroutput>false</computeroutput> otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO.h" line="217" column="6" bodyfile="CGAL/Point_set_3/IO.h" bodystart="217" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IO_1gaebb876ced23adf1763934b43b18eb429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;ps)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>CGAL::Point_set_3::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
<para>reads the point set from an input stream. </para>
        </briefdescription>
        <detaileddescription>
<para>Supported file formats are the following:<itemizedlist>
<listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamOFF" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Object File Format (OFF)</ref> (<computeroutput>.off</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref> (<computeroutput>.ply</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamLAS" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">LAS (Lidar) File Format</ref> (<computeroutput>.las</computeroutput>)</para>
</listitem><listitem><para><ref refid="IOStreamSupportedFileFormats_1IOStreamXYZ" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">XYZ File Format</ref> (<computeroutput>.xyz</computeroutput>)</para>
</listitem></itemizedlist>
</para>
<para>The format is detected from the stream. If the stream contains normal vectors, the normal map is added to the point set. For PLY input, all point properties found in the header are added.</para>
<para><simplesect kind="attention"><para>To read a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ifstream</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>is</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO.h" line="61" column="14" bodyfile="CGAL/Point_set_3/IO.h" bodystart="61" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgPointSet3IO_1ga552bef80fa3c835f3b7e6cfb038f8b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;ps)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>CGAL::Point_set_3::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
<para>writes the point set in an output stream in the <ref refid="IOStreamSupportedFileFormats_1IOStreamPLY" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag">Polygon File Format (PLY)</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>All properties are inserted in their instantiation order.</para>
<para><simplesect kind="attention"><para>To write to a binary file, the flag <computeroutput>std::ios::binary</computeroutput> must be set during the creation of the <computeroutput>ofstream</computeroutput>, and the <ref refid="group__PkgStreamSupportEnumRef" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Stream_support.tag"><computeroutput>IO::Mode</computeroutput> </ref> of the stream must be set to <computeroutput>BINARY</computeroutput>.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>os</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO.h" line="168" column="1" bodyfile="CGAL/Point_set_3/IO.h" bodystart="168" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This module offers convenience overloads of input/output functions available in the <ref refid="packages_1PkgPointSetProcessing3" kindref="member" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Manual.tag">Point Set Processing</ref> package. </para>
    </briefdescription>
    <detaileddescription>
<para>These overloads, available after including <computeroutput>CGAL/Point_set_3/IO.h</computeroutput>, allow the user to call point set processing algorithms without having to handle manually property maps and iterators.</para>
<para>Input functions instantiate all the necessary property maps:</para>
<para><itemizedlist>
<listitem><para>if found in the input, normal vectors are stored in the usual <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref></computeroutput> property <computeroutput>normal</computeroutput> with template type <computeroutput>Vector</computeroutput></para>
</listitem><listitem><para>for PLY and LAS input, other properties are stored as properties in the <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref></computeroutput> class with the name and type given by the PLY header or by the LAS standard.</para>
</listitem></itemizedlist>
</para>
<para>For a complete documentation of these functions, please refer to the <ref refid="group__PkgPointSetProcessing3Ref" kindref="compound" external="/home/runner/work/cgal-cn/cgal-cn/build_doc/doc_tags/Point_set_processing_3.tag">Point Set Processing Reference</ref> manual. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
