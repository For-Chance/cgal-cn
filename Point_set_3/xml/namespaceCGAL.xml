<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespaceCGAL" kind="namespace" language="C++">
    <compoundname>CGAL</compoundname>
    <innerclass refid="classCGAL_1_1Point__set__3" prot="public">CGAL::Point_set_3</innerclass>
    <innernamespace refid="namespaceCGAL_1_1draw__function__for__PointSet">CGAL::draw_function_for_PointSet</innernamespace>
    <innernamespace refid="namespaceCGAL_1_1IO">CGAL::IO</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PkgDrawPointSet3D_1ga595e86e94d2a4ae58697504c80017d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PS</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const PS &amp;ps, const GSOptions &amp;gso)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const PS &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>opens a new window and draws a point set. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the drawing are taken from the optional graphics scene options parameter.</para>
<para>A call to this function blocks the execution of the program until the drawing window is closed. This function requires <computeroutput>CGAL_Qt6</computeroutput>, and is only available if the macro <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput> is defined. Linking with the cmake target <computeroutput>CGAL::CGAL_Basic_viewer</computeroutput> will link with <computeroutput>CGAL_Qt6</computeroutput> and add the definition <computeroutput>CGAL_USE_BASIC_VIEWER</computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PS</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptions</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;class P, class V, class GSOptions&gt;</computeroutput></para>
<para><computeroutput> void CGAL::draw(const CGAL::Point_set_3&lt;P, V&gt;&amp; ps, const GSOptions&amp; gso); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_point_set_3.h" line="51" column="8" declfile="CGAL/draw_point_set_3.h" declline="51" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPointSet3D_1ga79c9b3265f84b984fd4c52a2aae979bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PS</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::draw</definition>
        <argsstring>(const PS &amp;ps)</argsstring>
        <name>draw</name>
        <qualifiedname>CGAL::draw</qualifiedname>
        <param>
          <type>const PS &amp;</type>
          <declname>ps</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawPointSet3D_1ga595e86e94d2a4ae58697504c80017d5a" kindref="member">CGAL::draw</ref>(ps, Graphics_scene_options{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_point_set_3.h" line="59" column="8" declfile="CGAL/draw_point_set_3.h" declline="59" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPointSet3D_1gaefe656e87ef3484424d5f4dc710945d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PS</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const PS &amp;ps, CGAL::Graphics_scene &amp;gs, const GSOptions &amp;gso)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const PS &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gso</declname>
        </param>
        <briefdescription>
<para>adds the vertices, edges and faces of <computeroutput>ps</computeroutput> into the given graphic scene <computeroutput>gs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters of the cells are taken from the optional graphics scene options parameter <computeroutput>gso</computeroutput>. Note that <computeroutput>gs</computeroutput> is not cleared before being filled (to enable to draw several data structures in the same basic viewer).</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PS</parametername>
</parameternamelist>
<parameterdescription>
<para>which must be an instantiation of a <computeroutput><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt;...&gt;</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>GSOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>a model of <computeroutput>GraphicsSceneOptions</computeroutput> concept.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ps</parametername>
</parameternamelist>
<parameterdescription>
<para>the point set to draw. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gs</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphic scene to fill. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gso</parametername>
</parameternamelist>
<parameterdescription>
<para>the graphics scene options parameter.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<htmlonly block="yes"> &lt;div class=&quot;CGALAdvanced&quot;&gt; &lt;div&gt;Advanced&lt;/div&gt; </htmlonly></para>
<para>The real declaration of this function template is:</para>
<para><computeroutput> template&lt;class P, class V, class GSOptions&gt;</computeroutput></para>
<para><computeroutput> void CGAL::add_to_graphics_scene(const CGAL::Point_set_3&lt;P, V&gt;&amp; ps, CGAL::Graphics_scene&amp; gs, const GSOptions&amp; gso); </computeroutput> <htmlonly block="yes"> &lt;/div&gt; </htmlonly> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_point_set_3.h" line="84" column="6" declfile="CGAL/draw_point_set_3.h" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__PkgDrawPointSet3D_1ga659a96c477fc1a475497efbf6be85b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class PS</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const PS &amp;ps, CGAL::Graphics_scene &amp;gs)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const PS &amp;</type>
          <declname>ps</declname>
        </param>
        <param>
          <type>CGAL::Graphics_scene &amp;</type>
          <declname>gs</declname>
        </param>
        <briefdescription>
<para>A shortcut to <computeroutput><ref refid="group__PkgDrawPointSet3D_1gaefe656e87ef3484424d5f4dc710945d4" kindref="member">CGAL::add_to_graphics_scene</ref>(ps, gs, Graphics_scene_options{})</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_point_set_3.h" line="94" column="6" declfile="CGAL/draw_point_set_3.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aae809503681ee4f3730e7abb07b55c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class P</type>
          </param>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class GSOptions</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Point_set_3&lt; P, V &gt; &amp;apointset, Graphics_scene &amp;graphics_scene, const GSOptions &amp;gs_options)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref>&lt; P, V &gt; &amp;</type>
          <declname>apointset</declname>
        </param>
        <param>
          <type>Graphics_scene &amp;</type>
          <declname>graphics_scene</declname>
        </param>
        <param>
          <type>const GSOptions &amp;</type>
          <declname>gs_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_point_set_3.h" line="131" column="6" bodyfile="CGAL/draw_point_set_3.h" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a44acbef596ca847d7e81ee59ec1097e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class P</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void CGAL::add_to_graphics_scene</definition>
        <argsstring>(const Point_set_3&lt; P, V &gt; &amp;apointset, Graphics_scene &amp;graphics_scene)</argsstring>
        <name>add_to_graphics_scene</name>
        <qualifiedname>CGAL::add_to_graphics_scene</qualifiedname>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">Point_set_3</ref>&lt; P, V &gt; &amp;</type>
          <declname>apointset</declname>
        </param>
        <param>
          <type>Graphics_scene &amp;</type>
          <declname>graphics_scene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/draw_point_set_3.h" line="141" column="6" bodyfile="CGAL/draw_point_set_3.h" bodystart="141" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aba331887a07b8467131fafaa74c83ffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_las_point_set</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_las_point_set</name>
        <qualifiedname>CGAL::read_las_point_set</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
          <briefdescription><para>input stream. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
          <briefdescription><para>point set </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/LAS.h" line="172" column="7" bodyfile="CGAL/Point_set_3/IO/LAS.h" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad5806ac78cba3df2c02770ae54528003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_las_point_set</definition>
        <argsstring>(std::ostream &amp;os, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>write_las_point_set</name>
        <qualifiedname>CGAL::write_las_point_set</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
          <briefdescription><para>output stream. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
          <briefdescription><para>point set </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/LAS.h" line="402" column="7" bodyfile="CGAL/Point_set_3/IO/LAS.h" bodystart="402" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a6dda966aab992edc48cb2432df37be75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_off_point_set</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_off_point_set</name>
        <qualifiedname>CGAL::read_off_point_set</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
          <briefdescription><para>input stream. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
          <briefdescription><para>point set. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/OFF.h" line="98" column="7" bodyfile="CGAL/Point_set_3/IO/OFF.h" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a634f249532b8e072bc6aae2f8c8b449e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_off_point_set</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>write_off_point_set</name>
        <qualifiedname>CGAL::write_off_point_set</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
          <briefdescription><para>output stream. </para>
</briefdescription>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
          <briefdescription><para>point set </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/OFF.h" line="188" column="7" bodyfile="CGAL/Point_set_3/IO/OFF.h" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a0d3f9f83cf3f662a981c032022119973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_ply_point_set</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, std::string &amp;comments)</argsstring>
        <name>read_ply_point_set</name>
        <qualifiedname>CGAL::read_ply_point_set</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
          <briefdescription><para>input stream. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
          <briefdescription><para>point set </para>
</briefdescription>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>comments</declname>
          <briefdescription><para>PLY comments. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="371" column="7" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="371" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a834784cfa75c07e9211695054c70dd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_ply_point_set</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_ply_point_set</name>
        <qualifiedname>CGAL::read_ply_point_set</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
          <briefdescription><para>input stream. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
          <briefdescription><para>point set </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="379" column="7" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="379" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1a2894fd021f3c68544e3ef5988e67c488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_ply_point_set</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set, const std::string &amp;comments=std::string())</argsstring>
        <name>write_ply_point_set</name>
        <qualifiedname>CGAL::write_ply_point_set</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>comments</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/PLY.h" line="718" column="7" bodyfile="CGAL/Point_set_3/IO/PLY.h" bodystart="718" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1aa0de7bc47a3795e7398f42630fa703e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::read_xyz_point_set</definition>
        <argsstring>(std::istream &amp;is, CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>read_xyz_point_set</name>
        <qualifiedname>CGAL::read_xyz_point_set</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/XYZ.h" line="97" column="7" bodyfile="CGAL/Point_set_3/IO/XYZ.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespaceCGAL_1ad1dd965b96d8fe096cee41d99f71779b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Vector</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool CGAL::write_xyz_point_set</definition>
        <argsstring>(std::ostream &amp;os, const CGAL::Point_set_3&lt; Point, Vector &gt; &amp;point_set)</argsstring>
        <name>write_xyz_point_set</name>
        <qualifiedname>CGAL::write_xyz_point_set</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classCGAL_1_1Point__set__3" kindref="compound">CGAL::Point_set_3</ref>&lt; Point, Vector &gt; &amp;</type>
          <declname>point_set</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CGAL/Point_set_3/IO/XYZ.h" line="185" column="7" bodyfile="CGAL/Point_set_3/IO/XYZ.h" bodystart="185" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Point_set_3.txt" line="1" column="1"/>
  </compounddef>
</doxygen>
